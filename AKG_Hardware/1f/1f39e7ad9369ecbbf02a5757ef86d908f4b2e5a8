
/* /mail/static/src/component_hooks/use_component_to_model.js */
odoo.define('@mail/component_hooks/use_component_to_model',async function(require){'use strict';let __exports={};const{clear}=require('@mail/model/model_field_command');const{onWillUpdateProps,useComponent}=owl;__exports.useComponentToModel=useComponentToModel;function useComponentToModel({fieldName}){const component=useComponent();component.props.record.update({[fieldName]:component});onWillUpdateProps(nextProps=>{const currentRecord=component.props.record;const nextRecord=nextProps.record;if(currentRecord.exists()&&currentRecord!==nextRecord){currentRecord.update({[fieldName]:clear()});}
nextRecord.update({[fieldName]:component});});}
return __exports;});;

/* /mail/static/src/component_hooks/use_models.js */
odoo.define('@mail/component_hooks/use_models',async function(require){'use strict';let __exports={};const{Listener}=require('@mail/model/model_listener');const{onRendered,onWillDestroy,onWillRender,useComponent}=owl;__exports.useModels=useModels;function useModels(){const component=useComponent();const listener=new Listener({isLocking:false,name:`useModels() of ${component}`,onChange:()=>component.render(),});onWillRender(()=>{component.env.services.messaging.modelManager.startListening(listener);});onRendered(()=>{component.env.services.messaging.modelManager.stopListening(listener);});onWillDestroy(()=>{component.env.services.messaging.modelManager.removeListener(listener);});component.env.services.messaging.modelManager.messagingCreatedPromise.then(()=>{component.render();});}
return __exports;});;

/* /mail/static/src/component_hooks/use_ref_to_model.js */
odoo.define('@mail/component_hooks/use_ref_to_model',async function(require){'use strict';let __exports={};const{clear}=require('@mail/model/model_field_command');const{onWillUpdateProps,useComponent,useRef}=owl;__exports.useRefToModel=useRefToModel;function useRefToModel({fieldName,refName}){const component=useComponent();const ref=useRef(refName);component.props.record.update({[fieldName]:ref});onWillUpdateProps(nextProps=>{const currentRecord=component.props.record;const nextRecord=nextProps.record;if(currentRecord.exists()&&currentRecord!==nextRecord){currentRecord.update({[fieldName]:clear()});}
nextRecord.update({[fieldName]:ref});});}
return __exports;});;

/* /mail/static/src/component_hooks/use_refs.js */
odoo.define('@mail/component_hooks/use_refs',async function(require){'use strict';let __exports={};const{useComponent}=owl;__exports.useRefs=useRefs;function useRefs(){const component=useComponent();return function(){return component.__owl__.refs||{};};}
return __exports;});;

/* /mail/static/src/component_hooks/use_rendered_values.js */
odoo.define('@mail/component_hooks/use_rendered_values',async function(require){'use strict';let __exports={};const{Listener}=require('@mail/model/model_listener');const{onMounted,onPatched,onWillDestroy,onWillRender,useComponent}=owl;__exports.useRenderedValues=useRenderedValues;function useRenderedValues(selector){const component=useComponent();let renderedValues;let patchedValues;const listener=new Listener({name:`useRenderedValues() of ${component}`,onChange:()=>component.render(),});onWillRender(()=>{component.env.services.messaging.modelManager.startListening(listener);renderedValues=selector();component.env.services.messaging.modelManager.stopListening(listener);});onMounted(onUpdate);onPatched(onUpdate);function onUpdate(){patchedValues=renderedValues;}
onWillDestroy(()=>component.env.services.messaging.modelManager.removeListener(listener));return()=>patchedValues;}
return __exports;});;

/* /mail/static/src/component_hooks/use_update.js */
odoo.define('@mail/component_hooks/use_update',async function(require){'use strict';let __exports={};const{Listener}=require('@mail/model/model_listener');const{onMounted,onPatched,onWillDestroy,useComponent}=owl;__exports.useUpdate=useUpdate;function useUpdate({func}){const component=useComponent();const listener=new Listener({isLocking:false,name:`useUpdate() of ${component}`,onChange:()=>component.render(),});function onUpdate(){component.env.services.messaging.modelManager.startListening(listener);func();component.env.services.messaging.modelManager.stopListening(listener);}
onMounted(onUpdate);onPatched(onUpdate);onWillDestroy(()=>{component.env.services.messaging.modelManager.removeListener(listener);});}
return __exports;});;

/* /mail/static/src/component_hooks/use_update_to_model.js */
odoo.define('@mail/component_hooks/use_update_to_model',async function(require){'use strict';let __exports={};const{useUpdate}=require('@mail/component_hooks/use_update');const{useComponent}=owl;__exports.useUpdateToModel=useUpdateToModel;function useUpdateToModel({methodName}){const component=useComponent();useUpdate({func:()=>{component.props.record[methodName]();}});}
return __exports;});;

/* /mail/static/src/components/activity/activity.js */
odoo.define('@mail/components/activity/activity',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const Popover=require("web.Popover");const{LegacyComponent}=require("@web/legacy/legacy_component");const Activity=__exports.Activity=class Activity extends LegacyComponent{setup(){super.setup();useComponentToModel({fieldName:'component'});useRefToModel({fieldName:'markDoneButtonRef',refName:'markDoneButton',});}
get activityView(){return this.props.record;}}
Object.assign(Activity,{props:{record:Object},template:'mail.Activity',components:{Popover},});registerMessagingComponent(Activity);return __exports;});;

/* /mail/static/src/components/activity_box/activity_box.js */
odoo.define('@mail/components/activity_box/activity_box',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ActivityBox=__exports.ActivityBox=class ActivityBox extends Component{get activityBoxView(){return this.props.record;}}
Object.assign(ActivityBox,{props:{record:Object},template:'mail.ActivityBox',});registerMessagingComponent(ActivityBox);return __exports;});;

/* /mail/static/src/components/activity_mark_done_popover_content/activity_mark_done_popover_content.js */
odoo.define('@mail/components/activity_mark_done_popover_content/activity_mark_done_popover_content',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{LegacyComponent}=require("@web/legacy/legacy_component");const{onMounted,useRef}=owl;const ActivityMarkDonePopoverContent=__exports.ActivityMarkDonePopoverContent=class ActivityMarkDonePopoverContent extends LegacyComponent{setup(){super.setup();useComponentToModel({fieldName:'component'});useRefToModel({fieldName:'feedbackTextareaRef',refName:'feedbackTextarea'});this._feedbackTextareaRef=useRef('feedbackTextarea');onMounted(()=>this._mounted());}
_mounted(){this._feedbackTextareaRef.el.focus();if(this.activityMarkDonePopoverContentView.activity.feedbackBackup){this._feedbackTextareaRef.el.value=this.activityMarkDonePopoverContentView.activity.feedbackBackup;}}
get activityMarkDonePopoverContentView(){return this.props.record;}}
Object.assign(ActivityMarkDonePopoverContent,{props:{record:Object},template:'mail.ActivityMarkDonePopoverContent',});registerMessagingComponent(ActivityMarkDonePopoverContent);return __exports;});;

/* /mail/static/src/components/activity_menu_view/activity_menu_view.js */
odoo.define('@mail/components/activity_menu_view/activity_menu_view',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ActivityMenuView=__exports.ActivityMenuView=class ActivityMenuView extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});}
get activityMenuView(){return this.props.record;}}
Object.assign(ActivityMenuView,{props:{record:Object},template:'mail.ActivityMenuView',});registerMessagingComponent(ActivityMenuView);return __exports;});;

/* /mail/static/src/components/attachment_box/attachment_box.js */
odoo.define('@mail/components/attachment_box/attachment_box',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const AttachmentBox=__exports.AttachmentBox=class AttachmentBox extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});}
get attachmentBoxView(){return this.props.record;}}
Object.assign(AttachmentBox,{props:{record:Object},template:'mail.AttachmentBox',});registerMessagingComponent(AttachmentBox);return __exports;});;

/* /mail/static/src/components/attachment_card/attachment_card.js */
odoo.define('@mail/components/attachment_card/attachment_card',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const AttachmentCard=__exports.AttachmentCard=class AttachmentCard extends Component{get attachmentCard(){return this.props.record;}}
Object.assign(AttachmentCard,{props:{record:Object},template:'mail.AttachmentCard',});registerMessagingComponent(AttachmentCard);return __exports;});;

/* /mail/static/src/components/attachment_delete_confirm/attachment_delete_confirm.js */
odoo.define('@mail/components/attachment_delete_confirm/attachment_delete_confirm',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const AttachmentDeleteConfirm=__exports.AttachmentDeleteConfirm=class AttachmentDeleteConfirm extends Component{setup(){useComponentToModel({fieldName:'component'});}
get attachmentDeleteConfirmView(){return this.props.record;}}
Object.assign(AttachmentDeleteConfirm,{props:{record:Object},template:'mail.AttachmentDeleteConfirm',});registerMessagingComponent(AttachmentDeleteConfirm);return __exports;});;

/* /mail/static/src/components/attachment_image/attachment_image.js */
odoo.define('@mail/components/attachment_image/attachment_image',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const AttachmentImage=__exports.AttachmentImage=class AttachmentImage extends Component{get attachmentImage(){return this.props.record;}}
Object.assign(AttachmentImage,{props:{record:Object},template:'mail.AttachmentImage',});registerMessagingComponent(AttachmentImage);return __exports;});;

/* /mail/static/src/components/attachment_list/attachment_list.js */
odoo.define('@mail/components/attachment_list/attachment_list',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const AttachmentList=__exports.AttachmentList=class AttachmentList extends Component{get attachmentList(){return this.props.record;}}
Object.assign(AttachmentList,{props:{record:Object},template:'mail.AttachmentList',});registerMessagingComponent(AttachmentList);return __exports;});;

/* /mail/static/src/components/attachment_viewer/attachment_viewer.js */
odoo.define('@mail/components/attachment_viewer/attachment_viewer',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useRefs}=require('@mail/component_hooks/use_refs');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{hidePDFJSButtons}=require('@web/legacy/js/libs/pdfjs');const{Component,onMounted,onPatched,onWillUnmount,useRef}=owl;const MIN_SCALE=0.5;const SCROLL_ZOOM_STEP=0.1;const ZOOM_STEP=0.5;const AttachmentViewer=__exports.AttachmentViewer=class AttachmentViewer extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});this.MIN_SCALE=MIN_SCALE;this._getRefs=useRefs();this._zoomerRef=useRef('zoomer');this._iframeViewerPdfRef=useRef('iframeViewerPdf');this._translate={x:0,y:0,dx:0,dy:0};this._onClickGlobal=this._onClickGlobal.bind(this);onMounted(()=>this._mounted());onPatched(()=>this._patched());onWillUnmount(()=>this._willUnmount());}
_mounted(){if(!this.root.el){return;}
this.root.el.focus();this._handleImageLoad();this._hideUnwantedPdfJsButtons();document.addEventListener('click',this._onClickGlobal);}
_patched(){this._handleImageLoad();this._hideUnwantedPdfJsButtons();}
_willUnmount(){document.removeEventListener('click',this._onClickGlobal);}
get attachmentViewer(){return this.props.record;}
_handleImageLoad(){if(!this.attachmentViewer.exists()||!this.attachmentViewer.attachmentViewerViewable){return;}
const refs=this._getRefs();const image=refs[`image_${this.attachmentViewer.attachmentViewerViewable.localId}`];if(this.attachmentViewer.attachmentViewerViewable.isImage&&(!image||!image.complete)){this.attachmentViewer.update({isImageLoading:true});}}
_hideUnwantedPdfJsButtons(){if(this._iframeViewerPdfRef.el){hidePDFJSButtons(this._iframeViewerPdfRef.el);}}
_stopDragging(){this.attachmentViewer.update({isDragging:false});this._translate.x+=this._translate.dx;this._translate.y+=this._translate.dy;this._translate.dx=0;this._translate.dy=0;this._updateZoomerStyle();}
_updateZoomerStyle(){const attachmentViewer=this.attachmentViewer;const refs=this._getRefs();const image=refs[`image_${this.attachmentViewer.attachmentViewerViewable.localId}`];if(!image){return;}
const tx=image.offsetWidth*attachmentViewer.scale>this._zoomerRef.el.offsetWidth?this._translate.x+this._translate.dx:0;const ty=image.offsetHeight*attachmentViewer.scale>this._zoomerRef.el.offsetHeight?this._translate.y+this._translate.dy:0;if(tx===0){this._translate.x=0;}
if(ty===0){this._translate.y=0;}
this._zoomerRef.el.style=`transform: `+`translate(${tx}px, ${ty}px)`;}
_zoomIn({scroll=false}={}){this.attachmentViewer.update({scale:this.attachmentViewer.scale+(scroll?SCROLL_ZOOM_STEP:ZOOM_STEP),});this._updateZoomerStyle();}
_zoomOut({scroll=false}={}){if(this.attachmentViewer.scale===MIN_SCALE){return;}
const unflooredAdaptedScale=(this.attachmentViewer.scale-
(scroll?SCROLL_ZOOM_STEP:ZOOM_STEP));this.attachmentViewer.update({scale:Math.max(MIN_SCALE,unflooredAdaptedScale),});this._updateZoomerStyle();}
_zoomReset(){this.attachmentViewer.update({scale:1});this._updateZoomerStyle();}
_onClickGlobal(ev){if(!this.attachmentViewer.exists()){return;}
if(!this.attachmentViewer.isDragging){return;}
ev.stopPropagation();this._stopDragging();}
_onClickZoomIn(ev){ev.stopPropagation();this._zoomIn();}
_onClickZoomOut(ev){ev.stopPropagation();this._zoomOut();}
_onClickZoomReset(ev){ev.stopPropagation();this._zoomReset();}
_onKeydown(ev){switch(ev.key){case'ArrowRight':this.attachmentViewer.next();break;case'ArrowLeft':this.attachmentViewer.previous();break;case'Escape':this.attachmentViewer.close();break;case'q':this.attachmentViewer.close();break;case'r':this.attachmentViewer.rotate();break;case'+':this._zoomIn();break;case'-':this._zoomOut();break;case'0':this._zoomReset();break;default:return;}
ev.stopPropagation();}
_onMousedownImage(ev){if(!this.attachmentViewer.exists()){return;}
if(this.attachmentViewer.isDragging){return;}
if(ev.button!==0){return;}
ev.stopPropagation();this.attachmentViewer.update({isDragging:true});this._dragstartX=ev.clientX;this._dragstartY=ev.clientY;}
_onMousemoveView(ev){if(!this.attachmentViewer.exists()){return;}
if(!this.attachmentViewer.isDragging){return;}
this._translate.dx=ev.clientX-this._dragstartX;this._translate.dy=ev.clientY-this._dragstartY;this._updateZoomerStyle();}
_onWheelImage(ev){ev.stopPropagation();if(!this.root.el){return;}
if(ev.deltaY>0){this._zoomOut({scroll:true});}else{this._zoomIn({scroll:true});}}}
Object.assign(AttachmentViewer,{props:{record:Object},template:'mail.AttachmentViewer',});registerMessagingComponent(AttachmentViewer);return __exports;});;

/* /mail/static/src/components/autocomplete_input_view/autocomplete_input_view.js */
odoo.define('@mail/components/autocomplete_input_view/autocomplete_input_view',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component,onMounted,onWillUnmount}=owl;const AutocompleteInputView=__exports.AutocompleteInputView=class AutocompleteInputView extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});onMounted(()=>this._mounted());onWillUnmount(()=>this._willUnmount());}
_mounted(){if(!this.root.el){return;}
if(this.autocompleteInputView.isFocusOnMount){this.root.el.focus();}
const args={autoFocus:true,select:(ev,ui)=>{if(this.autocompleteInputView){this.autocompleteInputView.onSelect(ev,ui);}},source:(req,res)=>{if(this.autocompleteInputView){this.autocompleteInputView.onSource(req,res);}},html:this.autocompleteInputView.isHtml,};if(this.autocompleteInputView.customClass){args.classes={'ui-autocomplete':this.autocompleteInputView.customClass};}
const autoCompleteElem=$(this.root.el).autocomplete(args);autoCompleteElem.data('ui-autocomplete')._resizeMenu=function(){const ul=this.menu.element;ul.outerWidth(this.element.outerWidth());};}
_willUnmount(){if(!this.root.el){return;}
$(this.root.el).autocomplete('destroy');}
get autocompleteInputView(){return this.props.record;}}
Object.assign(AutocompleteInputView,{props:{record:Object},template:'mail.AutocompleteInputView',});registerMessagingComponent(AutocompleteInputView);return __exports;});;

/* /mail/static/src/components/call_action_list/call_action_list.js */
odoo.define('@mail/components/call_action_list/call_action_list',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallActionList=__exports.CallActionList=class CallActionList extends Component{setup(){super.setup();useRefToModel({fieldName:'moreButtonRef',refName:'moreButton'});}
get callActionListView(){return this.props.record;}}
Object.assign(CallActionList,{props:{record:Object},template:'mail.CallActionList',});registerMessagingComponent(CallActionList);return __exports;});;

/* /mail/static/src/components/call_demo_view/call_demo_view.js */
odoo.define('@mail/components/call_demo_view/call_demo_view',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallDemoView=__exports.CallDemoView=class CallDemoView extends Component{setup(){super.setup();useRefToModel({fieldName:'audioRef',refName:'audio'});useRefToModel({fieldName:'videoRef',refName:'video'});}
get callDemoView(){return this.props.record;}}
Object.assign(CallDemoView,{props:{record:Object},template:'mail.CallDemoView',});registerMessagingComponent(CallDemoView);return __exports;});;

/* /mail/static/src/components/call_invite_request_popup/call_invite_request_popup.js */
odoo.define('@mail/components/call_invite_request_popup/call_invite_request_popup',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallInviteRequestPopup=__exports.CallInviteRequestPopup=class CallInviteRequestPopup extends Component{get callInviteRequestPopup(){return this.props.record;}}
Object.assign(CallInviteRequestPopup,{props:{record:Object},template:'mail.CallInviteRequestPopup',});registerMessagingComponent(CallInviteRequestPopup);return __exports;});;

/* /mail/static/src/components/call_invite_request_popup_list/call_invite_request_popup_list.js */
odoo.define('@mail/components/call_invite_request_popup_list/call_invite_request_popup_list',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallInviteRequestPopupList=__exports.CallInviteRequestPopupList=class CallInviteRequestPopupList extends Component{}
Object.assign(CallInviteRequestPopupList,{props:{},template:'mail.CallInviteRequestPopupList',});registerMessagingComponent(CallInviteRequestPopupList);return __exports;});;

/* /mail/static/src/components/call_main_view/call_main_view.js */
odoo.define('@mail/components/call_main_view/call_main_view',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component,onMounted,onWillUnmount}=owl;const CallMainView=__exports.CallMainView=class CallMainView extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});useRefToModel({fieldName:'tileContainerRef',refName:'tileContainer',});useUpdateToModel({methodName:'onComponentUpdate'});onMounted(()=>{this.resizeObserver=new ResizeObserver(()=>this.callMainView.onResize());this.resizeObserver.observe(this.root.el);});onWillUnmount(()=>this.resizeObserver.disconnect());}
get callMainView(){return this.props.record;}}
Object.assign(CallMainView,{props:{record:Object},template:'mail.CallMainView',});registerMessagingComponent(CallMainView);return __exports;});;

/* /mail/static/src/components/call_option_menu/call_option_menu.js */
odoo.define('@mail/components/call_option_menu/call_option_menu',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{LegacyComponent}=require("@web/legacy/legacy_component");const CallOptionMenu=__exports.CallOptionMenu=class CallOptionMenu extends LegacyComponent{setup(){super.setup();useComponentToModel({fieldName:'component'});}
get callOptionMenu(){return this.props.record;}}
Object.assign(CallOptionMenu,{props:{record:Object},template:'mail.CallOptionMenu',});registerMessagingComponent(CallOptionMenu);return __exports;});;

/* /mail/static/src/components/call_participant_card/call_participant_card.js */
odoo.define('@mail/components/call_participant_card/call_participant_card',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallParticipantCard=__exports.CallParticipantCard=class CallParticipantCard extends Component{setup(){super.setup();useRefToModel({fieldName:'volumeMenuAnchorRef',refName:'volumeMenuAnchor'});}
get callParticipantCard(){return this.props.record;}}
Object.assign(CallParticipantCard,{props:{record:Object},template:'mail.CallParticipantCard',});registerMessagingComponent(CallParticipantCard);return __exports;});;

/* /mail/static/src/components/call_participant_card_popover_content_view/call_participant_card_popover_content_view.js */
odoo.define('@mail/components/call_participant_card_popover_content_view/call_participant_card_popover_content_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallParticipantCardPopoverContentView=__exports.CallParticipantCardPopoverContentView=class CallParticipantCardPopoverContentView extends Component{get callParticipantCardPopoverContentView(){return this.props.record;}}
Object.assign(CallParticipantCardPopoverContentView,{props:{record:Object},template:'mail.CallParticipantCardPopoverContentView',});registerMessagingComponent(CallParticipantCardPopoverContentView);return __exports;});;

/* /mail/static/src/components/call_participant_video/call_participant_video.js */
odoo.define('@mail/components/call_participant_video/call_participant_video',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallParticipantVideo=__exports.CallParticipantVideo=class CallParticipantVideo extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});useUpdateToModel({methodName:'onComponentUpdate'});}
get callParticipantVideoView(){return this.props.record;}}
Object.assign(CallParticipantVideo,{props:{record:Object},template:'mail.CallParticipantVideo',});registerMessagingComponent(CallParticipantVideo);return __exports;});;

/* /mail/static/src/components/call_settings_menu/call_settings_menu.js */
odoo.define('@mail/components/call_settings_menu/call_settings_menu',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallSettingsMenu=__exports.CallSettingsMenu=class CallSettingsMenu extends Component{get callSettingsMenu(){return this.props.record;}}
Object.assign(CallSettingsMenu,{props:{record:Object},template:'mail.CallSettingsMenu',});registerMessagingComponent(CallSettingsMenu);return __exports;});;

/* /mail/static/src/components/call_settings_menu_device/call_settings_menu_device.js */
odoo.define('@mail/components/call_settings_menu_device/call_settings_menu_device',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallSettingsMenuDevice=__exports.CallSettingsMenuDevice=class CallSettingsMenuDevice extends Component{}
Object.assign(CallSettingsMenuDevice,{props:{device:Object},template:'mail.CallSettingsMenuDevice',});registerMessagingComponent(CallSettingsMenuDevice);return __exports;});;

/* /mail/static/src/components/call_sidebar_view/call_sidebar_view.js */
odoo.define('@mail/components/call_sidebar_view/call_sidebar_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallSidebarView=__exports.CallSidebarView=class CallSidebarView extends Component{get callSidebarView(){return this.props.record;}}
Object.assign(CallSidebarView,{props:{record:Object},template:'mail.CallSidebarView',});registerMessagingComponent(CallSidebarView);return __exports;});;

/* /mail/static/src/components/call_systray_menu/call_systray_menu.js */
odoo.define('@mail/components/call_systray_menu/call_systray_menu',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallSystrayMenu=__exports.CallSystrayMenu=class CallSystrayMenu extends Component{get callSystrayMenu(){return this.props.record;}}
Object.assign(CallSystrayMenu,{props:{record:Object},template:'mail.CallSystrayMenu',});registerMessagingComponent(CallSystrayMenu);return __exports;});;

/* /mail/static/src/components/call_systray_menu_container/call_systray_menu_container.js */
odoo.define('@mail/components/call_systray_menu_container/call_systray_menu_container',async function(require){'use strict';let __exports={};const{useModels}=require('@mail/component_hooks/use_models');require('@mail/components/call_systray_menu/call_systray_menu');const{getMessagingComponent}=require("@mail/utils/messaging_component");const{Component}=owl;const CallSystrayMenuContainer=__exports.CallSystrayMenuContainer=class CallSystrayMenuContainer extends Component{setup(){useModels();super.setup();}
get messaging(){return this.env.services.messaging.modelManager.messaging;}}
Object.assign(CallSystrayMenuContainer,{components:{CallSystrayMenu:getMessagingComponent('CallSystrayMenu')},template:'mail.CallSystrayMenuContainer',});return __exports;});;

/* /mail/static/src/components/call_view/call_view.js */
odoo.define('@mail/components/call_view/call_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const CallView=__exports.CallView=class CallView extends Component{get callView(){return this.props.record;}}
Object.assign(CallView,{props:{record:Object},template:'mail.CallView',});registerMessagingComponent(CallView);return __exports;});;

/* /mail/static/src/components/channel_invitation_form/channel_invitation_form.js */
odoo.define('@mail/components/channel_invitation_form/channel_invitation_form',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChannelInvitationForm=__exports.ChannelInvitationForm=class ChannelInvitationForm extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});useRefToModel({fieldName:'searchInputRef',refName:'searchInput'});useUpdateToModel({methodName:'onComponentUpdate'});}
get channelInvitationForm(){return this.props.record;}}
Object.assign(ChannelInvitationForm,{props:{record:Object},template:'mail.ChannelInvitationForm',});registerMessagingComponent(ChannelInvitationForm);return __exports;});;

/* /mail/static/src/components/channel_invitation_form_selectable_partner/channel_invitation_form_selectable_partner.js */
odoo.define('@mail/components/channel_invitation_form_selectable_partner/channel_invitation_form_selectable_partner',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChannelInvitationFormSelectablePartner=__exports.ChannelInvitationFormSelectablePartner=class ChannelInvitationFormSelectablePartner extends Component{get channelInvitationFormSelectablePartnerView(){return this.props.record;}}
Object.assign(ChannelInvitationFormSelectablePartner,{props:{record:Object},template:'mail.ChannelInvitationFormSelectablePartner',});registerMessagingComponent(ChannelInvitationFormSelectablePartner);return __exports;});;

/* /mail/static/src/components/channel_invitation_form_selected_partner/channel_invitation_form_selected_partner.js */
odoo.define('@mail/components/channel_invitation_form_selected_partner/channel_invitation_form_selected_partner',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChannelInvitationFormSelectedPartner=__exports.ChannelInvitationFormSelectedPartner=class ChannelInvitationFormSelectedPartner extends Component{get channelInvitationFormSelectedPartnerView(){return this.props.record;}}
Object.assign(ChannelInvitationFormSelectedPartner,{props:{record:Object},template:'mail.ChannelInvitationFormSelectedPartner',});registerMessagingComponent(ChannelInvitationFormSelectedPartner);return __exports;});;

/* /mail/static/src/components/channel_member/channel_member.js */
odoo.define('@mail/components/channel_member/channel_member',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChannelMember=__exports.ChannelMember=class ChannelMember extends Component{get channelMemberView(){return this.props.record;}}
Object.assign(ChannelMember,{props:{record:Object,},template:'mail.ChannelMember',});registerMessagingComponent(ChannelMember);return __exports;});;

/* /mail/static/src/components/channel_member_list/channel_member_list.js */
odoo.define('@mail/components/channel_member_list/channel_member_list',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChannelMemberList=__exports.ChannelMemberList=class ChannelMemberList extends Component{get channelMemberListView(){return this.props.record;}}
Object.assign(ChannelMemberList,{props:{record:Object},template:'mail.ChannelMemberList',});registerMessagingComponent(ChannelMemberList);return __exports;});;

/* /mail/static/src/components/channel_member_list_category/channel_member_list_category.js */
odoo.define('@mail/components/channel_member_list_category/channel_member_list_category',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChannelMemberListCategory=__exports.ChannelMemberListCategory=class ChannelMemberListCategory extends Component{get record(){return this.props.record;}}
Object.assign(ChannelMemberListCategory,{props:{record:Object},template:'mail.ChannelMemberListCategory',});registerMessagingComponent(ChannelMemberListCategory);return __exports;});;

/* /mail/static/src/components/channel_preview_view/channel_preview_view.js */
odoo.define('@mail/components/channel_preview_view/channel_preview_view',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChannelPreviewView=__exports.ChannelPreviewView=class ChannelPreviewView extends Component{setup(){super.setup();useRefToModel({fieldName:'markAsReadRef',refName:'markAsRead'});}
get channelPreviewView(){return this.props.record;}}
Object.assign(ChannelPreviewView,{props:{record:Object},template:'mail.ChannelPreviewView',});registerMessagingComponent(ChannelPreviewView);return __exports;});;

/* /mail/static/src/components/chat_window/chat_window.js */
odoo.define('@mail/components/chat_window/chat_window',async function(require){'use strict';let __exports={};const{useUpdate}=require('@mail/component_hooks/use_update');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChatWindow=__exports.ChatWindow=class ChatWindow extends Component{setup(){super.setup();useUpdate({func:()=>this._update()});this._inputRef={el:null};}
get chatWindow(){return this.props.record;}
_update(){if(!this.root.el){return;}
if(this.chatWindow.isDoFocus){this.chatWindow.update({isDoFocus:false});if(this.chatWindow.newMessageAutocompleteInputView&&this.chatWindow.newMessageAutocompleteInputView.component&&this.chatWindow.newMessageAutocompleteInputView.component.root.el){this.chatWindow.newMessageAutocompleteInputView.component.root.el.focus();}}}}
Object.assign(ChatWindow,{props:{record:Object},template:'mail.ChatWindow',});registerMessagingComponent(ChatWindow);return __exports;});;

/* /mail/static/src/components/chat_window_header/chat_window_header.js */
odoo.define('@mail/components/chat_window_header/chat_window_header',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChatWindowHeader=__exports.ChatWindowHeader=class ChatWindowHeader extends Component{get chatWindow(){return this.props.chatWindow;}
get chatWindowHeaderView(){return this.props.record;}}
Object.assign(ChatWindowHeader,{props:{chatWindow:Object,record:Object,},template:'mail.ChatWindowHeader',});registerMessagingComponent(ChatWindowHeader);return __exports;});;

/* /mail/static/src/components/chat_window_hidden_menu/chat_window_hidden_menu.js */
odoo.define('@mail/components/chat_window_hidden_menu/chat_window_hidden_menu',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component,onMounted,onPatched,onWillUnmount,useRef}=owl;const ChatWindowHiddenMenu=__exports.ChatWindowHiddenMenu=class ChatWindowHiddenMenu extends Component{setup(){super.setup();this._onClickCaptureGlobal=this._onClickCaptureGlobal.bind(this);this._listRef=useRef('list');onMounted(()=>this._mounted());onPatched(()=>this._patched());onWillUnmount(()=>this._willUnmount());}
_mounted(){if(!this.root.el){return;}
this._apply();document.addEventListener('click',this._onClickCaptureGlobal,true);}
_patched(){if(!this.root.el){return;}
this._apply();}
_willUnmount(){document.removeEventListener('click',this._onClickCaptureGlobal,true);}
_apply(){if(!this.messaging){return;}
this._applyListHeight();this._applyOffset();}
_applyListHeight(){const device=this.messaging.device;const height=device.globalWindowInnerHeight/2;this._listRef.el.style['max-height']=`${height}px`;}
_applyOffset(){const textDirection=this.messaging.locale.textDirection;const offsetFrom=textDirection==='rtl'?'left':'right';const oppositeFrom=offsetFrom==='right'?'left':'right';const offset=this.messaging.chatWindowManager.visual.hiddenMenuOffset;this.root.el.style[offsetFrom]=`${offset}px`;this.root.el.style[oppositeFrom]='auto';}
_onClickCaptureGlobal(ev){if(!this.root.el||this.root.el.contains(ev.target)){return;}
this.messaging.chatWindowManager.closeHiddenMenu();}}
Object.assign(ChatWindowHiddenMenu,{props:{},template:'mail.ChatWindowHiddenMenu',});registerMessagingComponent(ChatWindowHiddenMenu);return __exports;});;

/* /mail/static/src/components/chat_window_hidden_menu_item/chat_window_hidden_menu_item.js */
odoo.define('@mail/components/chat_window_hidden_menu_item/chat_window_hidden_menu_item',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChatWindowHiddenMenuItem=__exports.ChatWindowHiddenMenuItem=class ChatWindowHiddenMenuItem extends Component{get chatWindowHeaderView(){return this.props.chatWindowHeaderView;}}
Object.assign(ChatWindowHiddenMenuItem,{defaultProps:{isLast:false,},props:{chatWindowHeaderView:Object,isLast:{type:Boolean,optional:true,},},template:'mail.ChatWindowHiddenMenuItem',});registerMessagingComponent(ChatWindowHiddenMenuItem);return __exports;});;

/* /mail/static/src/components/chat_window_manager/chat_window_manager.js */
odoo.define('@mail/components/chat_window_manager/chat_window_manager',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChatWindowManager=__exports.ChatWindowManager=class ChatWindowManager extends Component{}
Object.assign(ChatWindowManager,{props:{record:Object},template:'mail.ChatWindowManager',});registerMessagingComponent(ChatWindowManager);return __exports;});;

/* /mail/static/src/components/chat_window_manager_container/chat_window_manager_container.js */
odoo.define('@mail/components/chat_window_manager_container/chat_window_manager_container',async function(require){'use strict';let __exports={};const{useModels}=require('@mail/component_hooks/use_models');require('@mail/components/chat_window_manager/chat_window_manager');const{getMessagingComponent}=require("@mail/utils/messaging_component");const{Component}=owl;const ChatWindowManagerContainer=__exports.ChatWindowManagerContainer=class ChatWindowManagerContainer extends Component{setup(){useModels();super.setup();}
get messaging(){return this.env.services.messaging.modelManager.messaging;}}
Object.assign(ChatWindowManagerContainer,{components:{ChatWindowManager:getMessagingComponent('ChatWindowManager')},template:'mail.ChatWindowManagerContainer',});return __exports;});;

/* /mail/static/src/components/chatter/chatter.js */
odoo.define('@mail/components/chatter/chatter',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{LegacyComponent}=require('@web/legacy/legacy_component');const Chatter=__exports.Chatter=class Chatter extends LegacyComponent{setup(){super.setup();useComponentToModel({fieldName:'component'});useRefToModel({fieldName:'scrollPanelRef',refName:'scrollPanel'});}
get chatter(){return this.props.record;}}
Object.assign(Chatter,{props:{record:Object},template:'mail.Chatter',});registerMessagingComponent(Chatter);return __exports;});;

/* /mail/static/src/components/chatter_container/chatter_container.js */
odoo.define('@mail/components/chatter_container/chatter_container',async function(require){'use strict';let __exports={};const{useModels}=require('@mail/component_hooks/use_models');require('@mail/components/chatter/chatter');const{clear}=require('@mail/model/model_field_command');const{getMessagingComponent}=require("@mail/utils/messaging_component");const{Component,onWillDestroy,onWillUpdateProps}=owl;const getChatterNextTemporaryId=__exports.getChatterNextTemporaryId=(function(){let tmpId=0;return()=>{tmpId+=1;return tmpId;};})();const ChatterContainer=__exports.ChatterContainer=class ChatterContainer extends Component{setup(){useModels();super.setup();this.localChatter=undefined;this._insertFromProps(this.props);onWillUpdateProps(nextProps=>{this._insertFromProps(nextProps);});onWillDestroy(()=>this.deleteLocalChatter());}
get chatter(){return this.props.chatter||this.localChatter;}
deleteLocalChatter(){if(this.localChatter&&this.localChatter.exists()){this.localChatter.delete();}}
async _insertFromProps(props){const messaging=await this.env.services.messaging.get();if(owl.status(this)==="destroyed"){return;}
const values={...props};delete values.chatter;delete values.className;if(values.threadId===undefined){values.threadId=clear();}
const hasToCreateChatter=!props.chatter&&!this.localChatter;if(hasToCreateChatter){this.localChatter=messaging.models['Chatter'].insert({id:getChatterNextTemporaryId(),...values});}
const chatter=props.chatter||this.localChatter;if(!hasToCreateChatter){chatter.update(values);}
if(owl.status(this)==="destroyed"){this.deleteLocalChatter();return;}
if(chatter.thread){chatter.refresh();}
this.render();}}
Object.assign(ChatterContainer,{components:{Chatter:getMessagingComponent('Chatter')},props:{chatter:{type:Object,optional:true,},className:{type:String,optional:true,},hasActivities:{type:Boolean,optional:true,},hasExternalBorder:{type:Boolean,optional:true,},hasFollowers:{type:Boolean,optional:true,},hasMessageList:{type:Boolean,optional:true,},hasMessageListScrollAdjust:{type:Boolean,optional:true,},hasParentReloadOnAttachmentsChanged:{type:Boolean,optional:true,},hasParentReloadOnFollowersUpdate:{type:Boolean,optional:true,},hasParentReloadOnMessagePosted:{type:Boolean,optional:true,},hasTopbarCloseButton:{type:Boolean,optional:true,},isAttachmentBoxVisibleInitially:{type:Boolean,optional:true,},isInFormSheetBg:{type:Boolean,optional:true,},threadId:{type:Number,optional:true,},threadModel:String,webRecord:{type:Object,optional:true,},saveRecord:{type:Function,optional:true,}},template:'mail.ChatterContainer',});return __exports;});;

/* /mail/static/src/components/chatter_topbar/chatter_topbar.js */
odoo.define('@mail/components/chatter_topbar/chatter_topbar',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ChatterTopbar=__exports.ChatterTopbar=class ChatterTopbar extends Component{get chatterTopbar(){return this.props.record;}}
Object.assign(ChatterTopbar,{props:{record:Object},template:'mail.ChatterTopbar',});registerMessagingComponent(ChatterTopbar);return __exports;});;

/* /mail/static/src/components/composer/composer.js */
odoo.define('@mail/components/composer/composer',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const Composer=__exports.Composer=class Composer extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});useRefToModel({fieldName:'buttonEmojisRef',refName:'buttonEmojis'});}
get composerView(){return this.props.record;}}
Object.assign(Composer,{props:{record:Object},template:'mail.Composer',});registerMessagingComponent(Composer);return __exports;});;

/* /mail/static/src/components/composer_suggested_recipient_list/composer_suggested_recipient_list.js */
odoo.define('@mail/components/composer_suggested_recipient_list/composer_suggested_recipient_list',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ComposerSuggestedRecipientList=__exports.ComposerSuggestedRecipientList=class ComposerSuggestedRecipientList extends Component{get composerSuggestedRecipientListView(){return this.props.record;}}
Object.assign(ComposerSuggestedRecipientList,{props:{record:Object},template:'mail.ComposerSuggestedRecipientList',});registerMessagingComponent(ComposerSuggestedRecipientList);return __exports;});;

/* /mail/static/src/components/composer_suggestion_list_view/composer_suggestion_list_view.js */
odoo.define('@mail/components/composer_suggestion_list_view/composer_suggestion_list_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ComposerSuggestionListView=__exports.ComposerSuggestionListView=class ComposerSuggestionListView extends Component{get composerSuggestionListView(){return this.props.record;}}
Object.assign(ComposerSuggestionListView,{props:{record:Object},template:'mail.ComposerSuggestionListView',});registerMessagingComponent(ComposerSuggestionListView);return __exports;});;

/* /mail/static/src/components/composer_suggestion_view/composer_suggestion_view.js */
odoo.define('@mail/components/composer_suggestion_view/composer_suggestion_view',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ComposerSuggestionView=__exports.ComposerSuggestionView=class ComposerSuggestionView extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});useUpdateToModel({methodName:'onComponentUpdate'});}
get composerSuggestionView(){return this.props.record;}}
Object.assign(ComposerSuggestionView,{props:{record:Object},template:'mail.ComposerSuggestionView',});registerMessagingComponent(ComposerSuggestionView);return __exports;});;

/* /mail/static/src/components/composer_text_input/composer_text_input.js */
odoo.define('@mail/components/composer_text_input/composer_text_input',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{useUpdate}=require('@mail/component_hooks/use_update');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ComposerTextInput=__exports.ComposerTextInput=class ComposerTextInput extends Component{setup(){super.setup();useRefToModel({fieldName:'mirroredTextareaRef',refName:'mirroredTextarea'});useRefToModel({fieldName:'textareaRef',refName:'textarea'});useUpdate({func:()=>this._update()});}
get composerView(){return this.props.record;}
_isEmpty(){return this.composerView.textareaRef.el.value==="";}
_update(){if(!this.root.el){return;}
if(this.composerView.doFocus){this.composerView.update({doFocus:false});if(this.messaging.device.isSmall){this.root.el.scrollIntoView();}
this.composerView.textareaRef.el.focus();}
if(this.composerView.hasToRestoreContent){this.composerView.textareaRef.el.value=this.composerView.composer.textInputContent;if(this.composerView.isFocused){this.composerView.textareaRef.el.setSelectionRange(this.composerView.composer.textInputCursorStart,this.composerView.composer.textInputCursorEnd,this.composerView.composer.textInputSelectionDirection,);}
this.composerView.update({hasToRestoreContent:false});}
this.composerView.updateTextInputHeight();}}
Object.assign(ComposerTextInput,{props:{record:Object},template:'mail.ComposerTextInput',});registerMessagingComponent(ComposerTextInput);return __exports;});;

/* /mail/static/src/components/delete_message_confirm/delete_message_confirm.js */
odoo.define('@mail/components/delete_message_confirm/delete_message_confirm',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const DeleteMessageConfirm=__exports.DeleteMessageConfirm=class DeleteMessageConfirm extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});}
get deleteMessageConfirmView(){return this.props.record;}}
Object.assign(DeleteMessageConfirm,{props:{record:Object},template:'mail.DeleteMessageConfirm',});registerMessagingComponent(DeleteMessageConfirm);return __exports;});;

/* /mail/static/src/components/dialog/dialog.js */
odoo.define('@mail/components/dialog/dialog',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const Dialog=__exports.Dialog=class Dialog extends Component{get dialog(){return this.props.record;}}
Object.assign(Dialog,{props:{record:Object},template:'mail.Dialog',});registerMessagingComponent(Dialog);return __exports;});;

/* /mail/static/src/components/dialog_manager/dialog_manager.js */
odoo.define('@mail/components/dialog_manager/dialog_manager',async function(require){'use strict';let __exports={};const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const DialogManager=__exports.DialogManager=class DialogManager extends Component{setup(){super.setup();useUpdateToModel({methodName:'onComponentUpdate'});}
get dialogManager(){return this.props.record;}}
Object.assign(DialogManager,{props:{record:Object},template:'mail.DialogManager',});registerMessagingComponent(DialogManager);return __exports;});;

/* /mail/static/src/components/dialog_manager_container/dialog_manager_container.js */
odoo.define('@mail/components/dialog_manager_container/dialog_manager_container',async function(require){'use strict';let __exports={};const{useModels}=require('@mail/component_hooks/use_models');require('@mail/components/dialog_manager/dialog_manager');const{getMessagingComponent}=require("@mail/utils/messaging_component");const{Component}=owl;const DialogManagerContainer=__exports.DialogManagerContainer=class DialogManagerContainer extends Component{setup(){useModels();super.setup();}
get messaging(){return this.env.services.messaging.modelManager.messaging;}}
Object.assign(DialogManagerContainer,{components:{DialogManager:getMessagingComponent('DialogManager')},template:'mail.DialogManagerContainer',});return __exports;});;

/* /mail/static/src/components/discuss/discuss.js */
odoo.define('@mail/components/discuss/discuss',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{LegacyComponent}=require('@web/legacy/legacy_component');const Discuss=__exports.Discuss=class Discuss extends LegacyComponent{get discussView(){return this.props.record;}}
Object.assign(Discuss,{props:{record:Object},template:'mail.Discuss',});registerMessagingComponent(Discuss);return __exports;});;

/* /mail/static/src/components/discuss_container/discuss_container.js */
odoo.define('@mail/components/discuss_container/discuss_container',async function(require){'use strict';let __exports={};const{useModels}=require('@mail/component_hooks/use_models');require('@mail/components/discuss/discuss');const{getMessagingComponent}=require("@mail/utils/messaging_component");const{Component,onWillDestroy}=owl;const DiscussContainer=__exports.DiscussContainer=class DiscussContainer extends Component{setup(){useModels();super.setup();onWillDestroy(()=>this._willDestroy());this.env.services.messaging.modelManager.messagingCreatedPromise.then(async()=>{const{action}=this.props;const initActiveId=(action.context&&action.context.active_id)||(action.params&&action.params.default_active_id)||'mail.box_inbox';this.discuss=this.messaging.discuss;this.discuss.update({discussView:{actionId:action.id,},initActiveId,});await this.messaging.initializedPromise;if(!this.discuss.isInitThreadHandled){this.discuss.update({isInitThreadHandled:true});if(!this.discuss.activeThread){this.discuss.openInitThread();}}});DiscussContainer.currentInstance=this;}
get messaging(){return this.env.services.messaging.modelManager.messaging;}
_willDestroy(){if(this.discuss&&DiscussContainer.currentInstance===this){this.discuss.close();}}}
Object.assign(DiscussContainer,{props:{action:Object,actionId:{type:Number,optional:1},className:String,globalState:{type:Object,optional:1},},components:{Discuss:getMessagingComponent('Discuss')},template:'mail.DiscussContainer',});return __exports;});;

/* /mail/static/src/components/discuss_mobile_mailbox_selection/discuss_mobile_mailbox_selection.js */
odoo.define('@mail/components/discuss_mobile_mailbox_selection/discuss_mobile_mailbox_selection',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const DiscussMobileMailboxSelection=__exports.DiscussMobileMailboxSelection=class DiscussMobileMailboxSelection extends Component{get discussView(){return this.props.record;}}
Object.assign(DiscussMobileMailboxSelection,{props:{record:Object},template:'mail.DiscussMobileMailboxSelection',});registerMessagingComponent(DiscussMobileMailboxSelection);return __exports;});;

/* /mail/static/src/components/discuss_mobile_mailbox_selection_item/discuss_mobile_mailbox_selection_item.js */
odoo.define('@mail/components/discuss_mobile_mailbox_selection_item/discuss_mobile_mailbox_selection_item',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const DiscussMobileMailboxSelectionItem=__exports.DiscussMobileMailboxSelectionItem=class DiscussMobileMailboxSelectionItem extends Component{get discussView(){return this.props.discussView;}
get mailbox(){return this.props.mailbox;}}
Object.assign(DiscussMobileMailboxSelectionItem,{props:{discussView:Object,mailbox:Object,},template:'mail.DiscussMobileMailboxSelectionItem',});registerMessagingComponent(DiscussMobileMailboxSelectionItem);return __exports;});;

/* /mail/static/src/components/discuss_public_view/discuss_public_view.js */
odoo.define('@mail/components/discuss_public_view/discuss_public_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;class DiscussPublicView extends Component{get discussPublicView(){return this.props.record;}}
Object.assign(DiscussPublicView,{props:{record:Object},template:'mail.DiscussPublicView',});registerMessagingComponent(DiscussPublicView);return __exports;});;

/* /mail/static/src/components/discuss_public_view_container/discuss_public_view_container.js */
odoo.define('@mail/components/discuss_public_view_container/discuss_public_view_container',async function(require){'use strict';let __exports={};require('@mail/components/discuss_public_view/discuss_public_view');const{getMessagingComponent}=require("@mail/utils/messaging_component");const{Component}=owl;const DiscussPublicViewContainer=__exports.DiscussPublicViewContainer=class DiscussPublicViewContainer extends Component{setup(){super.setup();this.env.services.messaging.get().then(messaging=>{messaging.models['Thread'].insert(messaging.models['Thread'].convertData(this.props.data.channelData));this.discussPublicView=messaging.models['DiscussPublicView'].insert(this.props.data.discussPublicViewData);if(this.discussPublicView.shouldDisplayWelcomeViewInitially){this.discussPublicView.switchToWelcomeView();}else{this.discussPublicView.switchToThreadView();}
this.render();});}}
Object.assign(DiscussPublicViewContainer,{components:{DiscussPublicView:getMessagingComponent('DiscussPublicView')},template:'mail.DiscussPublicViewContainer',props:{data:Object,},});return __exports;});;

/* /mail/static/src/components/discuss_sidebar/discuss_sidebar.js */
odoo.define('@mail/components/discuss_sidebar/discuss_sidebar',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{useUpdate}=require('@mail/component_hooks/use_update');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const DiscussSidebar=__exports.DiscussSidebar=class DiscussSidebar extends Component{setup(){super.setup();useUpdate({func:()=>this._update()});useRefToModel({fieldName:'quickSearchInputRef',refName:'quickSearchInput'});}
get discussView(){return this.props.record;}
_update(){if(this.discussView.quickSearchInputRef.el){this.discussView.quickSearchInputRef.el.value=this.discussView.discuss.sidebarQuickSearchValue;}}}
Object.assign(DiscussSidebar,{props:{record:Object},template:'mail.DiscussSidebar',});registerMessagingComponent(DiscussSidebar);return __exports;});;

/* /mail/static/src/components/discuss_sidebar_category/discuss_sidebar_category.js */
odoo.define('@mail/components/discuss_sidebar_category/discuss_sidebar_category',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const DiscussSidebarCategory=__exports.DiscussSidebarCategory=class DiscussSidebarCategory extends Component{get category(){return this.props.record;}}
Object.assign(DiscussSidebarCategory,{props:{record:Object},template:'mail.DiscussSidebarCategory',});registerMessagingComponent(DiscussSidebarCategory);return __exports;});;

/* /mail/static/src/components/discuss_sidebar_category_item/discuss_sidebar_category_item.js */
odoo.define('@mail/components/discuss_sidebar_category_item/discuss_sidebar_category_item',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const DiscussSidebarCategoryItem=__exports.DiscussSidebarCategoryItem=class DiscussSidebarCategoryItem extends Component{get categoryItem(){return this.props.record;}}
Object.assign(DiscussSidebarCategoryItem,{props:{record:Object},template:'mail.DiscussSidebarCategoryItem',});registerMessagingComponent(DiscussSidebarCategoryItem);return __exports;});;

/* /mail/static/src/components/discuss_sidebar_mailbox/discuss_sidebar_mailbox.js */
odoo.define('@mail/components/discuss_sidebar_mailbox/discuss_sidebar_mailbox',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const DiscussSidebarMailbox=__exports.DiscussSidebarMailbox=class DiscussSidebarMailbox extends Component{get discussSidebarMailboxView(){return this.props.record;}}
Object.assign(DiscussSidebarMailbox,{props:{record:Object},template:'mail.DiscussSidebarMailbox',});registerMessagingComponent(DiscussSidebarMailbox);return __exports;});;

/* /mail/static/src/components/drop_zone/drop_zone.js */
odoo.define('@mail/components/drop_zone/drop_zone',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const DropZone=__exports.DropZone=class DropZone extends Component{get dropZoneView(){return this.props.record;}
contains(node){return Boolean(this.root.el&&this.root.el.contains(node));}}
Object.assign(DropZone,{props:{record:Object,onDropzoneFilesDropped:{type:Function,optional:true,},},template:'mail.DropZone',});registerMessagingComponent(DropZone);return __exports;});;

/* /mail/static/src/components/emoji_category_bar_view/emoji_category_bar_view.js */
odoo.define('@mail/components/emoji_category_bar_view/emoji_category_bar_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiCategoryBarView=__exports.EmojiCategoryBarView=class EmojiCategoryBarView extends Component{get emojiCategoryBarView(){return this.props.record;}}
Object.assign(EmojiCategoryBarView,{props:{record:Object},template:'mail.EmojiCategoryBarView',});registerMessagingComponent(EmojiCategoryBarView);return __exports;});;

/* /mail/static/src/components/emoji_category_view/emoji_category_view.js */
odoo.define('@mail/components/emoji_category_view/emoji_category_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiCategoryView=__exports.EmojiCategoryView=class EmojiCategoryView extends Component{get emojiCategoryView(){return this.props.record;}}
Object.assign(EmojiCategoryView,{props:{record:Object},template:'mail.EmojiCategoryView',});registerMessagingComponent(EmojiCategoryView);return __exports;});;

/* /mail/static/src/components/emoji_grid_item_view/emoji_grid_item_view.js */
odoo.define('@mail/components/emoji_grid_item_view/emoji_grid_item_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiGridItemView=__exports.EmojiGridItemView=class EmojiGridItemView extends Component{get emojiGridItemView(){return this.props.record;}}
Object.assign(EmojiGridItemView,{props:{record:Object},template:'mail.EmojiGridItemView',});registerMessagingComponent(EmojiGridItemView);return __exports;});;

/* /mail/static/src/components/emoji_grid_loading_screen/emoji_grid_loading_screen.js */
odoo.define('@mail/components/emoji_grid_loading_screen/emoji_grid_loading_screen',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiGridLoadingScreen=__exports.EmojiGridLoadingScreen=class EmojiGridLoadingScreen extends Component{get EmojiGridLoadingScreen(){return this.props.record;}}
Object.assign(EmojiGridLoadingScreen,{props:{record:Object},template:'mail.EmojiGridLoadingScreen',});registerMessagingComponent(EmojiGridLoadingScreen);return __exports;});;

/* /mail/static/src/components/emoji_grid_row_view/emoji_grid_row_view.js */
odoo.define('@mail/components/emoji_grid_row_view/emoji_grid_row_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiGridRowView=__exports.EmojiGridRowView=class EmojiGridRowView extends Component{get emojiGridRowView(){return this.props.record;}}
Object.assign(EmojiGridRowView,{props:{record:Object},template:'mail.EmojiGridRowView',});registerMessagingComponent(EmojiGridRowView);return __exports;});;

/* /mail/static/src/components/emoji_grid_search_no_content_view/emoji_grid_search_no_content_view.js */
odoo.define('@mail/components/emoji_grid_search_no_content_view/emoji_grid_search_no_content_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiGridSearchNoContentView=__exports.EmojiGridSearchNoContentView=class EmojiGridSearchNoContentView extends Component{get emojiGridSearchNoContentView(){return this.props.record;}}
Object.assign(EmojiGridSearchNoContentView,{props:{record:Object},template:'mail.EmojiGridSearchNoContentView',});registerMessagingComponent(EmojiGridSearchNoContentView);return __exports;});;

/* /mail/static/src/components/emoji_grid_section_view/emoji_grid_section_view.js */
odoo.define('@mail/components/emoji_grid_section_view/emoji_grid_section_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiGridSectionView=__exports.EmojiGridSectionView=class EmojiGridSectionView extends Component{get emojiGridSectionView(){return this.props.record;}}
Object.assign(EmojiGridSectionView,{props:{record:Object},template:'mail.EmojiGridSectionView',});registerMessagingComponent(EmojiGridSectionView);return __exports;});;

/* /mail/static/src/components/emoji_grid_view/emoji_grid_view.js */
odoo.define('@mail/components/emoji_grid_view/emoji_grid_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{Component}=owl;const EmojiGridView=__exports.EmojiGridView=class EmojiGridView extends Component{setup(){useRefToModel({fieldName:'containerRef',refName:'containerRef'});useRefToModel({fieldName:'listRef',refName:'listRef'});useRefToModel({fieldName:'viewBlockRef',refName:'viewBlockRef'});useUpdateToModel({methodName:'onComponentUpdate'});}
get emojiGridView(){return this.props.record;}}
Object.assign(EmojiGridView,{props:{record:Object},template:'mail.EmojiGridView',});registerMessagingComponent(EmojiGridView);return __exports;});;

/* /mail/static/src/components/emoji_picker_header_action_list_view/emoji_picker_header_action_list_view.js */
odoo.define('@mail/components/emoji_picker_header_action_list_view/emoji_picker_header_action_list_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiPickerHeaderActionListView=__exports.EmojiPickerHeaderActionListView=class EmojiPickerHeaderActionListView extends Component{get emojiPickerHeaderActionListView(){return this.props.record;}}
Object.assign(EmojiPickerHeaderActionListView,{props:{record:Object},template:'mail.EmojiPickerHeaderActionListView',});registerMessagingComponent(EmojiPickerHeaderActionListView);return __exports;});;

/* /mail/static/src/components/emoji_picker_header_action_view/emoji_picker_header_action_view.js */
odoo.define('@mail/components/emoji_picker_header_action_view/emoji_picker_header_action_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiPickerHeaderActionView=__exports.EmojiPickerHeaderActionView=class EmojiPickerHeaderActionView extends Component{get emojiPickerHeaderActionView(){return this.props.record;}}
Object.assign(EmojiPickerHeaderActionView,{props:{record:Object},template:'mail.EmojiPickerHeaderActionView',});registerMessagingComponent(EmojiPickerHeaderActionView);return __exports;});;

/* /mail/static/src/components/emoji_picker_header_view/emoji_picker_header_view.js */
odoo.define('@mail/components/emoji_picker_header_view/emoji_picker_header_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiPickerHeaderView=__exports.EmojiPickerHeaderView=class EmojiPickerHeaderView extends Component{get emojiPickerHeaderView(){return this.props.record;}}
Object.assign(EmojiPickerHeaderView,{props:{record:Object},template:'mail.EmojiPickerHeaderView',});registerMessagingComponent(EmojiPickerHeaderView);return __exports;});;

/* /mail/static/src/components/emoji_picker_view/emoji_picker_view.js */
odoo.define('@mail/components/emoji_picker_view/emoji_picker_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{Component}=owl;const EmojiPickerView=__exports.EmojiPickerView=class EmojiPickerView extends Component{setup(){useComponentToModel({fieldName:'component'});}
get emojiPickerView(){return this.props.record;}}
Object.assign(EmojiPickerView,{props:{record:Object},template:'mail.EmojiPickerView',});registerMessagingComponent(EmojiPickerView);return __exports;});;

/* /mail/static/src/components/emoji_search_bar_view/emoji_search_bar_view.js */
odoo.define('@mail/components/emoji_search_bar_view/emoji_search_bar_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{Component}=owl;const EmojiSearchBarView=__exports.EmojiSearchBarView=class EmojiSearchBarView extends Component{setup(){super.setup();useRefToModel({fieldName:'inputRef',refName:'input'});useUpdateToModel({methodName:'onComponentUpdate',modelName:'EmojiSearchBarView'});}
get emojiSearchBarView(){return this.props.record;}}
Object.assign(EmojiSearchBarView,{props:{record:Object},template:'mail.EmojiSearchBarView',});registerMessagingComponent(EmojiSearchBarView);return __exports;});;

/* /mail/static/src/components/emoji_view/emoji_view.js */
odoo.define('@mail/components/emoji_view/emoji_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const EmojiView=__exports.EmojiView=class EmojiView extends Component{get emojiView(){return this.props.record;}}
Object.assign(EmojiView,{props:{record:Object},template:'mail.EmojiView',});registerMessagingComponent(EmojiView);return __exports;});;

/* /mail/static/src/components/follow_button/follow_button.js */
odoo.define('@mail/components/follow_button/follow_button',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const FollowButton=__exports.FollowButton=class FollowButton extends Component{get followButtonView(){return this.props.record;}}
Object.assign(FollowButton,{props:{record:Object},template:'mail.FollowButton',});registerMessagingComponent(FollowButton);return __exports;});;

/* /mail/static/src/components/follower/follower.js */
odoo.define('@mail/components/follower/follower',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const Follower=__exports.Follower=class Follower extends Component{get followerView(){return this.props.record;}}
Object.assign(Follower,{props:{record:Object},template:'mail.Follower',});registerMessagingComponent(Follower);return __exports;});;

/* /mail/static/src/components/follower_list_menu/follower_list_menu.js */
odoo.define('@mail/components/follower_list_menu/follower_list_menu',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const FollowerListMenu=__exports.FollowerListMenu=class FollowerListMenu extends Component{setup(){super.setup();useRefToModel({fieldName:'dropdownRef',refName:'dropdown'});}
get followerListMenuView(){return this.props.record;}}
Object.assign(FollowerListMenu,{props:{record:Object},template:'mail.FollowerListMenu',});registerMessagingComponent(FollowerListMenu);return __exports;});;

/* /mail/static/src/components/follower_subtype/follower_subtype.js */
odoo.define('@mail/components/follower_subtype/follower_subtype',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const FollowerSubtype=__exports.FollowerSubtype=class FollowerSubtype extends Component{get followerSubtypeView(){return this.props.record;}}
Object.assign(FollowerSubtype,{props:{record:Object},template:'mail.FollowerSubtype',});registerMessagingComponent(FollowerSubtype);return __exports;});;

/* /mail/static/src/components/follower_subtype_list/follower_subtype_list.js */
odoo.define('@mail/components/follower_subtype_list/follower_subtype_list',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const FollowerSubtypeList=__exports.FollowerSubtypeList=class FollowerSubtypeList extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});}
get followerSubtypeList(){return this.props.record;}}
Object.assign(FollowerSubtypeList,{props:{record:Object},template:'mail.FollowerSubtypeList',});registerMessagingComponent(FollowerSubtypeList);return __exports;});;

/* /mail/static/src/components/link_preview_aside_view/link_preview_aside_view.js */
odoo.define('@mail/components/link_preview_aside_view/link_preview_aside_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;class LinkPreviewAsideView extends Component{get linkPreviewAsideView(){return this.props.record;}}
Object.assign(LinkPreviewAsideView,{props:{record:Object},template:'mail.LinkPreviewAsideView',});registerMessagingComponent(LinkPreviewAsideView);return __exports;});;

/* /mail/static/src/components/link_preview_card_view/link_preview_card_view.js */
odoo.define('@mail/components/link_preview_card_view/link_preview_card_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;class LinkPreviewCardView extends Component{get linkPreviewCardView(){return this.props.record;}}
Object.assign(LinkPreviewCardView,{props:{record:Object},template:'mail.LinkPreviewCardView',});registerMessagingComponent(LinkPreviewCardView);return __exports;});;

/* /mail/static/src/components/link_preview_delete_confirm_view/link_preview_delete_confirm_view.js */
odoo.define('@mail/components/link_preview_delete_confirm_view/link_preview_delete_confirm_view',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const LinkPreviewDeleteConfirmView=__exports.LinkPreviewDeleteConfirmView=class LinkPreviewDeleteConfirmView extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});}
get linkPreviewDeleteConfirmView(){return this.props.record;}}
Object.assign(LinkPreviewDeleteConfirmView,{props:{record:Object},template:'mail.LinkPreviewDeleteConfirmView',});registerMessagingComponent(LinkPreviewDeleteConfirmView);return __exports;});;

/* /mail/static/src/components/link_preview_image_view/link_preview_image_view.js */
odoo.define('@mail/components/link_preview_image_view/link_preview_image_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;class LinkPreviewImageView extends Component{get linkPreviewImageView(){return this.props.record;}}
Object.assign(LinkPreviewImageView,{props:{record:Object},template:'mail.LinkPreviewImageView',});registerMessagingComponent(LinkPreviewImageView);return __exports;});;

/* /mail/static/src/components/link_preview_list_view/link_preview_list_view.js */
odoo.define('@mail/components/link_preview_list_view/link_preview_list_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;class LinkPreviewListView extends Component{get linkPreviewListView(){return this.props.record;}}
Object.assign(LinkPreviewListView,{props:{record:Object},template:'mail.LinkPreviewListView',});registerMessagingComponent(LinkPreviewListView);return __exports;});;

/* /mail/static/src/components/link_preview_video_view/link_preview_video_view.js */
odoo.define('@mail/components/link_preview_video_view/link_preview_video_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;class LinkPreviewVideoView extends Component{get linkPreviewVideoView(){return this.props.record;}}
Object.assign(LinkPreviewVideoView,{props:{record:Object},template:'mail.LinkPreviewVideoView',});registerMessagingComponent(LinkPreviewVideoView);return __exports;});;

/* /mail/static/src/components/mail_template/mail_template.js */
odoo.define('@mail/components/mail_template/mail_template',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MailTemplate=__exports.MailTemplate=class MailTemplate extends Component{get mailTemplateView(){return this.props.record;}}
Object.assign(MailTemplate,{props:{record:Object},template:'mail.MailTemplate',});registerMessagingComponent(MailTemplate);return __exports;});;

/* /mail/static/src/components/message/message.js */
odoo.define('@mail/components/message/message',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{useUpdate}=require('@mail/component_hooks/use_update');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{_lt}=require('web.core');const{Component,useRef}=owl;const READ_MORE=_lt("Read More");const READ_LESS=_lt("Read Less");const Message=__exports.Message=class Message extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});useRefToModel({fieldName:'notificationIconRef',refName:'notificationIcon'});useUpdateToModel({methodName:'onComponentUpdate'});useUpdate({func:()=>this._update()});this._lastPrettyBody;this._prettyBodyRef=useRef('prettyBody');this._contentRef=useRef('content');this._checkboxRef=useRef('checkbox');this._lastReadMoreIndex=0;this._isReadMoreByIndex=new Map();}
isBottomVisible({offset=0}={}){if(!this.root.el){return false;}
const elRect=this.root.el.getBoundingClientRect();if(!this.root.el.parentNode){return false;}
const parentRect=this.root.el.parentNode.getBoundingClientRect();return(elRect.bottom<parentRect.bottom+offset&&parentRect.top<elRect.bottom+offset);}
get messageView(){return this.props.record;}
async scrollIntoView({behavior='auto',block='end'}={}){this.root.el.scrollIntoView({behavior,block,inline:'nearest',});if(behavior==='smooth'){return new Promise(resolve=>setTimeout(resolve,500));}else{return Promise.resolve();}}
_insertReadMoreLess($element){const groups=[];let readMoreNodes;const $children=$element.contents().filter((index,content)=>content.nodeType===1||(content.nodeType===3&&content.nodeValue.trim()));for(const child of $children){let $child=$(child);if(child.nodeType===3&&$child.prevAll('[id*="stopSpelling"]').length>0){$child=$('<span>',{text:child.textContent,'data-o-mail-quote':'1',});child.parentNode.replaceChild($child[0],child);}
if($child.attr('data-o-mail-quote')||($child.get(0).nodeName==='BR'&&$child.prev('[data-o-mail-quote="1"]').length>0)){if(!readMoreNodes){readMoreNodes=[];groups.push(readMoreNodes);}
$child.hide();readMoreNodes.push($child);}else{readMoreNodes=undefined;this._insertReadMoreLess($child);}}
for(const group of groups){const index=this._lastReadMoreIndex++;const $readMoreLess=$('<a>',{class:'o_Message_readMoreLess d-block',href:'#',text:READ_MORE,}).insertBefore(group[0]);if(!this._isReadMoreByIndex.has(index)){this._isReadMoreByIndex.set(index,true);}
const updateFromState=()=>{const isReadMore=this._isReadMoreByIndex.get(index);for(const $child of group){$child.hide();$child.toggle(!isReadMore);}
$readMoreLess.text(isReadMore?READ_MORE:READ_LESS);};$readMoreLess.click(e=>{e.preventDefault();this._isReadMoreByIndex.set(index,!this._isReadMoreByIndex.get(index));updateFromState();});updateFromState();}}
_update(){if(this._prettyBodyRef.el&&this.messageView.message.prettyBody!==this._lastPrettyBody){this._prettyBodyRef.el.innerHTML=this.messageView.message.prettyBody;this._lastPrettyBody=this.messageView.message.prettyBody;}
if(!this._prettyBodyRef.el){this._lastPrettyBody=undefined;}
if(this._contentRef.el){for(const el of[...this._contentRef.el.querySelectorAll(':scope .o_Message_readMoreLess')]){el.remove();}
this._lastReadMoreIndex=0;this._insertReadMoreLess($(this._contentRef.el));this.messaging.messagingBus.trigger('o-component-message-read-more-less-inserted',{message:this.messageView.message,});}}}
Object.assign(Message,{props:{record:Object},template:'mail.Message',});registerMessagingComponent(Message);return __exports;});;

/* /mail/static/src/components/message_action_list/message_action_list.js */
odoo.define('@mail/components/message_action_list/message_action_list',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MessageActionList=__exports.MessageActionList=class MessageActionList extends Component{get messageActionList(){return this.props.record;}}
Object.assign(MessageActionList,{props:{record:Object},template:"mail.MessageActionList",});registerMessagingComponent(MessageActionList);return __exports;});;

/* /mail/static/src/components/message_action_view/message_action_view.js */
odoo.define('@mail/components/message_action_view/message_action_view',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MessageActionView=__exports.MessageActionView=class MessageActionView extends Component{setup(){super.setup();useRefToModel({fieldName:'actionRef',refName:'action'});}
get messageActionView(){return this.props.record;}}
Object.assign(MessageActionView,{props:{record:Object},template:"mail.MessageActionView",});registerMessagingComponent(MessageActionView);return __exports;});;

/* /mail/static/src/components/message_author_prefix/message_author_prefix.js */
odoo.define('@mail/components/message_author_prefix/message_author_prefix',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MessageAuthorPrefix=__exports.MessageAuthorPrefix=class MessageAuthorPrefix extends Component{get messageAuthorPrefixView(){return this.props.record;}}
Object.assign(MessageAuthorPrefix,{props:{record:Object},template:'mail.MessageAuthorPrefix',});registerMessagingComponent(MessageAuthorPrefix);return __exports;});;

/* /mail/static/src/components/message_in_reply_to_view/message_in_reply_to_view.js */
odoo.define('@mail/components/message_in_reply_to_view/message_in_reply_to_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MessageInReplyToView=__exports.MessageInReplyToView=class MessageInReplyToView extends Component{get messageInReplyToView(){return this.props.record;}}
Object.assign(MessageInReplyToView,{props:{record:Object},template:"mail.MessageInReplyToView",});registerMessagingComponent(MessageInReplyToView);return __exports;});;

/* /mail/static/src/components/message_list/message_list.js */
odoo.define('@mail/components/message_list/message_list',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useRenderedValues}=require('@mail/component_hooks/use_rendered_values');const{useUpdate}=require('@mail/component_hooks/use_update');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Transition}=require("@web/core/transition");const{Component,onWillPatch,useRef}=owl;const MessageList=__exports.MessageList=class MessageList extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});this._loadMoreRef=useRef('loadMore');this._willPatchSnapshot=undefined;this._onScrollThrottled=_.throttle(this._onScrollThrottled.bind(this),100);this._lastRenderedValues=useRenderedValues(()=>{const messageListView=this.messageListView;const threadView=messageListView.threadViewOwner;const thread=threadView&&threadView.thread;const threadCache=threadView&&threadView.threadCache;return{componentHintList:threadView?[...threadView.componentHintList]:[],hasAutoScrollOnMessageReceived:threadView&&threadView.hasAutoScrollOnMessageReceived,messageListView,order:threadView&&threadView.order,orderedMessages:threadCache?[...threadCache.orderedMessages]:[],thread,threadCache,threadCacheInitialScrollHeight:threadView&&threadView.threadCacheInitialScrollHeight,threadCacheInitialScrollPosition:threadView&&threadView.threadCacheInitialScrollPosition,};});useUpdate({func:()=>this._update()});onWillPatch(()=>this._willPatch());}
_willPatch(){const lastRenderedValues=this._lastRenderedValues();if(!lastRenderedValues){return;}
const{messageListView}=lastRenderedValues;if(!messageListView.exists()){return;}
this._willPatchSnapshot={scrollHeight:messageListView.getScrollableElement().scrollHeight,scrollTop:messageListView.getScrollableElement().scrollTop,};}
adjustFromComponentHints(){const{componentHintList,messageListView}=this._lastRenderedValues();if(!messageListView.exists()){return;}
for(const hint of componentHintList){switch(hint.type){case'change-of-thread-cache':case'member-list-hidden':case'adjust-scroll':this._adjustScrollFromModel();break;case'message-posted':case'message-received':case'messages-loaded':case'new-messages-loaded':this._adjustScrollForExtraMessagesAtTheEnd();break;case'more-messages-loaded':this._adjustScrollForExtraMessagesAtTheStart();break;}
messageListView.threadViewOwner.markComponentHintProcessed(hint);}
this._willPatchSnapshot=undefined;}
setScrollTop(value){const{messageListView}=this._lastRenderedValues();if(messageListView.getScrollableElement().scrollTop===value){return;}
messageListView.update({isLastScrollProgrammatic:true});messageListView.getScrollableElement().scrollTop=value;}
get messageListView(){return this.props.record;}
_adjustScrollForExtraMessagesAtTheEnd(){const{hasAutoScrollOnMessageReceived,messageListView,order,}=this._lastRenderedValues();if(!messageListView.getScrollableElement()||!messageListView.hasScrollAdjust){return;}
if(!hasAutoScrollOnMessageReceived){if(order==='desc'&&this._willPatchSnapshot){const{scrollHeight,scrollTop}=this._willPatchSnapshot;this.setScrollTop(messageListView.getScrollableElement().scrollHeight-scrollHeight+scrollTop);}
return;}
this._scrollToEnd();}
_adjustScrollForExtraMessagesAtTheStart(){const{messageListView,order,}=this._lastRenderedValues();if(!messageListView.getScrollableElement()||!messageListView.hasScrollAdjust||!this._willPatchSnapshot||order==='desc'){return;}
const{scrollHeight,scrollTop}=this._willPatchSnapshot;this.setScrollTop(messageListView.getScrollableElement().scrollHeight-scrollHeight+scrollTop);}
_adjustScrollFromModel(){const{messageListView,threadCacheInitialScrollHeight,threadCacheInitialScrollPosition,}=this._lastRenderedValues();if(!messageListView.getScrollableElement()||!messageListView.hasScrollAdjust){return;}
if(threadCacheInitialScrollPosition!==undefined&&messageListView.getScrollableElement().scrollHeight===threadCacheInitialScrollHeight){this.setScrollTop(threadCacheInitialScrollPosition);return;}
this._scrollToEnd();return;}
_checkMostRecentMessageIsVisible(){const{messageListView}=this._lastRenderedValues();if(!messageListView.exists()){return;}
const{lastMessageListViewItem}=messageListView.threadViewOwner;if(lastMessageListViewItem&&lastMessageListViewItem.isPartiallyVisible()){messageListView.threadViewOwner.handleVisibleMessage(lastMessageListViewItem.message);}}
_isLoadMoreVisible(){const{messageListView}=this._lastRenderedValues();const loadMore=this._loadMoreRef.el;if(!loadMore){return false;}
const loadMoreRect=loadMore.getBoundingClientRect();const elRect=messageListView.getScrollableElement().getBoundingClientRect();const isInvisible=loadMoreRect.top>elRect.bottom||loadMoreRect.bottom<elRect.top;return!isInvisible;}
_scrollToEnd(){const{messageListView,order}=this._lastRenderedValues();this.setScrollTop(order==='asc'?messageListView.getScrollableElement().scrollHeight-messageListView.getScrollableElement().clientHeight:0);}
_update(){this.adjustFromComponentHints();}
onScroll(ev){this._onScrollThrottled(ev);}
_onScrollThrottled(ev){const{messageListView,orderedMessages,thread,threadCache,}=this._lastRenderedValues();if(!messageListView.exists()){return;}
if(!messageListView.getScrollableElement()){return;}
const scrollTop=messageListView.getScrollableElement().scrollTop;this.messaging.messagingBus.trigger('o-component-message-list-scrolled',{orderedMessages,scrollTop,thread,threadViewer:messageListView.threadViewOwner.threadViewer,});messageListView.update({clientHeight:messageListView.getScrollableElement().clientHeight,scrollHeight:messageListView.getScrollableElement().scrollHeight,scrollTop:messageListView.getScrollableElement().scrollTop,});if(!messageListView.isLastScrollProgrammatic){const hasAutoScrollOnMessageReceived=messageListView.isAtEnd;messageListView.threadViewOwner.update({hasAutoScrollOnMessageReceived});}
messageListView.threadViewOwner.threadViewer.saveThreadCacheScrollHeightAsInitial(messageListView.getScrollableElement().scrollHeight,threadCache);messageListView.threadViewOwner.threadViewer.saveThreadCacheScrollPositionsAsInitial(scrollTop,threadCache);if(!messageListView.isLastScrollProgrammatic&&this._isLoadMoreVisible()&&threadCache&&threadCache.exists()){threadCache.loadMoreMessages();}
this._checkMostRecentMessageIsVisible();messageListView.update({isLastScrollProgrammatic:false});}}
Object.assign(MessageList,{components:{Transition},props:{record:Object},template:'mail.MessageList',});registerMessagingComponent(MessageList);return __exports;});;

/* /mail/static/src/components/message_notification_popover_content/message_notification_popover_content.js */
odoo.define('@mail/components/message_notification_popover_content/message_notification_popover_content',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MessageNotificationPopoverContent=__exports.MessageNotificationPopoverContent=class MessageNotificationPopoverContent extends Component{get messageNotificationPopoverContentView(){return this.props.record;}}
Object.assign(MessageNotificationPopoverContent,{props:{record:Object},template:'mail.MessageNotificationPopoverContent',});registerMessagingComponent(MessageNotificationPopoverContent);return __exports;});;

/* /mail/static/src/components/message_reaction_group/message_reaction_group.js */
odoo.define('@mail/components/message_reaction_group/message_reaction_group',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MessageReactionGroup=__exports.MessageReactionGroup=class MessageReactionGroup extends Component{get messageReactionGroup(){return this.props.record;}}
Object.assign(MessageReactionGroup,{props:{record:Object},template:'mail.MessageReactionGroup',});registerMessagingComponent(MessageReactionGroup);return __exports;});;

/* /mail/static/src/components/message_seen_indicator/message_seen_indicator.js */
odoo.define('@mail/components/message_seen_indicator/message_seen_indicator',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MessageSeenIndicator=__exports.MessageSeenIndicator=class MessageSeenIndicator extends Component{get messageSeenIndicatorView(){return this.props.record;}}
Object.assign(MessageSeenIndicator,{props:{record:Object},template:'mail.MessageSeenIndicator',});registerMessagingComponent(MessageSeenIndicator);return __exports;});;

/* /mail/static/src/components/messaging_menu/messaging_menu.js */
odoo.define('@mail/components/messaging_menu/messaging_menu',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MessagingMenu=__exports.MessagingMenu=class MessagingMenu extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});}
get messagingMenu(){return this.props.record;}}
Object.assign(MessagingMenu,{props:{record:Object},template:'mail.MessagingMenu',});registerMessagingComponent(MessagingMenu);return __exports;});;

/* /mail/static/src/components/messaging_menu_container/messaging_menu_container.js */
odoo.define('@mail/components/messaging_menu_container/messaging_menu_container',async function(require){'use strict';let __exports={};const{useModels}=require('@mail/component_hooks/use_models');require('@mail/components/messaging_menu/messaging_menu');const{getMessagingComponent}=require("@mail/utils/messaging_component");const{Component}=owl;const MessagingMenuContainer=__exports.MessagingMenuContainer=class MessagingMenuContainer extends Component{setup(){useModels();super.setup();}
get messaging(){return this.env.services.messaging.modelManager.messaging;}}
Object.assign(MessagingMenuContainer,{components:{MessagingMenu:getMessagingComponent('MessagingMenu')},template:'mail.MessagingMenuContainer',});return __exports;});;

/* /mail/static/src/components/messaging_menu_tab/messaging_menu_tab.js */
odoo.define('@mail/components/messaging_menu_tab/messaging_menu_tab',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MessagingMenuTab=__exports.MessagingMenuTab=class MessagingMenuTab extends Component{get messagingMenu(){return this.props.messagingMenu;}}
Object.assign(MessagingMenuTab,{props:{messagingMenu:Object,tabId:String,},template:'mail.MessagingMenuTab',});registerMessagingComponent(MessagingMenuTab);return __exports;});;

/* /mail/static/src/components/mobile_messaging_navbar/mobile_messaging_navbar.js */
odoo.define('@mail/components/mobile_messaging_navbar/mobile_messaging_navbar',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const MobileMessagingNavbar=__exports.MobileMessagingNavbar=class MobileMessagingNavbar extends Component{get mobileMessagingNavbarView(){return this.props.record;}}
Object.assign(MobileMessagingNavbar,{props:{record:Object},template:'mail.MobileMessagingNavbar',});registerMessagingComponent(MobileMessagingNavbar);return __exports;});;

/* /mail/static/src/components/notification_alert/notification_alert.js */
odoo.define('@mail/components/notification_alert/notification_alert',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const NotificationAlert=__exports.NotificationAlert=class NotificationAlert extends Component{}
Object.assign(NotificationAlert,{template:'mail.NotificationAlert',});registerMessagingComponent(NotificationAlert);return __exports;});;

/* /mail/static/src/components/notification_alert_container/notification_alert_container.js */
odoo.define('@mail/components/notification_alert_container/notification_alert_container',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{getMessagingComponent}=require("@mail/utils/messaging_component");const{Component}=owl;const NotificationAlertContainer=__exports.NotificationAlertContainer=class NotificationAlertContainer extends Component{}
Object.assign(NotificationAlertContainer,{components:{NotificationAlert:getMessagingComponent('NotificationAlert')},template:'mail.NotificationAlertContainer',});registry.category("view_widgets").add("notification_alert",NotificationAlertContainer);return __exports;});;

/* /mail/static/src/components/notification_group/notification_group.js */
odoo.define('@mail/components/notification_group/notification_group',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const NotificationGroup=__exports.NotificationGroup=class NotificationGroup extends Component{setup(){super.setup();useRefToModel({fieldName:'markAsReadRef',refName:'markAsRead'});}
get notificationGroupView(){return this.props.record;}}
Object.assign(NotificationGroup,{props:{record:Object},template:'mail.NotificationGroup',});registerMessagingComponent(NotificationGroup);return __exports;});;

/* /mail/static/src/components/notification_list/notification_list.js */
odoo.define('@mail/components/notification_list/notification_list',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const NotificationList=__exports.NotificationList=class NotificationList extends Component{get notificationListView(){return this.props.record;}}
Object.assign(NotificationList,{props:{record:Object},template:'mail.NotificationList',});registerMessagingComponent(NotificationList);return __exports;});;

/* /mail/static/src/components/notification_message_view/notification_message_view.js */
odoo.define('@mail/components/notification_message_view/notification_message_view',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;class NotificationMessageView extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});useUpdateToModel({methodName:'onComponentUpdate'});}
get notificationMessageView(){return this.props.record;}}
Object.assign(NotificationMessageView,{props:{record:Object},template:'mail.NotificationMessageView',});registerMessagingComponent(NotificationMessageView);return __exports;});;

/* /mail/static/src/components/notification_request/notification_request.js */
odoo.define('@mail/components/notification_request/notification_request',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const NotificationRequest=__exports.NotificationRequest=class NotificationRequest extends Component{get notificationRequestView(){return this.props.record;}
_handleResponseNotificationPermission(value){this.messaging.refreshIsNotificationPermissionDefault();if(value!=='granted'){this.messaging.userNotificationManager.sendNotification({message:this.env._t("Odoo will not have the permission to send native notifications on this device."),title:this.env._t("Permission denied"),});}}
_onClick(){const windowNotification=this.messaging.browser.Notification;const def=windowNotification&&windowNotification.requestPermission();if(def){def.then(this._handleResponseNotificationPermission.bind(this));}
if(!this.messaging.device.isSmall){this.messaging.messagingMenu.close();}}}
Object.assign(NotificationRequest,{props:{record:Object},template:'mail.NotificationRequest',});registerMessagingComponent(NotificationRequest);return __exports;});;

/* /mail/static/src/components/persona_im_status_icon/persona_im_status_icon.js */
odoo.define('@mail/components/persona_im_status_icon/persona_im_status_icon',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{markEventHandled}=require('@mail/utils/utils');const{Component}=owl;const PersonaImStatusIcon=__exports.PersonaImStatusIcon=class PersonaImStatusIcon extends Component{get personaImStatusIconView(){return this.props.record;}
_onClick(ev){markEventHandled(ev,'PersonaImStatusIcon.Click');if(!this.props.hasOpenChat||!this.personaImStatusIconView.persona.partner){return;}
this.personaImStatusIconView.persona.partner.openChat();}}
Object.assign(PersonaImStatusIcon,{defaultProps:{hasBackground:true,hasOpenChat:false,},props:{hasBackground:{type:Boolean,optional:true},hasOpenChat:{type:Boolean,optional:true},record:Object,},template:'mail.PersonaImStatusIcon',});registerMessagingComponent(PersonaImStatusIcon);return __exports;});;

/* /mail/static/src/components/popover_manager/popover_manager.js */
odoo.define('@mail/components/popover_manager/popover_manager',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const PopoverManager=__exports.PopoverManager=class PopoverManager extends Component{get popoverManager(){return this.props.record;}}
Object.assign(PopoverManager,{props:{record:Object},template:'mail.PopoverManager',});registerMessagingComponent(PopoverManager);return __exports;});;

/* /mail/static/src/components/popover_manager_container/popover_manager_container.js */
odoo.define('@mail/components/popover_manager_container/popover_manager_container',async function(require){'use strict';let __exports={};const{useModels}=require('@mail/component_hooks/use_models');require('@mail/components/popover_manager/popover_manager');const{getMessagingComponent}=require("@mail/utils/messaging_component");const{Component}=owl;const PopoverManagerContainer=__exports.PopoverManagerContainer=class PopoverManagerContainer extends Component{setup(){useModels();super.setup();}
get messaging(){return this.env.services.messaging.modelManager.messaging;}}
Object.assign(PopoverManagerContainer,{components:{PopoverManager:getMessagingComponent('PopoverManager')},template:'mail.PopoverManagerContainer',});return __exports;});;

/* /mail/static/src/components/popover_view/popover_view.js */
odoo.define('@mail/components/popover_view/popover_view',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{usePosition}=require('@web/core/position_hook');const{Component}=owl;const PopoverView=__exports.PopoverView=class PopoverView extends Component{setup(){super.setup();useComponentToModel({fieldName:'component'});usePosition(()=>this.popoverView.anchorRef&&this.popoverView.anchorRef.el,{popper:"root",margin:16,position:this.popoverView.position,});}
get popoverView(){return this.props.record;}}
Object.assign(PopoverView,{props:{record:Object},template:'mail.PopoverView',});registerMessagingComponent(PopoverView);return __exports;});;

/* /mail/static/src/components/thread_icon/thread_icon.js */
odoo.define('@mail/components/thread_icon/thread_icon',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ThreadIcon=__exports.ThreadIcon=class ThreadIcon extends Component{get thread(){return this.props.thread;}}
Object.assign(ThreadIcon,{props:{thread:Object},template:'mail.ThreadIcon',});registerMessagingComponent(ThreadIcon);return __exports;});;

/* /mail/static/src/components/thread_needaction_preview/thread_needaction_preview.js */
odoo.define('@mail/components/thread_needaction_preview/thread_needaction_preview',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ThreadNeedactionPreview=__exports.ThreadNeedactionPreview=class ThreadNeedactionPreview extends Component{setup(){super.setup();useRefToModel({fieldName:'markAsReadRef',refName:'markAsRead'});}
image(){if(this.threadNeedactionPreviewView.thread.moduleIcon){return this.threadNeedactionPreviewView.thread.moduleIcon;}
if(!this.threadNeedactionPreviewView.thread.channel){return'/mail/static/src/img/smiley/avatar.jpg';}
if(this.threadNeedactionPreviewView.thread.channel.correspondent){return this.threadNeedactionPreviewView.thread.channel.correspondent.avatarUrl;}
return`/web/image/mail.channel/${this.threadNeedactionPreviewView.thread.id}/avatar_128?unique=${this.threadNeedactionPreviewView.thread.channel.avatarCacheKey}`;}
get threadNeedactionPreviewView(){return this.props.record;}}
Object.assign(ThreadNeedactionPreview,{props:{record:Object},template:'mail.ThreadNeedactionPreview',});registerMessagingComponent(ThreadNeedactionPreview);return __exports;});;

/* /mail/static/src/components/thread_textual_typing_status/thread_textual_typing_status.js */
odoo.define('@mail/components/thread_textual_typing_status/thread_textual_typing_status',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ThreadTextualTypingStatus=__exports.ThreadTextualTypingStatus=class ThreadTextualTypingStatus extends Component{get thread(){return this.props.thread;}}
Object.assign(ThreadTextualTypingStatus,{props:{thread:Object},template:'mail.ThreadTextualTypingStatus',});registerMessagingComponent(ThreadTextualTypingStatus);return __exports;});;

/* /mail/static/src/components/thread_typing_icon/thread_typing_icon.js */
odoo.define('@mail/components/thread_typing_icon/thread_typing_icon',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ThreadTypingIcon=__exports.ThreadTypingIcon=class ThreadTypingIcon extends Component{}
Object.assign(ThreadTypingIcon,{defaultProps:{animation:'none',size:'small',},props:{animation:{type:String,validate:prop=>['bounce','none','pulse'].includes(prop),optional:true,},size:{type:String,validate:prop=>['small','medium'].includes(prop),optional:true,},title:{type:String,optional:true,}},template:'mail.ThreadTypingIcon',});registerMessagingComponent(ThreadTypingIcon);return __exports;});;

/* /mail/static/src/components/thread_view/thread_view.js */
odoo.define('@mail/components/thread_view/thread_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ThreadView=__exports.ThreadView=class ThreadView extends Component{get threadView(){return this.props.record;}}
Object.assign(ThreadView,{props:{record:Object},template:'mail.ThreadView',});registerMessagingComponent(ThreadView);return __exports;});;

/* /mail/static/src/components/thread_view_topbar/thread_view_topbar.js */
odoo.define('@mail/components/thread_view_topbar/thread_view_topbar',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const ThreadViewTopbar=__exports.ThreadViewTopbar=class ThreadViewTopbar extends Component{setup(){super.setup();useRefToModel({fieldName:'guestNameInputRef',refName:'guestNameInput'});useRefToModel({fieldName:'inviteButtonRef',refName:'inviteButton'});useRefToModel({fieldName:'threadNameInputRef',refName:'threadNameInput'});useRefToModel({fieldName:'threadDescriptionInputRef',refName:'threadDescriptionInput'});useUpdateToModel({methodName:'onComponentUpdate'});}
get threadViewTopbar(){return this.props.record;}}
Object.assign(ThreadViewTopbar,{props:{record:Object},template:'mail.ThreadViewTopbar',});registerMessagingComponent(ThreadViewTopbar);return __exports;});;

/* /mail/static/src/components/tracking_value/tracking_value.js */
odoo.define('@mail/components/tracking_value/tracking_value',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const TrackingValue=__exports.TrackingValue=class TrackingValue extends Component{get trackingValue(){return this.props.value;}}
Object.assign(TrackingValue,{props:{value:Object},template:'mail.TrackingValue',});registerMessagingComponent(TrackingValue);return __exports;});;

/* /mail/static/src/components/web_client_view_attachment_view/web_client_view_attachment_view.js */
odoo.define('@mail/components/web_client_view_attachment_view/web_client_view_attachment_view',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{LegacyComponent}=require('@web/legacy/legacy_component');const WebClientViewAttachmentView=__exports.WebClientViewAttachmentView=class WebClientViewAttachmentView extends LegacyComponent{setup(){useComponentToModel({fieldName:'component'});useRefToModel({fieldName:'iframeViewerPdfRef',refName:'iframeViewerPdf'});useUpdateToModel({methodName:'onComponentUpdate'});}
get webClientViewAttachmentView(){return this.props.record;}}
Object.assign(WebClientViewAttachmentView,{props:{record:Object},template:'mail.WebClientViewAttachmentView',});registerMessagingComponent(WebClientViewAttachmentView);return __exports;});;

/* /mail/static/src/components/web_client_view_attachment_view_container/web_client_view_attachment_view_container.js */
odoo.define('@mail/components/web_client_view_attachment_view_container/web_client_view_attachment_view_container',async function(require){'use strict';let __exports={};const{useModels}=require('@mail/component_hooks/use_models');require('@mail/components/web_client_view_attachment_view/web_client_view_attachment_view');const{getMessagingComponent}=require('@mail/utils/messaging_component');const{Component,onWillDestroy,onWillUpdateProps}=owl;const getNextId=(function(){let tmpId=0;return()=>{tmpId+=1;return tmpId;};})();const WebClientViewAttachmentViewContainer=__exports.WebClientViewAttachmentViewContainer=class WebClientViewAttachmentViewContainer extends Component{setup(){useModels();super.setup();this.webClientViewAttachmentView=undefined;this.webClientViewAttachmentViewId=getNextId();this._insertFromProps(this.props);onWillUpdateProps(nextProps=>this._insertFromProps(nextProps));onWillDestroy(()=>this._deleteRecord());}
_deleteRecord(){if(this.webClientViewAttachmentView){if(this.webClientViewAttachmentView.exists()){this.webClientViewAttachmentView.delete();}
this.webClientViewAttachmentView=undefined;}}
async _insertFromProps(props){const messaging=await this.env.services.messaging.get();if(owl.status(this)==="destroyed"){this._deleteRecord();return;}
if(!props.threadId){this._deleteRecord();return;}
const thread=messaging.models['Thread'].insert({id:props.threadId,model:props.threadModel,});this.webClientViewAttachmentView=messaging.models['WebClientViewAttachmentView'].insert({id:this.webClientViewAttachmentViewId,thread,});this.render();}}
Object.assign(WebClientViewAttachmentViewContainer,{components:{WebClientViewAttachmentView:getMessagingComponent('WebClientViewAttachmentView')},props:{threadId:{type:Number,optional:true,},threadModel:String,},template:'mail.WebClientViewAttachmentViewContainer',});return __exports;});;

/* /mail/static/src/components/welcome_view/welcome_view.js */
odoo.define('@mail/components/welcome_view/welcome_view',async function(require){'use strict';let __exports={};const{useRefToModel}=require('@mail/component_hooks/use_ref_to_model');const{useUpdateToModel}=require('@mail/component_hooks/use_update_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const WelcomeView=__exports.WelcomeView=class WelcomeView extends Component{setup(){super.setup();useRefToModel({fieldName:'guestNameInputRef',modelName:'WelcomeView',refName:'guestNameInput'});useUpdateToModel({methodName:'onComponentUpdate',modelName:'WelcomeView'});}
get welcomeView(){return this.props.record;}}
Object.assign(WelcomeView,{props:{record:Object},template:'mail.WelcomeView',});registerMessagingComponent(WelcomeView);return __exports;});;

/* /mail/static/src/js/emojis.js */
odoo.define('@mail/js/emojis',async function(require){'use strict';let __exports={};const data={":)":"😊",":-)":"😊","=)":"😊",":]":"😊",":D":"😃",":-D":"😃","=D":"😃","xD":"😆","XD":"😆","x'D":"😂",";)":"😉",";-)":"😉","B)":"😎","8)":"😎","B-)":"😎","8-)":"😎",";p":"😜",";P":"😜",":p":"😋",":P":"😋",":-p":"😋",":-P":"😋","=P":"😋","xp":"😝","xP":"😝","o_o":"😳",":|":"😐",":-|":"😐",":/":"😕",":-/":"😕",":(":"😞",":@":"😱",":O":"😲",":-O":"😲",":o":"😲",":-o":"😲",":'o":"😨","3:(":"😠",">:(":"😠","3:)":"😈",">:)":"😈",":*":"😘",":-*":"😘","o:)":"😇",":'(":"😢",":'-(":"😭",":\"(":"😭","<3":"❤️","&lt;3":"❤️",":heart":"❤️","</3":"💔","&lt;/3":"💔",":heart_eyes":"😍",":turban":"👳",":+1":"👍",":-1":"👎",":ok":"👌",":poop":"💩",":no_see":"🙈",":no_hear":"🙉",":no_speak":"🙊",":bug":"🐞",":kitten":"😺",":bear":"🐻",":snail":"🐌",":boar":"🐗",":clover":"🍀",":sunflower":"🌹",":fire":"🔥",":sun":"☀️",":partly_sunny:":"⛅️",":rainbow":"🌈",":cloud":"☁️",":zap":"⚡️",":star":"⭐️",":cookie":"🍪",":pizza":"🍕",":hamburger":"🍔",":fries":"🍟",":cake":"🎂",":cake_part":"🍰",":coffee":"☕️",":banana":"🍌",":sushi":"🍣",":rice_ball":"🍙",":beer":"🍺",":wine":"🍷",":cocktail":"🍸",":tropical":"🍹",":beers":"🍻",":ghost":"👻",":skull":"💀",":et":"👽",":alien":"👽",":party":"🎉",":trophy":"🏆",":key":"🔑",":pin":"📌",":postal_horn":"📯",":music":"🎵",":trumpet":"🎺",":guitar":"🎸",":run":"🏃",":bike":"🚲",":soccer":"⚽️",":football":"🏈",":8ball":"🎱",":clapper":"🎬",":microphone":"🎤",":cheese":"🧀",};var emojiDict={};_.each(data,function(unicode,source){if(!emojiDict[unicode]){emojiDict[unicode]={sources:[source],unicode:unicode,description:source,};}else{emojiDict[unicode].sources.push(source);}});const emojis=__exports.emojis=_.values(emojiDict);__exports[Symbol.for("default")]=emojis;return __exports;});;

/* /mail/static/src/js/utils.js */
odoo.define('@mail/js/utils',async function(require){'use strict';let __exports={};const core=require('web.core');const{escape}=require('@web/core/utils/strings');var _t=core._t;function parseAndTransform(htmlString,transformFunction){var openToken="OPEN"+Date.now();var string=htmlString.replace(/&lt;/g,openToken);var children;try{children=$('<div>').html(string).contents();}catch(_e){children=$('<div>').html('<pre>'+string+'</pre>').contents();}
return _parseAndTransform(children,transformFunction).replace(new RegExp(openToken,"g"),"&lt;");}
function _parseAndTransform(nodes,transformFunction){return _.map(nodes,function(node){return transformFunction(node,function(){return _parseAndTransform(node.childNodes,transformFunction);});}).join("");}
var _escapeEntities=(function(){var map={"&":"&amp;","<":"&lt;",">":"&gt;"};var escaper=function(match){return map[match];};var testRegexp=RegExp('(?:&|<|>)');var replaceRegexp=RegExp('(?:&|<|>)','g');return function(string){string=string==null?'':''+string;return testRegexp.test(string)?string.replace(replaceRegexp,escaper):string;};})();var urlRegexp=/\b(?:https?:\/\/\d{1,3}(?:\.\d{1,3}){3}|(?:https?:\/\/|(?:www\.))[-a-z0-9@:%_+~#=\u00C0-\u024F\u1E00-\u1EFF]{2,256}\.[a-z]{2,13})\b(?:[-a-z0-9@:%_+~#?&[\]^|{}`\\'$//=\u00C0-\u024F\u1E00-\u1EFF]|,(?!$| )|\.(?!$| |\.)|;(?!$| ))*/gi;function linkify(text,attrs){attrs=attrs||{};if(attrs.target===undefined){attrs.target='_blank';}
if(attrs.target==='_blank'){attrs.rel='noreferrer noopener';}
attrs=_.map(attrs,function(value,key){return key+'="'+_.escape(value)+'"';}).join(' ');var curIndex=0;var result="";var match;while((match=urlRegexp.exec(text))!==null){result+=_escapeEntities(text.slice(curIndex,match.index));var url=match[0];var href=(!/^https?:\/\//i.test(url))?"http://"+_.escape(url):_.escape(url);result+='<a '+attrs+' href="'+href+'">'+_escapeEntities(url)+'</a>';curIndex=match.index+match[0].length;}
return result+_escapeEntities(text.slice(curIndex));}
function addLink(node,transformChildren){if(node.nodeType===3){const linkified=linkify(node.data);if(linkified!==node.data){const div=document.createElement('div');div.innerHTML=linkified;for(const childNode of[...div.childNodes]){node.parentNode.insertBefore(childNode,node);}
node.parentNode.removeChild(node);return linkified;}
return node.textContent;}
if(node.tagName==="A")return node.outerHTML;transformChildren();return node.outerHTML;}
function htmlToTextContentInline(htmlString){const fragment=document.createDocumentFragment();const div=document.createElement('div');fragment.appendChild(div);htmlString=htmlString.replace(/<br\s*\/?>/gi,' ');try{div.innerHTML=htmlString;}catch(_e){div.innerHTML=`<pre>${htmlString}</pre>`;}
return div.textContent.trim().replace(/[\n\r]/g,'').replace(/\s\s+/g,' ');}
function stripHTML(node,transformChildren){if(node.nodeType===3)return node.data;if(node.tagName==="BR")return"\n";return transformChildren();}
function inline(node,transform_children){if(node.nodeType===3)return node.data;if(node.nodeType===8)return"";if(node.tagName==="BR")return" ";if(node.tagName.match(/^(A|P|DIV|PRE|BLOCKQUOTE)$/))return transform_children();node.innerHTML=transform_children();return node.outerHTML;}
function parseEmail(text){if(text){var result=text.match(/(.*)<(.*@.*)>/);if(result){return[_.str.trim(result[1]),_.str.trim(result[2])];}
result=text.match(/(.*@.*)/);if(result){return[_.str.trim(result[1]),_.str.trim(result[1])];}
return[text,false];}}
function escapeAndCompactTextContent(content){let value=escape(content).trim();value=value.replace(/(\r|\n){2,}/g,'<br/><br/>');value=value.replace(/(\r|\n)/g,'<br/>');value=value.replace(/ /g,'&nbsp;').replace(/([^>])&nbsp;([^<])/g,'$1 $2');return value;}
function getTextToHTML(text){return text.replace(/((?:https?|ftp):\/\/[\S]+)/g,'<a href="$1">$1</a> ').replace(/[\n\r]/g,'<br/>');}
function timeFromNow(date){if(moment().diff(date,'seconds')<45){return _t("now");}
return date.fromNow();}
Object.assign(__exports,{addLink,escapeAndCompactTextContent,getTextToHTML,htmlToTextContentInline,inline,linkify,parseAndTransform,parseEmail,stripHTML,timeFromNow,});return __exports;});;

/* /mail/static/src/model/model_core.js */
odoo.define('@mail/model/model_core',async function(require){'use strict';let __exports={};const{makeDeferred}=require('@mail/utils/deferred');const registry=__exports.registry=new Map();const IS_RECORD=__exports.IS_RECORD=Symbol("Record");const patches=[];function addContextToErrors(func,contextMessage){try{func();}catch(error){error.message=contextMessage+error.message;throw error;}}
function addFields(modelName,fields){if(!registry.has(modelName)){throw new Error(`Cannot add fields to model "${modelName}": model must be registered before fields can be added.`);}
const definition=registry.get(modelName);for(const[fieldName,field]of Object.entries(fields)){addContextToErrors(()=>{assertNameIsAvailableOnRecords(fieldName,definition);},`Cannot add field "${fieldName}" to model "${modelName}": `);definition.get('fields').set(fieldName,field);}}
function addLifecycleHooks(modelName,hooks){if(!registry.has(modelName)){throw new Error(`Cannot add lifecycle hooks to model "${modelName}": model must be registered before lifecycle hooks can be added.`);}
const definition=registry.get(modelName);for(const[name,handler]of Object.entries(hooks)){addContextToErrors(()=>{assertIsFunction(handler);assertIsValidHookName(name);assertSectionDoesNotHaveKey('lifecycleHooks',name,definition);},`Cannot add lifecycle hook "${name}" to model "${modelName}": `);definition.get('lifecycleHooks').set(name,handler);}}
function addModelGetters(modelName,modelGetters){if(!registry.has(modelName)){throw new Error(`Cannot add record getters to model "${modelName}": model must be registered before record getters can be added.`);}
const definition=registry.get(modelName);for(const[getterName,getter]of Object.entries(modelGetters)){addContextToErrors(()=>{assertIsFunction(getter);assertNameIsAvailableOnModel(getterName,definition);},`Cannot add model getter "${getterName}" to model "${modelName}": `);definition.get('modelGetters').set(getterName,getter);}}
function addModelMethods(modelName,modelMethods){if(!registry.has(modelName)){throw new Error(`Cannot add model methods to model "${modelName}": model must be registered before model methods can be added.`);}
const definition=registry.get(modelName);for(const[name,method]of Object.entries(modelMethods)){addContextToErrors(()=>{assertIsFunction(method);assertNameIsAvailableOnModel(name,definition);},`Cannot add model method "${name}" to model "${modelName}": `);definition.get('modelMethods').set(name,method);}}
function addOnChanges(modelName,onChanges){addContextToErrors(()=>{if(!registry.has(modelName)){throw new Error(`model must be registered before onChanges can be added.`);}
for(const onChange of onChanges){if(!Object.prototype.hasOwnProperty.call(onChange,'dependencies')){throw new Error("at least one onChange definition lacks dependencies (the list of fields to be watched for changes).");}
if(!Object.prototype.hasOwnProperty.call(onChange,'methodName')){throw new Error("at least one onChange definition lacks a methodName (the name of the method to be called on change).");}
if(!Array.isArray(onChange.dependencies)){throw new Error("onChange dependencies must be an array of strings.");}
if(typeof onChange.methodName!=='string'){throw new Error("onChange methodName must be a string.");}
const allowedKeys=['dependencies','methodName'];for(const key of Object.keys(onChange)){if(!allowedKeys.includes(key)){throw new Error(`unknown key "${key}" in onChange definition. Allowed keys: ${allowedKeys.join(", ")}.`);}}
const splittedDependencies=[];for(const dependency of onChange.dependencies){if(typeof dependency!=='string'){throw new Error("onChange dependencies must be an array of strings.");}
splittedDependencies.push(dependency.split('.'));}
onChange.dependencies=splittedDependencies;}},`Cannot add onChanges to model "${modelName}": `);registry.get(modelName).get('onChanges').push(...onChanges);}
function addRecordMethods(modelName,recordMethods){if(!registry.has(modelName)){throw new Error(`Cannot add record methods to model "${modelName}": model must be registered before record methods can be added.`);}
const definition=registry.get(modelName);for(const[name,method]of Object.entries(recordMethods)){addContextToErrors(()=>{assertIsFunction(method);assertNameIsAvailableOnRecords(name,definition);},`Cannot add record method "${name}" to model "${modelName}": `);definition.get('recordMethods').set(name,method);}}
function addRecordGetters(modelName,recordGetters){if(!registry.has(modelName)){throw new Error(`Cannot add record getters to model "${modelName}": model must be registered before record getters can be added.`);}
const definition=registry.get(modelName);for(const[getterName,getter]of Object.entries(recordGetters)){addContextToErrors(()=>{assertIsFunction(getter);assertNameIsAvailableOnRecords(getterName,definition);},`Cannot add record getter "${getterName}" to model "${modelName}": `);definition.get('recordGetters').set(getterName,getter);}}
function assertIsFunction(toAssert){if(typeof toAssert!=='function'){throw new Error(`"${toAssert}" must be a function`);}}
function assertIsValidHookName(name){const validHookNames=['_created','_willDelete'];if(!validHookNames.includes(name)){throw new Error(`unsupported hook name. Possible values: ${validHookNames.join(", ")}.`);}}
function assertSectionDoesNotHaveKey(sectionName,key,modelDefinition){if(modelDefinition.get(sectionName).has(key)){throw new Error(`"${key}" is already defined on "${sectionName}".`);}}
function assertNameIsAvailableOnModel(name,modelDefinition){if(['modelGetters','modelMethods'].some(x=>modelDefinition.get(x).has(name))){throw new Error(`there is already a key with this name on the model.`);}}
function assertNameIsAvailableOnRecords(name,modelDefinition){if(['fields','recordGetters','recordMethods'].some(x=>modelDefinition.get(x).has(name))){throw new Error(`there is already a key with this name on the records.`);}}
function patchFields(patch){const newFieldsToAdd=Object.create(null);for(const[fieldName,fieldData]of Object.entries(patch.fields)){const originalFieldDefinition=registry.get(patch.name).get('fields').get(fieldName);if(!originalFieldDefinition){newFieldsToAdd[fieldName]=fieldData;}else{for(const[attributeName,attributeData]of Object.entries(fieldData))
switch(attributeName){case'compute':if(!originalFieldDefinition.compute){throw new Error(`Cannot patch compute of field ${patch.name}/${fieldName}: the field is not a compute in the original definition.`);}
if(typeof attributeData!=='function'){throw new Error(`Cannot patch compute of field ${patch.name}/${fieldName}: the compute must be a function (found: "${typeof attributeData}").`);}
const computeBeforePatch=originalFieldDefinition.compute;originalFieldDefinition.compute=function(){this._super=computeBeforePatch;return attributeData.call(this);};break;case'sort':if(originalFieldDefinition.sort){if(typeof attributeData!=='function'){throw new Error(`Cannot patch sorting rules of field ${patch.name}/${fieldName}: the value of 'sort' must be a function to apply to the sorting rules array (found: "${typeof attributeData}").`);}
originalFieldDefinition.sort=attributeData.call({_super:originalFieldDefinition.sort});}else{if(!Array.isArray(attributeData)){throw new Error(`Cannot add sorting rules to field ${patch.name}/${fieldName}: sorting rules must be an array.`);}
originalFieldDefinition.sort=attributeData;}
break;default:throw new Error(`Cannot patch field ${patch.name}/${fieldName}: unsupported field attribute "${attributeName}".`);}}}
addFields(patch.name,newFieldsToAdd);}
function patchLifecycleHooks(patch){const originalLifecycleHooksDefinition=registry.get(patch.name).get('lifecycleHooks');const newLifecycleHooksToAdd=Object.create(null);for(const[hookName,hookHandler]of Object.entries(patch.lifecycleHooks)){if(!originalLifecycleHooksDefinition.has(hookName)){newLifecycleHooksToAdd[hookName]=hookHandler;}else{if(typeof hookHandler!=='function'){throw new Error(`Cannot patch hook "${hookName}" on model ${patch.name}: the hook handler must be a function (current type: "${typeof hookHandler}").`);}
const hookHandlerBeforePatch=originalLifecycleHooksDefinition.get(hookName);originalLifecycleHooksDefinition.set(hookName,function(){this._super=hookHandlerBeforePatch;return hookHandler.call(this);});}}
addLifecycleHooks(patch.name,newLifecycleHooksToAdd);}
function patchModelMethods(patch){const originalModelMethodsDefinition=registry.get(patch.name).get('modelMethods');const newModelMethodsToAdd=Object.create(null);for(const[methodName,method]of Object.entries(patch.modelMethods)){if(!originalModelMethodsDefinition.has(methodName)){newModelMethodsToAdd[methodName]=method;}else{if(typeof method!=='function'){throw new Error(`Cannot patch model method "${methodName}" on model ${patch.name}: the method must be a function (current type: "${typeof method}").`);}
const methodBeforePatch=originalModelMethodsDefinition.get(methodName);originalModelMethodsDefinition.set(methodName,function(...args){this._super=methodBeforePatch;return method.call(this,...args);});}}
addModelMethods(patch.name,newModelMethodsToAdd);}
function patchRecordMethods(patch){const originalRecordMethods=registry.get(patch.name).get('recordMethods');const newRecordMethodsToAdd=Object.create(null);for(const[methodName,method]of Object.entries(patch.recordMethods)){if(!originalRecordMethods.has(methodName)){newRecordMethodsToAdd[methodName]=method;}else{if(typeof method!=='function'){throw new Error(`Cannot patch record method "${methodName}" on model ${patch.name}: the method must be a function (current type: "${typeof method}").`);}
const methodBeforePatch=originalRecordMethods.get(methodName);originalRecordMethods.set(methodName,function(...args){this._super=methodBeforePatch;return method.call(this,...args);});}}
addRecordMethods(patch.name,newRecordMethodsToAdd);}
__exports.registerModel=registerModel;function registerModel({fields,identifyingMode='and',lifecycleHooks,modelGetters,modelMethods,name,onChanges,recordGetters,recordMethods}){if(!name){throw new Error("Model is lacking a name.");}
if(registry.has(name)){throw new Error(`Cannot register model "${name}": model has already been registered.`);}
const sectionNames=['name','identifyingMode','lifecycleHooks','modelMethods','modelGetters','recordMethods','recordGetters','fields','onChanges'];const invalidSectionNames=Object.keys(arguments[0]).filter(x=>!sectionNames.includes(x));if(invalidSectionNames.length>0){throw new Error(`Cannot register model "${name}": model definition contains unknown key(s): ${invalidSectionNames.join(", ")}`);}
registry.set(name,new Map([['name',name],['identifyingMode',identifyingMode],['lifecycleHooks',new Map()],['modelMethods',new Map()],['modelGetters',new Map()],['recordMethods',new Map()],['recordGetters',new Map()],['fields',new Map()],['onChanges',[]],]));if(lifecycleHooks){addLifecycleHooks(name,lifecycleHooks);}
if(modelMethods){addModelMethods(name,modelMethods);}
if(modelGetters){addModelGetters(name,modelGetters);}
if(recordMethods){addRecordMethods(name,recordMethods);}
if(recordGetters){addRecordGetters(name,recordGetters);}
if(fields){addFields(name,fields);}
if(onChanges){addOnChanges(name,onChanges);}}
__exports.registerPatch=registerPatch;function registerPatch({fields,lifecycleHooks,modelMethods,name,onChanges,recordMethods}){if(!name){throw new Error("Patch is lacking the name of the model to be patched.");}
const allowedSectionNames=['name','lifecycleHooks','modelMethods','recordMethods','fields','onChanges'];const invalidSectionNames=Object.keys(arguments['0']).filter(x=>!allowedSectionNames.includes(x));if(invalidSectionNames.length>0){throw new Error(`Error while registering patch for model "${name}": patch definition contains unsupported key(s): ${invalidSectionNames.join(", ")}`);}
patches.push({name,lifecycleHooks:lifecycleHooks||{},modelMethods:modelMethods||{},recordMethods:recordMethods||{},fields:fields||{},onChanges:onChanges||[],});}
const patchesAppliedPromise=__exports.patchesAppliedPromise=makeDeferred();(async function applyPatches(){if(document.readyState!=='complete'){await new Promise(resolve=>{window.addEventListener('load',resolve);});}
await new Promise(resolve=>setTimeout(resolve));for(const patch of patches){const definition=registry.get(patch.name);if(!definition){throw new Error(`Cannot patch model "${patch.name}": there is no model registered under this name.`);}
patchLifecycleHooks(patch);patchModelMethods(patch);patchRecordMethods(patch);patchFields(patch);addOnChanges(patch.name,patch.onChanges);}
patchesAppliedPromise.resolve();})();return __exports;});;

/* /mail/static/src/model/model_field.js */
odoo.define('@mail/model/model_field',async function(require){'use strict';let __exports={};const{clear,FieldCommand,link,unlink,unlinkAll}=require('@mail/model/model_field_command');const{IS_RECORD}=require('@mail/model/model_core');const ModelField=__exports.ModelField=class ModelField{constructor({compute,default:def,fieldName,fieldType,identifying=false,inverse,isCausal=false,model,readonly=false,related,relationType,required=false,sort,to,}={}){this.compute=compute;this.default=def;this.fieldName=fieldName;this.fieldType=fieldType;this.identifying=identifying;this.inverse=inverse;this.isCausal=isCausal;this.model=model;this.readonly=readonly;this.related=related;this.relationType=relationType;this.required=required;this.sort;this.sortedFieldSplittedPaths;this.sumContributions=[];this.to=to;if(this.identifying){this.readonly=true;if(this.model.identifyingMode==='and'){this.required=true;}}
if(this.related){this.readonly=true;}
if(this.compute){this.readonly=true;}
if(sort){this.sort=[];const relatedPathSet=new Set();for(const[compareRule,pathAsString]of sort){relatedPathSet.add(pathAsString);this.sort.push([compareRule,pathAsString.split('.')]);}
this.sortedFieldSplittedPaths=[...relatedPathSet].map(pathAsString=>pathAsString.split('.'));}}
static attr(options){return Object.assign({fieldType:'attribute'},options);}
static many(modelName,options){return ModelField._relation(modelName,Object.assign({},options,{relationType:'many'}));}
static one(modelName,options){return ModelField._relation(modelName,Object.assign({},options,{relationType:'one'}));}
clear(record,options){let hasChanged=false;if(this.fieldType==='relation'){if(this.parseAndExecuteCommands(record,unlinkAll(),options)){hasChanged=true;}
if(!this.default){return hasChanged;}}
if(this.parseAndExecuteCommands(record,this.default,options)){hasChanged=true;}
return hasChanged;}
computeRelated(record){const[relationName,relatedFieldName]=this.related.split('.');const relationField=this.model.__fieldMap.get(relationName);if(relationField.relationType==='many'){const newVal=[];for(const otherRecord of record[relationName]){const otherValue=otherRecord[relatedFieldName];if(otherValue){if(otherValue instanceof Array){for(const v of otherValue){newVal.push(v);}}else{newVal.push(otherValue);}}}
if(this.fieldType==='relation'){return newVal;}
return newVal;}
const otherRecord=record[relationName];if(otherRecord){const newVal=otherRecord[relatedFieldName];if(newVal===undefined){return clear();}
if(this.fieldType==='relation'){return newVal;}
return newVal;}
return clear();}
convertToFieldCommandList(newVal){if(newVal instanceof FieldCommand){return[newVal];}else if(newVal instanceof Array&&newVal[0]instanceof FieldCommand){return newVal;}else if(this.fieldType==='relation'){if(newVal instanceof Array&&newVal[0]instanceof Array&&['clear','insert','insert-and-replace','insert-and-unlink','link','replace','unlink','unlink-all'].includes(newVal[0][0])){return newVal.map(([name,value])=>new FieldCommand(name,value));}else if(newVal instanceof Array&&newVal[0]&&!newVal[0][IS_RECORD]){return[new FieldCommand('insert-and-replace',newVal)];}else if(newVal instanceof Array&&newVal[0]){return[new FieldCommand('replace',newVal)];}else if(!newVal[IS_RECORD]){return[new FieldCommand('insert-and-replace',newVal)];}else{return[new FieldCommand('replace',newVal)];}}else{return[new FieldCommand('set',newVal)];}}
decrement(record,amount){const currentValue=this.read(record);return this._setAttribute(record,currentValue-amount);}
get(record){if(this.fieldType==='attribute'){return this.read(record);}
if(this.fieldType==='relation'){if(this.relationType==='one'){return this.read(record);}
return[...this.read(record)];}
throw new Error(`cannot get field with unsupported type ${this.fieldType}.`);}
increment(record,amount){const currentValue=this.read(record);return this._setAttribute(record,currentValue+amount);}
parseAndExecuteCommands(record,newVal,options){const commandList=this.convertToFieldCommandList(newVal);let hasChanged=false;for(const command of commandList){const commandName=command.name;const newVal=command.value;if(this.fieldType==='attribute'){switch(commandName){case'clear':if(this.clear(record,options)){hasChanged=true;}
break;case'decrement':if(this.decrement(record,newVal)){hasChanged=true;}
break;case'increment':if(this.increment(record,newVal)){hasChanged=true;}
break;case'set':if(this._setAttribute(record,newVal)){hasChanged=true;}
break;default:throw new Error(`Field "${this}" (${this.fieldType} type) does not support command "${commandName}"`);}}else if(this.fieldType==='relation'){switch(commandName){case'clear':if(this.clear(record,options)){hasChanged=true;}
break;case'insert':if(this._setRelationInsert(record,newVal,options)){hasChanged=true;}
break;case'insert-and-replace':if(this._setRelationInsertAndReplace(record,newVal,options)){hasChanged=true;}
break;case'insert-and-unlink':if(this._setRelationInsertAndUnlink(record,newVal,options)){hasChanged=true;}
break;case'link':if(this._setRelationLink(record,newVal,options)){hasChanged=true;}
break;case'replace':if(this._setRelationReplace(record,newVal,options)){hasChanged=true;}
break;case'unlink':if(this._setRelationUnlink(record,newVal,options)){hasChanged=true;}
break;case'unlink-all':if(this._setRelationUnlink(record,this.get(record),options)){hasChanged=true;}
break;default:throw new Error(`Field "${this}" (${this.fieldType} type) does not support command "${commandName}"`);}}}
return hasChanged;}
read(record){return record.__values.get(this.fieldName);}
toString(){return`${this.model}/${this.fieldName}`;}
static _relation(modelName,options){return Object.assign({fieldType:'relation',to:modelName,},options);}
_convertX2ManyValue(newValue,{hasToVerify=true}={}){if(typeof newValue[Symbol.iterator]==='function'){if(hasToVerify){for(const value of newValue){this._verifyRelationalValue(value);}}
return newValue;}
if(hasToVerify){this._verifyRelationalValue(newValue);}
return[newValue];}
_insertOtherRecord(record,data,options){const otherModel=record.models[this.to];const otherField=otherModel.__fieldMap.get(this.inverse);const isMulti=typeof data[Symbol.iterator]==='function';const dataList=isMulti?data:[data];for(const recordData of dataList){if(otherField.relationType==='one'){recordData[this.inverse]=record;}else{recordData[this.inverse]=link(record);}}
const records=record.modelManager._insert(otherModel,dataList,options);return isMulti?records:records[0];}
_setAttribute(record,newVal){const currentValue=this.read(record);if(currentValue===newVal){return false;}
record.__values.set(this.fieldName,newVal);return true;}
_setRelationInsert(record,data,options){const newValue=this._insertOtherRecord(record,data,options);return this._setRelationLink(record,newValue,options);}
_setRelationInsertAndReplace(record,data,options){const newValue=this._insertOtherRecord(record,data,options);return this._setRelationReplace(record,newValue,options);}
_setRelationInsertAndUnlink(record,data,options){const newValue=this._insertOtherRecord(record,data,options);return this._setRelationUnlink(record,newValue,options);}
_setRelationLink(record,newValue,options){switch(this.relationType){case'many':return this._setRelationLinkX2Many(record,newValue,options);case'one':return this._setRelationLinkX2One(record,newValue,options);}}
_setRelationLinkX2Many(record,newValue,{hasToUpdateInverse=true}={}){const hasToVerify=record.modelManager.isDebug;const recordsToLink=this._convertX2ManyValue(newValue,{hasToVerify});const otherRecords=this.read(record);let hasChanged=false;for(const recordToLink of recordsToLink){if(otherRecords.has(recordToLink)){continue;}
hasChanged=true;otherRecords.add(recordToLink);if(hasToUpdateInverse){record.modelManager._update(recordToLink,{[this.inverse]:link(record)},{allowWriteReadonly:true,hasToUpdateInverse:false});}}
return hasChanged;}
_setRelationLinkX2One(record,recordToLink,{hasToUpdateInverse=true}={}){if(record.modelManager.isDebug){this._verifyRelationalValue(recordToLink);}
const prevOtherRecord=this.read(record);if(prevOtherRecord===recordToLink){return false;}
this._setRelationUnlinkX2One(record,{hasToUpdateInverse:true});record.__values.set(this.fieldName,recordToLink);if(hasToUpdateInverse){record.modelManager._update(recordToLink,{[this.inverse]:link(record)},{allowWriteReadonly:true,hasToUpdateInverse:false});}
return true;}
_setRelationReplace(record,newValue,options){if(this.relationType==='one'){return this._setRelationLinkX2One(record,newValue,options);}
let hasChanged=false;let hasToReorder=false;const otherRecordsSet=this.read(record);const otherRecordsList=[...otherRecordsSet];const hasToVerify=record.modelManager.isDebug;const recordsToReplaceList=[...this._convertX2ManyValue(newValue,{hasToVerify})];const recordsToReplaceSet=new Set(recordsToReplaceList);const recordsToLink=[];for(let i=0;i<recordsToReplaceList.length;i++){const recordToReplace=recordsToReplaceList[i];if(!otherRecordsSet.has(recordToReplace)){recordsToLink.push(recordToReplace);}
if(otherRecordsList[i]!==recordToReplace){hasToReorder=true;}}
if(this._setRelationLinkX2Many(record,recordsToLink,options)){hasChanged=true;}
const recordsToUnlink=[];for(let i=0;i<otherRecordsList.length;i++){const otherRecord=otherRecordsList[i];if(!recordsToReplaceSet.has(otherRecord)){recordsToUnlink.push(otherRecord);}
if(recordsToReplaceList[i]!==otherRecord){hasToReorder=true;}}
if(this._setRelationUnlinkX2Many(record,recordsToUnlink,options)){hasChanged=true;}
if(hasToReorder){otherRecordsSet.clear();for(const record of recordsToReplaceList){otherRecordsSet.add(record);}
hasChanged=true;}
return hasChanged;}
_setRelationUnlink(record,newValue,options){switch(this.relationType){case'many':return this._setRelationUnlinkX2Many(record,newValue,options);case'one':return this._setRelationUnlinkX2One(record,options);}}
_setRelationUnlinkX2Many(record,newValue,{hasToUpdateInverse=true}={}){const recordsToUnlink=this._convertX2ManyValue(newValue,{hasToVerify:false});const otherRecords=this.read(record);let hasChanged=false;for(const recordToUnlink of recordsToUnlink){const wasLinked=otherRecords.delete(recordToUnlink);if(!wasLinked){continue;}
hasChanged=true;if(hasToUpdateInverse){if(!recordToUnlink.exists()){continue;}
if(this.isCausal){record.modelManager._delete(recordToUnlink);}else{record.modelManager._update(recordToUnlink,{[this.inverse]:unlink(record)},{allowWriteReadonly:true,hasToUpdateInverse:false});}}}
return hasChanged;}
_setRelationUnlinkX2One(record,{hasToUpdateInverse=true}={}){const otherRecord=this.read(record);if(!otherRecord){return false;}
record.__values.set(this.fieldName,undefined);if(hasToUpdateInverse){if(!otherRecord.exists()){return;}
if(this.isCausal){record.modelManager._delete(otherRecord);}else{record.modelManager._update(otherRecord,{[this.inverse]:unlink(record)},{allowWriteReadonly:true,hasToUpdateInverse:false});}}
return true;}
_verifyRelationalValue(record){if(!record){throw Error(`record is undefined. Did you try to link() or insert() empty value? Considering clear() instead.`);}
if(!record[IS_RECORD]){throw Error(`${record} is not a record. Did you try to use link() instead of insert() with data?`);}
const otherModel=record.modelManager.models[this.to];if(otherModel.__records.has(record)){return;}
for(const subModel of Object.values(record.models)){if(!(subModel.prototype instanceof otherModel)){continue;}
if(subModel.__records.has(record)){return;}}
throw Error(`Record ${record} is not valid for relational field ${this.fieldName}.`);}}
const attr=__exports.attr=ModelField.attr;const many=__exports.many=ModelField.many;const one=__exports.one=ModelField.one;return __exports;});;

/* /mail/static/src/model/model_field_command.js */
odoo.define('@mail/model/model_field_command',async function(require){'use strict';let __exports={};class FieldCommand{constructor(name,value){this._name=name;this._value=value;}
get name(){return this._name;}
get value(){return this._value;}}
function clear(){return new FieldCommand('clear');}
function create(data){return new FieldCommand('create',data);}
function decrement(amount=1){return new FieldCommand('decrement',amount);}
function increment(amount=1){return new FieldCommand('increment',amount);}
function insert(data){return new FieldCommand('insert',data);}
__exports.insertAndUnlink=insertAndUnlink;function insertAndUnlink(data={}){return new FieldCommand('insert-and-unlink',data);}
function link(newValue){return new FieldCommand('link',newValue);}
function set(newValue){return new FieldCommand('set',newValue);}
function unlink(data){return new FieldCommand('unlink',data);}
function unlinkAll(){return new FieldCommand('unlink-all');}
Object.assign(__exports,{FieldCommand,clear,create,decrement,increment,insert,link,set,unlink,unlinkAll,});return __exports;});;

/* /mail/static/src/model/model_field_relation_set.js */
odoo.define('@mail/model/model_field_relation_set',async function(require){'use strict';let __exports={};const{decrement,increment}=require('@mail/model/model_field_command');const{Listener}=require('@mail/model/model_listener');const{followRelations}=require('@mail/model/model_utils');const{cleanSearchTerm}=require('@mail/utils/utils');const RelationSet=__exports.RelationSet=class RelationSet{constructor(record,field){this.record=record;this.field=field;this.set=new Set();if(this.field.sort){this.sortArray=new Array();this.sortListenerByValue=new Map();}
if(this.field.sumContributions.length>0){this.sumByValueByField=new Map();this.sumListenerByValueByField=new Map();for(const{to:sumFieldName}of this.field.sumContributions){this.sumByValueByField.set(sumFieldName,new Map());this.sumListenerByValueByField.set(sumFieldName,new Map());}}}
get size(){return this.set.size;}
add(value){if(this.set.has(value)){return;}
this.set.add(value);if(this.field.sort){const compareDefinition=this.field.sort;const compareFunction=(a,b)=>{for(const[compareMethod,relatedPath]of compareDefinition){const valA=followRelations(a,relatedPath);const valB=followRelations(b,relatedPath);switch(compareMethod){case'truthy-first':{if(valA===valB){break;}
if(!valA){return 1;}
if(!valB){return-1;}
break;}
case'falsy-first':{if(valA===valB){break;}
if(!valA){return-1;}
if(!valB){return 1;}
break;}
case'case-insensitive-asc':{if(typeof valA!=='string'||typeof valB!=='string'){break;}
const cleanedValA=cleanSearchTerm(valA);const cleanedValB=cleanSearchTerm(valB);if(cleanedValA===cleanedValB){break;}
return cleanedValA<cleanedValB?-1:1;}
case'smaller-first':if(typeof valA!=='number'||typeof valB!=='number'){break;}
if(valA===valB){break;}
return valA-valB;case'greater-first':if(typeof valA!=='number'||typeof valB!=='number'){break;}
if(valA===valB){break;}
return valB-valA;case'most-recent-first':if(!(valA instanceof Date)||!(valB instanceof Date)){break;}
if(valA===valB){break;}
return valB-valA;default:throw Error(`sort compare method "${compareMethod}" is not supported.`);}}
return 0;};const search=(from,to)=>{if(from===to){return to;}
const m=Math.floor((from+to)/2);const compare=compareFunction(this.sortArray[m],value);if(compare>0){return search(from,m);}
if(compare<0){return search(m+1,to);}
return m;};this.sortArray.splice(search(0,this.sortArray.length),0,value);const listener=new Listener({isPartOfUpdateCycle:true,name:`sort of ${value} in ${this.field} of ${this.record}`,onChange:info=>{this.record.modelManager.startListening(listener);for(const relatedPath of this.field.sortedFieldSplittedPaths){followRelations(value,relatedPath);}
this.record.modelManager.stopListening(listener);if(info.reason!=='initial call'){this.sortArray.sort(compareFunction);}
this.record.modelManager._markRecordFieldAsChanged(this.record,this.field);},});this.sortListenerByValue.set(value,listener);listener.onChange({reason:'initial call'});}
for(const{from:contributionFieldName,to:sumFieldName}of this.field.sumContributions){this.sumByValueByField.get(sumFieldName).set(value,0);const listener=new Listener({isPartOfUpdateCycle:true,name:`sum of field(${sumFieldName}) of ${this.record} from field(${contributionFieldName}) of ${value} through relation ${this.field}`,onChange:info=>{this.record.modelManager.startListening(listener);const contribution=value[contributionFieldName];this.record.modelManager.stopListening(listener);const previousContribution=this.sumByValueByField.get(sumFieldName).get(value);this.sumByValueByField.get(sumFieldName).set(value,contribution);this.record.modelManager._update(this.record,{[sumFieldName]:[decrement(previousContribution),increment(contribution),],},{allowWriteReadonly:true},);},});this.sumListenerByValueByField.get(sumFieldName).set(value,listener);listener.onChange({reason:'initial call'});}}
clear(){for(const record of this.set){this.delete(record);}}
delete(value){const wasPresent=this.set.delete(value);if(!wasPresent){return false;}
if(this.field.sort){const index=this.sortArray.indexOf(value);this.sortArray.splice(index,1);const listener=this.sortListenerByValue.get(value);this.sortListenerByValue.delete(listener);this.record.modelManager.removeListener(listener);}
for(const{to:sumFieldName}of this.field.sumContributions){const contribution=this.sumByValueByField.get(sumFieldName).get(value);this.sumByValueByField.get(sumFieldName).delete(value);this.record.modelManager._update(this.record,{[sumFieldName]:decrement(contribution)},{allowWriteReadonly:true});const listener=this.sumListenerByValueByField.get(sumFieldName).get(value);this.sumListenerByValueByField.get(sumFieldName).delete(value);this.record.modelManager.removeListener(listener);}
return true;}
has(value){return this.set.has(value);}
[Symbol.iterator](){if(this.field.sort){return this.sortArray[Symbol.iterator]();}
return this.set[Symbol.iterator]();}}
return __exports;});;

/* /mail/static/src/model/model_index_and.js */
odoo.define('@mail/model/model_index_and',async function(require){'use strict';let __exports={};const ModelIndexAnd=__exports.ModelIndexAnd=class ModelIndexAnd{constructor(model){this.model=model;this.recordsByValuesTree=new Map();this.valuesByRecords=new Map();this.singleton=undefined;}
addRecord(record,data){if(this.model.__identifyingFieldNames.size===0){this.singleton=record;return;}
const valuesOfRecord=[];let res=this.recordsByValuesTree;const{length,[length-1]:lastFieldName}=[...this.model.__identifyingFieldNames];for(const fieldName of this.model.__identifyingFieldNames){const fieldValue=data[fieldName];if(fieldValue===undefined){throw new Error(`Identifying field "${fieldName}" is lacking a value on ${this.model} with 'and' identifying mode`);}
valuesOfRecord.push(fieldValue);if(!res.has(fieldValue)){res.set(fieldValue,fieldName===lastFieldName?record:new Map());}
res=res.get(fieldValue);}
this.valuesByRecords.set(record,valuesOfRecord);}
findRecord(data){if(this.model.__identifyingFieldNames.size===0){return this.singleton;}
let res=this.recordsByValuesTree;for(const fieldName of this.model.__identifyingFieldNames){const fieldValue=data[fieldName];if(fieldValue===undefined){throw new Error(`Identifying field "${fieldName}" is lacking a value on ${this.model} with 'and' identifying mode`);}
res=res.get(fieldValue);if(!res){return;}}
return res;}
removeRecord(record){if(this.model.__identifyingFieldNames.size===0){this.singleton=undefined;return;}
const values=this.valuesByRecords.get(record);let res=this.recordsByValuesTree;for(let i=0;i<values.length;i++){const index=values[i];if(i===values.length-1){res.delete(index);break;}
res=res.get(index);}
this.valuesByRecords.delete(record);}}
return __exports;});;

/* /mail/static/src/model/model_index_xor.js */
odoo.define('@mail/model/model_index_xor',async function(require){'use strict';let __exports={};const ModelIndexXor=__exports.ModelIndexXor=class ModelIndexXor{constructor(model){this.model=model;this.recordsByValuesByFields=new Map();this.fieldNameAndValueByRecords=new Map();}
addRecord(record,data){const[fieldName,fieldValue]=[...this.model.__identifyingFieldNames].reduce(([fieldName,fieldValue],currentFieldName)=>{const currentFieldValue=data[currentFieldName];if(currentFieldValue===undefined){return[fieldName,fieldValue];}
if(fieldName){throw new Error(`Identifying field on ${this.model} with 'xor' identifying mode should have only one of the conditional values given in data. Currently have both "${fieldName}" and "${currentFieldName}".`);}
return[currentFieldName,currentFieldValue];},[undefined,undefined]);if(!this.recordsByValuesByFields.has(fieldName)){this.recordsByValuesByFields.set(fieldName,new Map());}
this.recordsByValuesByFields.get(fieldName).set(fieldValue,record);this.fieldNameAndValueByRecords.set(record,[fieldName,fieldValue]);}
findRecord(data){const[fieldName,fieldValue]=[...this.model.__identifyingFieldNames].reduce(([fieldName,fieldValue],currentFieldName)=>{const currentFieldValue=data[currentFieldName];if(currentFieldValue===undefined){return[fieldName,fieldValue];}
if(fieldName){throw new Error(`Identifying field on ${this.model} with 'xor' identifying mode should have only one of the conditional values given in data. Currently have both "${fieldName}" and "${currentFieldName}".`);}
return[currentFieldName,currentFieldValue];},[undefined,undefined]);if(!this.recordsByValuesByFields.has(fieldName)){this.recordsByValuesByFields.set(fieldName,new Map());}
return this.recordsByValuesByFields.get(fieldName).get(fieldValue);}
removeRecord(record){const[fieldName,fieldValue]=this.fieldNameAndValueByRecords.get(record);this.recordsByValuesByFields.get(fieldName).delete(fieldValue);this.fieldNameAndValueByRecords.delete(record);}}
return __exports;});;

/* /mail/static/src/model/model_listener.js */
odoo.define('@mail/model/model_listener',async function(require){'use strict';let __exports={};const Listener=__exports.Listener=class Listener{constructor({name,onChange,isLocking=true,isPartOfUpdateCycle=false}){this.isLocking=isLocking;this.isPartOfUpdateCycle=isPartOfUpdateCycle;this.name=name;this.onChange=onChange;this.lastObservedRecords=new Set();this.lastObservedFieldsByRecord=new Map();this.lastObservedAllByModel=new Set();}
toString(){return`listener(${this.name})`;}}
return __exports;});;

/* /mail/static/src/model/model_manager.js */
odoo.define('@mail/model/model_manager',async function(require){'use strict';let __exports={};const{IS_RECORD,patchesAppliedPromise,registry}=require('@mail/model/model_core');const{ModelField}=require('@mail/model/model_field');const{ModelIndexAnd}=require('@mail/model/model_index_and');const{ModelIndexXor}=require('@mail/model/model_index_xor');const{FieldCommand,unlinkAll}=require('@mail/model/model_field_command');const{RelationSet}=require('@mail/model/model_field_relation_set');const{Listener}=require('@mail/model/model_listener');const{followRelations}=require('@mail/model/model_utils');const{makeDeferred}=require('@mail/utils/deferred');const ModelManager=__exports.ModelManager=class ModelManager{constructor(env){this.env=env;this.messagingCreatedPromise=makeDeferred();this.messagingInitializedPromise=makeDeferred();this._createdRecordsComputes=new Set();this._createdRecordsCreated=new Set();this._createdRecordsOnChange=new Set();this._listeners=new Set();this._listenersObservingAllByModel=new Map();this._listenersToNotifyAfterUpdateCycle=new Map();this._listenersToNotifyInUpdateCycle=new Map();this.models={};this._updatedRecordsCheckRequired=new Set();this.isDebug=false;}
async start(values){await patchesAppliedPromise;this._generateModels();this.models['Messaging'].insert(values);this.messagingCreatedPromise.resolve();await this.messaging.start();this.messagingInitializedPromise.resolve();}
all(model,filterFunc){for(const listener of this._listeners){listener.lastObservedAllByModel.add(model);const entry=this._listenersObservingAllByModel.get(model);const info={listener,reason:this.isDebug&&`all() - ${model}`,};if(entry.has(listener)){entry.get(listener).push(info);}else{entry.set(listener,[info]);}}
const allRecords=[...model.__records];if(filterFunc){return allRecords.filter(filterFunc);}
return allRecords;}
delete(record){this._delete(record);this._flushUpdateCycle();}
destroy(){this.messaging.delete();for(const model of Object.values(this.models)){delete model.__fieldList;delete model.__fieldMap;delete model.__identifyingFieldNames;delete model.__records;delete model.__requiredFieldsList;delete model.fields;delete model.modelManager;}}
exists(model,record){return model.__records.has(record);}
findFromIdentifyingData(model,data={}){for(const fieldName of model.__identifyingFieldNames){const field=model.__fieldMap.get(fieldName);if(data[field.fieldName]===undefined&&field.default!==undefined){data[field.fieldName]=field.default;}}
this._preInsertIdentifyingFieldsFromData(model,data);const record=model.__recordsIndex.findRecord(data);if(!record){return;}
for(const listener of this._listeners){listener.lastObservedRecords.add(record);const entry=record.__listenersObservingRecord;const info={listener,reason:this.isDebug&&`findFromIdentifyingData record - ${record}`,};if(entry.has(listener)){entry.get(listener).push(info);}else{entry.set(listener,[info]);}}
return record;}
async getMessaging(){await this.messagingCreatedPromise;await this.messagingInitializedPromise;return this.messaging;}
insert(model,data){const isMulti=typeof data[Symbol.iterator]==='function';const records=this._insert(model,isMulti?data:[data]);this._flushUpdateCycle();return isMulti?records:records[0];}
get messaging(){if(!this.models['Messaging']){return undefined;}
return this.models['Messaging'].findFromIdentifyingData({});}
removeListener(listener){if(!listener){return;}
this._listeners.delete(listener);this._listenersToNotifyInUpdateCycle.delete(listener);this._listenersToNotifyAfterUpdateCycle.delete(listener);for(const record of listener.lastObservedRecords){if(!record.exists()){continue;}
record.__listenersObservingRecord.delete(listener);const listenersObservingFieldOfRecord=record.__listenersObservingFieldsOfRecord;for(const field of listener.lastObservedFieldsByRecord.get(record)||[]){listenersObservingFieldOfRecord.get(field).delete(listener);}}
for(const model of listener.lastObservedAllByModel){this._listenersObservingAllByModel.get(model).delete(listener);}
listener.lastObservedRecords.clear();listener.lastObservedFieldsByRecord.clear();listener.lastObservedAllByModel.clear();}
startListening(listener){this.removeListener(listener);this._listeners.add(listener);}
stopListening(listener){this._listeners.delete(listener);}
update(record,data){const res=this._update(record,data);this._flushUpdateCycle();return res;}
_addDefaultData(model,data={}){const data2={...data};for(const field of model.__fieldList){if(data2[field.fieldName]===undefined&&field.default!==undefined){data2[field.fieldName]=field.default;}}
return data2;}
_applyModelDefinition(model){const definition=registry.get(model.name);Object.assign(model,Object.fromEntries(definition.get('modelMethods')));Object.assign(model.prototype,Object.fromEntries(definition.get('recordMethods')));for(const[getterName,getter]of definition.get('modelGetters')){Object.defineProperty(model,getterName,{get:getter});}
for(const[getterName,getter]of definition.get('recordGetters')){Object.defineProperty(model.prototype,getterName,{get:getter});}
model.modelManager=this;model.fields={};model.identifyingMode=definition.get('identifyingMode');model.__records=new Set();model.__recordCount=0;model.__recordsIndex=(()=>{switch(model.identifyingMode){case'and':return new ModelIndexAnd(model);case'xor':return new ModelIndexXor(model);}})();this._listenersObservingAllByModel.set(model,new Map());this.models[model.name]=model;}
_checkDeclaredFieldsOnModels(){for(const model of Object.values(this.models)){for(const[fieldName,field]of registry.get(model.name).get('fields')){if(fieldName in model.prototype){throw new Error(`Field ${model}/${fieldName} has a forbidden name.`);}
if(!(['attribute','relation'].includes(field.fieldType))){throw new Error(`Field ${model}/${fieldName} has unsupported type "${field.fieldType}".`);}
if(field.fieldType==='attribute'){const invalidKeys=Object.keys(field).filter(key=>!['compute','default','fieldType','identifying','readonly','related','required','sum',].includes(key));if(invalidKeys.length>0){throw new Error(`Field ${model}/${fieldName} contains some invalid keys: "${invalidKeys.join(", ")}".`);}}
if(field.fieldType==='relation'){const invalidKeys=Object.keys(field).filter(key=>!['compute','default','fieldType','identifying','inverse','isCausal','readonly','related','relationType','required','sort','to',].includes(key));if(invalidKeys.length>0){throw new Error(`Field ${model}/${fieldName} contains some invalid keys: "${invalidKeys.join(", ")}".`);}
if(!this.models[field.to]){throw new Error(`Relational field ${model}/${fieldName} targets to unknown model name "${field.to}".`);}
if(field.required&&field.relationType!=='one'){throw new Error(`Relational field ${model}/${fieldName} has "required" true with a relation of type "${field.relationType}" but "required" is only supported for "one".`);}
if(field.sort&&field.relationType!=='many'){throw new Error(`Relational field "${model}/${fieldName}" has "sort" with a relation of type "${field.relationType}" but "sort" is only supported for "many".`);}}
if(field.identifying){if('readonly'in field){throw new Error(`Identifying field ${model}/${fieldName} has unnecessary "readonly" attribute (readonly is implicit for identifying fields).`);}
if('required'in field&&model.identifyingMode==='and'){throw new Error(`Identifying field ${model}/${fieldName} has unnecessary "required" attribute (required is implicit for AND identifying fields).`);}}
if(field.compute){if(typeof field.compute!=='function'){throw new Error(`Property "compute" of field ${model}/${fieldName} must be a string (instance method name) or a function (the actual compute).`);}
if('readonly'in field){throw new Error(`Computed field ${model}/${fieldName} has unnecessary "readonly" attribute (readonly is implicit for computed fields).`);}}
if(field.related){if(field.compute){throw new Error(`field ${model}/${fieldName} cannot be a related and compute field at the same time.`);}
if(!(typeof field.related==='string')){throw new Error(`Property "related" of field ${model}/${fieldName} has invalid format.`);}
const[relationName,relatedFieldName,other]=field.related.split('.');if(!relationName||!relatedFieldName||other){throw new Error(`Property "related" of field ${model}/${fieldName} has invalid format.`);}
let relatedRelation;let targetModel=model;while(this.models[targetModel.name]&&!relatedRelation){relatedRelation=registry.get(targetModel.name).get('fields').get(relationName);targetModel=targetModel.__proto__;}
if(!relatedRelation){throw new Error(`Related field ${model}/${fieldName} relates to unknown relation name "${relationName}".`);}
if(relatedRelation.fieldType!=='relation'){throw new Error(`Related field ${model}/${fieldName} relates to non-relational field "${relationName}".`);}
const relatedModel=this.models[relatedRelation.to];let relatedField;targetModel=relatedModel;while(this.models[targetModel.name]&&!relatedField){relatedField=registry.get(targetModel.name).get('fields').get(relatedFieldName);targetModel=targetModel.__proto__;}
if(!relatedField){throw new Error(`Related field ${model}/${fieldName} relates to unknown related model field "${relatedFieldName}".`);}
if(relatedField.fieldType!==field.fieldType){throw new Error(`Related field ${model}/${fieldName} has mismatched type with its related model field.`);}
if(relatedField.fieldType==='relation'&&relatedField.to!==field.to){throw new Error(`Related field ${model}/${fieldName} has mismatched target model name with its related model field.`);}
if('readonly'in field){throw new Error(`Related field ${model}/${fieldName} has unnecessary "readonly" attribute (readonly is implicit for related fields).`);}}}}}
_checkOnChangesOnModels(){for(const model of Object.values(this.models)){for(const{dependencies,methodName}of registry.get(model.name).get('onChanges')){for(const dependency of dependencies){let currentModel=model;let currentField;for(const fieldName of dependency){if(!currentModel){throw new Error(`OnChange '${methodName}' defines a dependency with path '${dependency.join('.')}', but this dependency does not resolve: ${currentField} is not a relational field, therefore there is no relation to follow.`);}
currentField=currentModel.__fieldMap.get(fieldName);if(!currentField){throw new Error(`OnChange '${methodName}' defines a dependency with path '${dependency.join('.')}', but this path does not resolve: ${currentModel}/${fieldName} does not exist.`);}
if(currentField.to){currentModel=this.models[currentField.to];}else{currentModel=undefined;}}}}}}
_checkProcessedFieldsOnModels(){for(const model of Object.values(this.models)){if(!['and','xor'].includes(model.identifyingMode)){throw new Error(`Unsupported identifying mode "${model.identifyingMode}" on ${model}. Must be one of 'and' or 'xor'.`);}
for(const field of model.__fieldList){const fieldName=field.fieldName;if(!(['attribute','relation'].includes(field.fieldType))){throw new Error(`${field} has unsupported type "${field.fieldType}".`);}
if(field.compute&&field.related){throw new Error(`${field} cannot be a related and compute field at the same time.`);}
if(field.fieldType==='attribute'){continue;}
if(!field.relationType){throw new Error(`${field} must define a relation type in "relationType".`);}
if(!(['many','one'].includes(field.relationType))){throw new Error(`${field} has invalid relation type "${field.relationType}".`);}
if(!field.inverse){throw new Error(`${field} must define an inverse relation name in "inverse".`);}
if(!field.to){throw new Error(`${field} must define a model name in "to" (1st positional parameter of relation field helpers).`);}
const relatedModel=this.models[field.to];if(!relatedModel){throw new Error(`${field} defines a relation to model ${field.to}, but there is no model registered with this name.`);}
const inverseField=relatedModel.__fieldMap.get(field.inverse);if(!inverseField){throw new Error(`${field} defines its inverse as field ${relatedModel}/${field.inverse}, but it does not exist.`);}
if(inverseField.inverse!==fieldName){throw new Error(`The name of ${field} does not match with the name defined in its inverse ${inverseField}.`);}
if(![model.name,'Record'].includes(inverseField.to)){throw new Error(`${field} has its inverse ${inverseField} referring to an invalid model (${inverseField.to}).`);}
if(field.sort){for(const path of field.sortedFieldSplittedPaths){let currentField=field;for(const fieldName of path){if(!currentField.to){throw new Error(`Field ${field} defines a sort with path '${path.join('.')}', but this path does not resolve: ${currentField} is not a relational field, therefore there is no relation to follow.`);}
if(!this.models[currentField.to].__fieldMap.has(fieldName)){throw new Error(`Field ${field} defines a sort with path '${path.join('.')}', but this path does not resolve: ${this.models[currentField.to]}/${fieldName} does not exist.`);}
currentField=this.models[currentField.to].__fieldMap.get(fieldName);}}}}
for(const identifyingField of model.__identifyingFieldNames){const field=model.__fieldMap.get(identifyingField);if(!field){throw new Error(`Identifying field "${model}/${identifyingField}" is not a field on ${model}.`);}
if(field.to){if(field.relationType!=='one'){throw new Error(`Identifying field "${model}/${identifyingField}" has a relation of type "${field.relationType}" but identifying field is only supported for "one".`);}
const relatedModel=this.models[field.to];const inverseField=relatedModel.__fieldMap.get(field.inverse);if(!inverseField.isCausal){throw new Error(`Identifying field "${model}/${identifyingField}" has an inverse "${inverseField}" not declared as "isCausal".`);}}}}}
_create(model){const localId=`${model.name}_${++model.__recordCount}`;const nonProxyRecord=new model();Object.assign(nonProxyRecord,{localId,__listeners:[],__listenersObservingRecord:new Map(),__listenersObservingFieldsOfRecord:new Map(),__values:new Map(),[IS_RECORD]:true,});const record=owl.markRaw(!this.isDebug?nonProxyRecord:new Proxy(nonProxyRecord,{get:function getFromProxy(record,prop){if((model.__fieldMap&&!model.__fieldMap.has(prop))&&!['_super','then','localId'].includes(prop)&&typeof prop!=='symbol'&&!(prop in record)){console.warn(`non-field read "${prop}" on ${record}`);}
return record[prop];},}));if(this.isDebug){record.__proxifiedRecord=record;}
for(const field of model.__fieldList){if(field.fieldType==='relation'){if(field.relationType==='many'){record.__values.set(field.fieldName,new RelationSet(record,field));}}}
model.__records.add(record);const recordMethods=registry.get(model.name).get('recordMethods');for(const methodName of recordMethods.keys()){record[methodName]=record[methodName].bind(record);}
this._createdRecordsComputes.add(record);this._createdRecordsCreated.add(record);this._createdRecordsOnChange.add(record);for(const[listener,infoList]of this._listenersObservingAllByModel.get(model)){this._markListenerToNotify(listener,{listener,reason:this.isDebug&&`_create: allByModel - ${record}`,infoList,});}
return record;}
_delete(record){if(this.isDebug){this._ensureNoLockingListener();}
const model=record.constructor;if(!record.exists()){throw Error(`Cannot delete already deleted record ${record}.`);}
const lifecycleHooks=registry.get(model.name).get('lifecycleHooks');if(lifecycleHooks.has('_willDelete')){lifecycleHooks.get('_willDelete').call(record);}
for(const listener of record.__listeners){this.removeListener(listener);}
for(const field of model.__fieldList){if(field.fieldType==='relation'){field.parseAndExecuteCommands(record,unlinkAll(),{allowWriteReadonly:true});if(!record.exists()){return;}}}
model.__recordsIndex.removeRecord(record);this._createdRecordsComputes.delete(record);this._createdRecordsCreated.delete(record);this._createdRecordsOnChange.delete(record);this._updatedRecordsCheckRequired.delete(record);for(const[listener,infoList]of record.__listenersObservingRecord){this._markListenerToNotify(listener,{listener,reason:this.isDebug&&`_delete: record - ${record}`,infoList,});}
for(const[listener,infoList]of this._listenersObservingAllByModel.get(model)){this._markListenerToNotify(listener,{listener,reason:this.isDebug&&`_delete: allByModel - ${record}`,infoList,});}
delete record.__values;delete record.__listeners;delete record.__listenersObservingRecord;delete record.__listenersObservingFieldsOfRecord;model.__records.delete(record);delete record.localId;}
_ensureNoLockingListener(){for(const listener of this._listeners){if(listener.isLocking){throw Error(`Model manager locked by ${listener}. It is not allowed to insert/update/delete from inside a lock.`);}}}
_executeCreatedRecordsComputes(){const hasChanged=this._createdRecordsComputes.size>0;for(const record of this._createdRecordsComputes){this._createdRecordsComputes.delete(record);if(!record.exists()){throw Error(`Cannot start compute/related for already deleted ${record}.`);}
const listeners=[];for(const field of record.constructor.__fieldList){if(field.compute){const listener=new Listener({isPartOfUpdateCycle:true,name:`compute ${field} of ${record}`,onChange:(info)=>{this.startListening(listener);const res=field.compute.call(record);this.stopListening(listener);this._update(record,{[field.fieldName]:res},{allowWriteReadonly:true});},});listeners.push(listener);}
if(field.related){const listener=new Listener({isPartOfUpdateCycle:true,name:`related ${field} of ${record}`,onChange:(info)=>{this.startListening(listener);const res=field.computeRelated(record);this.stopListening(listener);this._update(record,{[field.fieldName]:res},{allowWriteReadonly:true});},});listeners.push(listener);}}
record.__listeners.push(...listeners);for(const listener of listeners){listener.onChange({listener,reason:this.isDebug&&`first call on ${record}`,});}}
if(hasChanged){this._flushUpdateCycle();}}
_executeCreatedRecordsCreated(){for(const record of this._createdRecordsCreated){this._createdRecordsCreated.delete(record);if(!record.exists()){throw Error(`Cannot call _created for already deleted ${record}.`);}
const lifecycleHooks=registry.get(record.constructor.name).get('lifecycleHooks');if(lifecycleHooks.has('_created')){lifecycleHooks.get('_created').call(record);}}}
_executeCreatedRecordsOnChange(){for(const record of this._createdRecordsOnChange){this._createdRecordsOnChange.delete(record);if(!record.exists()){throw Error(`Cannot call onChange for already deleted ${record}.`);}
for(const onChange of registry.get(record.constructor.name).get('onChanges')){const listener=new Listener({name:`${onChange} of ${record}`,onChange:(info)=>{this.startListening(listener);for(const dependency of onChange.dependencies){followRelations(record,dependency);}
this.stopListening(listener);record[onChange.methodName]();},});record.__listeners.push(listener);listener.onChange({listener,reason:this.isDebug&&`first call on ${record}`,});if(!record.exists()){break;}}}}
_executeUpdatedRecordsCheckRequired(){for(const record of this._updatedRecordsCheckRequired){for(const required of record.constructor.__requiredFieldsList){if(record[required.fieldName]===undefined){throw Error(`required ${required} of ${record} is missing`);}}}
this._updatedRecordsCheckRequired.clear();}
_flushUpdateCycle(){this._executeCreatedRecordsComputes();this._notifyListenersInUpdateCycle();this._executeUpdatedRecordsCheckRequired();this._executeCreatedRecordsCreated();this._executeCreatedRecordsOnChange();this._notifyListenersAfterUpdateCycle();}
_generateModels(){const model={'Record':class{}}['Record'];this._applyModelDefinition(model);const allModelNamesButRecord=[...registry.keys()].filter(name=>name!=='Record');for(const modelName of allModelNamesButRecord){const model={[modelName]:class extends this.models['Record']{}}[modelName];this._applyModelDefinition(model);}
this._checkDeclaredFieldsOnModels();this._processDeclaredFieldsOnModels();this._checkProcessedFieldsOnModels();this._checkOnChangesOnModels();}
_insert(model,dataList,options={}){if(this.isDebug){this._ensureNoLockingListener();}
const records=[];for(const data of dataList){let record=this.findFromIdentifyingData(model,data);if(!record){const data2=this._addDefaultData(model,data);this._preInsertIdentifyingFieldsFromData(model,data2);record=this._create(model);model.__recordsIndex.addRecord(record,data2);this._update(record,data2,{...options,allowWriteReadonly:true});}else{this._update(record,data,options);}
records.push(record);}
return records;}
_makeInverseRelationField(model,field){const inverseField=new ModelField(Object.assign({},ModelField.many(model.name,{inverse:field.fieldName}),{fieldName:`_inverse_${model}/${field.fieldName}`,isCausal:field.identifying,model:this.models[field.to],},));return inverseField;}
_markListenerToNotify(listener,info){if(!(listener instanceof Listener)){throw new Error(`Listener is not a listener ${listener}`);}
if(listener.isPartOfUpdateCycle){const entry=this._listenersToNotifyInUpdateCycle.get(listener);if(entry){entry.push(info);}else{this._listenersToNotifyInUpdateCycle.set(listener,[info]);}}
if(!listener.isPartOfUpdateCycle){const entry=this._listenersToNotifyAfterUpdateCycle.get(listener);if(entry){entry.push(info);}else{this._listenersToNotifyAfterUpdateCycle.set(listener,[info]);}}}
_markRecordFieldAsChanged(record,field){for(const[listener,infoList]of record.__listenersObservingFieldsOfRecord.get(field)||[]){this._markListenerToNotify(listener,{listener,reason:this.isDebug&&`_update: ${field} of ${record}`,infoList,});}}
_notifyListenersAfterUpdateCycle(){for(const[listener,infoList]of this._listenersToNotifyAfterUpdateCycle){this._listenersToNotifyAfterUpdateCycle.delete(listener);listener.onChange(infoList);}}
_notifyListenersInUpdateCycle(){const hasChanged=this._listenersToNotifyInUpdateCycle.size>0;for(const[listener,infoList]of this._listenersToNotifyInUpdateCycle){this._listenersToNotifyInUpdateCycle.delete(listener);listener.onChange(infoList);}
if(hasChanged){this._flushUpdateCycle();}}
_preInsertIdentifyingFieldsFromData(model,data){for(const fieldName of model.__identifyingFieldNames){if(data[fieldName]===undefined){continue;}
const field=model.__fieldMap.get(fieldName);if(!field.to){continue;}
const commands=field.convertToFieldCommandList(data[fieldName]);if(commands.length!==1){throw new Error(`Identifying field "${model}/${fieldName}" should receive a single command.`);}
const[command]=commands;if(!(command instanceof FieldCommand)){throw new Error(`Identifying field "${model}/${fieldName}" should receive a command.`);}
if(!['insert-and-replace','replace'].includes(command._name)){throw new Error(`Identifying field "${model}/${fieldName}" should receive a "replace" or "insert-and-replace" command.`);}
if(command._name==='replace'){continue;}
if(!command._value){throw new Error(`Identifying field "${model}/${fieldName}" is lacking a relation value.`);}
if(typeof command._value[Symbol.iterator]==='function'){throw new Error(`Identifying field "${model}/${fieldName}" should receive a single data object.`);}
const[record]=this._insert(this.models[field.to],[command._value]);data[fieldName]=record;}}
_processDeclaredFieldsOnModels(){for(const model of Object.values(this.models)){const sumContributionsByFieldName=new Map();for(const[fieldName,fieldData]of registry.get(model.name).get('fields')){model.fields[fieldName]=new ModelField(Object.assign({},fieldData,{fieldName,model,}));if(fieldData.sum){const[relationFieldName,contributionFieldName]=fieldData.sum.split('.');if(!sumContributionsByFieldName.has(relationFieldName)){sumContributionsByFieldName.set(relationFieldName,[]);}
sumContributionsByFieldName.get(relationFieldName).push({from:contributionFieldName,to:fieldName,});}}
for(const[fieldName,sumContributions]of sumContributionsByFieldName){model.fields[fieldName].sumContributions=sumContributions;}}
for(const model of Object.values(this.models)){for(const field of Object.values(model.fields)){if(field.fieldType!=='relation'){continue;}
if(field.inverse){if(field.identifying){this.models[field.to].fields[field.inverse].isCausal=true;}
continue;}
const relatedModel=this.models[field.to];const inverseField=this._makeInverseRelationField(model,field);field.inverse=inverseField.fieldName;relatedModel.fields[inverseField.fieldName]=inverseField;}}
for(const model of Object.values(this.models)){model.__combinedFields={};for(const field of Object.values(model.fields)){model.__combinedFields[field.fieldName]=field;}
let TargetModel=model.__proto__;while(TargetModel&&TargetModel.fields){for(const targetField of Object.values(TargetModel.fields)){const field=model.__combinedFields[targetField.fieldName];if(!field){model.__combinedFields[targetField.fieldName]=targetField;}}
TargetModel=TargetModel.__proto__;}}
for(const model of Object.values(this.models)){model.__fieldMap=new Map(Object.entries(model.__combinedFields));model.__fieldList=[...model.__fieldMap.values()];model.__requiredFieldsList=model.__fieldList.filter(field=>field.required);model.__identifyingFieldNames=new Set();for(const[fieldName,field]of model.__fieldMap){if(field.identifying){model.__identifyingFieldNames.add(fieldName);}
Object.defineProperty(model.prototype,fieldName,{get:function getFieldValue(){const record=this.modelManager.isDebug?this.__proxifiedRecord:this;if(this.modelManager._listeners.size){let entryRecord=record.__listenersObservingRecord;const reason=record.modelManager.isDebug&&`getField - ${field} of ${record}`;let entryField=record.__listenersObservingFieldsOfRecord.get(field);if(!entryField){entryField=new Map();record.__listenersObservingFieldsOfRecord.set(field,entryField);}
for(const listener of record.modelManager._listeners){listener.lastObservedRecords.add(record);const info={listener,reason};if(entryRecord.has(listener)){entryRecord.get(listener).push(info);}else{entryRecord.set(listener,[info]);}
if(!listener.lastObservedFieldsByRecord.has(record)){listener.lastObservedFieldsByRecord.set(record,new Set());}
listener.lastObservedFieldsByRecord.get(record).add(field);if(entryField.has(listener)){entryField.get(listener).push(info);}else{entryField.set(listener,[info]);}}}
return field.get(record);},});}
delete model.__combinedFields;}}
_update(record,data,options={}){if(this.isDebug){this._ensureNoLockingListener();}
if(this.isDebug&&!record.exists()){throw Error(`Cannot update already deleted record ${record}.`);}
const{allowWriteReadonly=false}=options;const model=record.constructor;let hasChanged=false;for(const fieldName of Object.keys(data)){if(data[fieldName]===undefined){continue;}
const field=model.__fieldMap.get(fieldName);if(!field){console.warn(`Cannot create/update record with data unrelated to a field. (record: "${record}", non-field attempted update: "${fieldName}")`);continue;}
const newVal=data[fieldName];if(!field.parseAndExecuteCommands(record,newVal,options)){continue;}
if(field.readonly&&!allowWriteReadonly){console.warn(`read-only ${field} on ${record} was updated`);}
hasChanged=true;this._markRecordFieldAsChanged(record,field);}
if(hasChanged){this._updatedRecordsCheckRequired.add(record);}
return hasChanged;}}
return __exports;});;

/* /mail/static/src/model/model_utils.js */
odoo.define('@mail/model/model_utils',async function(require){'use strict';let __exports={};__exports.followRelations=followRelations;function followRelations(record,relatedPath){let target=record;for(const field of relatedPath){target=target[field];if(!target){break;}}
return target;}
return __exports;});;

/* /mail/static/src/core_models/device.js */
odoo.define('@mail/core_models/device',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{browser}=require("@web/core/browser/browser");const{isMobileOS}=require("@web/core/browser/feature_detection");const{SIZES}=require('@web/core/ui/ui_service');registerModel({name:'Device',lifecycleHooks:{_created(){this._refresh();this._onResize=_.debounce(()=>this._refresh(),100);},_willDelete(){browser.removeEventListener('resize',this._onResize);},},recordMethods:{start(){browser.addEventListener('resize',this._onResize);},_refresh(){this.update({globalWindowInnerHeight:this.messaging.browser.innerHeight,globalWindowInnerWidth:this.messaging.browser.innerWidth,isMobileDevice:isMobileOS(),isSmall:this.env.isSmall,sizeClass:this.env.services.ui.size,});},},fields:{globalWindowInnerHeight:attr(),globalWindowInnerWidth:attr(),hasCanvasFilterSupport:attr({default:typeof document.createElement('canvas').getContext('2d').filter!=='undefined',}),hasRtcSupport:attr({compute(){return Boolean(window.RTCPeerConnection&&window.MediaStream);},}),isMobileDevice:attr(),isSmall:attr(),sizeClass:attr(),sizeClasses:attr({default:SIZES,}),},});return __exports;});;

/* /mail/static/src/core_models/locale.js */
odoo.define('@mail/core_models/locale',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{localization}=require('@web/core/l10n/localization');registerModel({name:'Locale',fields:{language:attr({compute(){return this.env.services.user.lang;},}),textDirection:attr({compute(){return localization.direction;},}),},});return __exports;});;

/* /mail/static/src/core_models/messaging.js */
odoo.define('@mail/core_models/messaging',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{makeDeferred}=require('@mail/utils/deferred');const{browser}=require('@web/core/browser/browser');const{EventBus}=owl;registerModel({name:'Messaging',lifecycleHooks:{_created(){odoo.__DEBUG__.messaging=this;},_willDelete(){delete odoo.__DEBUG__.messaging;},},recordMethods:{async rpc(params,options={}){if(params.route){const{route,params:rpcParameters}=params;const{shadow:silent,...rpcSettings}=options;return this.env.services.rpc(route,rpcParameters,{silent,...rpcSettings});}else{const{args=[],method,model,kwargs={}}=params;const{domain,fields,groupBy,...remainingKwargs}=kwargs;const ormService='shadow'in options?this.env.services.orm.silent:this.env.services.orm;switch(method){case'create':{const{vals_list,...createKwargs}=kwargs;return ormService.create(model,args[0]||vals_list,createKwargs);}
case'read':return ormService.read(model,args[0],args[1]||fields,remainingKwargs);case'read_group':return ormService.readGroup(model,args[0]||domain,args[1]||fields,args[2]||groupBy,remainingKwargs);case'search':return ormService.search(model,args[0]||domain,remainingKwargs);case'search_read':return ormService.searchRead(model,args[0]||domain,args[1]||fields,remainingKwargs);case'unlink':return ormService.unlink(model,args[0],kwargs);case'write':{const{vals,...writeKwargs}=kwargs;return ormService.write(model,args[0],args[1]||vals,writeKwargs);}
default:return ormService.call(model,method,args,kwargs);}}},async start(){this.update({isInitialized:true});this.initializedPromise.resolve();},},fields:{allRecords:many('Record',{inverse:'messaging',isCausal:true,}),browser:attr({compute(){return browser;},}),device:one('Device',{default:{},isCausal:true,readonly:true,}),initializedPromise:attr({compute(){return makeDeferred();},required:true,}),isInitialized:attr({default:false,}),locale:one('Locale',{default:{},isCausal:true,readonly:true,}),messagingBus:attr({compute(){if(this.messagingBus){return;}
return new EventBus();},required:true,}),},});return __exports;});;

/* /mail/static/src/core_models/record.js */
odoo.define('@mail/core_models/record',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'Record',lifecycleHooks:{_created(){},_willDelete(){},},modelMethods:{all(filterFunc){return this.modelManager.all(this,filterFunc);},findFromIdentifyingData(data){return this.modelManager.findFromIdentifyingData(this,data);},insert(data={}){return this.modelManager.insert(this,data);},toString(){return this.name;},},modelGetters:{env(){return this.modelManager.env;},messaging(){return this.modelManager&&this.modelManager.messaging;},models(){return this.modelManager.models;},},recordMethods:{delete(){this.modelManager.delete(this);},exists(){if(!this.modelManager){return false;}
return this.modelManager.exists(this.constructor,this);},toString(){return`record(${this.localId})`;},update(data={}){this.modelManager.update(this,data);},},recordGetters:{env(){return this.modelManager.env;},modelManager(){return this.constructor.modelManager;},models(){return this.modelManager.models;},},fields:{messaging:one('Messaging',{default:{},inverse:'allRecords',readonly:true,required:true,}),},});return __exports;});;

/* /mail/static/src/core_models/timer.js */
odoo.define('@mail/core_models/timer',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'Timer',identifyingMode:'xor',lifecycleHooks:{_created(){this.update({timeoutId:this.messaging.browser.setTimeout(this._onTimeout,this.duration)});},_willDelete(){this.messaging.browser.clearTimeout(this.timeoutId);},},recordMethods:{_onTimeout(){this.update({timeoutId:clear()});this.onTimeout();},onTimeout(){},_onChangeDoReset(){if(!this.doReset){return;}
this.messaging.browser.clearTimeout(this.timeoutId);this.update({doReset:clear(),timeoutId:this.messaging.browser.setTimeout(this._onTimeout,this.duration),});},},fields:{doReset:attr({default:false,}),duration:attr({compute(){return clear();},required:true,}),timeoutId:attr(),},onChanges:[{dependencies:["doReset"],methodName:'_onChangeDoReset',},],});return __exports;});;

/* /mail/static/src/models/activity.js */
odoo.define('@mail/models/activity',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,insert}=require('@mail/model/model_field_command');const{markup}=owl;registerModel({name:'Activity',modelMethods:{convertData(data){const data2={};if('activity_category'in data){data2.category=data.activity_category;}
if('can_write'in data){data2.canWrite=data.can_write;}
if('create_date'in data){data2.dateCreate=data.create_date;}
if('date_deadline'in data){data2.dateDeadline=data.date_deadline;}
if('chaining_type'in data){data2.chaining_type=data.chaining_type;}
if('icon'in data){data2.icon=data.icon;}
if('id'in data){data2.id=data.id;}
if('note'in data){data2.rawNote=data.note;}
if('state'in data){data2.state=data.state;}
if('summary'in data){data2.summary=data.summary;}
if('activity_type_id'in data){if(!data.activity_type_id){data2.type=clear();}else{data2.type=insert({displayName:data.activity_type_id[1],id:data.activity_type_id[0],});}}
if('create_uid'in data){if(!data.create_uid){data2.creator=clear();}else{data2.creator=insert({id:data.create_uid[0],display_name:data.create_uid[1],});}}
if('mail_template_ids'in data){data2.mailTemplates=insert(data.mail_template_ids);}
if(data.res_id&&data.res_model){data2.thread=insert({id:data.res_id,model:data.res_model,});}
if('user_id'in data){if(!data.user_id){data2.assignee=clear();}else{data2.assignee=insert({id:data.user_id[0],display_name:data.user_id[1],});}}
if('request_partner_id'in data){if(!data.request_partner_id){data2.requestingPartner=clear();}else{data2.requestingPartner=insert({id:data.request_partner_id[0],display_name:data.request_partner_id[1],});}}
return data2;},},recordMethods:{async deleteServerRecord(){await this.messaging.rpc({model:'mail.activity',method:'unlink',args:[[this.id]],});if(!this.exists()){return;}
this.delete();},async edit(){await this.messaging.openActivityForm({activity:this});if(this.exists()){this.fetchAndUpdate();}},async fetchAndUpdate(){const[data]=await this.messaging.rpc({model:'mail.activity',method:'activity_format',args:[this.id],},{shadow:true}).catch(e=>{const errorName=e.message&&e.message.data&&e.message.data.name;if([errorName,e.exceptionName].includes('odoo.exceptions.MissingError')){return[];}else{throw e;}});let shouldDelete=false;if(data){this.update(this.constructor.convertData(data));}else{shouldDelete=true;}
this.thread.fetchData(['activities','attachments','messages']);if(shouldDelete){this.delete();}},async markAsDone({attachments=[],feedback=false}){const attachmentIds=attachments.map(attachment=>attachment.id);const thread=this.thread;await this.messaging.rpc({model:'mail.activity',method:'action_feedback',args:[[this.id]],kwargs:{attachment_ids:attachmentIds,feedback,},});if(thread.exists()){thread.fetchData(['attachments','messages']);}
if(!this.exists()){return;}
this.delete();},async markAsDoneAndScheduleNext({feedback}){const thread=this.thread;const action=await this.messaging.rpc({model:'mail.activity',method:'action_feedback_schedule_next',args:[[this.id]],kwargs:{feedback},});if(thread.exists()){thread.fetchData(['activities','attachments','messages']);}
if(this.exists()){this.delete();}
if(!action){return;}
await new Promise(resolve=>{this.env.services.action.doAction(action,{onClose:resolve,},);});if(!thread.exists()){return;}
thread.fetchData(['activities']);},},fields:{activityViews:many('ActivityView',{inverse:'activity',}),assignee:one('User',{inverse:'activitiesAsAssignee',}),attachments:many('Attachment',{inverse:'activities',}),canWrite:attr({default:false,}),category:attr(),creator:one('User'),dateCreate:attr(),dateDeadline:attr(),feedbackBackup:attr(),chaining_type:attr({default:'suggest',}),icon:attr(),id:attr({identifying:true,}),isCurrentPartnerAssignee:attr({compute(){if(!this.assignee||!this.assignee.partner||!this.messaging.currentPartner){return false;}
return this.assignee.partner===this.messaging.currentPartner;},default:false,}),mailTemplates:many('MailTemplate',{inverse:'activities',}),note:attr({compute(){if(this.rawNote==='<p><br></p>'){return clear();}
return this.rawNote;},}),noteAsMarkup:attr({compute(){return markup(this.note);},}),rawNote:attr(),requestingPartner:one('Partner'),state:attr(),summary:attr(),thread:one('Thread',{inverse:'activities',}),type:one('ActivityType',{inverse:'activities',}),},});return __exports;});;

/* /mail/static/src/models/activity_box_view.js */
odoo.define('@mail/models/activity_box_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');registerModel({name:'ActivityBoxView',recordMethods:{onClickActivityBoxTitle(ev){ev.preventDefault();this.update({isActivityListVisible:!this.isActivityListVisible});},},fields:{activityViews:many('ActivityView',{compute(){return this.chatter.thread.activities.map(activity=>{return{activity};});},inverse:'activityBoxView',}),chatter:one('Chatter',{identifying:true,inverse:'activityBoxView',}),isActivityListVisible:attr({default:true,}),},});return __exports;});;

/* /mail/static/src/models/activity_button_view.js */
odoo.define('@mail/models/activity_button_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ActivityButtonView',identifyingMode:'xor',recordMethods:{onClick(ev){if(!this.exists()){return;}
if(this.listFieldActivityViewOwner){ev.stopPropagation();}
this.update({activityListPopoverView:this.activityListPopoverView?clear():{}});},},fields:{activityListPopoverView:one('PopoverView',{inverse:'activityButtonViewOwnerAsActivityList',}),buttonClass:attr({compute(){if(!this.thread){return clear();}
const classes=[];switch(this.webRecord.data.activity_state){case'overdue':classes.push('text-danger');break;case'today':classes.push('text-warning');break;case'planned':classes.push('text-success');break;default:classes.push('text-muted');break;}
switch(this.webRecord.data.activity_exception_decoration){case'warning':classes.push('text-warning');classes.push(this.webRecord.data.activity_exception_icon);break;case'danger':classes.push('text-danger');classes.push(this.webRecord.data.activity_exception_icon);break;default:if(this.webRecord.data.activity_type_icon){classes.push(this.webRecord.data.activity_type_icon);break;}
classes.push('fa-clock-o');break;}
return classes.join(' ');},}),buttonRef:attr(),kanbanFieldActivityViewOwner:one('KanbanFieldActivityView',{identifying:true,inverse:'activityButtonView',}),listFieldActivityViewOwner:one('ListFieldActivityView',{identifying:true,inverse:'activityButtonView',}),thread:one('Thread',{compute(){if(this.kanbanFieldActivityViewOwner){return this.kanbanFieldActivityViewOwner.thread;}
if(this.listFieldActivityViewOwner){return this.listFieldActivityViewOwner.thread;}
return clear();},required:true,}),webRecord:attr({compute(){if(this.kanbanFieldActivityViewOwner){return this.kanbanFieldActivityViewOwner.webRecord;}
if(this.listFieldActivityViewOwner){return this.listFieldActivityViewOwner.webRecord;}
return clear();},required:true,}),},});return __exports;});;

/* /mail/static/src/models/activity_group.js */
odoo.define('@mail/models/activity_group',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');registerModel({name:'ActivityGroup',modelMethods:{convertData(data){return{actions:data.actions,domain:data.domain,irModel:{iconUrl:data.icon,id:data.id,model:data.model,name:data.name,},overdue_count:data.overdue_count,planned_count:data.planned_count,today_count:data.today_count,total_count:data.total_count,type:data.type,};},},recordMethods:{_onChangeTotalCount(){if(this.type==='activity'&&this.total_count===0&&this.planned_count===0){this.delete();}},},fields:{actions:attr(),activityGroupViews:many('ActivityGroupView',{inverse:'activityGroup',}),domain:attr(),irModel:one('ir.model',{identifying:true,inverse:'activityGroup',}),overdue_count:attr({default:0,}),planned_count:attr({default:0,}),today_count:attr({default:0,}),total_count:attr({default:0,}),type:attr(),},onChanges:[{dependencies:['total_count','type','planned_count'],methodName:'_onChangeTotalCount',},],});return __exports;});;

/* /mail/static/src/models/activity_group_view.js */
odoo.define('@mail/models/activity_group_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const session=require('web.session');registerModel({name:'ActivityGroupView',recordMethods:{onClick(ev){ev.stopPropagation();this.activityMenuViewOwner.update({isOpen:false});const targetAction=$(ev.currentTarget);const actionXmlid=targetAction.data('action_xmlid');if(actionXmlid){this.env.services.action.doAction(actionXmlid);}else{let domain=[['activity_ids.user_id','=',session.uid]];if(targetAction.data('domain')){domain=domain.concat(targetAction.data('domain'));}
this.env.services['action'].doAction({domain,name:targetAction.data('model_name'),res_model:targetAction.data('res_model'),type:'ir.actions.act_window',views:this.activityGroup.irModel.availableWebViews.map(viewName=>[false,viewName]),},{clearBreadcrumbs:true,viewType:'activity',},);}},onClickFilterButton(ev){this.activityMenuViewOwner.update({isOpen:false});const data=_.extend({},$(ev.currentTarget).data(),$(ev.target).data());const context={};if(data.filter==='my'){context['search_default_activities_overdue']=1;context['search_default_activities_today']=1;}else{context['search_default_activities_'+data.filter]=1;}
context['force_search_count']=1;let domain=[['activity_ids.user_id','=',session.uid]];if(data.domain){domain=domain.concat(data.domain);}
this.env.services['action'].doAction({context,domain,name:data.model_name,res_model:data.res_model,search_view_id:[false],type:'ir.actions.act_window',views:this.activityGroup.irModel.availableWebViews.map(viewName=>[false,viewName]),},{clearBreadcrumbs:true,},);},},fields:{activityGroup:one('ActivityGroup',{identifying:true,inverse:'activityGroupViews',}),activityMenuViewOwner:one('ActivityMenuView',{identifying:true,inverse:'activityGroupViews',}),},});return __exports;});;

/* /mail/static/src/models/activity_list_view.js */
odoo.define('@mail/models/activity_list_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const session=require('web.session');registerModel({name:'ActivityListView',lifecycleHooks:{async _created(){if(this.activities.length===0){return;}
const messaging=this.messaging;const activitiesData=await this.messaging.rpc({model:'mail.activity',method:'activity_format',args:[this.activities.map(activity=>activity.id)],kwargs:{context:session.user_context},},{shadow:true});if(!messaging.exists()){return;}
messaging.models['Activity'].insert(activitiesData.map(activityData=>messaging.models['Activity'].convertData(activityData)));},},recordMethods:{onClickAddActivityButton(){const thread=this.thread;const webRecord=this.webRecord;this.messaging.openActivityForm({thread,}).then(()=>{thread.fetchData(['activities']);webRecord.model.load({resId:thread.id});});this.popoverViewOwner.delete();},},fields:{activities:many('Activity',{compute(){return this.thread&&this.thread.activities;},sort:[['truthy-first','dateDeadline'],['case-insensitive-asc','dateDeadline'],],}),activityListViewItems:many('ActivityListViewItem',{compute(){return this.activities.map(activity=>{return{activity,};});},inverse:'activityListViewOwner',}),overdueActivityListViewItems:many('ActivityListViewItem',{inverse:'activityListViewOwnerAsOverdue',}),plannedActivityListViewItems:many('ActivityListViewItem',{inverse:'activityListViewOwnerAsPlanned',}),popoverViewOwner:one('PopoverView',{identifying:true,inverse:'activityListView',}),thread:one('Thread',{compute(){return this.popoverViewOwner.activityButtonViewOwnerAsActivityList.thread;},required:true,}),todayActivityListViewItems:many('ActivityListViewItem',{inverse:'activityListViewOwnerAsToday',}),webRecord:attr({compute(){return this.popoverViewOwner.activityButtonViewOwnerAsActivityList.webRecord;},required:true,}),},});return __exports;});;

/* /mail/static/src/models/activity_list_view_item.js */
odoo.define('@mail/models/activity_list_view_item',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{auto_str_to_date}=require('web.time');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'ActivityListViewItem',recordMethods:{onClickEditActivityButton(){const popoverViewOwner=this.activityListViewOwner.popoverViewOwner;const webRecord=this.webRecord;const thread=this.activity.thread;this.activity.edit().then(()=>{webRecord.model.load({resId:thread.id});});popoverViewOwner.delete();},onClickMarkAsDone(){this.update({markDoneView:this.markDoneView?clear():{}});},onClickUploadDocument(){this.fileUploader.openBrowserFileUploader();},},fields:{activity:one('Activity',{identifying:true,}),activityListViewOwner:one('ActivityListView',{identifying:true,inverse:'activityListViewItems',}),activityListViewOwnerAsOverdue:one('ActivityListView',{compute(){return this.activity.state==='overdue'?this.activityListViewOwner:clear();},inverse:'overdueActivityListViewItems',}),activityListViewOwnerAsPlanned:one('ActivityListView',{compute(){return this.activity.state==='planned'?this.activityListViewOwner:clear();},inverse:'plannedActivityListViewItems',}),activityListViewOwnerAsToday:one('ActivityListView',{compute(){return this.activity.state==='today'?this.activityListViewOwner:clear();},inverse:'todayActivityListViewItems',}),clockWatcher:one('ClockWatcher',{default:{clock:{frequency:60*1000,},},inverse:'activityListViewItemOwner',}),delayLabel:attr({compute(){if(!this.activity.dateDeadline){return clear();}
if(!this.clockWatcher.clock.date){return clear();}
const today=moment(this.clockWatcher.clock.date.getTime()).startOf('day');const momentDeadlineDate=moment(auto_str_to_date(this.activity.dateDeadline));const diff=momentDeadlineDate.diff(today,'days',true);if(diff===0){return this.env._t("Today");}else if(diff===-1){return this.env._t("Yesterday");}else if(diff<0){return sprintf(this.env._t("%s days overdue"),Math.round(Math.abs(diff)));}else if(diff===1){return this.env._t("Tomorrow");}else{return sprintf(this.env._t("Due in %s days"),Math.round(Math.abs(diff)));}},}),fileUploader:one('FileUploader',{compute(){return this.activity.category==='upload_file'?{}:clear();},inverse:'activityListViewItemOwner',}),hasEditButton:attr({compute(){return this.activity.chaining_type==='suggest'&&this.activity.canWrite;},}),hasMarkDoneButton:attr({compute(){return!this.fileUploader;},}),mailTemplateViews:many('MailTemplateView',{compute(){return this.activity.mailTemplates.map(mailTemplate=>({mailTemplate}));},inverse:'activityListViewItemOwner',}),markDoneView:one('ActivityMarkDonePopoverContentView',{inverse:'activityListViewItemOwner',}),webRecord:attr({compute(){return this.activityListViewOwner.webRecord;},required:true,}),},});return __exports;});;

/* /mail/static/src/models/activity_mark_done_popover_content_view.js */
odoo.define('@mail/models/activity_mark_done_popover_content_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ActivityMarkDonePopoverContentView',identifyingMode:'xor',recordMethods:{onBlur(){if(!this.exists()||!this.feedbackTextareaRef||!this.feedbackTextareaRef.el){return;}
this._backupFeedback();},onClickDiscard(){this._close();},async onClickDone(){const chatter=this.activityViewOwner&&this.activityViewOwner.activityBoxView.chatter;const webRecord=this.webRecord;const thread=this.activity.thread;await this.activity.markAsDone({feedback:this.feedbackTextareaRef.el.value,});if(chatter&&chatter.exists()&&chatter.component){chatter.reloadParentView();}
if(webRecord){webRecord.model.load({resId:thread.id});}},async onClickDoneAndScheduleNext(){const chatter=this.activityViewOwner&&this.activityViewOwner.activityBoxView.chatter;const webRecord=this.webRecord;const thread=this.activity.thread;const activityListViewOwner=this.activityListViewItemOwner&&this.activityListViewItemOwner.activityListViewOwner;const activity=this.activity;const feedback=this.feedbackTextareaRef.el.value;if(activityListViewOwner&&activityListViewOwner.exists()){activityListViewOwner.popoverViewOwner.delete();}
await activity.markAsDoneAndScheduleNext({feedback});if(chatter&&chatter.exists()&&chatter.component){chatter.reloadParentView();}
if(webRecord){webRecord.model.load({resId:thread.id});}},onKeydown(ev){if(ev.key==='Escape'){this._close();}},_backupFeedback(){this.activity.update({feedbackBackup:this.feedbackTextareaRef.el.value,});},_close(){this._backupFeedback();if(this.activityViewOwner){this.activityViewOwner.update({markDonePopoverView:clear()});return;}
if(this.activityListViewItemOwner){this.activityListViewItemOwner.update({markDoneView:clear()});return;}},},fields:{activity:one('Activity',{compute(){if(this.activityListViewItemOwner){return this.activityListViewItemOwner.activity;}
if(this.activityViewOwner){return this.activityViewOwner.activity;}
return clear();},required:true,}),activityListViewItemOwner:one('ActivityListViewItem',{identifying:true,inverse:'markDoneView',}),activityViewOwner:one('ActivityView',{compute(){if(this.popoverViewOwner&&this.popoverViewOwner.activityViewOwnerAsMarkDone){return this.popoverViewOwner.activityViewOwnerAsMarkDone;}
return clear();},}),component:attr(),feedbackTextareaRef:attr(),hasHeader:attr({compute(){return Boolean(this.popoverViewOwner);},}),headerText:attr({compute(){if(this.activityViewOwner){return this.activityViewOwner.markDoneText;}
return this.env._t("Mark Done");},}),popoverViewOwner:one('PopoverView',{identifying:true,inverse:'activityMarkDonePopoverContentView',}),webRecord:attr({compute(){if(this.activityListViewItemOwner){return this.activityListViewItemOwner.webRecord;}
return clear();},}),},});return __exports;});;

/* /mail/static/src/models/activity_menu_view.js */
odoo.define('@mail/models/activity_menu_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many}=require('@mail/model/model_field');const session=require('web.session');registerModel({name:'ActivityMenuView',lifecycleHooks:{_created(){this.fetchData();document.addEventListener('click',this._onClickCaptureGlobal,true);},_willDelete(){document.removeEventListener('click',this._onClickCaptureGlobal,true);},},recordMethods:{close(){this.update({isOpen:false});},async fetchData(){const data=await this.messaging.rpc({model:'res.users',method:'systray_get_activities',args:[],kwargs:{context:session.user_context},});this.update({activityGroups:data.map(vals=>this.messaging.models['ActivityGroup'].convertData(vals)),extraCount:0,});},onClickDropdownToggle(ev){ev.preventDefault();if(this.isOpen){this.update({isOpen:false});}else{this.update({isOpen:true});this.fetchData();}},_onClickCaptureGlobal(ev){if(!this.exists()){return;}
if(!this.component||!this.component.root.el){return;}
if(this.component.root.el.contains(ev.target)){return;}
this.close();},},fields:{activityGroups:many('ActivityGroup',{sort:[['smaller-first','irModel.id']],}),activityGroupViews:many('ActivityGroupView',{compute(){return this.activityGroups.map(activityGroup=>{return{activityGroup,};});},inverse:'activityMenuViewOwner',}),component:attr(),counter:attr({compute(){return this.activityGroups.reduce((total,group)=>total+group.total_count,this.extraCount);},}),extraCount:attr(),isOpen:attr({default:false,}),},});return __exports;});;

/* /mail/static/src/models/activity_type.js */
odoo.define('@mail/models/activity_type',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many}=require('@mail/model/model_field');registerModel({name:'ActivityType',fields:{activities:many('Activity',{inverse:'type',}),displayName:attr(),id:attr({identifying:true,}),},});return __exports;});;

/* /mail/static/src/models/activity_view.js */
odoo.define('@mail/models/activity_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{auto_str_to_date,getLangDateFormat,getLangDatetimeFormat}=require('web.time');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'ActivityView',recordMethods:{onClickActivity(ev){if(ev.target.tagName==='A'&&ev.target.dataset.oeId&&ev.target.dataset.oeModel){this.messaging.openProfile({id:Number(ev.target.dataset.oeId),model:ev.target.dataset.oeModel,});ev.preventDefault();}},async onClickCancel(){const{chatter}=this.activityBoxView;await this.activity.deleteServerRecord();if(chatter.exists()&&chatter.component){chatter.reloadParentView();}},onClickDetailsButton(ev){ev.preventDefault();this.update({areDetailsVisible:!this.areDetailsVisible});},async onClickEdit(){const{chatter}=this.activityBoxView;await this.activity.edit();if(chatter.exists()&&chatter.component){chatter.reloadParentView();}},onClickMarkDoneButton(){this.update({markDonePopoverView:this.markDonePopoverView?clear():{}});},onClickUploadDocument(){this.fileUploader.openBrowserFileUploader();},},fields:{activity:one('Activity',{identifying:true,inverse:'activityViews',}),activityBoxView:one('ActivityBoxView',{identifying:true,inverse:'activityViews',}),areDetailsVisible:attr({default:false,}),assignedUserText:attr({compute(){if(!this.activity.assignee){return clear();}
return sprintf(this.env._t("for %s"),this.activity.assignee.nameOrDisplayName);},}),clockWatcher:one('ClockWatcher',{default:{clock:{frequency:60*1000,},},inverse:'activityViewOwner',}),component:attr(),delayLabel:attr({compute(){if(!this.activity.dateDeadline){return clear();}
if(!this.clockWatcher.clock.date){return clear();}
const today=moment(this.clockWatcher.clock.date.getTime()).startOf('day');const momentDeadlineDate=moment(auto_str_to_date(this.activity.dateDeadline));const diff=momentDeadlineDate.diff(today,'days',true);if(diff===0){return this.env._t("Today:");}else if(diff===-1){return this.env._t("Yesterday:");}else if(diff<0){return sprintf(this.env._t("%s days overdue:"),Math.round(Math.abs(diff)));}else if(diff===1){return this.env._t("Tomorrow:");}else{return sprintf(this.env._t("Due in %s days:"),Math.round(Math.abs(diff)));}},}),fileUploader:one('FileUploader',{compute(){return this.activity.category==='upload_file'?{}:clear();},inverse:'activityView',}),formattedCreateDatetime:attr({compute(){if(!this.activity.dateCreate){return clear();}
const momentCreateDate=moment(auto_str_to_date(this.activity.dateCreate));const datetimeFormat=getLangDatetimeFormat();return momentCreateDate.format(datetimeFormat);},}),formattedDeadlineDate:attr({compute(){if(!this.activity.dateDeadline){return clear();}
const momentDeadlineDate=moment(auto_str_to_date(this.activity.dateDeadline));const datetimeFormat=getLangDateFormat();return momentDeadlineDate.format(datetimeFormat);},}),mailTemplateViews:many('MailTemplateView',{compute(){return this.activity.mailTemplates.map(mailTemplate=>({mailTemplate}));},inverse:'activityViewOwner',}),markDoneButtonRef:attr(),markDonePopoverView:one('PopoverView',{inverse:'activityViewOwnerAsMarkDone',}),markDoneText:attr({compute(){return this.env._t("Mark Done");},}),summary:attr({compute(){if(!this.activity.summary){return clear();}
return sprintf(this.env._t("“%s”"),this.activity.summary);},}),},});return __exports;});;

/* /mail/static/src/models/attachment.js */
odoo.define('@mail/models/attachment',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,insert}=require('@mail/model/model_field_command');registerModel({name:'Attachment',modelMethods:{convertData(data){const data2={};if('checksum'in data){data2.checksum=data.checksum;}
if('filename'in data){data2.filename=data.filename;}
if('id'in data){data2.id=data.id;}
if('mimetype'in data){data2.mimetype=data.mimetype;}
if('name'in data){data2.name=data.name;}
if('res_id'in data&&'res_model'in data){data2.originThread=insert({id:data.res_id,model:data.res_model,});}
if('originThread'in data){data2.originThread=data.originThread;}
return data2;},},recordMethods:{download(){const downloadLink=document.createElement('a');downloadLink.setAttribute('href',this.downloadUrl);downloadLink.setAttribute('download','');downloadLink.click();},onClickDownload(ev){ev.stopPropagation();this.download();},async remove(){if(this.isUnlinkPending){return;}
if(!this.isUploading){this.update({isUnlinkPending:true});try{await this.messaging.rpc({route:`/mail/attachment/delete`,params:{access_token:this.accessToken,attachment_id:this.id,},},{shadow:true});}finally{if(this.exists()){this.update({isUnlinkPending:false});}}}else if(this.uploadingAbortController){this.uploadingAbortController.abort();}
if(!this.exists()){return;}
this.messaging.messagingBus.trigger('o-attachment-deleted',{attachment:this});this.delete();},},fields:{accessToken:attr(),activities:many('Activity',{inverse:'attachments',}),allThreads:many('Thread',{inverse:'allAttachments',readonly:true,}),attachmentLists:many('AttachmentList',{inverse:'attachments',}),attachmentViewerViewable:one('AttachmentViewerViewable',{inverse:'attachmentOwner',}),checksum:attr(),composer:one('Composer',{inverse:'attachments',}),defaultSource:attr({compute(){if(this.isImage){return`/web/image/${this.id}?signature=${this.checksum}`;}
if(this.isPdf){const pdf_lib=`/web/static/lib/pdfjs/web/viewer.html?file=`
if(!this.accessToken&&this.originThread&&this.originThread.model==='mail.channel'){return`${pdf_lib}/mail/channel/${this.originThread.id}/attachment/${this.id}#pagemode=none`;}
const accessToken=this.accessToken?`?access_token%3D${this.accessToken}`:'';return`${pdf_lib}/web/content/${this.id}${accessToken}#pagemode=none`;}
if(this.isUrlYoutube){const urlArr=this.url.split('/');let token=urlArr[urlArr.length-1];if(token.includes('watch')){token=token.split('v=')[1];const amp=token.indexOf('&');if(amp!==-1){token=token.substring(0,amp);}}
return`https://www.youtube.com/embed/${token}`;}
if(!this.accessToken&&this.originThread&&this.originThread.model==='mail.channel'){return`/mail/channel/${this.originThread.id}/attachment/${this.id}`;}
const accessToken=this.accessToken?`?access_token=${this.accessToken}`:'';return`/web/content/${this.id}${accessToken}`;},}),dialogRef:attr(),displayName:attr({compute(){const displayName=this.name||this.filename;if(displayName){return displayName;}
return clear();},}),downloadUrl:attr({compute(){if(!this.accessToken&&this.originThread&&this.originThread.model==='mail.channel'){return`/mail/channel/${this.originThread.id}/attachment/${this.id}?download=true`;}
const accessToken=this.accessToken?`access_token=${this.accessToken}&`:'';return`/web/content/ir.attachment/${this.id}/datas?${accessToken}download=true`;},}),extension:attr({compute(){const extension=this.filename&&this.filename.split('.').pop();if(extension){return extension;}
return clear();},}),filename:attr(),id:attr({identifying:true,}),isDeletable:attr({compute(){if(!this.messaging){return false;}
if(this.messages.length&&this.originThread&&this.originThread.model==='mail.channel'){return this.messages.some(message=>(message.canBeDeleted||(message.author&&message.author===this.messaging.currentPartner)||(message.guestAuthor&&message.guestAuthor===this.messaging.currentGuest)));}
return true;},}),isImage:attr({compute(){const imageMimetypes=['image/bmp','image/gif','image/jpeg','image/png','image/svg+xml','image/tiff','image/x-icon',];return imageMimetypes.includes(this.mimetype);},}),isPdf:attr({compute(){return this.mimetype==='application/pdf';},}),isText:attr({compute(){const textMimeType=['application/javascript','application/json','text/css','text/html','text/plain',];return textMimeType.includes(this.mimetype);},}),isUnlinkPending:attr({default:false,}),isUploading:attr({default:false,}),isUrl:attr({compute(){return this.type==='url'&&this.url;},}),isUrlYoutube:attr({compute(){return!!this.url&&this.url.includes('youtu');},}),isVideo:attr({compute(){const videoMimeTypes=['audio/mpeg','video/x-matroska','video/mp4','video/webm',];return videoMimeTypes.includes(this.mimetype);},}),isViewable:attr({compute(){return this.isText||this.isImage||this.isVideo||this.isPdf||this.isUrlYoutube;},}),mediaType:attr({compute(){return this.mimetype&&this.mimetype.split('/').shift();},}),messages:many('Message',{inverse:'attachments',}),mimetype:attr({default:'',}),name:attr(),originThread:one('Thread',{inverse:'originThreadAttachments',}),size:attr(),threads:many('Thread',{inverse:'attachments',}),threadsAsAttachmentsInWebClientView:many('Thread',{compute(){return(this.isPdf||this.isImage)&&!this.isUploading?this.allThreads:clear();},inverse:'attachmentsInWebClientView',}),type:attr(),uploadingAbortController:attr({compute(){if(this.isUploading){if(!this.uploadingAbortController){const abortController=new AbortController();abortController.signal.onabort=()=>{this.messaging.messagingBus.trigger('o-attachment-upload-abort',{attachment:this});};return abortController;}
return this.uploadingAbortController;}
return;},}),url:attr(),},});return __exports;});;

/* /mail/static/src/models/attachment_box_view.js */
odoo.define('@mail/models/attachment_box_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'AttachmentBoxView',recordMethods:{async onClickAddAttachment(){if(this.chatter.isTemporary){const chatter=this.chatter;const saved=await this.chatter.doSaveRecord();if(saved){chatter.attachmentBoxView.fileUploader.openBrowserFileUploader();}
return;}
this.fileUploader.openBrowserFileUploader();},},fields:{attachmentList:one('AttachmentList',{compute(){return(this.chatter.thread&&this.chatter.thread.allAttachments.length>0)?{}:clear();},inverse:'attachmentBoxViewOwner',}),chatter:one('Chatter',{identifying:true,inverse:'attachmentBoxView',}),component:attr(),fileUploader:one('FileUploader',{default:{},inverse:'attachmentBoxView',readonly:true,required:true,}),},});return __exports;});;

/* /mail/static/src/models/attachment_card.js */
odoo.define('@mail/models/attachment_card',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'AttachmentCard',recordMethods:{onClickImage(){if(!this.attachment||!this.attachment.isViewable){return;}
this.attachmentList.update({attachmentListViewDialog:{},selectedAttachment:this.attachment,});},onClickUnlink(ev){ev.stopPropagation();if(!this.attachment){return;}
if(this.attachmentList.composerViewOwner){this.attachment.remove();}else{this.update({attachmentDeleteConfirmDialog:{}});}},},fields:{attachment:one('Attachment',{identifying:true,}),attachmentDeleteConfirmDialog:one('Dialog',{inverse:'attachmentCardOwnerAsAttachmentDeleteConfirm',}),attachmentList:one('AttachmentList',{identifying:true,inverse:'attachmentCards',}),hasMultipleActions:attr({compute(){return this.attachment.isDeletable&&!this.attachmentList.composerViewOwner;},}),},});return __exports;});;

/* /mail/static/src/models/attachment_delete_confirm_view.js */
odoo.define('@mail/models/attachment_delete_confirm_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'AttachmentDeleteConfirmView',recordMethods:{containsElement(element){return Boolean(this.component&&this.component.root.el&&this.component.root.el.contains(element));},onClickCancel(){this.dialogOwner.delete();},async onClickOk(){const chatter=this.chatter;await this.attachment.remove();if(chatter&&chatter.exists()&&chatter.shouldReloadParentFromFileChanged){chatter.reloadParentView();}},},fields:{attachment:one('Attachment',{compute(){if(this.dialogOwner&&this.dialogOwner.attachmentCardOwnerAsAttachmentDeleteConfirm){return this.dialogOwner.attachmentCardOwnerAsAttachmentDeleteConfirm.attachment;}
if(this.dialogOwner&&this.dialogOwner.attachmentImageOwnerAsAttachmentDeleteConfirm){return this.dialogOwner.attachmentImageOwnerAsAttachmentDeleteConfirm.attachment;}
return clear();},required:true,}),body:attr({compute(){return sprintf(this.env._t(`Do you really want to delete "%s"?`),this.attachment.displayName);},}),chatter:one('Chatter',{compute(){if(this.dialogOwner.attachmentCardOwnerAsAttachmentDeleteConfirm&&this.dialogOwner.attachmentCardOwnerAsAttachmentDeleteConfirm.attachmentList.attachmentBoxViewOwner&&this.dialogOwner.attachmentCardOwnerAsAttachmentDeleteConfirm.attachmentList.attachmentBoxViewOwner.chatter){return this.dialogOwner.attachmentCardOwnerAsAttachmentDeleteConfirm.attachmentList.attachmentBoxViewOwner.chatter;}
if(this.dialogOwner.attachmentImageOwnerAsAttachmentDeleteConfirm&&this.dialogOwner.attachmentImageOwnerAsAttachmentDeleteConfirm.attachmentList.attachmentBoxViewOwner&&this.dialogOwner.attachmentImageOwnerAsAttachmentDeleteConfirm.attachmentList.attachmentBoxViewOwner.chatter){return this.dialogOwner.attachmentImageOwnerAsAttachmentDeleteConfirm.attachmentList.attachmentBoxViewOwner.chatter;}
return clear();},}),component:attr(),dialogOwner:one('Dialog',{identifying:true,inverse:'attachmentDeleteConfirmView',}),},});return __exports;});;

/* /mail/static/src/models/attachment_image.js */
odoo.define('@mail/models/attachment_image',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{isEventHandled,markEventHandled}=require('@mail/utils/utils');registerModel({name:'AttachmentImage',recordMethods:{onClickDownload(ev){markEventHandled(ev,'AttachmentImage.onClickDownload');if(!this.exists()){return;}
this.attachment.download();},onClickImage(ev){if(isEventHandled(ev,'AttachmentImage.onClickDownload')){return;}
if(isEventHandled(ev,'AttachmentImage.onClickUnlink')){return;}
if(!this.attachment||!this.attachment.isViewable){return;}
this.attachmentList.update({attachmentListViewDialog:{},selectedAttachment:this.attachment,});},onClickUnlink(ev){markEventHandled(ev,'AttachmentImage.onClickUnlink');if(!this.exists()){return;}
if(this.attachmentList.composerViewOwner){this.attachment.remove();}else{this.update({attachmentDeleteConfirmDialog:{}});}},},fields:{attachment:one('Attachment',{identifying:true,}),attachmentDeleteConfirmDialog:one('Dialog',{inverse:'attachmentImageOwnerAsAttachmentDeleteConfirm',}),attachmentList:one('AttachmentList',{identifying:true,inverse:'attachmentImages',}),hasDownloadButton:attr({compute(){if(!this.attachment||!this.attachmentList){return clear();}
return!this.attachmentList.composerViewOwner&&!this.attachment.isUploading;},default:false,}),height:attr({compute(){if(!this.attachmentList){return clear();}
if(this.attachmentList.composerViewOwner){return 50;}
if(this.attachmentList.attachmentBoxViewOwner){return 160;}
if(this.attachmentList.messageViewOwner){return 300;}},required:true,}),imageUrl:attr({compute(){if(!this.attachment){return;}
if(!this.attachment.accessToken&&this.attachment.originThread&&this.attachment.originThread.model==='mail.channel'){return`/mail/channel/${this.attachment.originThread.id}/image/${this.attachment.id}/${this.width}x${this.height}`;}
const accessToken=this.attachment.accessToken?`?access_token=${this.attachment.accessToken}`:'';return`/web/image/${this.attachment.id}/${this.width}x${this.height}${accessToken}`;},}),width:attr({compute(){return 1920;},required:true,}),},});return __exports;});;

/* /mail/static/src/models/attachment_list.js */
odoo.define('@mail/models/attachment_list',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'AttachmentList',identifyingMode:'xor',recordMethods:{selectNextAttachment(){const index=this.attachments.findIndex(attachment=>attachment===this.selectedAttachment);const nextIndex=index===this.attachments.length-1?0:index+1;this.update({selectedAttachment:this.attachments[nextIndex]});},selectPreviousAttachment(){const index=this.attachments.findIndex(attachment=>attachment===this.selectedAttachment);const prevIndex=index===0?this.attachments.length-1:index-1;this.update({selectedAttachment:this.attachments[prevIndex]});},},fields:{attachmentBoxViewOwner:one('AttachmentBoxView',{identifying:true,inverse:'attachmentList',}),attachmentCards:many('AttachmentCard',{compute(){return this.nonImageAttachments.map(attachment=>({attachment}));},inverse:'attachmentList',}),attachmentImages:many('AttachmentImage',{compute(){return this.imageAttachments.map(attachment=>({attachment}));},inverse:'attachmentList',}),attachmentListViewDialog:one('Dialog',{inverse:'attachmentListOwnerAsAttachmentView',}),attachments:many('Attachment',{compute(){if(this.messageViewOwner){return this.messageViewOwner.message.attachments;}
if(this.attachmentBoxViewOwner){return this.attachmentBoxViewOwner.chatter.thread.allAttachments;}
if(this.composerViewOwner&&this.composerViewOwner.composer){return this.composerViewOwner.composer.attachments;}
return clear();},inverse:'attachmentLists',}),composerViewOwner:one('ComposerView',{identifying:true,inverse:'attachmentList',}),imageAttachments:many('Attachment',{compute(){return this.attachments.filter(attachment=>attachment.isImage);},}),isInDiscuss:attr({compute(){return Boolean((this.messageViewOwner&&this.messageViewOwner.isInDiscuss)||(this.composerViewOwner&&this.composerViewOwner.isInDiscuss));},}),isInChatWindow:attr({compute(){return Boolean((this.messageViewOwner&&this.messageViewOwner.isInChatWindow)||(this.composerViewOwner&&this.composerViewOwner.isInChatWindow));},}),isInChatter:attr({compute(){return Boolean((this.messageViewOwner&&this.messageViewOwner.isInChatter)||(this.composerViewOwner&&this.composerViewOwner.isInChatter));},}),isCurrentUserOrGuestAuthor:attr({compute(){return Boolean(this.composerViewOwner||(this.messageViewOwner&&this.messageViewOwner.message.isCurrentUserOrGuestAuthor));},}),isInChatWindowAndIsAlignedRight:attr({compute(){return Boolean(this.isInChatWindow&&this.isCurrentUserOrGuestAuthor);},}),isInChatWindowAndIsAlignedLeft:attr({compute(){return Boolean(this.isInChatWindow&&!this.isCurrentUserOrGuestAuthor);},}),messageViewOwner:one('MessageView',{identifying:true,inverse:'attachmentList',}),nonImageAttachments:many('Attachment',{compute(){return this.attachments.filter(attachment=>!attachment.isImage);},}),selectedAttachment:one('Attachment'),viewableAttachments:many('Attachment',{compute(){return this.attachments.filter(attachment=>attachment.isViewable);},}),},});return __exports;});;

/* /mail/static/src/models/attachment_viewer.js */
odoo.define('@mail/models/attachment_viewer',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'AttachmentViewer',identifyingMode:'xor',recordMethods:{close(){this.delete();},containsElement(element){return Boolean(this.component&&this.component.root.el&&this.component.root.el.contains(element));},next(){if(!this.dialogOwner||!this.dialogOwner.attachmentListOwnerAsAttachmentView){return;}
this.dialogOwner.attachmentListOwnerAsAttachmentView.selectNextAttachment();},onClick(ev){if(this.isDragging){return;}
this.close();},onClickClose(ev){this.close();},onClickDownload(ev){ev.stopPropagation();this.attachmentViewerViewable.download();},onClickHeader(ev){ev.stopPropagation();},onClickImage(ev){if(this.isDragging){return;}
ev.stopPropagation();},onClickNext(ev){ev.stopPropagation();this.next();},onClickPrevious(ev){ev.stopPropagation();this.previous();},onClickPrint(ev){ev.stopPropagation();this.print();},onClickRotate(ev){ev.stopPropagation();this.rotate();},onClickVideo(ev){ev.stopPropagation();},onLoadImage(ev){if(!this.exists()){return;}
ev.stopPropagation();this.update({isImageLoading:false});},previous(){if(!this.dialogOwner||!this.dialogOwner.attachmentListOwnerAsAttachmentView){return;}
this.dialogOwner.attachmentListOwnerAsAttachmentView.selectPreviousAttachment();},print(){const printWindow=window.open('about:blank','_new');printWindow.document.open();printWindow.document.write(`
                <html>
                    <head>
                        <script>
                            function onloadImage() {
                                setTimeout('printImage()', 10);
                            }
                            function printImage() {
                                window.print();
                                window.close();
                            }
                        </script>
                    </head>
                    <body onload='onloadImage()'>
                        <img src="${this.attachmentViewerViewable.imageUrl}" alt=""/>
                    </body>
                </html>`);printWindow.document.close();},rotate(){this.update({angle:this.angle+90});},},fields:{angle:attr({default:0,}),attachmentList:one('AttachmentList',{related:'dialogOwner.attachmentListOwnerAsAttachmentView',}),attachmentViewerViewable:one("AttachmentViewerViewable",{compute(){if(this.attachmentList){return{attachmentOwner:this.attachmentList.selectedAttachment,};}
return clear();},}),attachmentViewerViewables:many("AttachmentViewerViewable",{compute(){if(this.attachmentList){return this.attachmentList.viewableAttachments.map(attachment=>{return{attachmentOwner:attachment};});}
return clear();},}),component:attr(),dialogOwner:one('Dialog',{identifying:true,inverse:'attachmentViewer',isCausal:true,}),imageStyle:attr({compute(){let style=`transform: `+`scale3d(${this.scale}, ${this.scale}, 1) `+`rotate(${this.angle}deg);`;if(this.angle%180!==0){style+=``+`max-height: ${window.innerWidth}px; `+`max-width: ${window.innerHeight}px;`;}else{style+=``+`max-height: 100%; `+`max-width: 100%;`;}
return style;},}),isDragging:attr({default:false,}),isImageLoading:attr({default:false,}),scale:attr({default:1,}),},});return __exports;});;

/* /mail/static/src/models/attachment_viewer_viewable.js */
odoo.define('@mail/models/attachment_viewer_viewable',async function(require){'use strict';let __exports={};const{registerModel}=require("@mail/model/model_core");const{attr,one}=require("@mail/model/model_field");registerModel({name:"AttachmentViewerViewable",identifyingMode:'xor',recordMethods:{download(){return this.attachmentOwner.download();},},fields:{attachmentOwner:one("Attachment",{identifying:true,inverse:'attachmentViewerViewable',}),defaultSource:attr({compute(){return this.attachmentOwner.defaultSource;},}),displayName:attr({compute(){return this.attachmentOwner.displayName;},}),imageUrl:attr({compute(){if(!this.attachmentOwner.accessToken&&this.attachmentOwner.originThread&&this.attachmentOwner.originThread.model==="mail.channel"){return`/mail/channel/${this.attachmentOwner.originThread.id}/image/${this.attachmentOwner.id}`;}
const accessToken=this.attachmentOwner.accessToken?`?access_token=${this.attachmentOwner.accessToken}`:"";return`/web/image/${this.attachmentOwner.id}${accessToken}`;},}),isImage:attr({compute(){return this.attachmentOwner.isImage;},}),isPdf:attr({compute(){return this.attachmentOwner.isPdf;},}),isText:attr({compute(){return this.attachmentOwner.isText;},}),isUrlYoutube:attr({compute(){return this.attachmentOwner.isUrlYoutube;},}),isVideo:attr({compute(){return this.attachmentOwner.isVideo;},}),isViewable:attr({compute(){return this.attachmentOwner.isViewable;},}),mimetype:attr({compute(){return this.attachmentOwner.mimetype;},}),},});return __exports;});;

/* /mail/static/src/models/autocomplete_input_view.js */
odoo.define('@mail/models/autocomplete_input_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'AutocompleteInputView',identifyingMode:'xor',recordMethods:{onBlur(){if(!this.exists()){return;}
if(this.discussSidebarCategoryOwnerAsAddingItem){this.discussSidebarCategoryOwnerAsAddingItem.onHideAddingItem();return;}
if(this.discussViewOwnerAsMobileAddItemHeader){this.discussViewOwnerAsMobileAddItemHeader.onHideMobileAddItemHeader();return;}
if(this.messagingMenuOwnerAsMobileNewMessageInput){this.messagingMenuOwnerAsMobileNewMessageInput.onHideMobileNewMessage();return;}},onFocusin(ev){if(!this.exists()){return;}
if(this.chatWindowOwnerAsNewMessage){this.chatWindowOwnerAsNewMessage.onFocusInNewMessageFormInput(ev);return;}},onKeydown(ev){if(!this.exists()){return;}
if(ev.key==='Escape'){this.onBlur();}},onSelect(ev,ui){if(!this.exists()){return;}
if(this.chatWindowOwnerAsNewMessage){this.chatWindowOwnerAsNewMessage.onAutocompleteSelect(ev,ui);return;}
if(this.discussSidebarCategoryOwnerAsAddingItem){this.discussSidebarCategoryOwnerAsAddingItem.onAddItemAutocompleteSelect(ev,ui);return;}
if(this.discussViewOwnerAsMobileAddItemHeader){this.discussViewOwnerAsMobileAddItemHeader.onMobileAddItemHeaderInputSelect(ev,ui);return;}
if(this.messagingMenuOwnerAsMobileNewMessageInput){this.messagingMenuOwnerAsMobileNewMessageInput.onMobileNewMessageInputSelect(ev,ui);return;}},onSource(req,res){if(!this.exists()){return;}
if(this.chatWindowOwnerAsNewMessage){this.chatWindowOwnerAsNewMessage.onAutocompleteSource(req,res);return;}
if(this.discussSidebarCategoryOwnerAsAddingItem){this.discussSidebarCategoryOwnerAsAddingItem.onAddItemAutocompleteSource(req,res);return;}
if(this.discussViewOwnerAsMobileAddItemHeader){this.discussViewOwnerAsMobileAddItemHeader.onMobileAddItemHeaderInputSource(req,res);return;}
if(this.messagingMenuOwnerAsMobileNewMessageInput){this.messagingMenuOwnerAsMobileNewMessageInput.onMobileNewMessageInputSource(req,res);return;}},},fields:{chatWindowOwnerAsNewMessage:one('ChatWindow',{identifying:true,inverse:'newMessageAutocompleteInputView',}),component:attr(),customClass:attr({compute(){if(this.discussSidebarCategoryOwnerAsAddingItem){if(this.discussSidebarCategoryOwnerAsAddingItem===this.messaging.discuss.categoryChannel){return'o_DiscussSidebarCategory_newChannelAutocompleteSuggestions';}}
if(this.messagingMenuOwnerAsMobileNewMessageInput){return this.messagingMenuOwnerAsMobileNewMessageInput.viewId+'_mobileNewMessageInputAutocomplete';}
return clear();},default:'',}),discussSidebarCategoryOwnerAsAddingItem:one('DiscussSidebarCategory',{identifying:true,inverse:'addingItemAutocompleteInputView',}),discussViewOwnerAsMobileAddItemHeader:one('DiscussView',{identifying:true,inverse:'mobileAddItemHeaderAutocompleteInputView',}),isFocusOnMount:attr({compute(){if(this.discussViewOwnerAsMobileAddItemHeader){return true;}
if(this.discussSidebarCategoryOwnerAsAddingItem){return true;}
if(this.messagingMenuOwnerAsMobileNewMessageInput){return true;}
return clear();},default:false,}),isHtml:attr({compute(){if(this.discussViewOwnerAsMobileAddItemHeader){return this.discussViewOwnerAsMobileAddItemHeader.isAddingChannel;}
if(this.discussSidebarCategoryOwnerAsAddingItem){return this.discussSidebarCategoryOwnerAsAddingItem===this.messaging.discuss.categoryChannel;}
return clear();},default:false,}),messagingMenuOwnerAsMobileNewMessageInput:one('MessagingMenu',{identifying:true,inverse:'mobileNewMessageAutocompleteInputView',}),placeholder:attr({compute(){if(this.chatWindowOwnerAsNewMessage){return this.chatWindowOwnerAsNewMessage.newMessageFormInputPlaceholder;}
if(this.discussViewOwnerAsMobileAddItemHeader){if(this.discussViewOwnerAsMobileAddItemHeader.isAddingChannel){return this.discussViewOwnerAsMobileAddItemHeader.discuss.addChannelInputPlaceholder;}else{return this.discussViewOwnerAsMobileAddItemHeader.discuss.addChatInputPlaceholder;}}
if(this.discussSidebarCategoryOwnerAsAddingItem){return this.discussSidebarCategoryOwnerAsAddingItem.newItemPlaceholderText;}
if(this.messagingMenuOwnerAsMobileNewMessageInput){return this.messagingMenuOwnerAsMobileNewMessageInput.mobileNewMessageInputPlaceholder;}
return clear();},}),},});return __exports;});;

/* /mail/static/src/models/blur_manager.js */
odoo.define('@mail/models/blur_manager',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{clear}=require('@mail/model/model_field_command');const{attr,one}=require('@mail/model/model_field');function drawAndBlurImageOnCanvas(image,blurAmount,canvas){canvas.width=image.width;canvas.height=image.height;if(blurAmount===0){canvas.getContext('2d').drawImage(image,0,0,image.width,image.height);return;}
canvas.getContext('2d').clearRect(0,0,image.width,image.height);canvas.getContext('2d').save();canvas.getContext('2d').filter=`blur(${blurAmount}px)`;canvas.getContext('2d').drawImage(image,0,0,image.width,image.height);canvas.getContext('2d').restore();}
registerModel({name:'BlurManager',lifecycleHooks:{_willDelete(){this.video.removeEventListener('loadeddata',this._onVideoPlay);this.selfieSegmentation.reset();this.video.srcObject=null;if(this.rejectStreamPromise){this.rejectStreamPromise(new Error(this.env._t('The blur manager was removed before the beginning of the blur process')));}},},recordMethods:{onRequestFrameTimerTimeout(){this._requestFrame();},_drawWithCompositing(image,compositeOperation){this.canvas.getContext('2d').globalCompositeOperation=compositeOperation;this.canvas.getContext('2d').drawImage(image,0,0);},_onChangeBackgroundBlurAmountSetting(){this.selfieSegmentation.setOptions({backgroundBlur:this.userSetting.backgroundBlurAmount,});},_onChangeEdgeBlurAmountSetting(){this.selfieSegmentation.setOptions({edgeBlurAmount:this.userSetting.edgeBlurAmount,});},async _onChangeSrcStream(){this.video.srcObject=null;this.selfieSegmentation.reset();if(this.rejectStreamPromise){this.rejectStreamPromise(new Error(this.env._t('The source stream was removed before the beginning of the blur process')));}
if(!this.srcStream){return;}
let rejectStreamPromise;let resolveStreamPromise;this.update({isVideoDataLoaded:false,stream:new Promise((resolve,reject)=>{rejectStreamPromise=reject;resolveStreamPromise=resolve;}),rejectStreamPromise,resolveStreamPromise,});this.video.srcObject=this.srcStream.webMediaStream;this.video.load();this.selfieSegmentation.setOptions({selfieMode:false,backgroundBlur:this.userSetting.backgroundBlurAmount,edgeBlur:this.userSetting.edgeBlurAmount,modelSelection:1,});this.selfieSegmentation.onResults(this._onSelfieSegmentationResults);this.video.addEventListener('loadeddata',this._onVideoPlay);this.video.autoplay=true;Promise.resolve(this.video.play()).catch(()=>{});},async _onFrame(){if(!this.selfieSegmentation){return;}
if(!this.video){return;}
if(!this.srcStream){return;}
if(!this.isVideoDataLoaded){return;}
await this.selfieSegmentation.send({image:this.video});this.update({frameRequestTimer:{doReset:true}});},_onSelfieSegmentationResults(results){if(!this.exists()){return;}
drawAndBlurImageOnCanvas(results.image,this.userSetting.backgroundBlurAmount,this.canvasBlur,);this.canvas.width=this.canvasBlur.width;this.canvas.height=this.canvasBlur.height;drawAndBlurImageOnCanvas(results.segmentationMask,this.userSetting.edgeBlurAmount,this.canvasMask,);this.canvas.getContext('2d').save();this.canvas.getContext('2d').drawImage(results.image,0,0,this.canvas.width,this.canvas.height,);this._drawWithCompositing(this.canvasMask,'destination-in',);this._drawWithCompositing(this.canvasBlur,'destination-over',);this.canvas.getContext('2d').restore();},_onVideoPlay(){this.update({isVideoDataLoaded:true,});this._requestFrame();},_requestFrame(){window.requestAnimationFrame(async()=>{if(!this.exists()){return;}
await this._onFrame();this.resolveStreamPromise(this.canvasStream);});},},fields:{canvas:attr({default:document.createElement('canvas'),}),canvasBlur:attr({default:document.createElement('canvas'),}),canvasMask:attr({default:document.createElement('canvas'),}),canvasStream:one('MediaStream',{compute(){if(this.srcStream){this.canvas.getContext('2d');const webMediaStream=this.canvas.captureStream();return{webMediaStream,id:webMediaStream.id};}
return clear();},isCausal:true,}),frameRequestTimer:one('Timer',{inverse:'blurManagerOwnerAsFrameRequest',}),isVideoDataLoaded:attr({default:false,}),rejectStreamPromise:attr(),resolveStreamPromise:attr(),rtc:one('Rtc',{identifying:true,inverse:'blurManager',}),selfieSegmentation:attr({default:new window.SelfieSegmentation({locateFile:(file)=>{return`https://cdn.jsdelivr.net/npm/@mediapipe/selfie_segmentation@0.1/${file}`;},}),}),srcStream:one('MediaStream',{isCausal:true,}),stream:attr(),userSetting:one('UserSetting',{related:'messaging.userSetting',}),video:attr({default:document.createElement('video'),}),},onChanges:[{dependencies:['userSetting.edgeBlurAmount'],methodName:'_onChangeEdgeBlurAmountSetting',},{dependencies:['userSetting.backgroundBlurAmount'],methodName:'_onChangeBackgroundBlurAmountSetting',},{dependencies:['srcStream'],methodName:'_onChangeSrcStream',},],});return __exports;});;

/* /mail/static/src/models/call_action_list_view.js */
odoo.define('@mail/models/call_action_list_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'CallActionListView',recordMethods:{onClickCamera(ev){this.messaging.rtc.toggleUserVideo();},async onClickDeafen(ev){if(this.messaging.rtc.currentRtcSession.isDeaf){this.messaging.rtc.undeafen();}else{this.messaging.rtc.deafen();}},onClickMicrophone(ev){if(this.messaging.rtc.currentRtcSession.isMute){if(this.messaging.rtc.currentRtcSession.isSelfMuted){this.messaging.rtc.unmute();}
if(this.messaging.rtc.currentRtcSession.isDeaf){this.messaging.rtc.undeafen();}}else{this.messaging.rtc.mute();}},onClickMore(ev){this.update({moreMenuPopoverView:this.moreMenuPopoverView?clear():{}});},async onClickRejectCall(ev){if(this.thread.hasPendingRtcRequest){return;}
await this.thread.leaveCall();},onClickScreen(ev){this.messaging.rtc.toggleScreenShare();},async onClickToggleAudioCall(ev){if(this.thread.hasPendingRtcRequest){return;}
await this.thread.toggleCall();},async onClickToggleVideoCall(ev){if(this.thread.hasPendingRtcRequest){return;}
await this.thread.toggleCall({startWithVideo:true,});},},fields:{callButtonTitle:attr({compute(){if(!this.thread){return clear();}
if(this.thread.rtc){return this.env._t("Disconnect");}else{return this.env._t("Join Call");}},default:'',}),callMainView:one('CallMainView',{identifying:true,inverse:'callActionListView',}),callView:one('CallView',{related:'callMainView.callView',required:true,}),cameraButtonTitle:attr({compute(){if(this.messaging.rtc.sendUserVideo){return this.env._t("Stop camera");}else{return this.env._t("Turn camera on");}},default:'',}),headphoneButtonTitle:attr({compute(){if(!this.messaging.rtc.currentRtcSession){return clear();}
if(this.messaging.rtc.currentRtcSession.isDeaf){return this.env._t("Undeafen");}else{return this.env._t("Deafen");}},default:'',}),isSmall:attr({compute(){return Boolean(this.callView&&this.callView.threadView.compact&&!this.callView.isFullScreen);},}),microphoneButtonTitle:attr({compute(){if(!this.messaging.rtc.currentRtcSession){return clear();}
if(this.messaging.rtc.currentRtcSession.isMute){return this.env._t("Unmute");}else{return this.env._t("Mute");}},}),moreButtonRef:attr(),moreMenuPopoverView:one('PopoverView',{inverse:'callActionListViewOwnerAsMoreMenu',}),screenSharingButtonTitle:attr({compute(){if(this.messaging.rtc.sendDisplay){return this.env._t("Stop screen sharing");}else{return this.env._t("Share screen");}},default:'',}),thread:one('Thread',{related:'callMainView.thread',required:true,}),},});return __exports;});;

/* /mail/static/src/models/call_demo_view.js */
odoo.define('@mail/models/call_demo_view',async function(require){'use strict';let __exports={};const{attr,one}=require('@mail/model/model_field');const{registerModel}=require('@mail/model/model_core');registerModel({name:'CallDemoView',recordMethods:{disableMicrophone(){this.audioRef.el.srcObject=null;if(!this.audioStream){return;}
this.stopTracksOnMediaStream(this.audioStream);this.update({audioStream:null});},disableVideo(){this.videoRef.el.srcObject=null;if(!this.videoStream){return;}
this.stopTracksOnMediaStream(this.videoStream);this.update({videoStream:null});},async enableMicrophone(){if(!this.doesBrowserSupportMediaDevices){return;}
try{const audioStream=await navigator.mediaDevices.getUserMedia({audio:true});this.update({audioStream});this.audioRef.el.srcObject=this.audioStream;}catch{}},async enableVideo(){if(!this.doesBrowserSupportMediaDevices){return;}
try{const videoStream=await navigator.mediaDevices.getUserMedia({video:true});this.update({videoStream});this.videoRef.el.srcObject=this.videoStream;}catch{}},onClickDisableMicrophoneButton(){this.disableMicrophone();},onClickDisableVideoButton(){this.disableVideo();},onClickEnableMicrophoneButton(){this.enableMicrophone();},onClickEnableVideoButton(){this.enableVideo();},stopTracksOnMediaStream(mediaStream){for(const track of mediaStream.getTracks()){track.stop();}},},fields:{audioRef:attr(),audioStream:attr({default:null,}),doesBrowserSupportMediaDevices:attr({compute(){return Boolean(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia&&window.MediaStream);},}),isMicrophoneEnabled:attr({compute(){return this.audioStream!==null;},}),isVideoEnabled:attr({compute(){return this.videoStream!==null;},}),videoRef:attr(),videoStream:attr({default:null,}),welcomeView:one('WelcomeView',{identifying:true,inverse:'callDemoView',}),},});return __exports;});;

/* /mail/static/src/models/call_invite_request_popup.js */
odoo.define('@mail/models/call_invite_request_popup',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'CallInviteRequestPopup',recordMethods:{onClickRefuse(ev){if(this.thread.hasPendingRtcRequest){return;}
this.thread.leaveCall();},async onClickAccept(ev){this.thread.open();if(this.thread.hasPendingRtcRequest){return;}
await this.thread.toggleCall();},onClickAvatar(ev){this.thread.open();},},fields:{thread:one('Thread',{identifying:true,inverse:'callInviteRequestPopup',}),},});return __exports;});;

/* /mail/static/src/models/call_main_view.js */
odoo.define('@mail/models/call_main_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{isEventHandled,markEventHandled}=require('@mail/utils/utils');registerModel({name:'CallMainView',recordMethods:{calculateTessellation({aspectRatio=1,containerHeight,containerWidth,tileCount}){let optimalLayout={area:0,cols:0,tileHeight:0,tileWidth:0,};for(let columnCount=1;columnCount<=tileCount;columnCount++){const rowCount=Math.ceil(tileCount/columnCount);const potentialHeight=containerWidth/(columnCount*aspectRatio);const potentialWidth=containerHeight/rowCount;let tileHeight;let tileWidth;if(potentialHeight>potentialWidth){tileHeight=Math.floor(potentialWidth);tileWidth=Math.floor(tileHeight*aspectRatio);}else{tileWidth=Math.floor(containerWidth/columnCount);tileHeight=Math.floor(tileWidth/aspectRatio);}
const area=tileHeight*tileWidth;if(area<=optimalLayout.area){continue;}
optimalLayout={area,tileHeight,tileWidth,};}
return optimalLayout;},onClick(ev){this._showOverlay();},onClickHideSidebar(ev){this.callView.update({isSidebarOpen:false});},onClickShowSidebar(ev){this.callView.update({isSidebarOpen:true});},onComponentUpdate(){if(!this.exists()){return;}
this._updateLayout();},onMouseleave(ev){if(ev.relatedTarget&&ev.relatedTarget.closest('.o_CallActionList_popover')){return;}
if(!this.exists()){return;}
this.update({showOverlay:false});},onMouseMove(ev){if(!this.exists()){return;}
if(isEventHandled(ev,'CallMainView.MouseMoveOverlay')){return;}
this._showOverlay();},onMouseMoveOverlay(ev){if(!this.exists()){return;}
markEventHandled(ev,'CallMainView.MouseMoveOverlay');this.update({showOverlay:true,showOverlayTimer:clear(),});},onResize(){if(!this.exists()){return;}
this._updateLayout();},onShowOverlayTimeout(){this.update({showOverlay:false,showOverlayTimer:clear(),});},_showOverlay(){this.update({showOverlay:true,showOverlayTimer:{doReset:this.showOverlayTimer?true:undefined},});},_updateLayout(){if(!this.component.root.el||!this.tileContainerRef.el){return;}
const{width,height}=this.tileContainerRef.el.getBoundingClientRect();const{tileWidth,tileHeight}=this.calculateTessellation({aspectRatio:this.callView.aspectRatio,containerHeight:height,containerWidth:width,tileCount:this.tileContainerRef.el.children.length,});this.update({tileHeight,tileWidth,});},},fields:{callActionListView:one('CallActionListView',{default:{},inverse:'callMainView',readonly:true,}),callView:one('CallView',{identifying:true,inverse:'callMainView',}),component:attr(),hasSidebarButton:attr({compute(){return Boolean(this.callView.activeRtcSession&&this.showOverlay&&!this.callView.threadView.compact);},}),isControllerFloating:attr({compute(){return Boolean(this.callView.isFullScreen||this.callView.activeRtcSession&&!this.callView.threadView.compact);},default:false,}),mainTiles:many('CallMainViewTile',{compute(){if(this.callView.activeRtcSession){return[{channelMember:this.callView.activeRtcSession.channelMember}];}
return this.callView.filteredChannelMembers.map(channelMember=>({channelMember}));},inverse:'callMainViewOwner',}),showOverlay:attr({default:true,}),showOverlayTimer:one('Timer',{inverse:'callMainViewAsShowOverlay',}),thread:one('Thread',{related:'callView.thread',required:true,}),tileContainerRef:attr(),tileHeight:attr({default:0,}),tileWidth:attr({default:0,}),},});return __exports;});;

/* /mail/static/src/models/call_main_view_tile.js */
odoo.define('@mail/models/call_main_view_tile',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'CallMainViewTile',fields:{callMainViewOwner:one('CallMainView',{identifying:true,inverse:'mainTiles',}),channelMember:one('ChannelMember',{identifying:true,}),participantCard:one('CallParticipantCard',{default:{},inverse:'mainViewTileOwner',}),},});return __exports;});;

/* /mail/static/src/models/call_option_menu.js */
odoo.define('@mail/models/call_option_menu',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'CallOptionMenu',recordMethods:{async onClickDownloadLogs(ev){const channel=this.callActionListView.thread;if(!channel.rtc){return;}
const data=window.JSON.stringify(channel.rtc.logs);const blob=new window.Blob([data],{type:'application/json'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download=`RtcLogs_Channel${channel.id}_Session${channel.rtc.currentRtcSession.id}_${window.moment().format('YYYY-MM-DD_HH-mm')}.json`;a.click();window.URL.revokeObjectURL(url);},},fields:{component:attr(),callActionListView:one('CallActionListView',{related:'popoverViewOwner.callActionListViewOwnerAsMoreMenu',}),callView:one('CallView',{related:'callActionListView.callView',required:true,}),popoverViewOwner:one('PopoverView',{identifying:true,inverse:'callOptionMenuView',}),},});return __exports;});;

/* /mail/static/src/models/call_participant_card.js */
odoo.define('@mail/models/call_participant_card',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{isEventHandled,markEventHandled}=require('@mail/utils/utils');registerModel({name:'CallParticipantCard',identifyingMode:'xor',recordMethods:{async onClick(ev){if(isEventHandled(ev,'CallParticipantCard.clickVolumeAnchor')){return;}
if(this.rtcSession){if(this.callView.activeRtcSession===this.rtcSession&&this.mainViewTileOwner){this.callView.channel.update({activeRtcSession:clear()});}else{this.callView.channel.update({activeRtcSession:this.rtcSession});}
return;}
const channel=this.channelMember.channel.thread;const channelData=await this.messaging.rpc(({route:'/mail/rtc/channel/cancel_call_invitation',params:{channel_id:channel.id,member_ids:[this.channelMember.id],},}));if(!channel.exists()){return;}
channel.update(channelData);},async onClickVolumeAnchor(ev){markEventHandled(ev,'CallParticipantCard.clickVolumeAnchor');this.update({callParticipantCardPopoverView:this.callParticipantCardPopoverView?clear():{}});},async onContextMenu(ev){ev.preventDefault();if(!this.volumeMenuAnchorRef||!this.volumeMenuAnchorRef.el){return;}
this.volumeMenuAnchorRef.el.click();},},fields:{callParticipantCardPopoverView:one('PopoverView',{inverse:'callParticipantCardOwner',}),channelMember:one('ChannelMember',{compute(){if(this.sidebarViewTileOwner){return this.sidebarViewTileOwner.channelMember;}
return this.mainViewTileOwner.channelMember;},inverse:'callParticipantCards',}),mainViewTileOwner:one('CallMainViewTile',{identifying:true,inverse:'participantCard',}),isMinimized:attr({compute(){return Boolean(this.callView&&this.callView.isMinimized);},default:false,}),isTalking:attr({compute(){return Boolean(this.rtcSession&&this.rtcSession.isTalking&&!this.rtcSession.isMute);},default:false,}),callView:one('CallView',{compute(){if(this.sidebarViewTileOwner){return this.sidebarViewTileOwner.callSidebarViewOwner.callView;}
return this.mainViewTileOwner.callMainViewOwner.callView;},inverse:'participantCards',}),rtcSession:one('RtcSession',{related:'channelMember.rtcSession',inverse:'callParticipantCards',}),sidebarViewTileOwner:one('CallSidebarViewTile',{identifying:true,inverse:'participantCard',}),callParticipantVideoView:one('CallParticipantVideoView',{compute(){if(this.rtcSession&&this.rtcSession.videoStream){return{};}
return clear();},inverse:'callParticipantCardOwner',}),volumeMenuAnchorRef:attr(),},});return __exports;});;

/* /mail/static/src/models/call_participant_card_popover_content_view.js */
odoo.define('@mail/models/call_participant_card_popover_content_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'CallParticipantCardPopoverContentView',recordMethods:{onChangeVolume(ev){this.callParticipantCard.rtcSession&&this.callParticipantCard.rtcSession.setVolume(parseFloat(ev.target.value));},},fields:{callParticipantCard:one('CallParticipantCard',{related:'popoverViewOwner.callParticipantCardOwner',}),hasConnectionInfo:attr({compute(){return Boolean(this.callParticipantCard.rtcSession&&this.env.debug&&this.callParticipantCard.channelMember.channel.thread.rtc);},}),inboundConnectionTypeText:attr({compute(){if(!this.callParticipantCard.rtcSession||!this.callParticipantCard.rtcSession.remoteCandidateType){return sprintf(this.env._t('From %s: no connection'),this.callParticipantCard.channelMember.persona.name);}
return sprintf(this.env._t('From %(name)s: %(candidateType)s (%(protocol)s)'),{candidateType:this.callParticipantCard.rtcSession.remoteCandidateType,name:this.callParticipantCard.channelMember.persona.name,protocol:this.messaging.rtc.protocolsByCandidateTypes[this.callParticipantCard.rtcSession.remoteCandidateType],},);},}),outboundConnectionTypeText:attr({compute(){if(!this.callParticipantCard.rtcSession||!this.callParticipantCard.rtcSession.localCandidateType){return sprintf(this.env._t('To %s: no connection'),this.callParticipantCard.channelMember.persona.name);}
return sprintf(this.env._t('To %(name)s: %(candidateType)s (%(protocol)s)'),{candidateType:this.callParticipantCard.rtcSession.localCandidateType,name:this.callParticipantCard.channelMember.persona.name,protocol:this.messaging.rtc.protocolsByCandidateTypes[this.callParticipantCard.rtcSession.localCandidateType],},);},}),popoverViewOwner:one('PopoverView',{identifying:true,inverse:'callParticipantCardPopoverContentView',})},});return __exports;});;

/* /mail/static/src/models/call_participant_video_view.js */
odoo.define('@mail/models/call_participant_video_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'CallParticipantVideoView',recordMethods:{onComponentUpdate(){if(!this.component.root.el){return;}
if(!this.rtcSession||!this.rtcSession.videoStream){this.component.root.el.srcObject=undefined;}else{this.component.root.el.srcObject=this.rtcSession.videoStream;}
this.component.root.el.load();},async onVideoLoadedMetaData(ev){try{await ev.target.play();}catch(error){if(typeof error==='object'&&error.name==='NotAllowedError'){return;}
throw error;}},},fields:{callParticipantCardOwner:one('CallParticipantCard',{identifying:true,inverse:'callParticipantVideoView',}),component:attr(),rtcSession:one('RtcSession',{compute(){if(this.callParticipantCardOwner.rtcSession){return this.callParticipantCardOwner.rtcSession;}
return clear();},}),},});return __exports;});;

/* /mail/static/src/models/call_settings_menu.js */
odoo.define('@mail/models/call_settings_menu',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registerModel}=require('@mail/model/model_core');const{clear}=require('@mail/model/model_field_command');const{attr,one}=require('@mail/model/model_field');registerModel({name:'CallSettingsMenu',identifyingMode:'xor',lifecycleHooks:{async _created(){browser.addEventListener('keydown',this._onKeyDown);browser.addEventListener('keyup',this._onKeyUp);if(!this.messaging.browser.navigator.mediaDevices){this.messaging.userNotificationManager.sendNotification({message:this.env._t("SSL might not be set up properly"),title:this.env._t("Media devices unobtainable"),type:'warning',});console.warn('Media devices unobtainable. SSL might not be set up properly.');return;}
this.update({userDevices:await this.messaging.browser.navigator.mediaDevices.enumerateDevices()});},_willDelete(){browser.removeEventListener('keydown',this._onKeyDown);browser.removeEventListener('keyup',this._onKeyUp);},},recordMethods:{onChangeBackgroundBlurAmount(ev){this.userSetting.update({backgroundBlurAmount:Number(ev.target.value),});},onChangeBlur(ev){this.userSetting.update({useBlur:!this.userSetting.useBlur,});},onChangeDelay(ev){this.userSetting.setDelayValue(ev.target.value);},onChangeEdgeBlurAmount(ev){this.userSetting.update({edgeBlurAmount:Number(ev.target.value),});},onChangePushToTalk(){if(this.userSetting.usePushToTalk){this.userSetting.update({isRegisteringKey:false,});}
this.userSetting.togglePushToTalk();},onChangeSelectAudioInput(ev){this.userSetting.setAudioInputDevice(ev.target.value);},onChangeThreshold(ev){this.userSetting.setThresholdValue(parseFloat(ev.target.value));},onChangeVideoFilterCheckbox(ev){const showOnlyVideo=ev.target.checked;this.thread.channel.update({showOnlyVideo});if(!this.callView){return;}
const activeRtcSession=this.callView.activeRtcSession;if(showOnlyVideo&&activeRtcSession&&!activeRtcSession.videoStream){this.callView.channel.update({activeRtcSession:clear()});}},onClickRegisterKeyButton(){this.userSetting.update({isRegisteringKey:!this.isRegisteringKey,});},_onKeyDown(ev){if(!this.userSetting.isRegisteringKey){return;}
ev.stopPropagation();ev.preventDefault();this.userSetting.setPushToTalkKey(ev);},_onKeyUp(ev){if(!this.userSetting.isRegisteringKey){return;}
ev.stopPropagation();ev.preventDefault();this.userSetting.update({isRegisteringKey:false,});},},fields:{callView:one('CallView',{compute(){if(this.threadViewOwner){return this.threadViewOwner.callView;}
if(this.chatWindowOwner&&this.chatWindowOwner.threadView){return this.chatWindowOwner.threadView.callView;}
return clear();},}),chatWindowOwner:one('ChatWindow',{identifying:true,inverse:'callSettingsMenu',}),thread:one('Thread',{compute(){if(this.threadViewOwner){return this.threadViewOwner.thread;}
if(this.chatWindowOwner){return this.chatWindowOwner.thread;}
return clear();},}),threadViewOwner:one('ThreadView',{identifying:true,inverse:'callSettingsMenu',}),userDevices:attr({default:[],}),userSetting:one('UserSetting',{related:'messaging.userSetting',}),},});return __exports;});;

/* /mail/static/src/models/call_sidebar_view.js */
odoo.define('@mail/models/call_sidebar_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many,one}=require('@mail/model/model_field');registerModel({name:'CallSidebarView',fields:{callView:one('CallView',{identifying:true,inverse:'callSidebarView',}),sidebarTiles:many('CallSidebarViewTile',{compute(){return this.callView.filteredChannelMembers.map(channelMember=>({channelMember}));},inverse:'callSidebarViewOwner',}),},});return __exports;});;

/* /mail/static/src/models/call_sidebar_view_tile.js */
odoo.define('@mail/models/call_sidebar_view_tile',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'CallSidebarViewTile',fields:{callSidebarViewOwner:one('CallSidebarView',{identifying:true,inverse:'sidebarTiles',}),channelMember:one('ChannelMember',{identifying:true,}),participantCard:one('CallParticipantCard',{default:{},inverse:'sidebarViewTileOwner',}),},});return __exports;});;

/* /mail/static/src/models/call_systray_menu.js */
odoo.define('@mail/models/call_systray_menu',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'CallSystrayMenu',fields:{buttonTitle:attr({compute(){if(!this.messaging.rtc.channel){return clear();}
return sprintf(this.env._t("Open conference: %s"),this.messaging.rtc.channel.displayName,);},default:'',}),rtc:one('Rtc',{identifying:true,inverse:'callSystrayMenu',}),},});return __exports;});;

/* /mail/static/src/models/call_view.js */
odoo.define('@mail/models/call_view',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'CallView',lifecycleHooks:{_created(){browser.addEventListener('fullscreenchange',this._onFullScreenChange);},_willDelete(){browser.removeEventListener('fullscreenchange',this._onFullScreenChange);},},recordMethods:{onRtcSettingsDialogClosed(ev){this.messaging.userSetting.callSettingsMenu.toggle();},async activateFullScreen(){const el=document.body;try{if(el.requestFullscreen){await el.requestFullscreen();}else if(el.mozRequestFullScreen){await el.mozRequestFullScreen();}else if(el.webkitRequestFullscreen){await el.webkitRequestFullscreen();}
if(this.exists()){this.update({isFullScreen:true});}}catch(_e){if(this.exists()){this.update({isFullScreen:false});}
this.messaging.notify({message:this.env._t("The FullScreen mode was denied by the browser"),type:'warning',});}},async deactivateFullScreen(){const fullScreenElement=document.webkitFullscreenElement||document.fullscreenElement;if(fullScreenElement){if(document.exitFullscreen){await document.exitFullscreen();}else if(document.mozCancelFullScreen){await document.mozCancelFullScreen();}else if(document.webkitCancelFullScreen){await document.webkitCancelFullScreen();}}
if(this.exists()){this.update({isFullScreen:false});}},_onChangeRtcChannel(){this.deactivateFullScreen();if(!this.thread&&!this.thread.rtc){this.channel.update({showOnlyVideo:false});}},_onChangeVideoCount(){if(this.thread.videoCount===0){this.channel.update({showOnlyVideo:false});}},_onFullScreenChange(){const fullScreenElement=document.webkitFullscreenElement||document.fullscreenElement;if(fullScreenElement){this.update({isFullScreen:true});return;}
this.update({isFullScreen:false});},},fields:{activeRtcSession:one('RtcSession',{related:'channel.activeRtcSession',}),aspectRatio:attr({compute(){const rtcAspectRatio=this.messaging.rtc.videoConfig&&this.messaging.rtc.videoConfig.aspectRatio;const aspectRatio=rtcAspectRatio||16/9;return this.isMinimized?1:aspectRatio;},default:16/9,}),callMainView:one('CallMainView',{default:{},inverse:'callView',readonly:true,}),callSidebarView:one('CallSidebarView',{compute(){if(this.activeRtcSession&&this.isSidebarOpen&&!this.threadView.compact){return{};}
return clear();},inverse:'callView',}),channel:one('Channel',{related:'thread.channel',}),filteredChannelMembers:many('ChannelMember',{compute(){if(!this.channel){return clear();}
const channelMembers=[];for(const channelMember of this.channel.callParticipants){if(this.channel.showOnlyVideo&&this.thread.videoCount>0&&!channelMember.isStreaming){continue;}
channelMembers.push(channelMember);}
return channelMembers;},}),isFullScreen:attr({default:false,}),isMinimized:attr({compute(){if(!this.threadView||!this.thread){return true;}
if(this.isFullScreen||this.threadView.compact){return false;}
if(this.activeRtcSession){return false;}
return!this.thread.rtc||this.thread.videoCount===0;},default:false,}),isSidebarOpen:attr({default:true,}),layoutSettingsTitle:attr({compute(){return this.env._t("Change Layout");},}),participantCards:many('CallParticipantCard',{inverse:'callView',isCausal:true,}),settingsTitle:attr({compute(){return this.env._t("Settings");},}),thread:one('Thread',{related:'threadView.thread',required:true,}),threadView:one('ThreadView',{identifying:true,inverse:'callView',}),},onChanges:[{dependencies:['thread.rtc'],methodName:'_onChangeRtcChannel',},{dependencies:['thread.videoCount'],methodName:'_onChangeVideoCount',},],});return __exports;});;

/* /mail/static/src/models/canned_response.js */
odoo.define('@mail/models/canned_response',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{cleanSearchTerm}=require('@mail/utils/utils');registerModel({name:'CannedResponse',modelMethods:{fetchSuggestions(searchTerm,{thread}={}){},getSuggestionSortFunction(searchTerm,{thread}={}){const cleanedSearchTerm=cleanSearchTerm(searchTerm);return(a,b)=>{const cleanedAName=cleanSearchTerm(a.source||'');const cleanedBName=cleanSearchTerm(b.source||'');if(cleanedAName.startsWith(cleanedSearchTerm)&&!cleanedBName.startsWith(cleanedSearchTerm)){return-1;}
if(!cleanedAName.startsWith(cleanedSearchTerm)&&cleanedBName.startsWith(cleanedSearchTerm)){return 1;}
if(cleanedAName<cleanedBName){return-1;}
if(cleanedAName>cleanedBName){return 1;}
return a.id-b.id;};},searchSuggestions(searchTerm,{thread}={}){const cleanedSearchTerm=cleanSearchTerm(searchTerm);return[this.messaging.cannedResponses.filter(cannedResponse=>cleanSearchTerm(cannedResponse.source).includes(cleanedSearchTerm))];},},fields:{id:attr({identifying:true,}),source:attr(),substitution:attr(),suggestable:one('ComposerSuggestable',{default:{},inverse:'cannedResponse',readonly:true,required:true,}),},});return __exports;});;

/* /mail/static/src/models/channel.js */
odoo.define('@mail/models/channel',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one,many}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'Channel',modelMethods:{async performRpcCreateChat({partnerIds,pinForCurrentPartner}){const data=await this.messaging.rpc({model:'mail.channel',method:'channel_get',kwargs:{partners_to:partnerIds,pin:pinForCurrentPartner,},});if(!data){return;}
const{channel}=this.messaging.models['Thread'].insert(this.messaging.models['Thread'].convertData(data));return channel;},},recordMethods:{async fetchChannelMembers(){const channelData=await this.messaging.rpc({model:'mail.channel',method:'load_more_members',args:[[this.id]],kwargs:{known_member_ids:this.channelMembers.map(channelMember=>channelMember.id),},});if(!this.exists()){return;}
this.update(channelData);},},fields:{activeRtcSession:one('RtcSession'),areAllMembersLoaded:attr({compute(){return this.memberCount===this.channelMembers.length;},}),avatarCacheKey:attr(),callParticipants:many('ChannelMember',{compute(){if(!this.thread){return clear();}
const callParticipants=this.thread.invitedMembers;for(const rtcSession of this.thread.rtcSessions){callParticipants.push(rtcSession.channelMember);}
return callParticipants;},sort:[['truthy-first','rtcSession'],['smaller-first','rtcSession.id'],],}),channelMembers:many('ChannelMember',{inverse:'channel',isCausal:true,}),channelPreviewViews:many('ChannelPreviewView',{inverse:'channel',}),channel_type:attr(),correspondent:one('Partner',{compute(){if(this.channel_type==='channel'){return clear();}
const correspondents=this.channelMembers.filter(member=>member.persona&&member.persona.partner&&!member.isMemberOfCurrentUser).map(member=>member.persona.partner);if(correspondents.length===1){return correspondents[0];}
const partners=this.channelMembers.filter(member=>member.persona&&member.persona.partner).map(member=>member.persona.partner);if(partners.length===1){return partners[0];}
return clear();},}),correspondentOfDmChat:one('Partner',{compute(){if(this.channel_type==='chat'&&this.correspondent){return this.correspondent;}
return clear();},inverse:'dmChatWithCurrentPartner',}),custom_channel_name:attr(),discussSidebarCategory:one('DiscussSidebarCategory',{compute(){switch(this.channel_type){case'channel':return this.messaging.discuss.categoryChannel;case'chat':case'group':return this.messaging.discuss.categoryChat;default:return clear();}},}),discussSidebarCategoryItem:one('DiscussSidebarCategoryItem',{compute(){if(!this.thread){return clear();}
if(!this.thread.isPinned){return clear();}
if(!this.discussSidebarCategory){return clear();}
return{category:this.discussSidebarCategory};},inverse:'channel',}),displayName:attr({compute(){if(!this.thread){return;}
if(this.channel_type==='chat'&&this.correspondent){return this.custom_channel_name||this.thread.getMemberName(this.correspondent.persona);}
if(this.channel_type==='group'&&!this.thread.name){return this.channelMembers.filter(channelMember=>channelMember.persona).map(channelMember=>this.thread.getMemberName(channelMember.persona)).join(this.env._t(", "));}
return this.thread.name;},}),id:attr({identifying:true,}),localMessageUnreadCounter:attr({compute(){if(!this.thread){return clear();}
let baseCounter=this.serverMessageUnreadCounter;let countFromId=this.thread.serverLastMessage?this.thread.serverLastMessage.id:0;const firstMessage=this.thread.orderedMessages[0];if(firstMessage&&this.thread.lastSeenByCurrentPartnerMessageId&&this.thread.lastSeenByCurrentPartnerMessageId>=firstMessage.id){baseCounter=0;countFromId=this.thread.lastSeenByCurrentPartnerMessageId;}
return this.thread.orderedMessages.reduce((total,message)=>{if(message.id<=countFromId){return total;}
return total+1;},baseCounter);},}),memberCount:attr(),memberOfCurrentUser:one('ChannelMember',{inverse:'channelAsMemberOfCurrentUser',}),orderedOfflineMembers:many('ChannelMember',{inverse:'channelAsOfflineMember',sort:[['truthy-first','persona.name'],['case-insensitive-asc','persona.name'],],}),orderedOnlineMembers:many('ChannelMember',{inverse:'channelAsOnlineMember',sort:[['truthy-first','persona.name'],['case-insensitive-asc','persona.name'],],}),serverMessageUnreadCounter:attr({default:0,}),showOnlyVideo:attr({default:false,}),thread:one('Thread',{compute(){return{id:this.id,model:'mail.channel',};},inverse:'channel',isCausal:true,required:true,}),unknownMemberCount:attr({compute(){return this.memberCount-this.channelMembers.length;},}),},});return __exports;});;

/* /mail/static/src/models/channel_command.js */
odoo.define('@mail/models/channel_command',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{cleanSearchTerm}=require('@mail/utils/utils');registerModel({name:'ChannelCommand',modelMethods:{fetchSuggestions(searchTerm,{thread}={}){},getSuggestionSortFunction(searchTerm,{thread}={}){const cleanedSearchTerm=cleanSearchTerm(searchTerm);return(a,b)=>{const isATypeSpecific=a.channel_types;const isBTypeSpecific=b.channel_types;if(isATypeSpecific&&!isBTypeSpecific){return-1;}
if(!isATypeSpecific&&isBTypeSpecific){return 1;}
const cleanedAName=cleanSearchTerm(a.name||'');const cleanedBName=cleanSearchTerm(b.name||'');if(cleanedAName.startsWith(cleanedSearchTerm)&&!cleanedBName.startsWith(cleanedSearchTerm)){return-1;}
if(!cleanedAName.startsWith(cleanedSearchTerm)&&cleanedBName.startsWith(cleanedSearchTerm)){return 1;}
if(cleanedAName<cleanedBName){return-1;}
if(cleanedAName>cleanedBName){return 1;}
return a.id-b.id;};},searchSuggestions(searchTerm,{thread}={}){if(!thread.channel){return[[]];}
const cleanedSearchTerm=cleanSearchTerm(searchTerm);return[this.messaging.commands.filter(command=>{if(!cleanSearchTerm(command.name).includes(cleanedSearchTerm)){return false;}
if(command.channel_types){return command.channel_types.includes(thread.channel.channel_type);}
return true;})];},},recordMethods:{async execute({channel,body=''}){return this.messaging.rpc({model:'mail.channel',method:this.methodName,args:[[channel.id]],kwargs:{body},});},},fields:{channel_types:attr(),help:attr({required:true,}),methodName:attr({required:true,}),name:attr({identifying:true,}),suggestable:one('ComposerSuggestable',{default:{},inverse:'channelCommand',readonly:true,required:true,}),},});return __exports;});;

/* /mail/static/src/models/channel_invitation_form.js */
odoo.define('@mail/models/channel_invitation_form',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,link,unlink}=require('@mail/model/model_field_command');const{cleanSearchTerm}=require('@mail/utils/utils');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'ChannelInvitationForm',identifyingMode:'xor',recordMethods:{async onClickCopy(ev){await navigator.clipboard.writeText(this.thread.invitationLink);this.messaging.notify({message:this.env._t('Link copied!'),type:'success',});},async onClickInvite(ev){if(this.thread.channel.channel_type==='chat'){const partners_to=[...new Set([this.messaging.currentPartner.id,...this.thread.channel.channelMembers.filter(member=>member.persona&&member.persona.partner).map(member=>member.persona.partner.id),...this.selectedPartners.map(partner=>partner.id),])];const channel=await this.messaging.models['Thread'].createGroupChat({partners_to});if(this.thread.rtc){await channel.toggleCall({startWithVideo:!!this.thread.rtc.videoTrack,videoType:this.thread.rtc.sendUserVideo?'user-video':'display',});}
if(channel.exists()){channel.open();}}else{await this.messaging.rpc(({model:'mail.channel',method:'add_members',args:[[this.thread.id]],kwargs:{partner_ids:this.selectedPartners.map(partner=>partner.id),invite_to_rtc_call:!!this.thread.rtc,},}));}
if(this.exists()){this.delete();}},onClickSelectablePartner(partner){if(this.selectedPartners.includes(partner)){this.update({selectedPartners:unlink(partner)});return;}
this.update({selectedPartners:link(partner)});},onClickSelectedPartner(partner){this.update({selectedPartners:unlink(partner)});},onComponentUpdate(){if(this.doFocusOnSearchInput&&this.searchInputRef.el){this.searchInputRef.el.focus();this.searchInputRef.el.setSelectionRange(this.searchTerm.length,this.searchTerm.length);this.update({doFocusOnSearchInput:clear()});}},onFocusInvitationLinkInput(ev){ev.target.select();},onInputPartnerCheckbox(partner,ev){if(!ev.target.checked){this.update({selectedPartners:unlink(partner)});return;}
this.update({selectedPartners:link(partner)});},async onInputSearch(ev){this.update({searchTerm:ev.target.value});this.searchPartnersToInvite();},async searchPartnersToInvite(){if(this.hasSearchRpcInProgress){this.update({hasPendingSearchRpc:true});return;}
this.update({hasPendingSearchRpc:false,hasSearchRpcInProgress:true,});try{const channelId=(this.thread&&this.thread.model==='mail.channel')?this.thread.id:undefined;const{count,partners:partnersData}=await this.messaging.rpc({model:'res.partner',method:'search_for_channel_invite',kwargs:{channel_id:channelId,search_term:cleanSearchTerm(this.searchTerm),},},{shadow:true});if(!this.exists()){return;}
this.update({searchResultCount:count,selectablePartners:partnersData,});}finally{if(this.exists()){this.update({hasSearchRpcInProgress:false});if(this.hasPendingSearchRpc){this.searchPartnersToInvite();}}}},},fields:{accessRestrictedToGroupText:attr({compute(){if(!this.thread){return clear();}
if(!this.thread.authorizedGroupFullName){return clear();}
return sprintf(this.env._t('Access restricted to group "%(groupFullName)s"'),{'groupFullName':this.thread.authorizedGroupFullName});},}),chatWindow:one('ChatWindow',{identifying:true,inverse:'channelInvitationForm',}),component:attr(),doFocusOnSearchInput:attr(),hasPendingSearchRpc:attr({default:false,}),hasSearchRpcInProgress:attr({default:false,}),inviteButtonText:attr({compute(){if(!this.thread||!this.thread.channel){return clear();}
switch(this.thread.channel.channel_type){case'chat':return this.env._t("Create group chat");case'group':return this.env._t("Invite to group chat");}
return this.env._t("Invite to Channel");},}),popoverViewOwner:one('PopoverView',{identifying:true,inverse:'channelInvitationForm',isCausal:true,}),searchInputRef:attr(),searchResultCount:attr({default:0,}),searchTerm:attr({default:"",}),selectablePartners:many('Partner'),selectablePartnerViews:many('ChannelInvitationFormSelectablePartnerView',{compute(){if(this.selectablePartners.length===0){return clear();}
return this.selectablePartners.map(partner=>({partner}));},inverse:'channelInvitationFormOwner',}),selectedPartners:many('Partner'),selectedPartnerViews:many('ChannelInvitationFormSelectedPartnerView',{compute(){if(this.selectedPartners.length===0){return clear();}
return this.selectedPartners.map(partner=>({partner}));},inverse:'channelInvitationFormOwner',}),thread:one('Thread',{compute(){if(this.popoverViewOwner&&this.popoverViewOwner.threadViewTopbarOwnerAsInvite&&this.popoverViewOwner.threadViewTopbarOwnerAsInvite.thread){return this.popoverViewOwner.threadViewTopbarOwnerAsInvite.thread;}
if(this.chatWindow&&this.chatWindow.thread){return this.chatWindow.thread;}
return clear();},required:true,}),},});return __exports;});;

/* /mail/static/src/models/channel_invitation_form_selectable_partner_view.js */
odoo.define('@mail/models/channel_invitation_form_selectable_partner_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ChannelInvitationFormSelectablePartnerView',fields:{channelInvitationFormOwner:one('ChannelInvitationForm',{identifying:true,inverse:'selectablePartnerViews',}),partner:one('Partner',{identifying:true,inverse:'channelInvitationFormSelectablePartnerViews',}),personaImStatusIconView:one('PersonaImStatusIconView',{compute(){return this.partner.isImStatusSet?{}:clear();},inverse:'channelInvitationFormSelectablePartnerViewOwner',}),},});return __exports;});;

/* /mail/static/src/models/channel_invitation_form_selected_partner_view.js */
odoo.define('@mail/models/channel_invitation_form_selected_partner_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'ChannelInvitationFormSelectedPartnerView',fields:{channelInvitationFormOwner:one('ChannelInvitationForm',{identifying:true,inverse:'selectedPartnerViews',}),partner:one('Partner',{identifying:true,inverse:'channelInvitationFormSelectedPartnerViews',}),},});return __exports;});;

/* /mail/static/src/models/channel_member.js */
odoo.define('@mail/models/channel_member',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one,many}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ChannelMember',fields:{avatarUrl:attr({compute(){if(this.persona.partner){return`/mail/channel/${this.channel.id}/partner/${this.persona.partner.id}/avatar_128`;}
if(this.persona.guest){return`/mail/channel/${this.channel.id}/guest/${this.persona.guest.id}/avatar_128?unique=${this.persona.guest.name}`;}
return clear();},}),callParticipantCards:many('CallParticipantCard',{inverse:'channelMember',isCausal:true,}),channel:one('Channel',{inverse:'channelMembers',readonly:true,required:true,}),channelAsMemberOfCurrentUser:one('Channel',{compute(){return this.isMemberOfCurrentUser?this.channel:clear();},inverse:'memberOfCurrentUser',}),channelAsOfflineMember:one('Channel',{compute(){if(this.persona.partner){return!this.persona.partner.isOnline?this.channel:clear();}
if(this.persona.guest){return!this.persona.guest.isOnline?this.channel:clear();}
return clear();},inverse:'orderedOfflineMembers',}),channelAsOnlineMember:one('Channel',{compute(){if(this.persona.partner){return this.persona.partner.isOnline?this.channel:clear();}
if(this.persona.guest){return this.persona.guest.isOnline?this.channel:clear();}
return clear();},inverse:'orderedOnlineMembers',}),channelMemberViews:many('ChannelMemberView',{inverse:'channelMember',}),id:attr({identifying:true,}),isMemberOfCurrentUser:attr({compute(){if(this.messaging.currentPartner){return this.messaging.currentPartner.persona===this.persona;}
if(this.messaging.currentGuest){return this.messaging.currentGuest.persona===this.persona;}
return clear();},default:false,}),isStreaming:attr({compute(){return Boolean(this.rtcSession&&this.rtcSession.videoStream);},}),isTyping:attr({default:false,}),otherMemberLongTypingInThreadTimers:many('OtherMemberLongTypingInThreadTimer',{inverse:'member',}),persona:one('Persona',{inverse:'channelMembers',readonly:true,required:true,}),rtcSession:one('RtcSession',{inverse:'channelMember',}),},});return __exports;});;

/* /mail/static/src/models/channel_member_list_category_view.js */
odoo.define('@mail/models/channel_member_list_category_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'ChannelMemberListCategoryView',identifyingMode:'xor',fields:{channel:one('Channel',{compute(){if(this.channelMemberListViewOwnerAsOffline){return this.channelMemberListViewOwnerAsOffline.channel;}
if(this.channelMemberListViewOwnerAsOnline){return this.channelMemberListViewOwnerAsOnline.channel;}},required:true,}),channelMemberListViewOwnerAsOffline:one('ChannelMemberListView',{identifying:true,inverse:'offlineCategoryView',}),channelMemberListViewOwnerAsOnline:one('ChannelMemberListView',{identifying:true,inverse:'onlineCategoryView',}),channelMemberViews:many('ChannelMemberView',{compute(){if(this.members.length===0){return clear();}
return this.members.map(channelMember=>({channelMember}));},inverse:'channelMemberListCategoryViewOwner',}),members:many('ChannelMember',{compute(){if(this.channelMemberListViewOwnerAsOnline){return this.channel.orderedOnlineMembers;}
if(this.channelMemberListViewOwnerAsOffline){return this.channel.orderedOfflineMembers;}
return clear();},}),title:attr({compute(){let categoryText="";if(this.channelMemberListViewOwnerAsOnline){categoryText=this.env._t("Online");}
if(this.channelMemberListViewOwnerAsOffline){categoryText=this.env._t("Offline");}
return sprintf(this.env._t("%(categoryText)s - %(memberCount)s"),{categoryText,memberCount:this.members.length,});},}),},});return __exports;});;

/* /mail/static/src/models/channel_member_list_view.js */
odoo.define('@mail/models/channel_member_list_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ChannelMemberListView',identifyingMode:'xor',lifecycleHooks:{_created(){this.channel.fetchChannelMembers();},},recordMethods:{async onClickLoadMoreMembers(){this.channel.fetchChannelMembers();},},fields:{channel:one('Channel',{compute(){if(this.chatWindowOwner){return this.chatWindowOwner.thread.channel;}
if(this.threadViewOwner){return this.threadViewOwner.thread.channel;}
return clear();},}),chatWindowOwner:one('ChatWindow',{identifying:true,inverse:'channelMemberListView',}),offlineCategoryView:one('ChannelMemberListCategoryView',{compute(){if(this.channel&&this.channel.orderedOfflineMembers.length>0){return{};}
return clear();},inverse:'channelMemberListViewOwnerAsOffline',}),onlineCategoryView:one('ChannelMemberListCategoryView',{compute(){if(this.channel&&this.channel.orderedOnlineMembers.length>0){return{};}
return clear();},inverse:'channelMemberListViewOwnerAsOnline',}),threadViewOwner:one('ThreadView',{identifying:true,inverse:'channelMemberListView',}),},});return __exports;});;

/* /mail/static/src/models/channel_member_view.js */
odoo.define('@mail/models/channel_member_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{isEventHandled}=require('@mail/utils/utils');registerModel({name:'ChannelMemberView',recordMethods:{onClickMember(ev){if(isEventHandled(ev,'PersonaImStatusIcon.Click')||!this.channelMember.persona.partner){return;}
this.channelMember.persona.partner.openChat();},},fields:{channelMemberListCategoryViewOwner:one('ChannelMemberListCategoryView',{identifying:true,inverse:'channelMemberViews',}),channelMember:one('ChannelMember',{identifying:true,inverse:'channelMemberViews',}),hasOpenChat:attr({compute(){return this.channelMember.persona.partner?true:false;},}),memberTitleText:attr({compute(){return this.hasOpenChat?this.env._t("Open chat"):'';},}),personaImStatusIconView:one('PersonaImStatusIconView',{compute(){if(this.channelMember.persona.guest&&this.channelMember.persona.guest.im_status){return{};}
return this.channelMember.persona.partner&&this.channelMember.persona.partner.isImStatusSet?{}:clear();},inverse:'channelMemberViewOwner',}),},});return __exports;});;

/* /mail/static/src/models/channel_preview_view.js */
odoo.define('@mail/models/channel_preview_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{htmlToTextContentInline}=require('@mail/js/utils');registerModel({name:'ChannelPreviewView',recordMethods:{onClick(ev){if(!this.exists()){return;}
const markAsRead=this.markAsReadRef.el;if(markAsRead&&markAsRead.contains(ev.target)){return;}
this.thread.open();if(!this.messaging.device.isSmall){this.messaging.messagingMenu.close();}},onClickMarkAsRead(ev){if(this.thread.lastNonTransientMessage){this.thread.markAsSeen(this.thread.lastNonTransientMessage);}},},fields:{channel:one('Channel',{identifying:true,inverse:'channelPreviewViews',}),imageUrl:attr({compute(){if(this.channel.correspondent){return this.channel.correspondent.avatarUrl;}
return`/web/image/mail.channel/${this.channel.id}/avatar_128?unique=${this.channel.avatarCacheKey}`;},}),inlineLastMessageBody:attr({compute(){if(!this.thread||!this.thread.lastMessage){return clear();}
return htmlToTextContentInline(this.thread.lastMessage.prettyBody);},default:"",}),isEmpty:attr({compute(){return!this.inlineLastMessageBody&&!this.lastTrackingValue;},}),lastTrackingValue:one('TrackingValue',{compute(){if(this.thread&&this.thread.lastMessage&&this.thread.lastMessage.lastTrackingValue){return this.thread.lastMessage.lastTrackingValue;}
return clear();},}),markAsReadRef:attr(),messageAuthorPrefixView:one('MessageAuthorPrefixView',{compute(){if(this.thread&&this.thread.lastMessage&&this.thread.lastMessage.author){return{};}
return clear();},inverse:'channelPreviewViewOwner',}),notificationListViewOwner:one('NotificationListView',{identifying:true,inverse:'channelPreviewViews',}),personaImStatusIconView:one('PersonaImStatusIconView',{compute(){if(!this.channel.correspondent){return clear();}
if(this.channel.correspondent.isImStatusSet){return{};}
return clear();},inverse:'channelPreviewViewOwner',}),thread:one('Thread',{related:'channel.thread',}),},});return __exports;});;

/* /mail/static/src/models/chat_window.js */
odoo.define('@mail/models/chat_window',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{isEventHandled,markEventHandled}=require('@mail/utils/utils');registerModel({name:'ChatWindow',identifyingMode:'xor',recordMethods:{close({notifyServer}={}){if(notifyServer===undefined){notifyServer=!this.messaging.device.isSmall;}
if(this.messaging.device.isSmall&&!this.messaging.discuss.discussView){this.messaging.messagingMenu.update({isOpen:true});}
if(this.thread&&notifyServer&&!this.messaging.currentGuest){this.thread.notifyFoldStateToServer('closed');}
if(this.exists()){this.delete();}},expand(){if(this.thread){this.thread.open({expanded:true});}},focus(){if(!this.thread){this.update({isDoFocus:true});}
if(this.threadView&&this.threadView.composerView){this.threadView.composerView.update({doFocus:true});}},focusNextVisibleUnfoldedChatWindow(){const nextVisibleUnfoldedChatWindow=this._getNextVisibleUnfoldedChatWindow();if(nextVisibleUnfoldedChatWindow){nextVisibleUnfoldedChatWindow.focus();}},focusPreviousVisibleUnfoldedChatWindow(){const previousVisibleUnfoldedChatWindow=this._getNextVisibleUnfoldedChatWindow({reverse:true});if(previousVisibleUnfoldedChatWindow){previousVisibleUnfoldedChatWindow.focus();}},fold({notifyServer}={}){if(notifyServer===undefined){notifyServer=!this.messaging.device.isSmall;}
this.update({isFolded:true});if(this.thread&&notifyServer&&!this.messaging.currentGuest){this.thread.notifyFoldStateToServer('folded');}},makeActive(options){this.makeVisible();this.unfold(options);if((options&&options.focus!==undefined)?options.focus:!this.messaging.device.isMobileDevice){this.focus();}},makeVisible(){if(this.isVisible){return;}
const lastVisible=this.manager.lastVisible;this.manager.swap(this,lastVisible);},async onAutocompleteSelect(ev,ui){const chat=await this.messaging.getChat({partnerId:ui.item.id});if(!chat){return;}
this.messaging.chatWindowManager.openThread(chat.thread,{makeActive:true,replaceNewMessage:true,});},onAutocompleteSource(req,res){this.messaging.models['Partner'].imSearch({callback:(partners)=>{const suggestions=partners.map(partner=>{return{id:partner.id,value:partner.nameOrDisplayName,label:partner.nameOrDisplayName,};});res(_.sortBy(suggestions,'label'));},keyword:_.escape(req.term),limit:10,});},onClickFromChatWindowHiddenMenu(){this.makeActive();this.manager.closeHiddenMenu();},async onClickCamera(ev){ev.stopPropagation();if(this.thread.hasPendingRtcRequest){return;}
await this.thread.toggleCall({startWithVideo:true});},onClickClose(ev){ev.stopPropagation();if(!this.exists()){return;}
this.close();},onClickExpand(ev){if(!this.exists()){return;}
ev.stopPropagation();this.expand();},onClickHeader(ev){if(!this.exists()||this.messaging.device.isSmall){return;}
if(this.isFolded){this.unfold();this.focus();}else{this.saveThreadScrollTop();this.fold();}},onClickHideCallSettingsMenu(ev){markEventHandled(ev,'ChatWindow.onClickCommand');this.update({isCallSettingsMenuOpen:false});},onClickHideInviteForm(ev){markEventHandled(ev,'ChatWindow.onClickCommand');this.update({channelInvitationForm:clear()});},onClickHideMemberList(ev){markEventHandled(ev,'ChatWindow.onClickHideMemberList');this.update({isMemberListOpened:false});if(this.threadViewer.threadView){this.threadViewer.threadView.addComponentHint('member-list-hidden');}},async onClickPhone(ev){ev.stopPropagation();if(this.thread.hasPendingRtcRequest){return;}
await this.thread.toggleCall();},onClickShowInviteForm(ev){markEventHandled(ev,'ChatWindow.onClickCommand');this.update({channelInvitationForm:{doFocusOnSearchInput:true,},isMemberListOpened:false,});if(!this.messaging.isCurrentUserGuest){this.channelInvitationForm.searchPartnersToInvite();}},onClickShowCallSettingsMenu(ev){markEventHandled(ev,'ChatWindow.onClickCommand');this.update({isCallSettingsMenuOpen:true,isMemberListOpened:false,});},onClickShowMemberList(ev){markEventHandled(ev,'ChatWindow.onClickShowMemberList');this.update({channelInvitationForm:clear(),isCallSettingsMenuOpen:false,isMemberListOpened:true,});},onFocusInNewMessageFormInput(ev){if(this.exists()){this.update({isFocused:true});}},onFocusout(){if(!this.exists()){return;}
this.update({isFocused:false});},onKeydown(ev){if(!this.exists()){return;}
switch(ev.key){case'Tab':ev.preventDefault();if(ev.shiftKey){this.focusPreviousVisibleUnfoldedChatWindow();}else{this.focusNextVisibleUnfoldedChatWindow();}
break;case'Escape':if(isEventHandled(ev,'ComposerTextInput.closeSuggestions')){break;}
if(isEventHandled(ev,'Composer.closeEmojisPopover')){break;}
ev.preventDefault();this.focusNextVisibleUnfoldedChatWindow();this.close();break;}},saveThreadScrollTop(){if(!this.threadView||!this.threadView.messageListView||!this.threadView.messageListView.component||!this.threadViewer){return;}
if(this.threadViewer.threadView&&this.threadViewer.threadView.componentHintList.length>0){return;}
this.threadViewer.saveThreadCacheScrollHeightAsInitial(this.threadView.messageListView.getScrollableElement().scrollHeight);this.threadViewer.saveThreadCacheScrollPositionsAsInitial(this.threadView.messageListView.getScrollableElement().scrollTop);},unfold({notifyServer}={}){if(notifyServer===undefined){notifyServer=!this.messaging.device.isSmall;}
this.update({isFolded:false});if(this.thread&&notifyServer&&!this.messaging.currentGuest){this.thread.notifyFoldStateToServer('open');}},_getNextVisibleUnfoldedChatWindow({reverse=false}={}){const orderedVisible=this.manager.allOrderedVisible;const _getNextIndex=index=>{const directionOffset=reverse?1:-1;let nextIndex=index+directionOffset;if(nextIndex>orderedVisible.length-1){nextIndex=0;}
if(nextIndex<0){nextIndex=orderedVisible.length-1;}
return nextIndex;};const currentIndex=orderedVisible.findIndex(visible=>visible===this);let nextIndex=_getNextIndex(currentIndex);let nextToFocus=orderedVisible[nextIndex];while(nextToFocus.isFolded){nextIndex=_getNextIndex(nextIndex);nextToFocus=orderedVisible[nextIndex];}
return nextToFocus;},},fields:{callSettingsMenu:one('CallSettingsMenu',{compute(){if(this.isCallSettingsMenuOpen){return{};}
return clear();},inverse:'chatWindowOwner',}),channelInvitationForm:one('ChannelInvitationForm',{inverse:'chatWindow',}),channelMemberListView:one('ChannelMemberListView',{compute(){if(this.thread&&this.thread.hasMemberListFeature&&this.isMemberListOpened){return{};}
return clear();},inverse:'chatWindowOwner',}),chatWindowHeaderView:one('ChatWindowHeaderView',{default:{},inverse:'chatWindowOwner',}),componentStyle:attr({compute(){const textDirection=this.messaging.locale.textDirection;const offsetFrom=textDirection==='rtl'?'left':'right';const oppositeFrom=offsetFrom==='right'?'left':'right';return`${offsetFrom}: ${this.visibleOffset}px; ${oppositeFrom}: auto`;},}),hasCallButtons:attr({compute(){if(!this.thread||!this.thread.channel){return clear();}
return this.thread.rtcSessions.length===0&&['channel','chat','group'].includes(this.thread.channel.channel_type);},default:false,}),hasCloseAsBackButton:attr({compute(){if(this.isVisible&&this.messaging.device.isSmall){return true;}
return clear();},default:false,}),hasInviteFeature:attr({compute(){return Boolean(this.thread&&this.thread.hasInviteFeature&&this.messaging&&this.messaging.device&&this.messaging.device.isSmall);},}),hasNewMessageForm:attr({compute(){return this.isVisible&&!this.isFolded&&!this.thread;},}),hasThreadView:attr({compute(){return this.isVisible&&!this.isFolded&&!!this.thread&&!this.isMemberListOpened&&!this.channelInvitationForm&&!this.isCallSettingsMenuOpen;},}),isCallSettingsMenuOpen:attr({default:false,}),isDoFocus:attr({default:false,}),isExpandable:attr({compute(){if(this.isVisible&&!this.messaging.device.isSmall&&this.thread){return true;}
return clear();},default:false,}),isFocused:attr({default:false,}),isFolded:attr({default:false,}),isFullscreen:attr({compute(){if(this.isVisible&&this.messaging.device.isSmall){return true;}
return clear();},default:false,}),isMemberListOpened:attr({default:false,}),isVisible:attr({compute(){if(!this.manager){return false;}
return this.manager.allOrderedVisible.includes(this);},}),manager:one('ChatWindowManager',{inverse:'chatWindows',readonly:true,}),managerAsNewMessage:one('ChatWindowManager',{identifying:true,inverse:'newMessageChatWindow',}),name:attr({compute(){if(this.thread){return this.thread.displayName;}
return this.env._t("New message");},}),newMessageAutocompleteInputView:one('AutocompleteInputView',{compute(){if(this.hasNewMessageForm){return{};}
return clear();},inverse:'chatWindowOwnerAsNewMessage',}),newMessageFormInputPlaceholder:attr({compute(){return this.env._t("Search user...");},}),thread:one('Thread',{identifying:true,inverse:'chatWindow',}),threadView:one('ThreadView',{related:'threadViewer.threadView',}),threadViewer:one('ThreadViewer',{compute(){return{compact:true,hasThreadView:this.hasThreadView,thread:this.thread?this.thread:clear(),};},inverse:'chatWindow',required:true,}),visibleIndex:attr({compute(){if(!this.manager){return clear();}
const visible=this.manager.visual.visible;const index=visible.findIndex(visible=>visible.chatWindow===this);if(index===-1){return clear();}
return index;},}),visibleOffset:attr({compute(){if(!this.manager){return 0;}
const visible=this.manager.visual.visible;const index=visible.findIndex(visible=>visible.chatWindow===this);if(index===-1){return 0;}
return visible[index].offset;},}),},});return __exports;});;

/* /mail/static/src/models/chat_window_header_view.js */
odoo.define('@mail/models/chat_window_header_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{isEventHandled}=require('@mail/utils/utils');registerModel({name:'ChatWindowHeaderView',recordMethods:{onClick(ev){if(!this.exists()){return;}
if(isEventHandled(ev,'ChatWindow.onClickCommand')||isEventHandled(ev,'ChatWindow.onClickHideMemberList')||isEventHandled(ev,'ChatWindow.onClickShowMemberList')){return;}
if(!this.chatWindowOwner.isVisible){this.chatWindowOwner.onClickFromChatWindowHiddenMenu(ev);}else{this.chatWindowOwner.onClickHeader(ev);}},},fields:{chatWindowOwner:one('ChatWindow',{identifying:true,inverse:'chatWindowHeaderView',}),},});return __exports;});;

/* /mail/static/src/models/chat_window_manager.js */
odoo.define('@mail/models/chat_window_manager',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const BASE_VISUAL=__exports.BASE_VISUAL={availableVisibleSlots:0,hiddenChatWindows:[],isHiddenMenuVisible:false,hiddenMenuOffset:0,visible:[],};registerModel({name:'ChatWindowManager',recordMethods:{closeAll(){for(const chatWindow of this.chatWindows){chatWindow.close();}},closeHiddenMenu(){this.update({isHiddenMenuOpen:false});},closeThread(thread,options){for(const chatWindow of this.chatWindows){if(chatWindow.thread===thread){chatWindow.close(options);}}},onClickHiddenMenuToggler(ev){if(this.isHiddenMenuOpen){this.closeHiddenMenu();}else{this.openHiddenMenu();}},openHiddenMenu(){this.update({isHiddenMenuOpen:true});},openNewMessage(){if(!this.newMessageChatWindow){this.update({newMessageChatWindow:{manager:this}});}
this.newMessageChatWindow.makeActive();},openThread(thread,{focus,isFolded=false,makeActive=false,notifyServer,replaceNewMessage=false}={}){if(notifyServer===undefined){notifyServer=!this.messaging.device.isSmall;}
let chatWindow=thread.chatWindow;if(!chatWindow){chatWindow=this.messaging.models['ChatWindow'].insert({isFolded,manager:this,thread,});}else{chatWindow.update({isFolded});}
if(replaceNewMessage&&this.newMessageChatWindow){this.swap(chatWindow,this.newMessageChatWindow);this.newMessageChatWindow.close();}
if(makeActive){chatWindow.makeActive({focus,notifyServer:false});}
if(notifyServer&&!this.messaging.currentGuest){const foldState=chatWindow.isFolded?'folded':'open';thread.notifyFoldStateToServer(foldState);}},swap(chatWindow1,chatWindow2){const index1=this.chatWindows.findIndex(chatWindow=>chatWindow===chatWindow1);const index2=this.chatWindows.findIndex(chatWindow=>chatWindow===chatWindow2);if(index1===-1||index2===-1){return;}
const _newOrdered=[...this.chatWindows];_newOrdered[index1]=chatWindow2;_newOrdered[index2]=chatWindow1;this.update({chatWindows:_newOrdered});for(const chatWindow of[chatWindow1,chatWindow2]){if(chatWindow.threadView){chatWindow.threadView.addComponentHint('adjust-scroll');}}},},fields:{allOrderedHidden:many('ChatWindow',{compute(){return this.visual.hiddenChatWindows;},}),allOrderedVisible:many('ChatWindow',{compute(){return this.visual.visible.map(({chatWindow})=>chatWindow);},}),availableVisibleSlots:attr({compute(){return this.visual.availableVisibleSlots;},default:0,}),betweenGapWidth:attr({default:5,}),chatWindows:many('ChatWindow',{inverse:'manager',isCausal:true,}),chatWindowWidth:attr({default:340,}),endGapWidth:attr({compute(){if(this.messaging.device.isSmall){return 0;}
return 10;},}),hasVisibleChatWindows:attr({compute(){return this.allOrderedVisible.length>0;},}),hiddenChatWindowHeaderViews:many('ChatWindowHeaderView',{compute(){if(this.allOrderedHidden.length>0){return this.allOrderedHidden.map(chatWindow=>({chatWindowOwner:chatWindow}));}
return clear();},}),hiddenMenuWidth:attr({default:170,}),isHiddenMenuOpen:attr({default:false,}),lastVisible:one('ChatWindow',{compute(){const{length:l,[l-1]:lastVisible}=this.allOrderedVisible;if(!lastVisible){return clear();}
return lastVisible;},}),newMessageChatWindow:one('ChatWindow',{inverse:'managerAsNewMessage',}),startGapWidth:attr({compute(){if(this.messaging.device.isSmall){return 0;}
return 10;},}),unreadHiddenConversationAmount:attr({compute(){const allHiddenWithThread=this.allOrderedHidden.filter(chatWindow=>chatWindow.thread);let amount=0;for(const chatWindow of allHiddenWithThread){if(chatWindow.thread.channel&&chatWindow.thread.channel.localMessageUnreadCounter>0){amount++;}}
return amount;},}),visual:attr({compute(){let visual=JSON.parse(JSON.stringify(BASE_VISUAL));if(!this.messaging||!this.messaging.device){return visual;}
if((!this.messaging.device.isSmall&&this.messaging.discuss.discussView)||this.messaging.discussPublicView){return visual;}
if(!this.chatWindows.length){return visual;}
const relativeGlobalWindowWidth=this.messaging.device.globalWindowInnerWidth-this.startGapWidth-this.endGapWidth;let maxAmountWithoutHidden=Math.floor(relativeGlobalWindowWidth/(this.chatWindowWidth+this.betweenGapWidth));let maxAmountWithHidden=Math.floor((relativeGlobalWindowWidth-this.hiddenMenuWidth-this.betweenGapWidth)/(this.chatWindowWidth+this.betweenGapWidth));if(this.messaging.device.isSmall){maxAmountWithoutHidden=1;maxAmountWithHidden=1;}
if(this.chatWindows.length<=maxAmountWithoutHidden){for(let i=0;i<this.chatWindows.length;i++){const chatWindow=this.chatWindows[i];const offset=this.startGapWidth+i*(this.chatWindowWidth+this.betweenGapWidth);visual.visible.push({chatWindow,offset});}
visual.availableVisibleSlots=maxAmountWithoutHidden;}else if(maxAmountWithHidden>0){for(let i=0;i<maxAmountWithHidden;i++){const chatWindow=this.chatWindows[i];const offset=this.startGapWidth+i*(this.chatWindowWidth+this.betweenGapWidth);visual.visible.push({chatWindow,offset});}
if(this.chatWindows.length>maxAmountWithHidden){visual.isHiddenMenuVisible=!this.messaging.device.isSmall;visual.hiddenMenuOffset=visual.visible[maxAmountWithHidden-1].offset
+this.chatWindowWidth+this.betweenGapWidth;}
for(let j=maxAmountWithHidden;j<this.chatWindows.length;j++){visual.hiddenChatWindows.push(this.chatWindows[j]);}
visual.availableVisibleSlots=maxAmountWithHidden;}else{visual.isHiddenMenuVisible=!this.messaging.device.isSmall;visual.hiddenMenuOffset=this.startGapWidth;visual.hiddenChatWindows.push(...this.chatWindows);console.warn('cannot display any visible chat windows (screen is too small)');visual.availableVisibleSlots=0;}
return visual;},default:BASE_VISUAL,}),},});return __exports;});;

/* /mail/static/src/models/chatter.js */
odoo.define('@mail/models/chatter',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear,insert,link}=require('@mail/model/model_field_command');const{makeDeferred}=require('@mail/utils/deferred');const getThreadNextTemporaryId=(function(){let tmpId=0;return()=>{tmpId-=1;return tmpId;};})();const getMessageNextTemporaryId=(function(){let tmpId=0;return()=>{tmpId-=1;return tmpId;};})();registerModel({name:'Chatter',recordMethods:{focus(){if(this.composerView){this.composerView.update({doFocus:true});}},async doSaveRecord(){const saved=await this.saveRecord();if(!saved){return saved;}
let composerData=null;if(this.composerView){const{attachments,isLog,rawMentionedChannels,rawMentionedPartners,textInputContent,textInputCursorEnd,textInputCursorStart,textInputSelectionDirection,}=this.composerView.composer;composerData={attachments,isLog,rawMentionedChannels,rawMentionedPartners,textInputContent,textInputCursorEnd,textInputCursorStart,textInputSelectionDirection,};}
this.update({createNewRecordComposerData:composerData,createNewRecordDeferred:composerData?makeDeferred():null,});await this.createNewRecordDeferred;await new Promise((resolve)=>setTimeout(()=>requestAnimationFrame(resolve)));return saved;},onAttachmentsLoadingTimeout(){this.update({attachmentsLoaderTimer:clear(),isShowingAttachmentsLoading:true,});},async onClickButtonAddAttachments(){if(this.isTemporary){const saved=await this.doSaveRecord();if(!saved){return;}}
this.fileUploader.openBrowserFileUploader();},async onClickButtonToggleAttachments(){if(this.isTemporary){const saved=await this.doSaveRecord();if(!saved){return;}}
this.update({attachmentBoxView:this.attachmentBoxView?clear():{}});if(this.attachmentBoxView){this.scrollPanelRef.el.scrollTop=0;}},onClickChatterTopbarClose(ev){this.component.trigger('o-close-chatter');},onClickLogNote(){if(this.composerView&&this.composerView.composer.isLog){this.update({composerView:clear()});}else{this.showLogNote();}},async onClickScheduleActivity(ev){if(this.isTemporary){const saved=await this.doSaveRecord();if(!saved){return;}}
await this.messaging.openActivityForm({thread:this.thread});if(this.exists()){this.reloadParentView();}},onClickSendMessage(ev){if(this.composerView&&!this.composerView.composer.isLog){this.update({composerView:clear()});}else{this.showSendMessage();}},onScrollScrollPanel(ev){if(!this.threadView||!this.threadView.messageListView||!this.threadView.messageListView.component){return;}
this.threadView.messageListView.component.onScroll(ev);},openAttachmentBoxView(){this.update({attachmentBoxView:{}});},promptAddPartnerFollower(){const action={type:'ir.actions.act_window',res_model:'mail.wizard.invite',view_mode:'form',views:[[false,'form']],name:this.env._t("Invite Follower"),target:'new',context:{default_res_model:this.thread.model,default_res_id:this.thread.id,},};this.env.services.action.doAction(action,{onClose:async()=>{if(!this.exists()&&!this.thread){return;}
await this.thread.fetchData(['followers']);if(this.exists()&&this.hasParentReloadOnFollowersUpdate){this.reloadParentView();}},});},async refresh(){const requestData=['activities','followers','suggestedRecipients'];if(this.hasMessageList){requestData.push('attachments','messages');}
this.thread.fetchData(requestData);},async reloadParentView({fieldNames}={}){if(this.saveRecord){await this.saveRecord();}
if(this.webRecord){await this.webRecord.model.root.load({resId:this.threadId},{keepChanges:true});this.webRecord.model.notify();return;}
if(this.component){const options={keepChanges:true};if(fieldNames){options.fieldNames=fieldNames;}
this.component.trigger('reload',options);}},showLogNote(){this.update({composerView:{}});this.composerView.composer.update({isLog:true});this.focus();},showSendMessage(){this.update({composerView:{}});this.composerView.composer.update({isLog:false});this.focus();},_onThreadIdOrThreadModelChanged(){if(!this.threadModel){return;}
if(this.threadId){if(this.thread&&this.thread.isTemporary){this.thread.delete();}
this.update({attachmentBoxView:this.isAttachmentBoxVisibleInitially?{}:clear(),thread:insert({hasActivities:this.hasActivities?true:undefined,id:this.threadId,model:this.threadModel,}),});}else if(!this.thread||!this.thread.isTemporary){const currentPartner=this.messaging.currentPartner;const message=this.messaging.models['Message'].insert({author:currentPartner,body:this.env._t("Creating a new record..."),id:getMessageNextTemporaryId(),isTemporary:true,});const nextId=getThreadNextTemporaryId();this.update({attachmentBoxView:clear(),thread:insert({areAttachmentsLoaded:true,id:nextId,isTemporary:true,model:this.threadModel,}),});this.thread.cache.update({temporaryMessages:link(message)});}
if(this.createNewRecordComposerData){this.update({composerView:{composer:{...this.createNewRecordComposerData,thread:this.thread,},},});this.createNewRecordDeferred.resolve();}
this.update({createNewRecordComposerData:clear(),createNewRecordDeferred:clear(),});},_onThreadIsLoadingAttachmentsChanged(){if(!this.thread||!this.thread.isLoadingAttachments){this.update({attachmentsLoaderTimer:clear(),isShowingAttachmentsLoading:false,});return;}
if(this.isPreparingAttachmentsLoading||this.isShowingAttachmentsLoading){return;}
this._prepareAttachmentsLoading();},_prepareAttachmentsLoading(){this.update({attachmentsLoaderTimer:{}});},},fields:{activityBoxView:one('ActivityBoxView',{compute(){if(this.thread&&this.thread.hasActivities&&this.thread.activities.length>0){return{};}
return clear();},inverse:'chatter',}),attachmentBoxView:one('AttachmentBoxView',{inverse:'chatter',}),attachmentsLoaderTimer:one('Timer',{inverse:'chatterOwnerAsAttachmentsLoader',}),canPostMessage:attr({compute(){return Boolean(this.isTemporary||this.hasWriteAccess||(this.hasReadAccess&&this.thread&&this.thread.canPostOnReadonly));},}),component:attr(),composerView:one('ComposerView',{inverse:'chatter',}),context:attr({default:{},}),dropZoneView:one('DropZoneView',{compute(){if(!this.thread){return clear();}
if(this.useDragVisibleDropZone.isVisible){return{};}
return clear();},inverse:'chatterOwner',}),fileUploader:one('FileUploader',{compute(){return this.thread?{}:clear();},inverse:'chatterOwner',}),followButtonView:one('FollowButtonView',{compute(){if(this.hasFollowers&&this.thread&&(!this.thread.channel||this.thread.channel.channel_type!=='chat')){return{};}
return clear();},inverse:'chatterOwner',}),followerListMenuView:one('FollowerListMenuView',{compute(){if(this.hasFollowers&&this.thread){return{};}
return clear();},inverse:'chatterOwner',}),hasActivities:attr({default:true,}),hasExternalBorder:attr({default:true,}),hasFollowers:attr({default:true,}),hasMessageList:attr({default:true,}),hasMessageListScrollAdjust:attr({default:false,}),hasParentReloadOnAttachmentsChanged:attr({default:false,}),hasParentReloadOnFollowersUpdate:attr({default:false,}),hasParentReloadOnMessagePosted:attr({default:false,}),hasReadAccess:attr({compute(){return Boolean(this.thread&&!this.thread.isTemporary&&this.thread.hasReadAccess);},}),hasThreadView:attr({compute(){return Boolean(this.thread&&this.hasMessageList);},}),hasWriteAccess:attr({compute(){return Boolean(this.thread&&!this.thread.isTemporary&&this.thread.hasWriteAccess);},}),hasTopbarCloseButton:attr({default:false,}),id:attr({identifying:true,}),isAttachmentBoxVisibleInitially:attr({default:false,}),isInFormSheetBg:attr({default:false,}),isPreparingAttachmentsLoading:attr({compute(){return Boolean(this.attachmentsLoaderTimer);},default:false,}),isShowingAttachmentsLoading:attr({default:false,}),isTemporary:attr({compute(){return Boolean(!this.thread||this.thread.isTemporary);},}),saveRecord:attr(),scrollPanelRef:attr(),shouldReloadParentFromFileChanged:attr({compute(){return this.hasParentReloadOnAttachmentsChanged;},}),thread:one('Thread'),threadId:attr(),threadModel:attr(),threadView:one('ThreadView',{related:'threadViewer.threadView',}),threadViewer:one('ThreadViewer',{compute(){if(!this.thread){return clear();}
return{hasThreadView:this.hasThreadView,order:'desc',thread:this.thread?this.thread:clear(),};},inverse:'chatter',}),topbar:one('ChatterTopbar',{compute(){return this.thread?{}:clear();},inverse:'chatter',}),useDragVisibleDropZone:one('UseDragVisibleDropZone',{default:{},inverse:'chatterOwner',readonly:true,required:true,}),webRecord:attr(),createNewRecordComposerData:attr(),createNewRecordDeferred:attr(),},onChanges:[{dependencies:['threadId','threadModel'],methodName:'_onThreadIdOrThreadModelChanged',},{dependencies:['thread.isLoadingAttachments'],methodName:'_onThreadIsLoadingAttachmentsChanged',},],});return __exports;});;

/* /mail/static/src/models/chatter_topbar.js */
odoo.define('@mail/models/chatter_topbar',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ChatterTopbar',fields:{attachmentButtonText:attr({compute(){if(!this.chatter||!this.chatter.thread){return clear();}
const attachments=this.chatter.thread.allAttachments;if(attachments.length===0){return clear();}
return attachments.length;},default:"",}),chatter:one('Chatter',{identifying:true,inverse:'topbar',}),},});return __exports;});;

/* /mail/static/src/models/clock.js */
odoo.define('@mail/models/clock',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many}=require('@mail/model/model_field');registerModel({name:'Clock',lifecycleHooks:{_created(){this.update({date:new Date()});},_willDelete(){this.messaging.browser.clearInterval(this.tickInterval);},},recordMethods:{_onChangeWatchers(){if(this.watchers.length===0){this.delete();}},_onInterval(){this.update({date:new Date()});},},fields:{date:attr(),frequency:attr({identifying:true,}),tickInterval:attr({compute(){return this.messaging.browser.setInterval(this._onInterval,this.frequency);},}),watchers:many('ClockWatcher',{inverse:'clock',isCausal:true,}),},onChanges:[{dependencies:['watchers'],methodName:'_onChangeWatchers',},],});return __exports;});;

/* /mail/static/src/models/clock_watcher.js */
odoo.define('@mail/models/clock_watcher',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'ClockWatcher',identifyingMode:'xor',fields:{activityListViewItemOwner:one('ActivityListViewItem',{identifying:true,inverse:'clockWatcher',}),activityViewOwner:one('ActivityView',{identifying:true,inverse:'clockWatcher',}),clock:one('Clock',{inverse:'watchers',required:true,}),messageViewOwner:one('MessageView',{identifying:true,inverse:'clockWatcher',}),},});return __exports;});;

/* /mail/static/src/models/composer.js */
odoo.define('@mail/models/composer',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'Composer',identifyingMode:'xor',recordMethods:{_reset(){this.update({attachments:clear(),rawMentionedChannels:clear(),rawMentionedPartners:clear(),textInputContent:clear(),textInputCursorEnd:clear(),textInputCursorStart:clear(),textInputSelectionDirection:clear(),});for(const composerView of this.composerViews){composerView.update({hasToRestoreContent:true});}},},fields:{activeThread:one('Thread',{compute(){if(this.messageViewInEditing&&this.messageViewInEditing.message&&this.messageViewInEditing.message.originThread){return this.messageViewInEditing.message.originThread;}
if(this.thread){return this.thread;}
return clear();},required:true,}),attachments:many('Attachment',{inverse:'composer',}),canPostMessage:attr({compute(){if(this.thread&&!this.textInputContent&&this.attachments.length===0){return false;}
return!this.hasUploadingAttachment&&!this.isPostingMessage;},default:false,}),composerViews:many('ComposerView',{inverse:'composer',isCausal:true,}),hasUploadingAttachment:attr({compute(){return this.attachments.some(attachment=>attachment.isUploading);},}),isLog:attr({default:true,}),isPostingMessage:attr(),mentionedChannels:many('Thread',{compute(){const mentionedChannels=[];const namesIndex={};for(const channel of this.rawMentionedChannels){const fromIndex=namesIndex[channel.name]!==undefined?namesIndex[channel.name]+1:0;const index=this.textInputContent.indexOf(`#${channel.name}`,fromIndex);if(index===-1){continue;}
namesIndex[channel.name]=index;mentionedChannels.push(channel);}
return mentionedChannels;},}),mentionedPartners:many('Partner',{compute(){const mentionedPartners=[];const namesIndex={};for(const partner of this.rawMentionedPartners){const fromIndex=namesIndex[partner.name]!==undefined?namesIndex[partner.name]+1:0;const index=this.textInputContent.indexOf(`@${partner.name}`,fromIndex);if(index===-1){continue;}
namesIndex[partner.name]=index;mentionedPartners.push(partner);}
return mentionedPartners;},}),messageViewInEditing:one('MessageView',{identifying:true,inverse:'composerForEditing',}),placeholder:attr({compute(){if(!this.thread){return"";}
if(this.thread.channel){if(this.thread.channel.correspondent){return sprintf(this.env._t("Message %s..."),this.thread.channel.correspondent.nameOrDisplayName);}
return sprintf(this.env._t("Message #%s..."),this.thread.displayName);}
if(this.isLog){return this.env._t("Log an internal note...");}
return this.env._t("Send a message to followers...");},}),rawMentionedChannels:many('Thread'),rawMentionedPartners:many('Partner'),recipients:many('Partner',{compute(){const recipients=[...this.mentionedPartners];if(this.activeThread&&!this.isLog){for(const recipient of this.activeThread.suggestedRecipientInfoList){if(recipient.partner&&recipient.isSelected){recipients.push(recipient.partner);}}}
return recipients;},}),textInputContent:attr({default:"",}),textInputCursorEnd:attr({default:0,}),textInputCursorStart:attr({default:0,}),textInputSelectionDirection:attr({default:"none",}),thread:one('Thread',{identifying:true,inverse:'composer',}),},});return __exports;});;

/* /mail/static/src/models/composer_suggestable.js */
odoo.define('@mail/models/composer_suggestable',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many,one}=require('@mail/model/model_field');registerModel({name:'ComposerSuggestable',identifyingMode:'xor',fields:{cannedResponse:one('CannedResponse',{identifying:true,inverse:'suggestable',}),channelCommand:one('ChannelCommand',{identifying:true,inverse:'suggestable',}),composerSuggestionListViewExtraComposerSuggestionViewItems:many('ComposerSuggestionListViewExtraComposerSuggestionViewItem',{inverse:'suggestable',}),composerSuggestionListViewMainComposerSuggestionViewItems:many('ComposerSuggestionListViewMainComposerSuggestionViewItem',{inverse:'suggestable',}),partner:one('Partner',{identifying:true,inverse:'suggestable',}),thread:one('Thread',{identifying:true,inverse:'suggestable',}),},});return __exports;});;

/* /mail/static/src/models/composer_suggested_recipient_list_view.js */
odoo.define('@mail/models/composer_suggested_recipient_list_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ComposerSuggestedRecipientListView',recordMethods:{onClickShowLess(ev){if(!this.exists()){return;}
this.update({hasShowMoreButton:false});},onClickShowMore(ev){if(!this.exists()){return;}
this.update({hasShowMoreButton:true});},},fields:{composerSuggestedRecipientViews:many('ComposerSuggestedRecipientView',{compute(){if(!this.thread){return clear();}
if(this.hasShowMoreButton){return this.thread.suggestedRecipientInfoList.map(suggestedRecipientInfo=>({suggestedRecipientInfo}));}else{return this.thread.suggestedRecipientInfoList.slice(0,3).map(suggestedRecipientInfo=>({suggestedRecipientInfo}));}},inverse:'composerSuggestedRecipientListViewOwner',}),composerViewOwner:one('ComposerView',{identifying:true,inverse:'composerSuggestedRecipientListView',}),hasShowMoreButton:attr({default:false,}),thread:one('Thread',{compute(){return this.composerViewOwner.composer.activeThread;},required:true,}),},});return __exports;});;

/* /mail/static/src/models/composer_suggested_recipient_view.js */
odoo.define('@mail/models/composer_suggested_recipient_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'ComposerSuggestedRecipientView',fields:{composerSuggestedRecipientListViewOwner:one('ComposerSuggestedRecipientListView',{identifying:true,inverse:'composerSuggestedRecipientViews',}),suggestedRecipientInfo:one('SuggestedRecipientInfo',{identifying:true,inverse:'composerSuggestedRecipientViews',}),},});return __exports;});;

/* /mail/static/src/models/composer_suggestion_list_view.js */
odoo.define('@mail/models/composer_suggestion_list_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');registerModel({name:'ComposerSuggestionListView',recordMethods:{setFirstSuggestionViewActive(){const firstSuggestionView=this.suggestionViews[0];this.update({rawActiveSuggestionView:firstSuggestionView});},setLastSuggestionViewActive(){const{length,[length-1]:lastSuggestionView}=this.suggestionViews;this.update({rawActiveSuggestionView:lastSuggestionView});},setNextSuggestionViewActive(){const activeElementIndex=this.suggestionViews.findIndex(suggestion=>suggestion===this.activeSuggestionView);if(activeElementIndex===this.suggestionViews.length-1){this.setFirstSuggestionViewActive();return;}
const nextSuggestionView=this.suggestionViews[activeElementIndex+1];this.update({rawActiveSuggestionView:nextSuggestionView});},setPreviousSuggestionViewActive(){const activeElementIndex=this.suggestionViews.findIndex(suggestion=>suggestion===this.activeSuggestionView);if(activeElementIndex===0){this.setLastSuggestionViewActive();return;}
const previousSuggestionView=this.suggestionViews[activeElementIndex-1];this.update({rawActiveSuggestionView:previousSuggestionView});},},fields:{activeSuggestionView:one('ComposerSuggestionView',{compute(){if(this.suggestionViews.includes(this.rawActiveSuggestionView)){return this.rawActiveSuggestionView;}
const firstSuggestionView=this.suggestionViews[0];return firstSuggestionView;},inverse:'composerSuggestionListViewOwnerAsActiveSuggestionView',}),composerSuggestionListViewExtraComposerSuggestionViewItems:many('ComposerSuggestionListViewExtraComposerSuggestionViewItem',{compute(){return this.composerViewOwner.extraSuggestions.map(suggestable=>({suggestable}));},inverse:'composerSuggestionListViewOwner',}),composerSuggestionListViewMainComposerSuggestionViewItems:many('ComposerSuggestionListViewMainComposerSuggestionViewItem',{compute(){return this.composerViewOwner.mainSuggestions.map(suggestable=>({suggestable}));},inverse:'composerSuggestionListViewOwner',}),composerViewOwner:one('ComposerView',{identifying:true,inverse:'composerSuggestionListView',}),hasToScrollToActiveSuggestionView:attr({default:false,}),rawActiveSuggestionView:one('ComposerSuggestionView'),suggestionViews:many('ComposerSuggestionView',{compute(){const mainSuggestionViews=this.composerSuggestionListViewMainComposerSuggestionViewItems.map(item=>item.composerSuggestionView);const extraSuggestionViews=this.composerSuggestionListViewExtraComposerSuggestionViewItems.map(item=>item.composerSuggestionView);return mainSuggestionViews.concat(extraSuggestionViews);},})},});return __exports;});;

/* /mail/static/src/models/composer_suggestion_list_view_extra_composer_suggestion_view_item.js */
odoo.define('@mail/models/composer_suggestion_list_view_extra_composer_suggestion_view_item',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'ComposerSuggestionListViewExtraComposerSuggestionViewItem',fields:{composerSuggestionListViewOwner:one('ComposerSuggestionListView',{identifying:true,inverse:'composerSuggestionListViewExtraComposerSuggestionViewItems',}),composerSuggestionView:one('ComposerSuggestionView',{default:{},inverse:'composerSuggestionListViewExtraComposerSuggestionViewItemOwner',readonly:true,required:true,}),suggestable:one('ComposerSuggestable',{identifying:true,inverse:'composerSuggestionListViewExtraComposerSuggestionViewItems',}),},});return __exports;});;

/* /mail/static/src/models/composer_suggestion_list_view_main_composer_suggestion_view_item.js */
odoo.define('@mail/models/composer_suggestion_list_view_main_composer_suggestion_view_item',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'ComposerSuggestionListViewMainComposerSuggestionViewItem',fields:{composerSuggestionListViewOwner:one('ComposerSuggestionListView',{identifying:true,inverse:'composerSuggestionListViewMainComposerSuggestionViewItems',}),composerSuggestionView:one('ComposerSuggestionView',{default:{},inverse:'composerSuggestionListViewMainComposerSuggestionViewItemOwner',readonly:true,required:true,}),suggestable:one('ComposerSuggestable',{identifying:true,inverse:'composerSuggestionListViewMainComposerSuggestionViewItems',}),},});return __exports;});;

/* /mail/static/src/models/composer_suggestion_view.js */
odoo.define('@mail/models/composer_suggestion_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'ComposerSuggestionView',identifyingMode:'xor',recordMethods:{onClick(ev){ev.preventDefault();this.composerSuggestionListViewOwner.update({rawActiveSuggestionView:this});const composerViewOwner=this.composerSuggestionListViewOwner.composerViewOwner;composerViewOwner.insertSuggestion();composerViewOwner.closeSuggestions();composerViewOwner.update({doFocus:true});},onComponentUpdate(){if(this.component.root.el&&this.composerSuggestionListViewOwner.hasToScrollToActiveSuggestionView&&this.composerSuggestionListViewOwnerAsActiveSuggestionView){this.component.root.el.scrollIntoView({block:'center'});this.composerSuggestionListViewOwner.update({hasToScrollToActiveSuggestionView:false});}},},fields:{component:attr(),composerSuggestionListViewOwner:one('ComposerSuggestionListView',{compute(){if(this.composerSuggestionListViewExtraComposerSuggestionViewItemOwner){return this.composerSuggestionListViewExtraComposerSuggestionViewItemOwner.composerSuggestionListViewOwner;}
if(this.composerSuggestionListViewMainComposerSuggestionViewItemOwner){return this.composerSuggestionListViewMainComposerSuggestionViewItemOwner.composerSuggestionListViewOwner;}
return clear();},required:true,}),composerSuggestionListViewOwnerAsActiveSuggestionView:one('ComposerSuggestionListView',{inverse:'activeSuggestionView',}),composerSuggestionListViewExtraComposerSuggestionViewItemOwner:one('ComposerSuggestionListViewExtraComposerSuggestionViewItem',{identifying:true,inverse:'composerSuggestionView',}),composerSuggestionListViewMainComposerSuggestionViewItemOwner:one('ComposerSuggestionListViewMainComposerSuggestionViewItem',{identifying:true,inverse:'composerSuggestionView',}),mentionText:attr({compute(){if(!this.suggestable){return clear();}
if(this.suggestable.cannedResponse){return this.suggestable.cannedResponse.substitution;}
if(this.suggestable.channelCommand){return this.suggestable.channelCommand.name;}
if(this.suggestable.partner){return this.suggestable.partner.name;}
if(this.suggestable.thread){return this.suggestable.thread.name;}},}),personaImStatusIconView:one('PersonaImStatusIconView',{compute(){return this.suggestable&&this.suggestable.partner&&this.suggestable.partner.isImStatusSet?{}:clear();},inverse:'composerSuggestionViewOwner',}),suggestable:one('ComposerSuggestable',{compute(){if(this.composerSuggestionListViewExtraComposerSuggestionViewItemOwner){return this.composerSuggestionListViewExtraComposerSuggestionViewItemOwner.suggestable;}
if(this.composerSuggestionListViewMainComposerSuggestionViewItemOwner){return this.composerSuggestionListViewMainComposerSuggestionViewItemOwner.suggestable;}
return clear();},required:true,}),title:attr({compute(){if(!this.suggestable){return clear();}
if(this.suggestable.cannedResponse){return sprintf("%s: %s",this.suggestable.cannedResponse.source,this.suggestable.cannedResponse.substitution);}
if(this.suggestable.thread){return this.suggestable.thread.name;}
if(this.suggestable.channelCommand){return sprintf("%s: %s",this.suggestable.channelCommand.name,this.suggestable.channelCommand.help);}
if(this.suggestable.partner){if(this.suggestable.partner.email){return sprintf("%s (%s)",this.suggestable.partner.nameOrDisplayName,this.suggestable.partner.email);}
return this.suggestable.partner.nameOrDisplayName;}
return clear();},default:"",}),},});return __exports;});;

/* /mail/static/src/models/composer_view.js */
odoo.define('@mail/models/composer_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,link}=require('@mail/model/model_field_command');const{addLink,escapeAndCompactTextContent,parseAndTransform}=require('@mail/js/utils');const{isEventHandled,markEventHandled}=require('@mail/utils/utils');const{escape,sprintf}=require('@web/core/utils/strings');const{url}=require('@web/core/utils/urls');registerModel({name:'ComposerView',identifyingMode:'xor',lifecycleHooks:{_created(){document.addEventListener('click',this.onClickCaptureGlobal,true);},_willDelete(){document.removeEventListener('click',this.onClickCaptureGlobal,true);},},recordMethods:{closeSuggestions(){this.update({suggestionDelimiterPosition:clear()});},contains(element){if(this.emojisPopoverView&&this.emojisPopoverView.contains(element)){return true;}
return Boolean(this.component&&this.component.root.el&&this.component.root.el.contains(element));},discard(){if(this.messageViewInEditing){this.messageViewInEditing.stopEditing();return;}
if(this.threadView&&this.threadView.replyingToMessageView){const{threadView}=this;if(this.threadView.thread===this.messaging.inbox.thread){this.delete();}
threadView.update({replyingToMessageView:clear()});}},handleCurrentPartnerIsTyping(){if(!this.composer.thread||!this.composer.thread.channel){return;}
if(this.suggestionModelName==='ChannelCommand'||this._getCommandFromText(this.composer.textInputContent)){return;}
if(this.composer.thread.typingMembers.includes(this.composer.thread.channel.memberOfCurrentUser)){this.composer.thread.refreshCurrentPartnerIsTyping();}else{this.composer.thread.registerCurrentPartnerIsTyping();}},insertIntoTextInput(content){const partA=this.composer.textInputContent.slice(0,this.composer.textInputCursorStart);const partB=this.composer.textInputContent.slice(this.composer.textInputCursorEnd,this.composer.textInputContent.length);let suggestionDelimiterPosition=this.suggestionDelimiterPosition;if(suggestionDelimiterPosition!==undefined&&suggestionDelimiterPosition>=this.composer.textInputCursorStart){suggestionDelimiterPosition=suggestionDelimiterPosition+content.length;}
this.composer.update({textInputContent:partA+content+partB,textInputCursorEnd:this.composer.textInputCursorStart+content.length,textInputCursorStart:this.composer.textInputCursorStart+content.length,});for(const composerView of this.composer.composerViews){composerView.update({hasToRestoreContent:true});}
this.update({suggestionDelimiterPosition});},insertSuggestion(){const cursorPosition=this.composer.textInputCursorStart;let textLeft=this.composer.textInputContent.substring(0,this.suggestionDelimiterPosition+1);let textRight=this.composer.textInputContent.substring(cursorPosition,this.composer.textInputContent.length);if(this.suggestionDelimiter===':'){textLeft=this.composer.textInputContent.substring(0,this.suggestionDelimiterPosition);textRight=this.composer.textInputContent.substring(cursorPosition,this.composer.textInputContent.length);}
const recordReplacement=this.composerSuggestionListView.activeSuggestionView.mentionText;const updateData={textInputContent:textLeft+recordReplacement+' '+textRight,textInputCursorEnd:textLeft.length+recordReplacement.length+1,textInputCursorStart:textLeft.length+recordReplacement.length+1,};if(this.composerSuggestionListView.activeSuggestionView.suggestable.thread){Object.assign(updateData,{rawMentionedChannels:link(this.composerSuggestionListView.activeSuggestionView.suggestable.thread)});}
if(this.composerSuggestionListView.activeSuggestionView.suggestable.partner){Object.assign(updateData,{rawMentionedPartners:link(this.composerSuggestionListView.activeSuggestionView.suggestable.partner)});}
this.composer.update(updateData);for(const composerView of this.composer.composerViews){composerView.update({hasToRestoreContent:true});}},onClickAddAttachment(){this.fileUploader.openBrowserFileUploader();if(!this.messaging.device.isMobileDevice){this.update({doFocus:true});}},onClickButtonEmojis(){if(!this.emojisPopoverView){this.update({emojisPopoverView:{}});}else{this.update({emojisPopoverView:clear()});}},onClickCancelLink(ev){ev.preventDefault();if(this.exists()){this.discard();}},async onClickCaptureGlobal(ev){if(this.contains(ev.target)){return;}
await new Promise(this.messaging.browser.setTimeout);if(isEventHandled(ev,'MessageActionList.replyTo')){return;}
if(this.exists()){this.discard();}},onClickDiscard(ev){this.discard();},onClickEmoji(ev){this.saveStateInStore();this.insertIntoTextInput(ev.currentTarget.dataset.codepoints);if(!this.messaging.device.isMobileDevice){this.update({doFocus:true});}
this.update({emojisPopoverView:clear()});},async onClickFullComposer(){if(this.chatter&&this.chatter.isTemporary){const chatter=this.chatter;const saved=await this.chatter.doSaveRecord();if(!saved){return;}
chatter.composerView.openFullComposer();return;}
this.openFullComposer();},onClickReplyingToMessage(ev){this.threadView.replyingToMessageView.update({doHighlight:true});},onClickSaveLink(ev){ev.preventDefault();this.sendMessage();},onClickSend(){this.sendMessage();this.update({doFocus:true});},onClickStopReplying(ev){this.threadView.update({replyingToMessageView:clear(),});},onClickTextarea(){if(!this.exists()){return;}
this.saveStateInStore();},onFocusinTextarea(){if(!this.exists()){return;}
if(!this.messaging.emojiRegistry.isLoaded&&!this.messaging.emojiRegistry.isLoading){this.messaging.emojiRegistry.loadEmojiData();}
this.update({isFocused:true});},onFocusoutTextarea(){if(!this.exists()){return;}
this.saveStateInStore();this.update({isFocused:false});},onInputTextarea(){if(!this.exists()){return;}
this.saveStateInStore();if(this.textareaLastInputValue!==this.textareaRef.el.value){this.handleCurrentPartnerIsTyping();}
this.update({textareaLastInputValue:this.textareaRef.el.value});this.updateTextInputHeight();},onKeydown(ev){if(ev.key==='Escape'){if(isEventHandled(ev,'ComposerTextInput.closeSuggestions')){return;}
if(isEventHandled(ev,'Composer.closeEmojisPopover')){return;}
ev.preventDefault();this.discard();}},onKeydownButtonEmojis(ev){if(ev.key==='Escape'&&this.emojisPopoverView){this.update({doFocus:true,emojisPopoverView:clear(),});markEventHandled(ev,'Composer.closeEmojisPopover');}},onKeydownTextarea(ev){if(!this.exists()){return;}
switch(ev.key){case'Escape':if(this.hasSuggestions){ev.preventDefault();this.closeSuggestions();markEventHandled(ev,'ComposerTextInput.closeSuggestions');}
break;case'ArrowUp':case'PageUp':case'ArrowDown':case'PageDown':case'Home':case'End':case'Tab':if(this.hasSuggestions){ev.preventDefault();}
break;case'Enter':this.onKeydownTextareaEnter(ev);break;}},onKeydownTextareaEnter(ev){if(!this.exists()){return;}
if(this.hasSuggestions){ev.preventDefault();return;}
if(this.sendShortcuts.includes('ctrl-enter')&&!ev.altKey&&ev.ctrlKey&&!ev.metaKey&&!ev.shiftKey){this.sendMessage();ev.preventDefault();return;}
if(this.sendShortcuts.includes('enter')&&!ev.altKey&&!ev.ctrlKey&&!ev.metaKey&&!ev.shiftKey){this.sendMessage();ev.preventDefault();return;}
if(this.sendShortcuts.includes('meta-enter')&&!ev.altKey&&!ev.ctrlKey&&ev.metaKey&&!ev.shiftKey){this.sendMessage();ev.preventDefault();return;}},onKeyupTextarea(ev){if(!this.exists()){return;}
switch(ev.key){case'Escape':break;case'Enter':if(this.hasSuggestions){this.insertSuggestion();this.closeSuggestions();this.update({doFocus:true});}
break;case'ArrowUp':case'PageUp':if(ev.key==='ArrowUp'&&!this.hasSuggestions&&!this.composer.textInputContent&&this.threadView){this.threadView.startEditingLastMessageFromCurrentUser();break;}
if(this.composerSuggestionListView){this.composerSuggestionListView.setPreviousSuggestionViewActive();this.composerSuggestionListView.update({hasToScrollToActiveSuggestionView:true});}
break;case'ArrowDown':case'PageDown':if(ev.key==='ArrowDown'&&!this.hasSuggestions&&!this.composer.textInputContent&&this.threadView){this.threadView.startEditingLastMessageFromCurrentUser();break;}
if(this.composerSuggestionListView){this.composerSuggestionListView.setNextSuggestionViewActive();this.composerSuggestionListView.update({hasToScrollToActiveSuggestionView:true});}
break;case'Home':if(this.composerSuggestionListView){this.composerSuggestionListView.setFirstSuggestionViewActive();this.composerSuggestionListView.update({hasToScrollToActiveSuggestionView:true});}
break;case'End':if(this.composerSuggestionListView){this.composerSuggestionListView.setLastSuggestionViewActive();this.composerSuggestionListView.update({hasToScrollToActiveSuggestionView:true});}
break;case'Tab':if(this.composerSuggestionListView){if(ev.shiftKey){this.composerSuggestionListView.setPreviousSuggestionViewActive();this.composerSuggestionListView.update({hasToScrollToActiveSuggestionView:true});}else{this.composerSuggestionListView.setNextSuggestionViewActive();this.composerSuggestionListView.update({hasToScrollToActiveSuggestionView:true});}}
break;case'Alt':case'AltGraph':case'CapsLock':case'Control':case'Fn':case'FnLock':case'Hyper':case'Meta':case'NumLock':case'ScrollLock':case'Shift':case'ShiftSuper':case'Symbol':case'SymbolLock':break;default:this.saveStateInStore();}},async onPasteTextInput(ev){if(!ev.clipboardData||!ev.clipboardData.files){return;}
await this.fileUploader.uploadFiles(ev.clipboardData.files);},async openFullComposer(){const attachmentIds=this.composer.attachments.map(attachment=>attachment.id);const context={default_attachment_ids:attachmentIds,default_body:escapeAndCompactTextContent(this.composer.textInputContent),default_is_log:this.composer.isLog,default_model:this.composer.activeThread.model,default_partner_ids:this.composer.recipients.map(partner=>partner.id),default_res_id:this.composer.activeThread.id,mail_post_autofollow:this.composer.activeThread.hasWriteAccess,};const action={type:'ir.actions.act_window',name:this.composer.isLog?this.env._t('Log note'):this.env._t('Compose Email'),res_model:'mail.compose.message',view_mode:'form',views:[[false,'form']],target:'new',context:context,};const composer=this.composer;const options={onClose:()=>{if(!composer.exists()){return;}
composer._reset();if(composer.activeThread){composer.activeThread.fetchData(['messages']);}},};await this.env.services.action.doAction(action,options);},async postMessage(){const composer=this.composer;const postData=this._getMessageData();const params={'post_data':postData,'thread_id':composer.thread.id,'thread_model':composer.thread.model,};try{composer.update({isPostingMessage:true});if(composer.thread.model==='mail.channel'){Object.assign(postData,{subtype_xmlid:'mail.mt_comment',});}else{Object.assign(postData,{subtype_xmlid:composer.isLog?'mail.mt_note':'mail.mt_comment',});if(!composer.isLog){params.context={mail_post_autofollow:this.composer.activeThread.hasWriteAccess};}}
if(this.threadView&&this.threadView.replyingToMessageView&&this.threadView.thread!==this.messaging.inbox.thread){postData.parent_id=this.threadView.replyingToMessageView.message.id;}
const{threadView={}}=this;const chatter=this.chatter;const{thread:chatterThread}=this.chatter||{};const{thread:threadViewThread}=threadView;const messaging=this.messaging;const messageData=await this.messaging.rpc({route:`/mail/message/post`,params});if(!messaging.exists()){return;}
const message=messaging.models['Message'].insert(messaging.models['Message'].convertData(messageData));if(messaging.hasLinkPreviewFeature&&!message.isBodyEmpty){messaging.rpc({route:`/mail/link_preview`,params:{message_id:message.id}},{shadow:true});}
for(const threadView of message.originThread.threadViews){threadView.update({hasAutoScrollOnMessageReceived:true});threadView.addComponentHint('message-posted',{message});}
if(chatter&&chatter.exists()&&chatter.hasParentReloadOnMessagePosted&&messageData.recipients.length){chatter.reloadParentView();}
if(chatterThread){if(this.exists()){this.delete();}
if(chatterThread.exists()){chatterThread.fetchData(['followers','messages','suggestedRecipients']);}}
if(threadViewThread){if(threadViewThread===messaging.inbox.thread){messaging.notify({message:sprintf(messaging.env._t(`Message posted on "%s"`),message.originThread.displayName),type:'info',});if(this.exists()){this.delete();}}
if(threadView&&threadView.exists()){threadView.update({replyingToMessageView:clear()});}}
if(composer.exists()){composer._reset();}}finally{if(composer.exists()){composer.update({isPostingMessage:false});}}},saveStateInStore(){this.composer.update({textInputContent:this.textareaRef.el.value,textInputCursorEnd:this.textareaRef.el.selectionEnd,textInputCursorStart:this.textareaRef.el.selectionStart,textInputSelectionDirection:this.textareaRef.el.selectionDirection,});},async sendMessage(){if(this.chatter&&this.chatter.isTemporary){const chatter=this.chatter;const saved=await this.chatter.doSaveRecord();if(!saved){return;}
chatter.composerView.sendMessage();return;}
if(!this.composer.canPostMessage){if(this.composer.hasUploadingAttachment){this.messaging.notify({message:this.env._t("Please wait while the file is uploading."),type:'warning',});}
return;}
if(this.messageViewInEditing){this.updateMessage();return;}
if(this.composer.thread.channel){const command=this._getCommandFromText(this.composer.textInputContent);if(command){await command.execute({channel:this.composer.thread,body:this.composer.textInputContent});if(this.composer.exists()){this.composer._reset();}
return;}
this.composer.thread.unregisterCurrentPartnerIsTyping({immediateNotify:true});}
this.postMessage();},updateTextInputHeight(){this.mirroredTextareaRef.el.value=this.composer.textInputContent;this.textareaRef.el.style.height=this.mirroredTextareaRef.el.scrollHeight+'px';},async updateMessage(){const composer=this.composer;if(!composer.textInputContent){this.messageViewInEditing.messageActionList.update({deleteConfirmDialog:{}});return;}
let data={body:this._generateMessageBody(),attachment_ids:composer.attachments.concat(this.messageViewInEditing.message.attachments).map(attachment=>attachment.id),};const messageViewInEditing=this.messageViewInEditing;await messageViewInEditing.message.updateContent(data);if(messageViewInEditing.exists()){messageViewInEditing.stopEditing();}},async _executeOrQueueFunction(func){if(this.hasMentionRpcInProgress){this.update({nextMentionRpcFunction:func});return;}
this.update({hasMentionRpcInProgress:true,nextMentionRpcFunction:clear(),});await func();if(this.exists()){this.update({hasMentionRpcInProgress:false});if(this.nextMentionRpcFunction){this._executeOrQueueFunction(this.nextMentionRpcFunction);}}},_generateEmojisOnHtml(htmlString){for(const emoji of this.messaging.emojiRegistry.allEmojis){for(const source of emoji.sources){const escapedSource=String(source).replace(/([.*+?=^!:${}()|[\]/\\])/g,'\\$1');const regexp=new RegExp('(\\s|^)('+escapedSource+')(?=\\s|$)','g');htmlString=htmlString.replace(regexp,'$1'+emoji.codepoints);}}
return htmlString;},_generateMentionsLinks(body){const mentions=[];for(const partner of this.composer.mentionedPartners){const placeholder=`@-mention-partner-${partner.id}`;const text=`@${escape(partner.name)}`;mentions.push({class:'o_mail_redirect',id:partner.id,model:'res.partner',placeholder,text,});body=body.replace(text,placeholder);}
for(const channel of this.composer.mentionedChannels){const placeholder=`#-mention-channel-${channel.id}`;const text=`#${escape(channel.name)}`;mentions.push({class:'o_channel_redirect',id:channel.id,model:'mail.channel',placeholder,text,});body=body.replace(text,placeholder);}
const baseHREF=url('/web');for(const mention of mentions){const href=`href='${baseHREF}#model=${mention.model}&id=${mention.id}'`;const attClass=`class='${mention.class}'`;const dataOeId=`data-oe-id='${mention.id}'`;const dataOeModel=`data-oe-model='${mention.model}'`;const target=`target='_blank'`;const link=`<a ${href} ${attClass} ${dataOeId} ${dataOeModel} ${target}>${mention.text}</a>`;body=body.replace(mention.placeholder,link);}
return body;},_generateMessageBody(){const escapedAndCompactContent=escapeAndCompactTextContent(this.composer.textInputContent);let body=escapedAndCompactContent.replace(/&nbsp;/g,' ').trim();body=this._generateMentionsLinks(body);body=parseAndTransform(body,addLink);body=this._generateEmojisOnHtml(body);return body;},_getCommandFromText(content){if(content.startsWith('/')){const firstWord=content.substring(1).split(/\s/)[0];return this.messaging.commands.find(command=>{if(command.name!==firstWord){return false;}
if(command.channel_types){return Boolean(this.composer.thread.channel)&&command.channel_types.includes(this.composer.thread.channel.channel_type);}
return true;});}
return undefined;},_getMessageData(){return{attachment_ids:this.composer.attachments.map(attachment=>attachment.id),body:this._generateMessageBody(),message_type:'comment',partner_ids:this.composer.recipients.map(partner=>partner.id),};},_onChangeComposer(){this.update({hasToRestoreContent:true});},_onChangeDetectSuggestionDelimiterPosition(){if(!this.composer){return;}
if(this.composer.textInputCursorStart!==this.composer.textInputCursorEnd){return this.update({suggestionDelimiterPosition:clear()});}
const candidatePositions=[];if(this.suggestionDelimiterPosition!==undefined&&this.suggestionDelimiterPosition<this.composer.textInputCursorStart){candidatePositions.push(this.suggestionDelimiterPosition);}
if(this.composer.textInputCursorStart>0){candidatePositions.push(this.composer.textInputCursorStart-1);}
const suggestionDelimiters=['@',':','#','/'];for(const candidatePosition of candidatePositions){if(candidatePosition<0||candidatePosition>=this.composer.textInputContent.length){continue;}
const candidateChar=this.composer.textInputContent[candidatePosition];if(candidateChar==='/'&&candidatePosition!==0){continue;}
if(!suggestionDelimiters.includes(candidateChar)){continue;}
const charBeforeCandidate=this.composer.textInputContent[candidatePosition-1];if(charBeforeCandidate&&!/\s/.test(charBeforeCandidate)){continue;}
this.update({suggestionDelimiterPosition:candidatePosition});return;}
return this.update({suggestionDelimiterPosition:clear()});},_onChangeUpdateSuggestionList(){if(this.messaging.isCurrentUserGuest){return;}
this._updateSuggestionList();this._executeOrQueueFunction(async()=>{if(!this.exists()||this.suggestionDelimiterPosition===undefined||this.suggestionSearchTerm===undefined||!this.suggestionModelName){return;}
const model=this.messaging.models[this.suggestionModelName];const searchTerm=this.suggestionSearchTerm;await model.fetchSuggestions(searchTerm,{thread:this.composer.activeThread});if(!this.exists()){return;}
this._updateSuggestionList();if(this.suggestionSearchTerm&&this.suggestionSearchTerm===searchTerm&&this.suggestionModelName&&this.messaging.models[this.suggestionModelName]===model&&!this.hasSuggestions){this.closeSuggestions();}});},_updateSuggestionList(){if(this.suggestionDelimiterPosition===undefined||this.suggestionSearchTerm===undefined||!this.suggestionModelName){return;}
const model=this.messaging.models[this.suggestionModelName];const[mainSuggestedRecords,extraSuggestedRecords=[],]=model.searchSuggestions(this.suggestionSearchTerm,{thread:this.composer.activeThread});const sortFunction=model.getSuggestionSortFunction(this.suggestionSearchTerm,{thread:this.composer.activeThread});mainSuggestedRecords.sort(sortFunction);extraSuggestedRecords.sort(sortFunction);const limit=8;mainSuggestedRecords.length=Math.min(mainSuggestedRecords.length,limit);extraSuggestedRecords.length=Math.min(extraSuggestedRecords.length,limit-mainSuggestedRecords.length);this.update({extraSuggestions:extraSuggestedRecords.map(record=>record.suggestable),mainSuggestions:mainSuggestedRecords.map(record=>record.suggestable),});if(this.composerSuggestionListView){this.composerSuggestionListView.update({hasToScrollToActiveSuggestionView:true});}},_onSuggestionDelimiterPositionChanged(){if(this.suggestionDelimiterPosition===undefined){this.update({extraSuggestions:clear(),mainSuggestions:clear(),});}},},fields:{attachmentList:one('AttachmentList',{compute(){return(this.composer&&this.composer.attachments.length>0)?{}:clear();},inverse:'composerViewOwner',}),buttonEmojisRef:attr(),chatter:one('Chatter',{identifying:true,inverse:'composerView',}),component:attr(),composer:one('Composer',{compute(){if(this.threadView){if(this.threadView&&this.threadView.replyingToMessageView){return this.threadView.replyingToMessageView.message.originThread.composer;}
if(this.threadView.thread&&this.threadView.thread.composer){return this.threadView.thread.composer;}}
if(this.messageViewInEditing&&this.messageViewInEditing.composerForEditing){return this.messageViewInEditing.composerForEditing;}
if(this.chatter&&this.chatter.thread&&this.chatter.thread.composer){return this.chatter.thread.composer;}
return clear();},inverse:'composerViews',required:true,}),composerSuggestedRecipientListView:one('ComposerSuggestedRecipientListView',{compute(){if(this.hasHeader&&this.hasFollowers&&!this.composer.isLog){return{};}
return clear();},inverse:'composerViewOwner',}),composerSuggestionListView:one('ComposerSuggestionListView',{compute(){if(this.hasSuggestions){return{};}
return clear();},inverse:'composerViewOwner',}),currentPartnerAvatar:attr({compute(){if(this.messaging.currentUser){return url('/web/image',{field:'avatar_128',id:this.messaging.currentUser.id,model:'res.users',});}
return'/web/static/img/user_menu_avatar.png';},}),doFocus:attr(),dropZoneView:one('DropZoneView',{compute(){if(this.useDragVisibleDropZone.isVisible){return{};}
return clear();},inverse:'composerViewOwner',}),emojisPopoverView:one('PopoverView',{inverse:'composerViewOwnerAsEmoji',}),extraSuggestions:many('ComposerSuggestable'),fileUploader:one('FileUploader',{default:{},inverse:'composerView',readonly:true,required:true,}),hasCurrentPartnerAvatar:attr({compute(){if(this.messageViewInEditing){return false;}
if(!this.threadView){return clear();}
if(this.threadView.threadViewer.chatWindow){return false;}
if(this.threadView.threadViewer.discuss){return!this.messaging.device.isSmall;}
return clear();},default:true,}),hasDiscardButton:attr({compute(){if(this.messageViewInEditing){return false;}
if(this.messaging.device.isSmall){return false;}
if(!this.threadView){return clear();}
if(this.threadView.threadViewer.discuss){return this.threadView.threadViewer.discuss.activeThread===this.messaging.inbox.thread;}
return clear();},default:false,}),hasFollowers:attr({compute(){if(this.chatter){return true;}
return clear();},default:false,}),hasFooter:attr({compute(){return Boolean(this.hasThreadTyping||this.composer.attachments.length>0||this.messageViewInEditing||!this.isCompact);},}),hasHeader:attr({compute(){return Boolean((this.hasThreadName&&this.composer.thread)||(this.hasFollowers&&!this.composer.isLog)||(this.threadView&&this.threadView.replyingToMessageView));},}),hasMentionRpcInProgress:attr({default:false,}),hasMentionSuggestionsBelowPosition:attr({compute(){if(this.chatter){return true;}
if(this.messageViewInEditing){return false;}
return clear();},default:false,}),hasSendButton:attr({compute(){if(this.messageViewInEditing){return false;}
if(this.threadView&&this.threadView.threadViewer.chatWindow){return this.messaging.device.isSmall;}
return clear();},default:true,}),hasSuggestions:attr({compute(){return this.mainSuggestions.length>0||this.extraSuggestions.length>0;},default:false,}),hasThreadName:attr({compute(){if(this.threadView){return this.threadView.hasComposerThreadName;}
return clear();},default:false,}),hasThreadTyping:attr({compute(){if(this.threadView){return this.threadView.hasComposerThreadTyping;}
return clear();},default:false,}),hasToRestoreContent:attr({default:false,}),isCompact:attr({compute(){if(this.chatter){return false;}
if(this.messageViewInEditing){return true;}
return clear();},default:true,}),isExpandable:attr({compute(){if(this.chatter){return true;}
return clear();},default:false,}),isFocused:attr({default:false,}),isInDiscuss:attr({compute(){return Boolean((this.threadView&&(this.threadView.threadViewer.discuss||this.threadView.threadViewer.discussPublicView))||(this.messageViewInEditing&&this.messageViewInEditing.isInDiscuss));},}),isInChatWindow:attr({compute(){return Boolean((this.threadView&&this.threadView.threadViewer.chatWindow)||(this.messageViewInEditing&&this.messageViewInEditing.isInChatWindow));},}),isInChatter:attr({compute(){return Boolean((this.threadView&&this.threadView.threadViewer.chatter)||(this.messageViewInEditing&&this.messageViewInEditing.isInChatter));},}),textareaLastInputValue:attr({default:"",}),mainSuggestions:many('ComposerSuggestable'),messageViewInEditing:one('MessageView',{identifying:true,inverse:'composerViewInEditing',}),mirroredTextareaRef:attr(),nextMentionRpcFunction:attr(),sendButtonText:attr({compute(){if(this.composer&&this.composer.isLog&&this.composer.activeThread&&this.composer.activeThread.model!=='mail.channel'){return this.env._t("Log");}
return this.env._t("Send");},}),sendShortcuts:attr({compute(){if(this.chatter){return['ctrl-enter','meta-enter'];}
if(this.messageViewInEditing){return['enter'];}
if(this.threadView){if(!this.messaging.device){return clear();}
if(this.messaging.device.isSmall||(this.messaging.discuss.threadView===this.threadView&&this.messaging.discuss.activeThread===this.messaging.inbox.thread)){return['ctrl-enter','meta-enter'];}
return['enter'];}
return clear();},default:[],}),suggestionDelimiter:attr({compute(){if(!this.composer||this.suggestionDelimiterPosition===undefined||this.suggestionDelimiterPosition>=this.composer.textInputContent.length){return clear();}
return this.composer.textInputContent[this.suggestionDelimiterPosition];},}),suggestionDelimiterPosition:attr(),suggestionModelName:attr({compute(){switch(this.suggestionDelimiter){case'@':return'Partner';case':':return'CannedResponse';case'/':return'ChannelCommand';case'#':return'Thread';default:return clear();}},}),suggestionSearchTerm:attr({compute(){if(!this.composer||this.suggestionDelimiterPosition===undefined||this.suggestionDelimiterPosition>=this.composer.textInputCursorStart){return clear();}
return this.composer.textInputContent.substring(this.suggestionDelimiterPosition+1,this.composer.textInputCursorStart);},}),textareaRef:attr(),threadView:one('ThreadView',{identifying:true,inverse:'composerView',}),useDragVisibleDropZone:one('UseDragVisibleDropZone',{default:{},inverse:'composerViewOwner',readonly:true,required:true,}),},onChanges:[{dependencies:['composer'],methodName:'_onChangeComposer',},{dependencies:['composer.textInputContent','composer.textInputCursorEnd','composer.textInputCursorStart'],methodName:'_onChangeDetectSuggestionDelimiterPosition',},{dependencies:['suggestionDelimiterPosition','suggestionModelName','suggestionSearchTerm','composer.activeThread'],methodName:'_onChangeUpdateSuggestionList',},{dependencies:['suggestionDelimiterPosition'],methodName:'_onSuggestionDelimiterPositionChanged',},],});return __exports;});;

/* /mail/static/src/models/country.js */
odoo.define('@mail/models/country',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'Country',fields:{code:attr(),flagUrl:attr({compute(){if(!this.code){return clear();}
return`/base/static/img/country_flags/${this.code}.png`;},}),id:attr({identifying:true,}),name:attr(),},});return __exports;});;

/* /mail/static/src/models/delete_message_confirm_view.js */
odoo.define('@mail/models/delete_message_confirm_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'DeleteMessageConfirmView',recordMethods:{containsElement(element){return Boolean(this.component&&this.component.root.el&&this.component.root.el.contains(element));},onClickCancel(){this.dialogOwner.delete();},onClickDelete(){this.message.updateContent({attachment_ids:[],body:'',});},},fields:{component:attr(),dialogOwner:one('Dialog',{identifying:true,inverse:'deleteMessageConfirmView',}),message:one('Message',{compute(){return this.dialogOwner.messageActionViewOwnerAsDeleteConfirm.messageAction.messageActionListOwner.message;},required:true,}),messageView:one('MessageView',{compute(){return this.message?{message:this.message}:clear();},inverse:'deleteMessageConfirmViewOwner',required:true,}),},});return __exports;});;

/* /mail/static/src/models/dialog.js */
odoo.define('@mail/models/dialog',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'Dialog',identifyingMode:'xor',lifecycleHooks:{_created(){document.addEventListener('click',this._onClickGlobal,true);document.addEventListener('keydown',this._onKeydownGlobal);},_willDelete(){document.removeEventListener('click',this._onClickGlobal,true);document.removeEventListener('keydown',this._onKeydownGlobal);},},recordMethods:{hasElementInContent(element){return Boolean(this.record&&this.record.containsElement(element));},_onClickGlobal(ev){if(this.hasElementInContent(ev.target)){return;}
if(!this.isCloseable){return;}
this.delete();},_onKeydownGlobal(ev){if(ev.key==='Escape'){this.delete();}},},fields:{attachmentCardOwnerAsAttachmentDeleteConfirm:one('AttachmentCard',{identifying:true,inverse:'attachmentDeleteConfirmDialog',}),attachmentDeleteConfirmView:one('AttachmentDeleteConfirmView',{compute(){if(this.attachmentCardOwnerAsAttachmentDeleteConfirm){return{};}
if(this.attachmentImageOwnerAsAttachmentDeleteConfirm){return{};}
return clear();},inverse:'dialogOwner',}),attachmentImageOwnerAsAttachmentDeleteConfirm:one('AttachmentImage',{identifying:true,inverse:'attachmentDeleteConfirmDialog',}),attachmentListOwnerAsAttachmentView:one('AttachmentList',{identifying:true,inverse:'attachmentListViewDialog',}),attachmentViewer:one('AttachmentViewer',{compute(){if(this.attachmentListOwnerAsAttachmentView){return{};}
return clear();},inverse:'dialogOwner',}),backgroundOpacity:attr({compute(){if(this.attachmentViewer){return 0.7;}
return 0.5;},}),componentClassName:attr({compute(){if(this.attachmentDeleteConfirmView){return'o_Dialog_componentMediumSize align-self-start mt-5';}
if(this.deleteMessageConfirmView){return'o_Dialog_componentLargeSize align-self-start mt-5';}
if(this.linkPreviewDeleteConfirmView){return'o_Dialog_componentMediumSize align-self-start mt-5';}
return'';},}),componentName:attr({compute(){if(this.attachmentViewer){return'AttachmentViewer';}
if(this.attachmentDeleteConfirmView){return'AttachmentDeleteConfirm';}
if(this.deleteMessageConfirmView){return'DeleteMessageConfirm';}
if(this.followerSubtypeList){return'FollowerSubtypeList';}
if(this.linkPreviewDeleteConfirmView){return'LinkPreviewDeleteConfirmView';}
return clear();},required:true,}),deleteMessageConfirmView:one('DeleteMessageConfirmView',{compute(){return this.messageActionViewOwnerAsDeleteConfirm?{}:clear();},inverse:'dialogOwner',}),linkPreviewAsideViewOwnerAsLinkPreviewDeleteConfirm:one('LinkPreviewAsideView',{inverse:'linkPreviewDeleteConfirmDialog',readonly:true,}),linkPreviewDeleteConfirmView:one('LinkPreviewDeleteConfirmView',{compute(){return this.linkPreviewAsideViewOwnerAsLinkPreviewDeleteConfirm?{}:clear();},inverse:'dialogOwner',}),followerOwnerAsSubtypeList:one('Follower',{identifying:true,inverse:'followerSubtypeListDialog',}),followerSubtypeList:one('FollowerSubtypeList',{compute(){return this.followerOwnerAsSubtypeList?{}:clear();},inverse:'dialogOwner',}),isCloseable:attr({compute(){if(this.attachmentViewer){return!this.attachmentViewer.isDragging;}
return true;},default:true,}),manager:one('DialogManager',{compute(){if(this.messaging.dialogManager){return this.messaging.dialogManager;}
return clear();},inverse:'dialogs',}),messageActionViewOwnerAsDeleteConfirm:one('MessageActionView',{identifying:true,inverse:'deleteConfirmDialog',}),record:one('Record',{compute(){if(this.attachmentViewer){return this.attachmentViewer;}
if(this.attachmentDeleteConfirmView){return this.attachmentDeleteConfirmView;}
if(this.deleteMessageConfirmView){return this.deleteMessageConfirmView;}
if(this.linkPreviewDeleteConfirmView){return this.linkPreviewDeleteConfirmView;}
if(this.followerSubtypeList){return this.followerSubtypeList;}},isCausal:true,required:true,}),style:attr({compute(){return`background-color: rgba(0, 0, 0, ${this.backgroundOpacity});`;},}),},});return __exports;});;

/* /mail/static/src/models/dialog_manager.js */
odoo.define('@mail/models/dialog_manager',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many}=require('@mail/model/model_field');registerModel({name:'DialogManager',recordMethods:{onComponentUpdate(){if(this.dialogs.length>0){document.body.classList.add('modal-open');}else{document.body.classList.remove('modal-open');}},},fields:{dialogs:many('Dialog',{inverse:'manager',isCausal:true,}),},});return __exports;});;

/* /mail/static/src/models/discuss.js */
odoo.define('@mail/models/discuss',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{escape,sprintf}=require('@web/core/utils/strings');registerModel({name:'Discuss',recordMethods:{close(){this.update({discussView:clear()});},focus(){if(this.threadView&&this.threadView.composerView){this.threadView.composerView.update({doFocus:true});}},async handleAddChannelAutocompleteSelect(ev,ui){ev.preventDefault();const name=this.discussView.addingChannelValue;this.discussView.clearIsAddingItem();if(ui.item.create){const channel=await this.messaging.models['Thread'].performRpcCreateChannel({name,group_id:this.messaging.internalUserGroupId,});channel.open();}else{const channel=this.messaging.models['Thread'].insert({id:ui.item.id,model:'mail.channel',});await channel.join();channel.update({isServerPinned:true});channel.open();}},async handleAddChannelAutocompleteSource(req,res){this.discussView.update({addingChannelValue:req.term});const threads=await this.messaging.models['Thread'].searchChannelsToOpen({limit:10,searchTerm:req.term});const items=threads.map((thread)=>{const escapedName=escape(thread.name);return{id:thread.id,label:escapedName,value:escapedName,};});const escapedValue=escape(req.term);items.push({create:true,escapedValue,label:sprintf(`<strong>${this.env._t('Create %s')}</strong>`,`<em><span class="fa fa-hashtag"/>${escapedValue}</em>`,),});res(items);},handleAddChatAutocompleteSelect(ev,ui){this.messaging.openChat({partnerId:ui.item.id});this.discussView.clearIsAddingItem();},handleAddChatAutocompleteSource(req,res){const value=escape(req.term);this.messaging.models['Partner'].imSearch({callback:partners=>{const suggestions=partners.map(partner=>{return{id:partner.id,value:partner.nameOrDisplayName,label:partner.nameOrDisplayName,};});res(_.sortBy(suggestions,'label'));},keyword:value,limit:10,});},open(){this.update({discussView:{}});},openInitThread(){const[model,id]=typeof this.initActiveId==='number'?['mail.channel',this.initActiveId]:this.initActiveId.split('_');const thread=this.messaging.models['Thread'].findFromIdentifyingData({id:model!=='mail.box'?Number(id):id,model,});if(!thread){return;}
thread.open();if(this.messaging.device.isSmall&&thread.channel&&thread.channel.channel_type){this.update({activeMobileNavbarTabId:thread.channel.channel_type});}},async openThread(thread,{focus}={}){this.update({thread});if(focus!==undefined?focus:!this.messaging.device.isMobileDevice){this.focus();}
if(!this.discussView){this.env.services.action.doAction('mail.action_discuss',{name:this.env._t("Discuss"),active_id:this.threadToActiveId(this),clearBreadcrumbs:false,on_reverse_breadcrumb:()=>this.close(),},);}},threadToActiveId(thread){return`${thread.model}_${thread.id}`;},onInputQuickSearch(value){if(!this.sidebarQuickSearchValue){this.categoryChat.open();this.categoryChannel.open();}
this.update({sidebarQuickSearchValue:value});},},fields:{activeId:attr({compute(){if(!this.activeThread){return clear();}
return this.threadToActiveId(this.activeThread);},}),activeMobileNavbarTabId:attr({default:'mailbox',}),activeThread:one('Thread',{compute(){if(!this.thread){return clear();}
if(this.thread.channel&&this.thread.isPinned){return this.thread;}
if(this.thread.mailbox){return this.thread;}
return clear();},}),addChannelInputPlaceholder:attr({compute(){return this.env._t("Create or search channel...");},}),addChatInputPlaceholder:attr({compute(){return this.env._t("Search user...");},}),categoryChannel:one('DiscussSidebarCategory',{default:{},inverse:'discussAsChannel',}),categoryChat:one('DiscussSidebarCategory',{default:{},inverse:'discussAsChat',}),discussView:one('DiscussView',{inverse:'discuss',}),hasThreadView:attr({compute(){if(!this.activeThread||!this.discussView){return false;}
if(this.messaging.device.isSmall&&(this.activeMobileNavbarTabId!=='mailbox'||!this.activeThread.mailbox)){return false;}
return true;},}),initActiveId:attr({default:'mail.box_inbox',}),isInitThreadHandled:attr({default:false,}),menu_id:attr({default:null,}),notificationListView:one('NotificationListView',{compute(){return(this.messaging.device.isSmall&&this.activeMobileNavbarTabId!=='mailbox')?{}:clear();},inverse:'discussOwner',}),mobileMessagingNavbarView:one('MobileMessagingNavbarView',{compute(){if(this.messaging.device&&this.messaging.device.isSmall&&!(this.threadView&&this.threadView.replyingToMessageView)){return{};}
return clear();},inverse:'discuss',}),sidebarQuickSearchValue:attr({default:"",}),thread:one('Thread'),threadView:one('ThreadView',{related:'threadViewer.threadView',}),threadViewer:one('ThreadViewer',{compute(){return{hasMemberList:true,hasThreadView:this.hasThreadView,hasTopbar:true,thread:this.activeThread?this.activeThread:clear(),};},inverse:'discuss',required:true,}),},});return __exports;});;

/* /mail/static/src/models/discuss_public_view.js */
odoo.define('@mail/models/discuss_public_view',async function(require){'use strict';let __exports={};const{attr,one}=require('@mail/model/model_field');const{registerModel}=require('@mail/model/model_core');const{clear}=require('@mail/model/model_field_command');registerModel({name:'DiscussPublicView',recordMethods:{async switchToThreadView(){this.update({threadViewer:{extraClass:'flex-grow-1',hasMemberList:true,hasThreadView:true,hasTopbar:true,thread:this.channel,},welcomeView:clear(),});if(this.isChannelTokenSecret){window.history.replaceState(window.history.state,null,`/discuss/channel/${this.channel.id}${window.location.search}`);}
if(this.channel.defaultDisplayMode==='video_full_screen'){await this.channel.toggleCall({startWithVideo:true});await this.threadView.callView.activateFullScreen();}},switchToWelcomeView(){this.update({threadViewer:clear(),welcomeView:{channel:this.channel,isDoFocusGuestNameInput:true,originalGuestName:this.messaging.currentGuest&&this.messaging.currentGuest.name,pendingGuestName:this.messaging.currentGuest&&this.messaging.currentGuest.name,},});if(this.welcomeView.callDemoView){this.welcomeView.callDemoView.enableMicrophone();this.welcomeView.callDemoView.enableVideo();}},},fields:{channel:one('Thread',{readonly:true,required:true,}),isChannelTokenSecret:attr({default:true,}),messagingAsPublicView:one('Messaging',{compute(){return this.messaging;},inverse:'discussPublicView',}),shouldAddGuestAsMemberOnJoin:attr({default:false,readonly:true,}),shouldDisplayWelcomeViewInitially:attr({default:false,readonly:true,}),threadView:one('ThreadView',{related:'threadViewer.threadView',}),threadViewer:one('ThreadViewer',{inverse:'discussPublicView',}),welcomeView:one('WelcomeView',{inverse:'discussPublicView',}),},});return __exports;});;

/* /mail/static/src/models/discuss_sidebar_category.js */
odoo.define('@mail/models/discuss_sidebar_category',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'DiscussSidebarCategory',identifyingMode:'xor',modelMethods:{async performRpcSetResUsersSettings(resUsersSettings){return this.messaging.rpc({model:'res.users.settings',method:'set_res_users_settings',args:[[this.messaging.currentUser.res_users_settings_id.id]],kwargs:{new_settings:resUsersSettings,},},{shadow:true},);},},recordMethods:{async close(){this.update({isPendingOpen:false});await this.messaging.models['DiscussSidebarCategory'].performRpcSetResUsersSettings({[this.serverStateKey]:false,});},async open(){this.update({isPendingOpen:true});await this.messaging.models['DiscussSidebarCategory'].performRpcSetResUsersSettings({[this.serverStateKey]:true,});},async onClick(){if(this.isOpen){await this.close();}else{await this.open();}},onHideAddingItem(){this.update({isAddingItem:false});},onAddItemAutocompleteSelect(ev,ui){switch(this.autocompleteMethod){case'channel':this.messaging.discuss.handleAddChannelAutocompleteSelect(ev,ui);break;case'chat':this.messaging.discuss.handleAddChatAutocompleteSelect(ev,ui);break;}},onAddItemAutocompleteSource(req,res){switch(this.autocompleteMethod){case'channel':this.messaging.discuss.handleAddChannelAutocompleteSource(req,res);break;case'chat':this.messaging.discuss.handleAddChatAutocompleteSource(req,res);break;}},onClickCommandAdd(ev){ev.stopPropagation();this.update({isAddingItem:true});},onClickCommandView(ev){ev.stopPropagation();return this.env.services.action.doAction({name:this.env._t("Public Channels"),type:'ir.actions.act_window',res_model:'mail.channel',views:[[false,'kanban'],[false,'form']],domain:[['channel_type','=','channel']],});},_onIsServerOpenChanged(){if(this.isServerOpen===this.isPendingOpen){this.update({isPendingOpen:clear()});}},},fields:{activeItem:one('DiscussSidebarCategoryItem',{compute(){const channel=this.messaging.discuss.activeThread&&this.messaging.discuss.activeThread.channel;if(channel&&this.supportedChannelTypes.includes(channel.channel_type)){return{category:this,channel,};}
return clear();},}),addingItemAutocompleteInputView:one('AutocompleteInputView',{compute(){if(this.isOpen&&this.isAddingItem){return{};}
return clear();},inverse:'discussSidebarCategoryOwnerAsAddingItem',}),autocompleteMethod:attr({compute(){if(this.discussAsChannel){return'channel';}
if(this.discussAsChat){return'chat';}
return clear();},default:'',}),categoryItems:many('DiscussSidebarCategoryItem',{inverse:'category',}),categoryItemsOrderedByLastAction:many('DiscussSidebarCategoryItem',{compute(){if(this.discussAsChat){return this.categoryItems;}
return clear();},sort:[['truthy-first','thread'],['truthy-first','thread.lastInterestDateTime'],['most-recent-first','thread.lastInterestDateTime'],['greater-first','channel.id'],],}),categoryItemsOrderedByName:many('DiscussSidebarCategoryItem',{compute(){if(this.discussAsChannel){return this.categoryItems;}
return clear();},sort:[['truthy-first','thread'],['truthy-first','thread.displayName'],['case-insensitive-asc','thread.displayName'],['smaller-first','channel.id'],],}),commandAddTitleText:attr({compute(){if(this.discussAsChannel){return this.env._t("Add or join a channel");}
if(this.discussAsChat){return this.env._t("Start a conversation");}
return clear();},default:'',}),counter:attr({default:0,readonly:true,sum:'categoryItems.categoryCounterContribution',}),discussAsChannel:one('Discuss',{identifying:true,inverse:'categoryChannel',}),discussAsChat:one('Discuss',{identifying:true,inverse:'categoryChat',}),filteredCategoryItems:many('DiscussSidebarCategoryItem',{compute(){let categoryItems=this.orderedCategoryItems;const searchValue=this.messaging.discuss.sidebarQuickSearchValue;if(searchValue){const qsVal=searchValue.toLowerCase();categoryItems=categoryItems.filter(categoryItem=>{const nameVal=categoryItem.channel.displayName.toLowerCase();return nameVal.includes(qsVal);});}
return categoryItems;},}),name:attr({compute(){if(this.discussAsChannel){return this.env._t("Channels");}
if(this.discussAsChat){return this.env._t("Direct Messages");}
return clear();},default:'',}),hasAddCommand:attr({compute(){if(this.discussAsChannel){return true;}
if(this.discussAsChat){return true;}
return clear();},default:false,}),hasViewCommand:attr({compute(){if(this.discussAsChannel){return true;}
return clear();},default:false,}),isAddingItem:attr({default:false,}),isOpen:attr({compute(){return this.isPendingOpen!==undefined?this.isPendingOpen:this.isServerOpen;},}),isPendingOpen:attr(),isServerOpen:attr({compute(){if(!this.messaging.currentUser){return clear();}
if(!this.messaging.currentUser.res_users_settings_id){return clear();}
if(this.discussAsChannel){return this.messaging.currentUser.res_users_settings_id.is_discuss_sidebar_category_channel_open;}
if(this.discussAsChat){return this.messaging.currentUser.res_users_settings_id.is_discuss_sidebar_category_chat_open;}
return clear();},default:false,}),newItemPlaceholderText:attr({compute(){if(this.discussAsChannel){return this.env._t("Find or create a channel...");}
if(this.discussAsChat){return this.env._t("Find or start a conversation...");}
return clear();},}),orderedCategoryItems:many('DiscussSidebarCategoryItem',{compute(){if(this.discussAsChannel){return this.categoryItemsOrderedByName;}
if(this.discussAsChat){return this.categoryItemsOrderedByLastAction;}
return clear();},}),serverStateKey:attr({compute(){if(this.discussAsChannel){return'is_discuss_sidebar_category_channel_open';}
if(this.discussAsChat){return'is_discuss_sidebar_category_chat_open';}
return clear();},}),supportedChannelTypes:attr({compute(){if(this.discussAsChannel){return['channel'];}
if(this.discussAsChat){return['chat','group'];}
return clear();},required:true,}),},onChanges:[{dependencies:['isServerOpen'],methodName:'_onIsServerOpenChanged',},],});return __exports;});;

/* /mail/static/src/models/discuss_sidebar_category_item.js */
odoo.define('@mail/models/discuss_sidebar_category_item',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const Dialog=require('web.Dialog');registerModel({name:'DiscussSidebarCategoryItem',recordMethods:{onClick(ev){this.thread.open();},async onClickCommandLeave(ev){ev.stopPropagation();if(this.channel.channel_type!=='group'&&this.thread.creator===this.messaging.currentUser){await this._askAdminConfirmation();}
if(this.channel.channel_type==='group'){await this._askLeaveGroupConfirmation();}
this.thread.leave();},onClickCommandSettings(ev){ev.stopPropagation();return this.env.services.action.doAction({type:'ir.actions.act_window',res_model:this.thread.model,res_id:this.thread.id,views:[[false,'form']],target:'current',});},onClickCommandUnpin(ev){ev.stopPropagation();this.thread.unsubscribe();},_askAdminConfirmation(){return new Promise(resolve=>{Dialog.confirm(this,this.env._t("You are the administrator of this channel. Are you sure you want to leave?"),{buttons:[{text:this.env._t("Leave"),classes:'btn-primary',close:true,click:resolve,},{text:this.env._t("Discard"),close:true,},],});});},_askLeaveGroupConfirmation(){return new Promise(resolve=>{Dialog.confirm(this,this.env._t("You are about to leave this group conversation and will no longer have access to it unless you are invited again. Are you sure you want to continue?"),{buttons:[{text:this.env._t("Leave"),classes:'btn-primary',close:true,click:resolve},{text:this.env._t("Discard"),close:true}]});});},},fields:{avatarUrl:attr({compute(){switch(this.channel.channel_type){case'channel':case'group':return`/web/image/mail.channel/${this.channel.id}/avatar_128?unique=${this.channel.avatarCacheKey}`;case'chat':if(this.channel.correspondent){return this.channel.correspondent.avatarUrl;}}
return'/mail/static/src/img/smiley/avatar.jpg';},}),category:one('DiscussSidebarCategory',{identifying:true,inverse:'categoryItems',}),categoryCounterContribution:attr({compute(){if(!this.thread){return clear();}
switch(this.channel.channel_type){case'channel':return this.thread.message_needaction_counter>0?1:0;case'chat':case'group':return this.channel.localMessageUnreadCounter>0?1:0;}},}),channel:one('Channel',{identifying:true,inverse:'discussSidebarCategoryItem',}),counter:attr({compute(){if(!this.thread){return clear();}
switch(this.channel.channel_type){case'channel':return this.thread.message_needaction_counter;case'chat':case'group':return this.channel.localMessageUnreadCounter;}},}),hasLeaveCommand:attr({compute(){if(!this.thread){return clear();}
return(['channel','group'].includes(this.channel.channel_type)&&!this.thread.message_needaction_counter&&!this.thread.group_based_subscription);},}),hasSettingsCommand:attr({compute(){return this.channel.channel_type==='channel';},}),hasThreadIcon:attr({compute(){if(!this.thread){return clear();}
switch(this.channel.channel_type){case'channel':return!Boolean(this.thread.authorizedGroupFullName);case'chat':return true;case'group':return false;}},}),hasUnpinCommand:attr({compute(){return this.channel.channel_type==='chat'&&!this.channel.localMessageUnreadCounter;},}),isActive:attr({compute(){return this.messaging.discuss&&this.thread===this.messaging.discuss.activeThread;},}),isUnread:attr({compute(){return this.channel.localMessageUnreadCounter>0;},}),thread:one('Thread',{related:'channel.thread'}),},});return __exports;});;

/* /mail/static/src/models/discuss_sidebar_mailbox_view.js */
odoo.define('@mail/models/discuss_sidebar_mailbox_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'DiscussSidebarMailboxView',identifyingMode:'xor',fields:{discussViewOwnerAsHistory:one('DiscussView',{identifying:true,inverse:'historyView',}),discussViewOwnerAsInbox:one('DiscussView',{identifying:true,inverse:'inboxView',}),discussViewOwnerAsStarred:one('DiscussView',{identifying:true,inverse:'starredView',}),mailbox:one('Mailbox',{compute(){if(this.discussViewOwnerAsHistory){return this.messaging.history;}
if(this.discussViewOwnerAsInbox){return this.messaging.inbox;}
if(this.discussViewOwnerAsStarred){return this.messaging.starred;}
return clear();},required:true,}),},});return __exports;});;

/* /mail/static/src/models/discuss_view.js */
odoo.define('@mail/models/discuss_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'DiscussView',recordMethods:{clearIsAddingItem(){this.update({addingChannelValue:clear(),isAddingChannel:clear(),isAddingChat:clear(),});},onClickMobileNewChannelButton(ev){this.update({isAddingChannel:true});},onClickMobileNewChatButton(ev){this.update({isAddingChat:true});},async onClickStartAMeetingButton(ev){const meetingChannel=await this.messaging.models['Thread'].createGroupChat({default_display_mode:'video_full_screen',partners_to:[this.messaging.currentPartner.id],});meetingChannel.toggleCall({startWithVideo:true});await meetingChannel.open({focus:false});if(!meetingChannel.exists()||!this.discuss.threadView){return;}
this.discuss.threadView.topbar.openInvitePopoverView();},onHideMobileAddItemHeader(){if(!this.exists()){return;}
this.clearIsAddingItem();},onInputQuickSearch(ev){ev.stopPropagation();this.discuss.onInputQuickSearch(this.quickSearchInputRef.el.value);},onClickMobileMailboxSelectionItem(mailbox){if(!mailbox.exists()){return;}
mailbox.thread.open();},onMobileAddItemHeaderInputSelect(ev,ui){if(!this.exists()){return;}
if(this.isAddingChannel){this.discuss.handleAddChannelAutocompleteSelect(ev,ui);}else{this.discuss.handleAddChatAutocompleteSelect(ev,ui);}},onMobileAddItemHeaderInputSource(req,res){if(!this.exists()){return;}
if(this.isAddingChannel){this.discuss.handleAddChannelAutocompleteSource(req,res);}else{this.discuss.handleAddChatAutocompleteSource(req,res);}},_onDiscussActiveThreadChanged(){this.env.services.router.pushState({action:this.discuss.discussView.actionId,active_id:this.discuss.activeId,});},},fields:{actionId:attr(),addingChannelValue:attr({default:"",}),discuss:one('Discuss',{identifying:true,inverse:'discussView',}),historyView:one('DiscussSidebarMailboxView',{default:{},inverse:'discussViewOwnerAsHistory',}),inboxView:one('DiscussSidebarMailboxView',{default:{},inverse:'discussViewOwnerAsInbox',}),isAddingChannel:attr({default:false,}),isAddingChat:attr({default:false,}),mobileAddItemHeaderAutocompleteInputView:one('AutocompleteInputView',{compute(){if(this.messaging.device.isSmall&&(this.isAddingChannel||this.isAddingChat)){return{};}
return clear();},inverse:'discussViewOwnerAsMobileAddItemHeader',}),orderedMailboxes:many('Mailbox',{related:'messaging.allMailboxes',sort:[['smaller-first','sequence']],}),quickSearchInputRef:attr(),starredView:one('DiscussSidebarMailboxView',{default:{},inverse:'discussViewOwnerAsStarred',}),},onChanges:[{dependencies:['discuss.activeThread'],methodName:'_onDiscussActiveThreadChanged',},],});return __exports;});;

/* /mail/static/src/models/drop_zone_view.js */
odoo.define('@mail/models/drop_zone_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{decrement,increment}=require('@mail/model/model_field_command');registerModel({name:'DropZoneView',identifyingMode:'xor',recordMethods:{onDragenter(ev){if(!this.exists()){return;}
ev.preventDefault();if(this.dragCount===0){this.update({isDraggingInside:true});}
this.update({dragCount:increment()});},onDragleave(ev){if(!this.exists()){return;}
this.update({dragCount:decrement()});if(this.dragCount===0){this.update({isDraggingInside:false});}},onDragover(ev){ev.preventDefault();ev.dataTransfer.dropEffect='copy';},async onDrop(ev){if(!this.exists()){return;}
ev.preventDefault();this.update({isDraggingInside:false});if(this._isDragSourceExternalFile(ev.dataTransfer)){const files=ev.dataTransfer.files;if(this.chatterOwner){const chatter=this.chatterOwner;if(chatter.isTemporary){const saved=await chatter.doSaveRecord();if(!saved){return;}}
await chatter.fileUploader.uploadFiles(files);return;}
if(this.composerViewOwner){await this.composerViewOwner.fileUploader.uploadFiles(files);return;}}},_isDragSourceExternalFile(dataTransfer){const dragDataType=dataTransfer.types;if(dragDataType.constructor===window.DOMStringList){return dragDataType.contains('Files');}
if(dragDataType.constructor===Array){return dragDataType.includes('Files');}
return false;},},fields:{chatterOwner:one('Chatter',{identifying:true,inverse:'dropZoneView',}),composerViewOwner:one('ComposerView',{identifying:true,inverse:'dropZoneView',}),dragCount:attr({default:0,}),isDraggingInside:attr({default:false,}),},});return __exports;});;

/* /mail/static/src/models/emoji.js */
odoo.define('@mail/models/emoji',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'Emoji',recordMethods:{_fuzzySearch(string,search){let i=0;let j=0;while(i<string.length){if(string[i]===search[j]){j+=1;}
if(j===search.length){return true;}
i+=1;}
return false;},_isStringInEmojiKeywords(string){for(let index in this.searchData){if(this._fuzzySearch(this.searchData[index],string)){return true;}}
return false;},},fields:{allEmojiInCategoryOfCurrent:many('EmojiInCategory',{compute(){return this.emojiCategories.map(category=>({category}));},inverse:'emoji',}),codepoints:attr({identifying:true,}),emojiCategories:many('EmojiCategory',{compute(){if(!this.emojiRegistry){return clear();}
return[this.emojiDataCategory];},inverse:'allEmojis',}),emojiDataCategory:one('EmojiCategory'),emojiOrEmojiInCategory:many('EmojiOrEmojiInCategory',{inverse:'emoji',}),emojiRegistry:one('EmojiRegistry',{compute(){if(!this.messaging){return clear();}
return this.messaging.emojiRegistry;},inverse:'allEmojis',required:true,}),emojiViews:many('EmojiView',{inverse:'emoji',readonly:true,}),emoticons:attr(),keywords:attr(),name:attr({readonly:true,}),searchData:attr({compute(){return[...this.shortcodes,...this.emoticons,...this.name,...this.keywords];},}),shortcodes:attr(),sources:attr({compute(){return[...this.shortcodes,...this.emoticons];},}),},});return __exports;});;

/* /mail/static/src/models/emoji_category.js */
odoo.define('@mail/models/emoji_category',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');registerModel({name:'EmojiCategory',fields:{allEmojiInCategoryOfCurrent:many('EmojiInCategory',{inverse:'category',}),allEmojiPickerViewCategory:many('EmojiPickerView.Category',{inverse:'category',}),allEmojis:many('Emoji',{inverse:'emojiCategories',}),displayName:attr(),emojiCount:attr({default:0,}),emojiRegistry:one("EmojiRegistry",{compute(){return this.messaging.emojiRegistry;},inverse:"allCategories",required:true,}),name:attr({identifying:true,}),sortId:attr({readonly:true,required:true,}),title:attr({readonly:true,required:true,}),},});return __exports;});;

/* /mail/static/src/models/emoji_category_bar_view.js */
odoo.define('@mail/models/emoji_category_bar_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'EmojiCategoryBarView',fields:{emojiCategoryViews:many('EmojiCategoryView',{compute(){if(!this.emojiPickerView){return clear();}
return this.emojiPickerView.categories.map(category=>({viewCategory:category}));},inverse:'emojiCategoryBarViewOwner',}),emojiPickerHeaderViewOwner:one('EmojiPickerHeaderView',{identifying:true,inverse:'emojiCategoryBarView',}),emojiPickerView:one('EmojiPickerView',{related:'emojiPickerHeaderViewOwner.emojiPickerViewOwner',}),},});return __exports;});;

/* /mail/static/src/models/emoji_category_view.js */
odoo.define('@mail/models/emoji_category_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'EmojiCategoryView',recordMethods:{onClick(){this.emojiPickerView.emojiSearchBarView.reset();this.emojiPickerView.emojiGridView.update({categorySelectedByUser:this.viewCategory});},onMouseenter(ev){if(!this.exists()){return;}
this.update({isHovered:true});},onMouseleave(ev){if(!this.exists()){return;}
this.update({isHovered:false});},},fields:{category:one('EmojiCategory',{related:'viewCategory.category',}),emojiCategoryBarViewOwner:one('EmojiCategoryBarView',{identifying:true,inverse:'emojiCategoryViews',}),emojiPickerView:one('EmojiPickerView',{related:'emojiCategoryBarViewOwner.emojiPickerView',}),isActive:attr({compute(){return Boolean(this.viewCategory.emojiPickerViewAsActive);},}),isHovered:attr({default:false,}),viewCategory:one('EmojiPickerView.Category',{identifying:true,inverse:'emojiCategoryView',}),},});return __exports;});;

/* /mail/static/src/models/emoji_grid_item_view.js */
odoo.define('@mail/models/emoji_grid_item_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'EmojiGridItemView',fields:{emojiOrEmojiInCategory:one('EmojiOrEmojiInCategory',{identifying:true,inverse:'emojiGridItemViews',}),emojiGridRowViewOwner:one('EmojiGridRowView',{identifying:true,inverse:'items',}),emojiView:one('EmojiView',{compute(){if(this.emojiOrEmojiInCategory.emoji){return{emoji:this.emojiOrEmojiInCategory.emoji};}
if(this.emojiOrEmojiInCategory.emojiInCategory){return{emoji:this.emojiOrEmojiInCategory.emojiInCategory.emoji};}
return clear();},inverse:'emojiGridItemViewOwner',}),width:attr({compute(){if(!this.emojiGridRowViewOwner.emojiGridViewOwner){return clear();}
return this.emojiGridRowViewOwner.emojiGridViewOwner.itemWidth;},default:0,}),},});return __exports;});;

/* /mail/static/src/models/emoji_grid_loading_screen.js */
odoo.define('@mail/models/emoji_grid_loading_screen',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'EmojiGridLoadingScreen',fields:{emojiGridViewOwner:one('EmojiGridView',{identifying:true,inverse:'loadingScreenView',}),text:attr({compute(){return this.env._t("Loading...");},}),},});return __exports;});;

/* /mail/static/src/models/emoji_grid_no_search_content_view.js */
odoo.define('@mail/models/emoji_grid_no_search_content_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'EmojiGridNoSearchContentView',fields:{emojiGridViewOwner:one('EmojiGridView',{identifying:true,inverse:'searchNoContentView',}),text:attr({compute(){return this.env._t("No emoji match your search");},}),},});return __exports;});;

/* /mail/static/src/models/emoji_grid_row_view.js */
odoo.define('@mail/models/emoji_grid_row_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'EmojiGridRowView',fields:{emojiGridViewOwner:one('EmojiGridView',{related:'emojiGridViewRowRegistryOwner.emojiGridViewOwner',}),index:attr({identifying:true,}),items:many('EmojiGridItemView',{inverse:'emojiGridRowViewOwner',}),sectionView:one('EmojiGridSectionView',{compute(){if(this.viewCategory){return{};}
return clear();},inverse:'emojiGridRowViewOwner',}),emojiGridViewRowRegistryOwner:one('EmojiGridViewRowRegistry',{identifying:true,inverse:'rows',}),viewCategory:one('EmojiPickerView.Category',{inverse:'emojiGridRowView',}),},});return __exports;});;

/* /mail/static/src/models/emoji_grid_section_view.js */
odoo.define('@mail/models/emoji_grid_section_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'EmojiGridSectionView',fields:{category:one('EmojiCategory',{related:'viewCategory.category',}),emojiGridRowViewOwner:one('EmojiGridRowView',{identifying:true,inverse:'sectionView',}),viewCategory:one('EmojiPickerView.Category',{related:'emojiGridRowViewOwner.viewCategory',}),},});return __exports;});;

/* /mail/static/src/models/emoji_grid_view.js */
odoo.define('@mail/models/emoji_grid_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,increment}=require('@mail/model/model_field_command');registerModel({name:'EmojiGridView',recordMethods:{doJumpToCategorySelectedByUser(){this.containerRef.el.scrollTo({top:this.rowHeight*this.categorySelectedByUser.emojiGridRowView.index,});this.update({categorySelectedByUser:clear()});},onComponentUpdate(){if(this.categorySelectedByUser&&this.emojiPickerViewOwner.emojiSearchBarView.currentSearch===""){this.doJumpToCategorySelectedByUser();}},onScroll(){if(!this.exists()){return;}
this.onScrollThrottle.do();},_onChangeScrollRecomputeCount(){for(const viewCategory of this.emojiPickerViewOwner.categories){if(viewCategory.emojiGridRowView&&this.scrollIndex>=viewCategory.emojiGridRowView.index&&(viewCategory.emojiPickerViewOwnerAsLastCategory||this.scrollIndex<=viewCategory.endSectionIndex)){this.emojiPickerViewOwner.update({activeCategoryByGridViewScroll:viewCategory});break;}}},_filterEmoji(emoji){return(emoji._isStringInEmojiKeywords(this.emojiPickerViewOwner.emojiSearchBarView.currentSearch));},},fields:{amountOfItemsPerRow:attr({default:9,}),categorySelectedByUser:one('EmojiPickerView.Category'),containerRef:attr(),distanceFromTop:attr({compute(){this.scrollRecomputeCount;if(!this.listRef||!this.listRef.el){return clear();}
return Math.max((this.scrollPercentage*this.listRef.el.clientHeight-this.extraRenderRowsAmount*this.rowHeight),0,);},default:0,}),distanceInRowOffset:attr({compute(){return this.distanceFromTop%this.rowHeight;},default:0,}),emojiPickerViewOwner:one('EmojiPickerView',{identifying:true,inverse:'emojiGridView',}),extraRenderRowsAmount:attr({default:10,}),firstRenderedRowIndex:attr({compute(){this.scrollRecomputeCount;return Math.max(this.scrollIndex-this.extraRenderRowsAmount,0,);},default:0,}),height:attr({compute(){return this.rowHeight*9.5;},}),hoveredEmojiView:one('EmojiView',{inverse:'emojiGridViewAsHovered',}),itemWidth:attr({default:30,}),lastRenderedRowIndex:attr({compute(){this.scrollRecomputeCount;let value;if(this.firstRenderedRowIndex+this.renderedMaxAmount>=this.rows.length){value=Math.max(this.rows.length-1,0);}else{value=this.firstRenderedRowIndex+this.renderedMaxAmount;}
return Math.ceil(value);},default:0,}),listHeight:attr({compute(){return this.rowHeight*this.rows.length;},default:0,}),listRef:attr(),loadingScreenView:one('EmojiGridLoadingScreen',{compute(){if(!this.messaging.emojiRegistry.isLoaded){return{};}
return clear();},inverse:'emojiGridViewOwner',}),nonSearchRowRegistry:one('EmojiGridViewRowRegistry',{default:{},inverse:'emojiGridViewOwnerAsNonSearch',}),onScrollThrottle:one('Throttle',{compute(){return{func:()=>this.update({scrollRecomputeCount:increment()})};},inverse:'emojiGridViewAsOnScroll',}),renderedMaxAmount:attr({compute(){return this.extraRenderRowsAmount*2+Math.ceil(this.visibleMaxAmount);},}),renderedRows:many('EmojiGridRowView',{compute(){if(this.lastRenderedRowIndex+1-this.firstRenderedRowIndex<0){return clear();}
if(this.rows.length===0){return clear();}
return([...Array(this.lastRenderedRowIndex+1-this.firstRenderedRowIndex).keys()].map(relativeRowIndex=>this.rows[this.firstRenderedRowIndex+relativeRowIndex]).filter(row=>row!==undefined));},sort:[['smaller-first','index']],}),rowHeight:attr({default:30,}),rows:many('EmojiGridRowView',{compute(){if(this.emojiPickerViewOwner.emojiSearchBarView.currentSearch!==""){return this.searchRowRegistry.rows;}
return this.nonSearchRowRegistry.rows;},}),scrollIndex:attr({compute(){this.scrollRecomputeCount;return Math.floor(this.scrollPercentage*this.rows.length);},default:0,}),scrollPercentage:attr({compute(){this.scrollRecomputeCount;if(!this.containerRef||!this.containerRef.el){return clear();}
return this.containerRef.el.scrollTop/this.containerRef.el.scrollHeight;},default:0,}),scrollbarThresholdWidth:attr({default:15,}),scrollRecomputeCount:attr({default:0,}),searchNoContentView:one('EmojiGridNoSearchContentView',{compute(){if(this.emojiPickerViewOwner.emojiSearchBarView.currentSearch!==""&&this.rows.length===0){return{};}
return clear();},inverse:'emojiGridViewOwner',}),searchRowRegistry:one('EmojiGridViewRowRegistry',{default:{},inverse:'emojiGridViewOwnerAsSearch',}),viewBlockRef:attr(),visibleMaxAmount:attr({default:9.5,}),width:attr({compute(){return this.itemWidth*this.amountOfItemsPerRow+this.scrollbarThresholdWidth;},}),},onChanges:[{dependencies:['scrollRecomputeCount'],methodName:'_onChangeScrollRecomputeCount',},],});return __exports;});;

/* /mail/static/src/models/emoji_grid_view_row_registry.js */
odoo.define('@mail/models/emoji_grid_view_row_registry',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'EmojiGridViewRowRegistry',identifyingMode:'xor',recordMethods:{computeNonSearchRows(){const value=[];let index=0;for(let viewCategory of this.emojiGridViewOwner.emojiPickerViewOwner.categories){value.push({viewCategory,index});index++;let currentItems=[];for(let emojiInCategory of viewCategory.category.allEmojiInCategoryOfCurrent){currentItems.push({emojiOrEmojiInCategory:{emojiInCategory}});if(currentItems.length===this.emojiGridViewOwner.amountOfItemsPerRow){value.push({items:currentItems,index});currentItems=[];index++;}}
if(currentItems.length>0){value.push({items:currentItems,index});currentItems=[];index++;}}
return value;},computeSearchRows(){if(this.emojiGridViewOwner.emojiPickerViewOwner.emojiSearchBarView.currentSearch===""){return clear();}
const emojis=this.messaging.emojiRegistry.allEmojis.filter(this.emojiGridViewOwner._filterEmoji);const value=[];let index=0;let currentItems=[];for(let emoji of emojis){currentItems.push({emojiOrEmojiInCategory:{emoji}});if(currentItems.length===this.emojiGridViewOwner.amountOfItemsPerRow){value.push({items:currentItems,index});currentItems=[];index++;}}
if(currentItems.length>0){value.push({items:currentItems,index});currentItems=[];index++;}
return value;},},fields:{rows:many('EmojiGridRowView',{compute(){if(!this.emojiGridViewOwner){return clear();}
if(this.emojiGridViewOwnerAsNonSearch){return this.computeNonSearchRows();}
if(this.emojiGridViewOwnerAsSearch){return this.computeSearchRows();}
return clear();},inverse:'emojiGridViewRowRegistryOwner',sort:[['smaller-first','index']],}),emojiGridViewOwner:one('EmojiGridView',{compute(){return this.emojiGridViewOwnerAsNonSearch||this.emojiGridViewOwnerAsSearch;},}),emojiGridViewOwnerAsNonSearch:one('EmojiGridView',{identifying:true,inverse:'nonSearchRowRegistry',}),emojiGridViewOwnerAsSearch:one('EmojiGridView',{identifying:true,inverse:'searchRowRegistry',}),},});return __exports;});;

/* /mail/static/src/models/emoji_in_category.js */
odoo.define('@mail/models/emoji_in_category',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many,one}=require('@mail/model/model_field');registerModel({name:'EmojiInCategory',fields:{category:one('EmojiCategory',{identifying:true,inverse:'allEmojiInCategoryOfCurrent',}),emoji:one('Emoji',{identifying:true,inverse:'allEmojiInCategoryOfCurrent',}),emojiOrEmojiInCategory:many('EmojiOrEmojiInCategory',{inverse:'emojiInCategory',}),},});return __exports;});;

/* /mail/static/src/models/emoji_or_emoji_in_category.js */
odoo.define('@mail/models/emoji_or_emoji_in_category',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many,one}=require('@mail/model/model_field');registerModel({name:'EmojiOrEmojiInCategory',identifyingMode:'xor',fields:{emoji:one('Emoji',{identifying:true,inverse:'emojiOrEmojiInCategory',}),emojiInCategory:one('EmojiInCategory',{identifying:true,inverse:'emojiOrEmojiInCategory',}),emojiGridItemViews:many('EmojiGridItemView',{inverse:'emojiOrEmojiInCategory',}),},});return __exports;});;

/* /mail/static/src/models/emoji_picker_header_action_list_view.js */
odoo.define('@mail/models/emoji_picker_header_action_list_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many,one}=require('@mail/model/model_field');registerModel({name:'EmojiPickerHeaderActionListView',fields:{__dummyActionView:one('EmojiPickerHeaderActionView',{inverse:'__ownerAsDummy',}),actionViews:many('EmojiPickerHeaderActionView',{inverse:'owner',sort:[['smaller-first','sequence']],}),emojiPickerView:one('EmojiPickerView',{related:'owner.emojiPickerViewOwner',}),owner:one('EmojiPickerHeaderView',{identifying:true,inverse:'actionListView',}),},});return __exports;});;

/* /mail/static/src/models/emoji_picker_header_action_view.js */
odoo.define('@mail/models/emoji_picker_header_action_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'EmojiPickerHeaderActionView',identifyingMode:'xor',fields:{__ownerAsDummy:one('EmojiPickerHeaderActionListView',{identifying:true,inverse:'__dummyActionView',}),content:one('Record',{compute(){return clear();},required:true,}),contentComponentName:attr({compute(){return clear();},required:true,}),owner:one('EmojiPickerHeaderActionListView',{compute(){return clear();},inverse:'actionViews',required:true,}),sequence:attr({default:0,}),},});return __exports;});;

/* /mail/static/src/models/emoji_picker_header_view.js */
odoo.define('@mail/models/emoji_picker_header_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'EmojiPickerHeaderView',fields:{actionListView:one('EmojiPickerHeaderActionListView',{default:{},isCausal:true,inverse:'owner',}),emojiCategoryBarView:one('EmojiCategoryBarView',{default:{},inverse:'emojiPickerHeaderViewOwner',readonly:true,required:true,}),emojiPickerViewOwner:one('EmojiPickerView',{identifying:true,inverse:'headerView',}),},});return __exports;});;

/* /mail/static/src/models/emoji_picker_view.js */
odoo.define('@mail/models/emoji_picker_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'EmojiPickerView',lifecycleHooks:{_created(){if(this.messaging.emojiRegistry.isLoaded||this.messaging.emojiRegistry.isLoading){return;}
this.messaging.emojiRegistry.loadEmojiData();},},fields:{activeCategoryByGridViewScroll:one('EmojiPickerView.Category'),activeCategory:one('EmojiPickerView.Category',{compute(){if(this.emojiSearchBarView.currentSearch!==""){return clear();}
if(this.activeCategoryByGridViewScroll){return this.activeCategoryByGridViewScroll;}
if(this.defaultActiveCategory){return this.defaultActiveCategory;}
return clear();},inverse:'emojiPickerViewAsActive',}),categories:many('EmojiPickerView.Category',{compute(){return this.messaging.emojiRegistry.allCategories.map(category=>({category}));},inverse:'emojiPickerViewOwner',}),defaultActiveCategory:one('EmojiPickerView.Category',{compute(){if(this.categories.length===0){return clear();}
return this.categories[0];},}),emojiGridView:one('EmojiGridView',{default:{},inverse:'emojiPickerViewOwner',readonly:true,required:true,}),emojiSearchBarView:one('EmojiSearchBarView',{default:{},inverse:'emojiPickerView',readonly:true,}),headerView:one('EmojiPickerHeaderView',{default:{},inverse:'emojiPickerViewOwner',readonly:true,required:true,}),popoverViewOwner:one('PopoverView',{identifying:true,inverse:'emojiPickerView',}),component:attr(),},});return __exports;});;

/* /mail/static/src/models/emoji_picker_view__category.js */
odoo.define('@mail/models/emoji_picker_view__category',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'EmojiPickerView.Category',fields:{category:one('EmojiCategory',{identifying:true,inverse:'allEmojiPickerViewCategory',}),emojiPickerViewOwner:one('EmojiPickerView',{identifying:true,inverse:'categories',}),emojiPickerViewAsActive:one('EmojiPickerView',{inverse:'activeCategory',}),emojiCategoryView:one('EmojiCategoryView',{inverse:'viewCategory',}),emojiGridRowView:one('EmojiGridRowView',{inverse:'viewCategory',}),emojiPickerViewOwnerAsLastCategory:one('EmojiPickerView',{compute(){if(this.emojiPickerViewOwner.categories[this.emojiPickerViewOwner.categories.length-1]===this){return this.emojiPickerViewOwner;}
return clear();},}),endSectionIndex:attr({compute(){if(!this.nextViewCategory||!this.nextViewCategory.emojiGridRowView){return clear();}
return this.nextViewCategory.emojiGridRowView.index-1;},default:0,}),nextViewCategory:one('EmojiPickerView.Category',{compute(){const index=this.emojiPickerViewOwner.categories.findIndex(category=>category===this);if(index===-1){return clear();}
if(index===this.emojiPickerViewOwner.categories.length-1){return clear();}
return this.emojiPickerViewOwner.categories[index+1];},}),},});return __exports;});;

/* /mail/static/src/models/emoji_registry.js */
odoo.define('@mail/models/emoji_registry',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many}=require('@mail/model/model_field');const{insert}=require('@mail/model/model_field_command');const{getBundle,loadBundle}=require('@web/core/assets');registerModel({name:'EmojiRegistry',recordMethods:{async loadEmojiData(){this.update({isLoading:true});await getBundle('mail.assets_model_data').then(loadBundle);const{emojiCategoriesData,emojisData}=await odoo.runtimeImport("@mail/models_data/emoji_data");if(!this.exists()){return;}
this._populateFromEmojiData(emojiCategoriesData,emojisData);},async _populateFromEmojiData(dataCategories,dataEmojis){dataCategories.map(category=>{const emojiCount=dataEmojis.reduce((acc,emoji)=>emoji.category===category.name?acc+1:acc,0);this.update({dataCategories:insert({name:category.name,displayName:category.displayName,title:category.title,sortId:category.sortId,emojiCount,}),});});this.models['Emoji'].insert(dataEmojis.map(emojiData=>({codepoints:emojiData.codepoints,shortcodes:emojiData.shortcodes,emoticons:emojiData.emoticons,name:emojiData.name,keywords:emojiData.keywords,emojiDataCategory:{name:emojiData.category},})));this.update({isLoaded:true,isLoading:false,});},},fields:{allCategories:many('EmojiCategory',{compute(){return this.dataCategories;},inverse:'emojiRegistry',sort:[['smaller-first','sortId']],}),allEmojis:many('Emoji',{inverse:'emojiRegistry',sort:[['smaller-first','codepoints']],}),dataCategories:many('EmojiCategory'),isLoaded:attr({default:false,}),isLoading:attr({default:false,}),},});return __exports;});;

/* /mail/static/src/models/emoji_search_bar_view.js */
odoo.define('@mail/models/emoji_search_bar_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'EmojiSearchBarView',lifecycleHooks:{_created(){if(!this.messaging.device.isSmall){this.update({isDoFocus:true});}}},recordMethods:{onComponentUpdate(){this._handleFocus();},onFocusinInput(){if(!this.exists()){return;}
this.update({isFocused:true});},onFocusoutInput(){if(!this.exists()){return;}
this.update({isFocused:false});},onInput(){if(!this.exists()){return;}
this.update({currentSearch:this.inputRef.el.value,});},reset(){this.update({currentSearch:""});this.inputRef.el.value="";},_handleFocus(){if(this.isDoFocus){if(!this.inputRef.el){return;}
this.update({isDoFocus:false});this.inputRef.el.focus();}},},fields:{currentSearch:attr({default:"",}),emojiPickerView:one("EmojiPickerView",{identifying:true,inverse:"emojiSearchBarView",}),inputRef:attr(),isDoFocus:attr({default:false,}),isFocused:attr({default:false,}),placeholder:attr({compute(){return this.env._t("Search an emoji");},required:true,}),},});return __exports;});;

/* /mail/static/src/models/emoji_view.js */
odoo.define('@mail/models/emoji_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'EmojiView',recordMethods:{onClick(ev){if(!this.emojiGridItemViewOwner.emojiGridRowViewOwner){return;}
if(this.emojiGridItemViewOwner.emojiGridRowViewOwner.emojiGridViewOwner.emojiPickerViewOwner.popoverViewOwner.messageActionViewOwnerAsReaction){this.emojiGridItemViewOwner.emojiGridRowViewOwner.emojiGridViewOwner.emojiPickerViewOwner.popoverViewOwner.messageActionViewOwnerAsReaction.onClickReaction(ev);return;}
if(this.emojiGridItemViewOwner.emojiGridRowViewOwner.emojiGridViewOwner.emojiPickerViewOwner.popoverViewOwner.composerViewOwnerAsEmoji){this.emojiGridItemViewOwner.emojiGridRowViewOwner.emojiGridViewOwner.emojiPickerViewOwner.popoverViewOwner.composerViewOwnerAsEmoji.onClickEmoji(ev);return;}},onMouseenter(ev){if(!this.exists()){return;}
this.update({emojiGridViewAsHovered:this.emojiGridItemViewOwner.emojiGridRowViewOwner.emojiGridViewOwner});},onMouseleave(ev){if(!this.exists()){return;}
this.update({emojiGridViewAsHovered:clear()});},},fields:{emoji:one('Emoji',{identifying:true,inverse:'emojiViews',}),emojiGridItemViewOwner:one('EmojiGridItemView',{identifying:true,inverse:'emojiView',}),emojiGridViewAsHovered:one('EmojiGridView',{inverse:'hoveredEmojiView',}),},});return __exports;});;

/* /mail/static/src/models/file_uploader.js */
odoo.define('@mail/models/file_uploader',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const core=require('web.core');const getAttachmentNextTemporaryId=(function(){let tmpId=0;return()=>{tmpId-=1;return tmpId;};})();registerModel({name:'FileUploader',identifyingMode:'xor',recordMethods:{openBrowserFileUploader(){this.fileInput.click();},onChangeAttachment(ev){this.uploadFiles(ev.target.files);},async uploadFiles(files){await this._performUpload({files});if(!this.exists()){return;}
if(this.chatterOwner&&!this.chatterOwner.attachmentBoxView){this.chatterOwner.openAttachmentBoxView();}
this.messaging.messagingBus.trigger('o-file-uploader-upload',{files});this.fileInput.value='';},_createFormData({composer,file,thread}){const formData=new window.FormData();formData.append('csrf_token',core.csrf_token);formData.append('is_pending',Boolean(composer));formData.append('thread_id',thread&&thread.id);formData.append('thread_model',thread&&thread.model);formData.append('ufile',file,file.name);return formData;},_onAttachmentUploaded({attachmentData,composer,thread}){if(attachmentData.error||!attachmentData.id){this.messaging.notify({type:'danger',message:attachmentData.error,});return;}
return(composer||thread).messaging.models['Attachment'].insert({composer:composer,originThread:(!composer&&thread)?thread:undefined,...attachmentData,});},async _performUpload({files}){const webRecord=this.activityListViewItemOwner&&this.activityListViewItemOwner.webRecord;const composer=this.composerView&&this.composerView.composer;const thread=this.thread;const chatter=((this.chatterOwner)||(this.attachmentBoxView&&this.attachmentBoxView.chatter)||(this.activityView&&this.activityView.activityBoxView.chatter));const activity=(this.activityView&&this.activityView.activity||this.activityListViewItemOwner&&this.activityListViewItemOwner.activity);const uploadingAttachments=new Map();for(const file of files){uploadingAttachments.set(file,this.messaging.models['Attachment'].insert({composer,filename:file.name,id:getAttachmentNextTemporaryId(),isUploading:true,mimetype:file.type,name:file.name,originThread:(!composer&&thread)?thread:undefined,}));}
const attachments=[];for(const file of files){const uploadingAttachment=uploadingAttachments.get(file);if(!uploadingAttachment.exists()){continue;}
if((composer&&!composer.exists())||(thread&&!thread.exists())){return;}
try{const response=await(composer||thread).messaging.browser.fetch('/mail/attachment/upload',{method:'POST',body:this._createFormData({composer,file,thread}),signal:uploadingAttachment.uploadingAbortController.signal,});const attachmentData=await response.json();if(uploadingAttachment.exists()){uploadingAttachment.delete();}
if((composer&&!composer.exists())||(thread&&!thread.exists())){return;}
const attachment=this._onAttachmentUploaded({attachmentData,composer,thread});attachments.push(attachment);}catch(e){if(e.name!=='AbortError'){throw e;}}}
if(activity&&activity.exists()){await activity.markAsDone({attachments});}
if(webRecord){webRecord.model.load({resId:thread.id});}
if(chatter&&chatter.exists()&&chatter.shouldReloadParentFromFileChanged){chatter.reloadParentView();}},},fields:{activityListViewItemOwner:one('ActivityListViewItem',{identifying:true,inverse:'fileUploader',}),activityView:one('ActivityView',{identifying:true,inverse:'fileUploader',}),attachmentBoxView:one('AttachmentBoxView',{identifying:true,inverse:'fileUploader',}),chatterOwner:one('Chatter',{identifying:true,inverse:'fileUploader',}),composerView:one('ComposerView',{identifying:true,inverse:'fileUploader',}),fileInput:attr({compute(){const fileInput=document.createElement('input');fileInput.type='file';fileInput.multiple=true;fileInput.onchange=this.onChangeAttachment;return fileInput;},}),thread:one('Thread',{compute(){if(this.activityView){return this.activityView.activity.thread;}
if(this.activityListViewItemOwner){return this.activityListViewItemOwner.activity.thread;}
if(this.attachmentBoxView){return this.attachmentBoxView.chatter.thread;}
if(this.chatterOwner){return this.chatterOwner.thread;}
if(this.composerView){return this.composerView.composer.activeThread;}
return clear();},required:true,})},});return __exports;});;

/* /mail/static/src/models/follow_button_view.js */
odoo.define('@mail/models/follow_button_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'FollowButtonView',recordMethods:{async onClickFollow(ev){if(!this.exists()){return;}
const chatter=this.chatterOwner;if(!chatter){return;}
if(chatter.isTemporary){const saved=await chatter.doSaveRecord();if(!saved||chatter.thread.isCurrentPartnerFollowing){return;}}
chatter.thread.follow();},onClickUnfollow(ev){if(!this.exists()){return;}
if(!this.chatterOwner||!this.chatterOwner.thread){return;}
this.chatterOwner.thread.unfollow();this.chatterOwner.reloadParentView({fieldNames:['message_follower_ids']});},onMouseEnterUnfollow(ev){if(!this.exists()){return;}
this.update({isUnfollowButtonHighlighted:true});},onMouseleaveUnfollow(ev){if(!this.exists()){return;}
this.update({isUnfollowButtonHighlighted:false});},},fields:{chatterOwner:one('Chatter',{identifying:true,inverse:'followButtonView',}),followingText:attr({compute(){return this.env._t("Following");},}),isDisabled:attr({compute(){if(!this.chatterOwner){return clear();}
return!this.chatterOwner.isTemporary&&!this.chatterOwner.hasReadAccess;},}),isUnfollowButtonHighlighted:attr({default:false,}),unfollowingText:attr({compute(){return this.env._t("Unfollow");},}),},});return __exports;});;

/* /mail/static/src/models/follower.js */
odoo.define('@mail/models/follower',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,insert,link,unlink}=require('@mail/model/model_field_command');registerModel({name:'Follower',modelMethods:{convertData(data){const data2={};if('id'in data){data2.id=data.id;}
if('is_active'in data){data2.isActive=data.is_active;}
if('partner_id'in data){if(!data.partner_id){data2.partner=clear();}else{const partnerData={display_name:data.display_name,email:data.email,id:data.partner_id,name:data.name,};data2.partner=insert(partnerData);}}
if(data.partner){data2.partner=data.partner;}
return data2;},},recordMethods:{closeSubtypes(){this.update({followerSubtypeListDialog:clear()});},async openProfile(){return this.partner.openProfile();},async remove(){const partner_ids=[];partner_ids.push(this.partner.id);const followedThread=this.followedThread;await this.messaging.rpc({model:this.followedThread.model,method:'message_unsubscribe',args:[[this.followedThread.id],partner_ids]});if(followedThread.exists()){followedThread.fetchData(['suggestedRecipients']);}
if(!this.exists()){return;}
this.delete();},selectSubtype(subtype){if(!this.selectedSubtypes.includes(subtype)){this.update({selectedSubtypes:link(subtype)});}},async showSubtypes(){const subtypesData=await this.messaging.rpc({route:'/mail/read_subscription_data',params:{follower_id:this.id},});if(!this.exists()){return;}
this.update({subtypes:clear()});for(const data of subtypesData){const subtype=this.messaging.models['FollowerSubtype'].insert(this.messaging.models['FollowerSubtype'].convertData(data));this.update({subtypes:link(subtype)});if(data.followed){this.update({selectedSubtypes:link(subtype)});}else{this.update({selectedSubtypes:unlink(subtype)});}}
this.update({followerSubtypeListDialog:{}});},unselectSubtype(subtype){if(this.selectedSubtypes.includes(subtype)){this.update({selectedSubtypes:unlink(subtype)});}},async updateSubtypes(){if(this.selectedSubtypes.length===0){this.remove();}else{const kwargs={subtype_ids:this.selectedSubtypes.map(subtype=>subtype.id),};if(this.partner){kwargs.partner_ids=[this.partner.id];}
await this.messaging.rpc({model:this.followedThread.model,method:'message_subscribe',args:[[this.followedThread.id]],kwargs,});if(!this.exists()){return;}
this.messaging.notify({type:'success',message:this.env._t("The subscription preferences were successfully applied."),});}
this.closeSubtypes();},},fields:{followedThread:one('Thread',{inverse:'followers',}),followedThreadAsFollowerOfCurrentPartner:one('Thread',{compute(){if(!this.followedThread){return clear();}
if(!this.messaging.currentPartner){return clear();}
if(this.partner===this.messaging.currentPartner){return this.followedThread;}
return clear();},inverse:'followerOfCurrentPartner',}),followerSubtypeListDialog:one('Dialog',{inverse:'followerOwnerAsSubtypeList',}),followerViews:many('FollowerView',{inverse:'follower',}),id:attr({identifying:true,}),isActive:attr({default:true,}),isEditable:attr({compute(){const hasWriteAccess=this.followedThread?this.followedThread.hasWriteAccess:false;const hasReadAccess=this.followedThread?this.followedThread.hasReadAccess:false;return this.messaging.currentPartner===this.partner?hasReadAccess:hasWriteAccess;},}),partner:one('Partner',{required:true,}),selectedSubtypes:many('FollowerSubtype'),subtypes:many('FollowerSubtype'),},});return __exports;});;

/* /mail/static/src/models/follower_list_menu_view.js */
odoo.define('@mail/models/follower_list_menu_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');registerModel({name:'FollowerListMenuView',lifecycleHooks:{_created(){document.addEventListener('click',this._onClickCaptureGlobal,true);},_willDelete(){document.removeEventListener('click',this._onClickCaptureGlobal,true);},},recordMethods:{hide(){this.update({isDropdownOpen:false});},onClickAddFollowers(ev){ev.preventDefault();this.hide();this.chatterOwner.promptAddPartnerFollower();},onClickFollowersButton(ev){this.update({isDropdownOpen:!this.isDropdownOpen});},onKeydown(ev){ev.stopPropagation();switch(ev.key){case'Escape':ev.preventDefault();this.hide();break;}},_onClickCaptureGlobal(ev){if(!this.exists()){return;}
if(this.dropdownRef&&this.dropdownRef.el&&!this.dropdownRef.el.contains(ev.target)){this.hide();}},},fields:{chatterOwner:one('Chatter',{identifying:true,inverse:'followerListMenuView',}),dropdownRef:attr(),followerViews:many('FollowerView',{compute(){return this.chatterOwner.thread.followers.map(follower=>({follower}));},inverse:'followerListMenuViewOwner',}),isDisabled:attr({compute(){return!this.chatterOwner.hasReadAccess;}}),isDropdownOpen:attr({default:false,}),},});return __exports;});;

/* /mail/static/src/models/follower_subtype.js */
odoo.define('@mail/models/follower_subtype',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many}=require('@mail/model/model_field');registerModel({name:'FollowerSubtype',modelMethods:{convertData(data){const data2={};if('default'in data){data2.isDefault=data.default;}
if('id'in data){data2.id=data.id;}
if('internal'in data){data2.isInternal=data.internal;}
if('name'in data){data2.name=data.name;}
if('parent_model'in data){data2.parentModel=data.parent_model;}
if('res_model'in data){data2.resModel=data.res_model;}
if('sequence'in data){data2.sequence=data.sequence;}
return data2;},},fields:{followerSubtypeViews:many('FollowerSubtypeView',{inverse:'subtype',}),id:attr({identifying:true,}),isDefault:attr({default:false,}),isInternal:attr({default:false,}),name:attr(),parentModel:attr(),resModel:attr(),sequence:attr({default:1,}),},});return __exports;});;

/* /mail/static/src/models/follower_subtype_list.js */
odoo.define('@mail/models/follower_subtype_list',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'FollowerSubtypeList',recordMethods:{containsElement(element){return Boolean(this.component&&this.component.root.el&&this.component.root.el.contains(element));},onClickApply(ev){this.follower.updateSubtypes();},onClickCancel(ev){this.follower.closeSubtypes();},},fields:{component:attr(),dialogOwner:one('Dialog',{identifying:true,inverse:'followerSubtypeList',isCausal:true,}),follower:one('Follower',{related:'dialogOwner.followerOwnerAsSubtypeList',required:true,}),followerSubtypeViews:many('FollowerSubtypeView',{compute(){if(this.follower.subtypes.length===0){return clear();}
return this.follower.subtypes.map(subtype=>({subtype}));},inverse:'followerSubtypeListOwner',sort:[['falsy-first','subtype.parentModel'],['case-insensitive-asc','subtype.parentModel'],['falsy-first','subtype.resModel'],['case-insensitive-asc','subtype.resModel'],['smaller-first','subtype.isInternal'],['smaller-first','subtype.sequence'],['smaller-first','subtype.id'],],}),},});return __exports;});;

/* /mail/static/src/models/follower_subtype_view.js */
odoo.define('@mail/models/follower_subtype_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'FollowerSubtypeView',recordMethods:{onChangeCheckbox(ev){if(ev.target.checked){this.follower.selectSubtype(this.subtype);}else{this.follower.unselectSubtype(this.subtype);}},},fields:{follower:one('Follower',{related:'followerSubtypeListOwner.follower',}),followerSubtypeListOwner:one('FollowerSubtypeList',{identifying:true,inverse:'followerSubtypeViews',}),subtype:one('FollowerSubtype',{identifying:true,inverse:'followerSubtypeViews',}),},});return __exports;});;

/* /mail/static/src/models/follower_view.js */
odoo.define('@mail/models/follower_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'FollowerView',recordMethods:{onClickDetails(ev){ev.preventDefault();ev.stopPropagation();this.follower.openProfile();this.followerListMenuViewOwner.hide();},onClickEdit(ev){ev.preventDefault();this.follower.showSubtypes();this.followerListMenuViewOwner.hide();},onClickRemove(ev){const followerListMenuView=this.followerListMenuViewOwner;this.follower.remove();if(followerListMenuView.chatterOwner){followerListMenuView.chatterOwner.reloadParentView({fieldNames:['message_follower_ids']});}
followerListMenuView.hide();},},fields:{follower:one('Follower',{identifying:true,inverse:'followerViews',}),followerListMenuViewOwner:one('FollowerListMenuView',{identifying:true,inverse:'followerViews',}),},});return __exports;});;

/* /mail/static/src/models/guest.js */
odoo.define('@mail/models/guest',async function(require){'use strict';let __exports={};const{attr,many,one}=require('@mail/model/model_field');const{registerModel}=require('@mail/model/model_core');registerModel({name:'Guest',modelMethods:{async performRpcGuestUpdateName({id,name}){await this.messaging.rpc({route:'/mail/guest/update_name',params:{guest_id:id,name,},});},},fields:{authoredMessages:many('Message',{inverse:'guestAuthor',}),avatarUrl:attr({compute(){return`/web/image/mail.guest/${this.id}/avatar_128?unique=${this.name}`;},}),id:attr({identifying:true,}),im_status:attr(),isOnline:attr({compute(){return['online','away'].includes(this.im_status);},}),name:attr(),persona:one('Persona',{default:{},inverse:'guest',readonly:true,required:true,}),volumeSetting:one('res.users.settings.volumes',{inverse:'guest_id',}),},});return __exports;});;

/* /mail/static/src/models/ir_model.js */
odoo.define('@mail/models/ir_model',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'ir.model',fields:{availableWebViews:attr({compute(){return['kanban','list','form','activity'];},}),activityGroup:one('ActivityGroup',{inverse:'irModel',}),iconUrl:attr(),id:attr({identifying:true,}),model:attr({required:true,}),name:attr(),},});return __exports;});;

/* /mail/static/src/models/kanban_field_activity_view.js */
odoo.define('@mail/models/kanban_field_activity_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'KanbanFieldActivityView',fields:{activityButtonView:one('ActivityButtonView',{default:{},inverse:'kanbanFieldActivityViewOwner',required:true,}),id:attr({identifying:true,}),thread:one('Thread',{required:true,}),webRecord:attr({required:true,}),},});return __exports;});;

/* /mail/static/src/models/link_preview.js */
odoo.define('@mail/models/link_preview',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'LinkPreview',recordMethods:{async remove(){await this.messaging.rpc({route:'/mail/link_preview/delete',params:{link_preview_id:this.id},},{shadow:true});},},fields:{id:attr({identifying:true,}),image_mimetype:attr(),isCard:attr({compute(){return!this.isVideo&&!this.isImage;},}),isDeletable:attr({compute(){if(!this.message){return false;}
return((this.message.author&&this.message.author===this.messaging.currentPartner)||(this.message.guestAuthor&&this.message.guestAuthor===this.messaging.currentGuest));},}),isImage:attr({compute(){return Boolean(this.image_mimetype||this.og_mimetype==='image/gif');},}),isVideo:attr({compute(){if(!this.og_type){return clear();}
return this.og_type.startsWith('video')&&!this.isImage;},}),linkPreviewCardView:many('LinkPreviewCardView',{inverse:'linkPreview',}),linkPreviewImageView:many('LinkPreviewImageView',{inverse:'linkPreview',}),linkPreviewVideoView:many('LinkPreviewVideoView',{inverse:'linkPreview',}),message:one('Message',{inverse:'linkPreviews',}),og_description:attr(),og_image:attr(),og_mimetype:attr(),og_title:attr(),og_type:attr(),source_url:attr(),},});return __exports;});;

/* /mail/static/src/models/link_preview_aside_view.js */
odoo.define('@mail/models/link_preview_aside_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'LinkPreviewAsideView',identifyingMode:'xor',recordMethods:{onClick(){if(!this.exists()){return;}
this.update({linkPreviewDeleteConfirmDialog:{}});},},fields:{linkPreview:one('LinkPreview',{compute(){if(this.linkPreviewCardView){return this.linkPreviewCardView.linkPreview;}
if(this.linkPreviewImageView){return this.linkPreviewImageView.linkPreview;}
if(this.linkPreviewVideoView){return this.linkPreviewVideoView.linkPreview;}
return clear();},required:true,}),linkPreviewCardView:one('LinkPreviewCardView',{identifying:true,inverse:'linkPreviewAsideView',}),linkPreviewDeleteConfirmDialog:one('Dialog',{inverse:'linkPreviewAsideViewOwnerAsLinkPreviewDeleteConfirm',isCausal:true,}),linkPreviewImageView:one('LinkPreviewImageView',{identifying:true,inverse:'linkPreviewAsideView',}),linkPreviewVideoView:one('LinkPreviewVideoView',{identifying:true,inverse:'linkPreviewAsideView',}),},});return __exports;});;

/* /mail/static/src/models/link_preview_card_view.js */
odoo.define('@mail/models/link_preview_card_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'LinkPreviewCardView',recordMethods:{onMouseEnter(){if(!this.exists()){return;}
this.update({isHovered:true});},onMouseLeave(){if(!this.exists()){return;}
this.update({isHovered:false});},},fields:{isHovered:attr({default:false,}),linkPreview:one('LinkPreview',{identifying:true,inverse:'linkPreviewCardView',}),linkPreviewAsideView:one('LinkPreviewAsideView',{compute(){if(!this.linkPreview.isDeletable){return clear();}
if(this.messaging.device.isMobileDevice){return{};}
if(this.isHovered||(this.linkPreviewAsideView&&this.linkPreviewAsideView.linkPreviewDeleteConfirmDialog)){return{};}
return clear();},inverse:'linkPreviewCardView',}),linkPreviewListViewOwner:one('LinkPreviewListView',{identifying:true,inverse:'linkPreviewAsCardViews',}),},});return __exports;});;

/* /mail/static/src/models/link_preview_delete_confirm_view.js */
odoo.define('@mail/models/link_preview_delete_confirm_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'LinkPreviewDeleteConfirmView',recordMethods:{containsElement(element){return Boolean(this.component&&this.component.root.el&&this.component.root.el.contains(element));},onClickCancel(){this.dialogOwner.delete();},onClickOk(){this.linkPreview.remove();},},fields:{component:attr(),dialogOwner:one('Dialog',{identifying:true,inverse:'linkPreviewDeleteConfirmView',}),linkPreview:one('LinkPreview',{compute(){return this.dialogOwner.linkPreviewAsideViewOwnerAsLinkPreviewDeleteConfirm.linkPreview;},required:true,}),},});return __exports;});;

/* /mail/static/src/models/link_preview_image_view.js */
odoo.define('@mail/models/link_preview_image_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'LinkPreviewImageView',recordMethods:{onMouseEnter(){if(!this.exists()){return;}
this.update({isHovered:true});},onMouseLeave(){if(!this.exists()){return;}
this.update({isHovered:false});},},fields:{imageUrl:attr({compute(){return this.linkPreview.og_image?this.linkPreview.og_image:this.linkPreview.source_url;},}),isHovered:attr({default:false,}),linkPreview:one('LinkPreview',{identifying:true,inverse:'linkPreviewImageView',}),linkPreviewAsideView:one('LinkPreviewAsideView',{compute(){if(!this.linkPreview.isDeletable){return clear();}
if(this.messaging.device.isMobileDevice){return{};}
if(this.isHovered||(this.linkPreviewAsideView&&this.linkPreviewAsideView.linkPreviewDeleteConfirmDialog)){return{};}
return clear();},inverse:'linkPreviewImageView',}),linkPreviewListViewOwner:one('LinkPreviewListView',{identifying:true,inverse:'linkPreviewAsImageViews',}),},});return __exports;});;

/* /mail/static/src/models/link_preview_list_view.js */
odoo.define('@mail/models/link_preview_list_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many,one}=require('@mail/model/model_field');registerModel({name:'LinkPreviewListView',fields:{linkPreviewAsCardViews:many('LinkPreviewCardView',{compute(){return this.messageViewOwner.message.linkPreviews.filter(linkPreview=>linkPreview.isCard).map(linkPreview=>({linkPreview}));},inverse:'linkPreviewListViewOwner',}),linkPreviewAsImageViews:many('LinkPreviewImageView',{compute(){return this.messageViewOwner.message.linkPreviews.filter(linkPreview=>linkPreview.isImage).map(linkPreview=>({linkPreview}));},inverse:'linkPreviewListViewOwner',}),linkPreviewAsVideoViews:many('LinkPreviewVideoView',{compute(){return this.messageViewOwner.message.linkPreviews.filter(linkPreview=>linkPreview.isVideo).map(linkPreview=>({linkPreview}));},inverse:'linkPreviewListViewOwner',}),messageViewOwner:one('MessageView',{identifying:true,inverse:'linkPreviewListView',}),},});return __exports;});;

/* /mail/static/src/models/link_preview_video_view.js */
odoo.define('@mail/models/link_preview_video_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one,attr}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'LinkPreviewVideoView',recordMethods:{onMouseEnter(){if(!this.exists()){return;}
this.update({isHovered:true});},onMouseLeave(){if(!this.exists()){return;}
this.update({isHovered:false});},},fields:{isHovered:attr({default:false,}),linkPreview:one('LinkPreview',{identifying:true,inverse:'linkPreviewVideoView',}),linkPreviewAsideView:one('LinkPreviewAsideView',{compute(){if(!this.linkPreview.isDeletable){return clear();}
if(this.messaging.device.isMobileDevice){return{};}
if(this.isHovered||(this.linkPreviewAsideView&&this.linkPreviewAsideView.linkPreviewDeleteConfirmDialog)){return{};}
return clear();},inverse:'linkPreviewVideoView',}),linkPreviewListViewOwner:one('LinkPreviewListView',{identifying:true,inverse:'linkPreviewAsVideoViews',}),},});return __exports;});;

/* /mail/static/src/models/list_field_activity_view.js */
odoo.define('@mail/models/list_field_activity_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ListFieldActivityView',fields:{activityButtonView:one('ActivityButtonView',{default:{},inverse:'listFieldActivityViewOwner',required:true,}),id:attr({identifying:true,}),summaryText:attr({compute(){if(this.thread.activities.length===0){return clear();}
if(this.webRecord.data.activity_exception_decoration){return this.env._t("Warning");}
if(this.webRecord.data.activity_summary){return this.webRecord.data.activity_summary;}
if(this.webRecord.data.activity_type_id){return this.webRecord.data.activity_type_id[1];}
return clear();},default:'',}),thread:one('Thread',{required:true,}),webRecord:attr({required:true,}),},});return __exports;});;

/* /mail/static/src/models/mail_template.js */
odoo.define('@mail/models/mail_template',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many}=require('@mail/model/model_field');registerModel({name:'MailTemplate',recordMethods:{preview(activity){const action={name:this.env._t("Compose Email"),type:'ir.actions.act_window',res_model:'mail.compose.message',views:[[false,'form']],target:'new',context:{default_res_id:activity.thread.id,default_model:activity.thread.model,default_use_template:true,default_template_id:this.id,force_email:true,},};this.env.services.action.doAction(action,{onClose:()=>activity.thread.fetchData(['attachments','messages'])});},async send(activity){const thread=activity.thread;await this.messaging.rpc({model:activity.thread.model,method:'activity_send_mail',args:[[activity.thread.id],this.id],});if(thread.exists()){thread.fetchData(['attachments','messages']);}},},fields:{activities:many('Activity',{inverse:'mailTemplates',}),id:attr({identifying:true,}),name:attr(),},});return __exports;});;

/* /mail/static/src/models/mail_template_view.js */
odoo.define('@mail/models/mail_template_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'MailTemplateView',recordMethods:{onClickPreview(ev){ev.stopPropagation();ev.preventDefault();this.mailTemplate.preview(this.activity);if(this.activityListViewItemOwner){this.activityListViewItemOwner.activityListViewOwner.popoverViewOwner.delete();}},onClickSend(ev){ev.stopPropagation();ev.preventDefault();this.mailTemplate.send(this.activity);if(this.activityListViewItemOwner){this.activityListViewItemOwner.activityListViewOwner.popoverViewOwner.delete();}},},fields:{activity:one('Activity',{compute(){if(this.activityViewOwner){return this.activityViewOwner.activity;}
if(this.activityListViewItemOwner){return this.activityListViewItemOwner.activity;}}}),activityListViewItemOwner:one('ActivityListViewItem',{inverse:'mailTemplateViews',}),activityViewOwner:one('ActivityView',{inverse:'mailTemplateViews',}),mailTemplate:one('MailTemplate',{identifying:true,}),},});return __exports;});;

/* /mail/static/src/models/mailbox.js */
odoo.define('@mail/models/mailbox',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'Mailbox',identifyingMode:'xor',recordMethods:{_onChangeCounter(){if(this!==this.messaging.inbox){return;}
if(this.thread.threadViews.length>0&&this.previousValueOfInboxCounter>0&&this.counter===0){this.env.services.effect.add({message:this.env._t("Congratulations, your inbox is empty!"),type:'rainbow_man',});}
this.update({previousValueOfInboxCounter:this.counter});},},fields:{counter:attr({default:0,}),fetchMessagesUrl:attr({compute(){switch(this){case this.messaging.history:return'/mail/history/messages';case this.messaging.inbox:return'/mail/inbox/messages';case this.messaging.starred:return'/mail/starred/messages';default:return clear();}},}),messagingAsAnyMailbox:one('Messaging',{compute(){if(!this.messaging){return clear();}
return this.messaging;},inverse:'allMailboxes',}),messagingAsHistory:one('Messaging',{identifying:true,inverse:'history',}),messagingAsInbox:one('Messaging',{identifying:true,inverse:'inbox',}),messagingAsStarred:one('Messaging',{identifying:true,inverse:'starred',}),name:attr({compute(){switch(this){case this.messaging.history:return this.env._t("History");case this.messaging.inbox:return this.env._t("Inbox");case this.messaging.starred:return this.env._t("Starred");default:return clear();}},}),previousValueOfInboxCounter:attr({default:0,}),sequence:attr({compute(){switch(this){case this.messaging.history:return 2;case this.messaging.inbox:return 0;case this.messaging.starred:return 1;default:return clear();}},}),thread:one('Thread',{compute(){const threadId=(()=>{switch(this){case this.messaging.history:return'history';case this.messaging.inbox:return'inbox';case this.messaging.starred:return'starred';}})();if(!threadId){return clear();}
return{id:threadId,model:'mail.box',};},inverse:'mailbox',}),},onChanges:[{dependencies:['counter'],methodName:'_onChangeCounter',},],});return __exports;});;

/* /mail/static/src/models/media_stream.js */
odoo.define('@mail/models/media_stream',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');registerModel({name:'MediaStream',lifecycleHooks:{_willDelete(){for(const track of this.webMediaStream.getTracks()){track.stop();}},},fields:{id:attr({identifying:true,}),webMediaStream:attr({required:true,readonly:true,}),},});return __exports;});;

/* /mail/static/src/models/message.js */
odoo.define('@mail/models/message',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,insert}=require('@mail/model/model_field_command');const{addLink,htmlToTextContentInline,parseAndTransform}=require('@mail/js/utils');const{session}=require('@web/session');const{getLangDatetimeFormat,str_to_datetime}=require('web.time');const{markup}=owl;registerModel({name:'Message',modelMethods:{convertData(data){const data2={};data2.attachments=data.attachment_ids;if('author'in data){data2.author=data.author;}
if('body'in data){data2.body=data.body;}
if('date'in data&&data.date){data2.date=moment(str_to_datetime(data.date));}
if('email_from'in data){data2.email_from=data.email_from;}
if('guestAuthor'in data){data2.guestAuthor=data.guestAuthor;}
if('history_partner_ids'in data&&this.messaging.currentPartner){data2.isHistory=data.history_partner_ids.includes(this.messaging.currentPartner.id);}
if('id'in data){data2.id=data.id;}
if('is_discussion'in data){data2.is_discussion=data.is_discussion;}
if('is_note'in data){data2.is_note=data.is_note;}
if('is_notification'in data){data2.is_notification=data.is_notification;}
data2.linkPreviews=data.linkPreviews;if('messageReactionGroups'in data){data2.messageReactionGroups=data.messageReactionGroups;}
if('message_type'in data){data2.message_type=data.message_type;}
if('model'in data&&'res_id'in data&&data.model&&data.res_id){const originThreadData={id:data.res_id,model:data.model,};if('record_name'in data&&data.record_name){originThreadData.name=data.record_name;}
if('res_model_name'in data&&data.res_model_name){originThreadData.model_name=data.res_model_name;}
if('module_icon'in data){originThreadData.moduleIcon=data.module_icon;}
data2.originThread=originThreadData;}
if('needaction_partner_ids'in data&&this.messaging.currentPartner){data2.isNeedaction=data.needaction_partner_ids.includes(this.messaging.currentPartner.id);}
if('notifications'in data){data2.notifications=insert(data.notifications.map(notificationData=>this.messaging.models['Notification'].convertData(notificationData)));}
if('parentMessage'in data){if(!data.parentMessage){data2.parentMessage=clear();}else{data2.parentMessage=this.convertData(data.parentMessage);}}
if('recipients'in data){data2.recipients=data.recipients;}
if('starred_partner_ids'in data&&this.messaging.currentPartner){data2.isStarred=data.starred_partner_ids.includes(this.messaging.currentPartner.id);}
if('subject'in data){data2.subject=data.subject;}
if('subtype_description'in data){data2.subtype_description=data.subtype_description;}
if('subtype_id'in data){data2.subtype_id=data.subtype_id;}
if('trackingValues'in data){data2.trackingValues=data.trackingValues;}
return data2;},async markAllAsRead(domain){await this.messaging.rpc({model:'mail.message',method:'mark_all_as_read',kwargs:{domain},},{shadow:true});},async markAsRead(messages){await this.messaging.rpc({model:'mail.message',method:'set_message_done',args:[messages.map(message=>message.id)]});},async performRpcMessageFetch(route,params){const messagesData=await this.messaging.rpc({route,params},{shadow:true});if(!this.messaging){return;}
const messages=this.messaging.models['Message'].insert(messagesData.map(messageData=>this.messaging.models['Message'].convertData(messageData)));for(const message of messages){for(const thread of message.threads){if(!thread.channel||thread.channel.channel_type==='channel'){continue;}
this.messaging.models['MessageSeenIndicator'].insert({thread,message,});}}
return messages;},async unstarAll(){await this.messaging.rpc({model:'mail.message',method:'unstar_all',});},},recordMethods:{async addReaction(content){const messageData=await this.messaging.rpc({route:'/mail/message/add_reaction',params:{content,message_id:this.id},});if(!this.exists()){return;}
this.update(messageData);},async markAsRead(){await this.messaging.rpc({model:'mail.message',method:'set_message_done',args:[[this.id]]});},openResendAction(){this.env.services.action.doAction('mail.mail_resend_message_action',{additionalContext:{mail_message_to_resend:this.id,},});},async removeReaction(content){const messageData=await this.messaging.rpc({route:'/mail/message/remove_reaction',params:{content,message_id:this.id},});if(!this.exists()){return;}
this.update(messageData);},async toggleStar(){await this.messaging.rpc({model:'mail.message',method:'toggle_message_starred',args:[[this.id]]});},async updateContent({body,attachment_ids}){const messageData=await this.messaging.rpc({route:'/mail/message/update_content',params:{body,attachment_ids,message_id:this.id,},});if(!this.messaging){return;}
this.messaging.models['Message'].insert(messageData);},},fields:{authorName:attr({compute(){if(this.author){return this.author.nameOrDisplayName;}
if(this.guestAuthor){return this.guestAuthor.name;}
if(this.email_from){return this.email_from;}
return this.env._t("Anonymous");},}),attachments:many('Attachment',{inverse:'messages',}),author:one('Partner'),avatarUrl:attr({compute(){if(this.author&&(!this.originThread||this.originThread.model!=='mail.channel')){return this.author.avatarUrl;}else if(this.author&&this.originThread&&this.originThread.model==='mail.channel'){return`/mail/channel/${this.originThread.id}/partner/${this.author.id}/avatar_128`;}else if(this.guestAuthor&&(!this.originThread||this.originThread.model!=='mail.channel')){return this.guestAuthor.avatarUrl;}else if(this.guestAuthor&&this.originThread&&this.originThread.model==='mail.channel'){return`/mail/channel/${this.originThread.id}/guest/${this.guestAuthor.id}/avatar_128?unique=${this.guestAuthor.name}`;}else if(this.message_type==='email'){return'/mail/static/src/img/email_icon.png';}
return'/mail/static/src/img/smiley/avatar.jpg';},}),body:attr({default:"",}),canBeDeleted:attr({compute(){if(!session.is_admin&&!this.isCurrentUserOrGuestAuthor){return false;}
if(!this.originThread){return false;}
if(this.trackingValues.length>0){return false;}
if(this.message_type!=='comment'){return false;}
if(this.originThread.model==='mail.channel'){return true;}
return this.is_note;},}),canStarBeToggled:attr({compute(){return!this.messaging.isCurrentUserGuest&&!this.isTemporary&&!this.isTransient;},}),date:attr(),dateDay:attr({compute(){if(!this.date){return this.env._t("Today");}
const date=this.date.format('YYYY-MM-DD');if(date===moment().format('YYYY-MM-DD')){return this.env._t("Today");}else if(date===moment().subtract(1,'days').format('YYYY-MM-DD')){return this.env._t("Yesterday");}
return this.date.format('LL');},}),datetime:attr({compute(){if(!this.date){return clear();}
return this.date.format(getLangDatetimeFormat());},}),email_from:attr(),failureNotifications:many('Notification',{compute(){return this.notifications.filter(notifications=>notifications.isFailure);},}),guestAuthor:one('Guest',{inverse:'authoredMessages',}),hasAttachments:attr({compute(){return this.attachments.length>0;},}),hasReactionIcon:attr({compute(){return!this.isTemporary&&!this.isTransient;},}),id:attr({identifying:true,}),isCurrentUserOrGuestAuthor:attr({compute(){return!!(this.author&&this.messaging.currentPartner&&this.messaging.currentPartner===this.author)||!!(this.guestAuthor&&this.messaging.currentGuest&&this.messaging.currentGuest===this.guestAuthor);},default:false,}),isBodyEmpty:attr({compute(){return(!this.body||['','<p></p>','<p><br></p>','<p><br/></p>',].includes(this.body.replace(/\s/g,'')));},}),isBodyEqualSubtypeDescription:attr({compute(){if(!this.body||!this.subtype_description){return false;}
const inlineBody=htmlToTextContentInline(this.body);return inlineBody.toLowerCase()===this.subtype_description.toLowerCase();},default:false,}),isDiscussionOrNotification:attr({compute(){if(this.is_discussion||this.is_notification){return true;}
return clear();},default:false,}),isEmpty:attr({compute(){return(this.isBodyEmpty&&!this.hasAttachments&&this.trackingValues.length===0&&!this.subtype_description);},}),isSubjectSimilarToOriginThreadName:attr({compute(){if(!this.subject||!this.originThread||!this.originThread.name){return false;}
const threadName=this.originThread.name.toLowerCase().trim();const prefixList=['re:','fw:','fwd:'];let cleanedSubject=this.subject.toLowerCase();let wasSubjectCleaned=true;while(wasSubjectCleaned){wasSubjectCleaned=false;if(threadName===cleanedSubject){return true;}
for(const prefix of prefixList){if(cleanedSubject.startsWith(prefix)){cleanedSubject=cleanedSubject.replace(prefix,'').trim();wasSubjectCleaned=true;break;}}}
return false;},}),isTemporary:attr({default:false,}),isTransient:attr({default:false,}),is_discussion:attr({default:false,}),isHistory:attr({default:false,}),isNeedaction:attr({default:false,}),is_note:attr({default:false,}),is_notification:attr({default:false,}),isCurrentPartnerMentioned:attr({compute(){return this.recipients.includes(this.messaging.currentPartner);},default:false,}),isHighlighted:attr({compute(){return(this.isCurrentPartnerMentioned&&this.originThread&&this.originThread.model==='mail.channel');},}),isStarred:attr({default:false,}),lastTrackingValue:one('TrackingValue',{compute(){const{length:l,[l-1]:lastTrackingValue,}=this.trackingValues;if(lastTrackingValue){return lastTrackingValue;}
return clear();},}),linkPreviews:many('LinkPreview',{inverse:'message',}),messageReactionGroups:many('MessageReactionGroup',{inverse:'message',}),messageTypeText:attr({compute(){if(this.message_type==='notification'){return this.env._t("System notification");}
if(!this.is_discussion&&!this.is_notification){return this.env._t("Note");}
return this.env._t("Message");},}),message_type:attr(),notificationMessageViews:many('NotificationMessageView',{inverse:'message',isCausal:true,}),messageViews:many('MessageView',{inverse:'message',isCausal:true,}),messageListViewItems:many('MessageListViewItem',{inverse:'message',}),notifications:many('Notification',{inverse:'message',isCausal:true,}),originThread:one('Thread',{inverse:'messagesAsOriginThread',}),parentMessage:one('Message'),prettyBody:attr({compute(){if(!this.body){return clear();}
return parseAndTransform(this.body,addLink);},default:"",}),prettyBodyAsMarkup:attr({compute(){return markup(this.prettyBody);},}),recipients:many('Partner'),shortTime:attr({compute(){if(!this.date){return clear();}
return this.date.format('hh:mm');},}),subject:attr(),subtype_description:attr(),subtype_id:attr(),threads:many('Thread',{compute(){const threads=[];if(this.isHistory&&this.messaging.history){threads.push(this.messaging.history.thread);}
if(this.isNeedaction&&this.messaging.inbox){threads.push(this.messaging.inbox.thread);}
if(this.isStarred&&this.messaging.starred){threads.push(this.messaging.starred.thread);}
if(this.originThread){threads.push(this.originThread);}
return threads;},inverse:'messages',}),trackingValues:many('TrackingValue',{inverse:'messageOwner',isCausal:true,sort:[['smaller-first','id']],}),},});return __exports;});;

/* /mail/static/src/models/message_action.js */
odoo.define('@mail/models/message_action',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'MessageAction',identifyingMode:'xor',fields:{isNonCompactActionContribution:attr({compute(){if(this.messageActionListOwnerAsToggleCompact){return 0;}
return 1;},}),messageActionListOwner:one('MessageActionList',{compute(){if(this.messageActionListOwnerAsDelete){return this.messageActionListOwnerAsDelete;}else if(this.messageActionListOwnerAsEdit){return this.messageActionListOwnerAsEdit;}else if(this.messageActionListOwnerAsMarkAsRead){return this.messageActionListOwnerAsMarkAsRead;}else if(this.messageActionListOwnerAsReaction){return this.messageActionListOwnerAsReaction;}else if(this.messageActionListOwnerAsReplyTo){return this.messageActionListOwnerAsReplyTo;}else if(this.messageActionListOwnerAsToggleCompact){return this.messageActionListOwnerAsToggleCompact;}else if(this.messageActionListOwnerAsToggleStar){return this.messageActionListOwnerAsToggleStar;}
return clear();},inverse:'messageActions',required:true,}),messageActionListOwnerAsDelete:one('MessageActionList',{identifying:true,inverse:'actionDelete',}),messageActionListOwnerAsEdit:one('MessageActionList',{identifying:true,inverse:'actionEdit',}),messageActionListOwnerAsMarkAsRead:one('MessageActionList',{identifying:true,inverse:'actionMarkAsRead',}),messageActionListOwnerAsReaction:one('MessageActionList',{identifying:true,inverse:'actionReaction',}),messageActionListOwnerAsReplyTo:one('MessageActionList',{identifying:true,inverse:'actionReplyTo',}),messageActionListOwnerAsToggleCompact:one('MessageActionList',{identifying:true,inverse:'actionToggleCompact',}),messageActionListOwnerAsToggleStar:one('MessageActionList',{identifying:true,inverse:'actionToggleStar',}),messageActionView:one('MessageActionView',{compute(){if(this.messageActionListOwnerAsReaction||this.messageActionListOwnerAsToggleCompact||(this.messageActionListOwner&&!this.messageActionListOwner.actionToggleCompact)||(this.messageActionListOwner&&this.messageActionListOwner.actionToggleCompact&&!this.messageActionListOwner.isCompact)){return{};}
return clear();},inverse:'messageAction',}),sequence:attr({compute(){switch(this.messageActionListOwner){case this.messageActionListOwnerAsDelete:return 5;case this.messageActionListOwnerAsEdit:return 4;case this.messageActionListOwnerAsMarkAsRead:return 3;case this.messageActionListOwnerAsReaction:return 0;case this.messageActionListOwnerAsReplyTo:return 2;case this.messageActionListOwnerAsToggleCompact:return 6;case this.messageActionListOwnerAsToggleStar:return 1;default:return clear();}},}),},});return __exports;});;

/* /mail/static/src/models/message_action_list.js */
odoo.define('@mail/models/message_action_list',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'MessageActionList',fields:{actionViewsCount:attr({default:0,readonly:true,sum:'messageActionViews.actionViewCounterContribution',}),actionsWithoutCompactCount:attr({default:0,readonly:true,sum:'messageActions.isNonCompactActionContribution',}),actionDelete:one('MessageAction',{compute(){if(this.message&&this.message.canBeDeleted){return{};}
return clear();},inverse:'messageActionListOwnerAsDelete',}),actionEdit:one('MessageAction',{compute(){if(this.message&&this.message.canBeDeleted){return{};}
return clear();},inverse:'messageActionListOwnerAsEdit',}),actionMarkAsRead:one('MessageAction',{compute(){if(this.messaging&&this.messaging.inbox&&this.messageView&&this.messageView.messageListViewItemOwner&&this.messageView.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread&&this.messageView.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread===this.messaging.inbox.thread){return{};}
return clear();},inverse:'messageActionListOwnerAsMarkAsRead',}),actionReaction:one('MessageAction',{compute(){if(this.message&&this.message.hasReactionIcon){return{};}
return clear();},inverse:'messageActionListOwnerAsReaction',}),actionReplyTo:one('MessageAction',{compute(){if(this.messaging&&this.messaging.inbox&&this.message&&!this.message.isTemporary&&!this.message.isTransient&&this.messageView&&this.messageView.messageListViewItemOwner&&this.messageView.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread&&(this.messageView.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread===this.messaging.inbox.thread||this.messageView.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread.channel)){return{};}
return clear();},inverse:'messageActionListOwnerAsReplyTo',}),actionToggleCompact:one('MessageAction',{compute(){if(this.messageView.isInChatWindow&&(this.actionsWithoutCompactCount>this.compactThreshold)){return{};}
return clear();},inverse:'messageActionListOwnerAsToggleCompact',}),actionToggleStar:one('MessageAction',{compute(){if(this.message&&this.message.canStarBeToggled){return{};}
return clear();},inverse:'messageActionListOwnerAsToggleStar',}),compactThreshold:attr({default:2,readonly:true,}),firstActionView:one('MessageActionView',{compute(){if(this.actionViewsCount===0){return clear();}
return this.messageActionViews[0];},}),isCompact:attr({default:true,}),lastActionView:one('MessageActionView',{compute(){if(this.actionViewsCount===0){return clear();}
return this.messageActionViews[this.actionViewsCount-1];},}),message:one('Message',{related:'messageView.message',}),messageActions:many('MessageAction',{inverse:'messageActionListOwner',isCausal:true,}),messageActionViews:many('MessageActionView',{related:'messageActions.messageActionView',sort:[['smaller-first','messageAction.sequence']],}),messageView:one('MessageView',{identifying:true,inverse:'messageActionList',}),},});return __exports;});;

/* /mail/static/src/models/message_action_view.js */
odoo.define('@mail/models/message_action_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{markEventHandled}=require('@mail/utils/utils');registerModel({name:'MessageActionView',recordMethods:{onClick(ev){switch(this.messageAction.messageActionListOwner){case this.messageAction.messageActionListOwnerAsDelete:this.update({deleteConfirmDialog:{}});break;case this.messageAction.messageActionListOwnerAsEdit:this.messageAction.messageActionListOwner.messageView.startEditing();break;case this.messageAction.messageActionListOwnerAsMarkAsRead:this.messageAction.messageActionListOwner.message.markAsRead();break;case this.messageAction.messageActionListOwnerAsReaction:if(!this.reactionPopoverView){this.update({reactionPopoverView:{}});}else{this.update({reactionPopoverView:clear()});}
break;case this.messageAction.messageActionListOwnerAsReplyTo:markEventHandled(ev,'MessageActionList.replyTo');this.messageAction.messageActionListOwner.messageView.replyTo();break;case this.messageAction.messageActionListOwnerAsToggleCompact:this.messageAction.messageActionListOwner.update({isCompact:!this.messageAction.messageActionListOwner.isCompact});break;case this.messageAction.messageActionListOwnerAsToggleStar:this.messageAction.messageActionListOwner.message.toggleStar();break;}},onClickReaction(ev){this.messageAction.messageActionListOwner.message.addReaction(ev.currentTarget.dataset.codepoints);this.update({reactionPopoverView:clear()});},},fields:{actionRef:attr(),actionViewCounterContribution:attr({default:1,readonly:true,}),ariaPressedState:attr({compute(){if(this.messageAction.messageActionListOwnerAsToggleStar){return this.messageAction.messageActionListOwnerAsToggleStar.message.isStarred;}
return clear();},}),classNames:attr({compute(){const classNames=[];classNames.push(this.paddingClassNames);switch(this.messageAction.messageActionListOwner){case this.messageAction.messageActionListOwnerAsDelete:classNames.push('fa fa-lg fa-trash o_MessageActionView_actionDelete');break;case this.messageAction.messageActionListOwnerAsEdit:classNames.push('fa fa-lg fa-pencil o_MessageActionView_actionEdit');break;case this.messageAction.messageActionListOwnerAsMarkAsRead:classNames.push('fa fa-lg fa-check o_MessageActionView_actionMarkAsRead');break;case this.messageAction.messageActionListOwnerAsReaction:classNames.push('fa fa-lg fa-smile-o o_MessageActionView_actionReaction');break;case this.messageAction.messageActionListOwnerAsReplyTo:classNames.push('fa fa-lg fa-reply o_MessageActionView_actionReplyTo');break;case this.messageAction.messageActionListOwnerAsToggleCompact:classNames.push('fa fa-lg fa-ellipsis-h o_MessageAction_actionToggleCompact');break;case this.messageAction.messageActionListOwnerAsToggleStar:classNames.push('fa fa-lg o_MessageActionView_actionToggleStar');if(this.messageAction.messageActionListOwner.message.isStarred){classNames.push(`fa-star o_MessageActionView_actionToggleStar_active`);}else{classNames.push('fa-star-o');}
break;}
return classNames.join(' ');},default:'',}),deleteConfirmDialog:one('Dialog',{inverse:'messageActionViewOwnerAsDeleteConfirm',}),messageAction:one('MessageAction',{identifying:true,inverse:'messageActionView',}),paddingClassNames:attr({compute(){const isDeviceSmall=this.messaging.device.isSmall;const paddingClassNames=[];if((this.messageAction.messageActionListOwner.firstActionView===this&&!this.messageAction.messageActionListOwner.messageView.isInChatWindowAndIsAlignedRight)||(this.messageAction.messageActionListOwner.lastActionView===this&&this.messageAction.messageActionListOwner.messageView.isInChatWindowAndIsAlignedRight)){paddingClassNames.push(isDeviceSmall?'ps-3':'ps-2');}else{paddingClassNames.push(isDeviceSmall?'ps-2':'ps-1');}
if((this.messageAction.messageActionListOwner.lastActionView===this&&!this.messageAction.messageActionListOwner.messageView.isInChatWindowAndIsAlignedRight)||(this.messageAction.messageActionListOwner.firstActionView===this&&this.messageAction.messageActionListOwner.messageView.isInChatWindowAndIsAlignedRight)){paddingClassNames.push(isDeviceSmall?'pe-3':'pe-2');}else{paddingClassNames.push(isDeviceSmall?'pe-2':'pe-1');}
paddingClassNames.push(isDeviceSmall?'py-3':'py-2');return paddingClassNames.join(' ');},default:'',}),reactionPopoverView:one('PopoverView',{inverse:'messageActionViewOwnerAsReaction',}),tabindex:attr({compute(){if(this.messageAction.messageActionListOwnerAsReaction){return clear();}
return 0;},}),title:attr({compute(){switch(this.messageAction.messageActionListOwner){case this.messageAction.messageActionListOwnerAsDelete:return this.env._t("Delete");case this.messageAction.messageActionListOwnerAsEdit:return this.env._t("Edit");case this.messageAction.messageActionListOwnerAsMarkAsRead:return this.env._t("Mark as Read");case this.messageAction.messageActionListOwnerAsReaction:return this.env._t("Add a Reaction");case this.messageAction.messageActionListOwnerAsReplyTo:return this.env._t("Reply");case this.messageAction.messageActionListOwnerAsToggleCompact:return this.env._t("Compact");case this.messageAction.messageActionListOwnerAsToggleStar:if(this.messageAction.messageActionListOwner.message.isStarred){return this.env._t("Remove from Todo");}
return this.env._t("Mark as Todo");default:return clear();}},default:'',}),},});return __exports;});;

/* /mail/static/src/models/message_author_prefix_view.js */
odoo.define('@mail/models/message_author_prefix_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'MessageAuthorPrefixView',identifyingMode:'xor',fields:{channelPreviewViewOwner:one('ChannelPreviewView',{identifying:true,inverse:'messageAuthorPrefixView',}),message:one('Message',{compute(){if(this.channelPreviewViewOwner){return this.channelPreviewViewOwner.thread.lastMessage;}
if(this.threadNeedactionPreviewViewOwner){return this.threadNeedactionPreviewViewOwner.thread.lastNeedactionMessageAsOriginThread;}
return clear();},}),thread:one('Thread',{compute(){if(this.channelPreviewViewOwner){return this.channelPreviewViewOwner.thread;}
if(this.threadNeedactionPreviewViewOwner){return this.threadNeedactionPreviewViewOwner.thread;}
return clear();},}),threadNeedactionPreviewViewOwner:one('ThreadNeedactionPreviewView',{identifying:true,inverse:'messageAuthorPrefixView',}),},});return __exports;});;

/* /mail/static/src/models/message_in_reply_to_view.js */
odoo.define('@mail/models/message_in_reply_to_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{markEventHandled}=require('@mail/utils/utils');registerModel({name:'MessageInReplyToView',recordMethods:{onClickReply(ev){markEventHandled(ev,'MessageInReplyToView.ClickMessageInReplyTo');const messageListViewItem=this.messageView&&this.messageView.messageListViewItemOwner;const parentMessage=this.messageView.message.parentMessage;if(!messageListViewItem||!parentMessage){return;}
const parentMessageListViewItem=this.messaging.models['MessageListViewItem'].findFromIdentifyingData({message:parentMessage,messageListViewOwner:messageListViewItem.messageListViewOwner,});if(!parentMessageListViewItem){return;}
parentMessageListViewItem.messageView.update({doHighlight:true});},},fields:{hasAttachmentBackLink:attr({compute(){const parentMessage=this.messageView.message.parentMessage;return parentMessage.isBodyEmpty&&parentMessage.hasAttachments;},}),hasBodyBackLink:attr({compute(){return!this.messageView.message.parentMessage.isBodyEmpty;},}),messageView:one('MessageView',{identifying:true,inverse:'messageInReplyToView',}),},});return __exports;});;

/* /mail/static/src/models/message_list_view.js */
odoo.define('@mail/models/message_list_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'MessageListView',recordMethods:{getScrollableElement(){if(this.threadViewOwner.threadViewer.chatter){return this.threadViewOwner.threadViewer.chatter.scrollPanelRef.el;}
return this.component.root.el;},onClickRetryLoadMoreMessages(){if(!this.exists()||!this.thread){return;}
this.thread.cache.update({hasLoadingFailed:false});this.thread.cache.loadMoreMessages();},onClickLoadMore(ev){ev.preventDefault();if(!this.exists()||!this.thread){return;}
this.thread.cache.loadMoreMessages();},},fields:{clientHeight:attr(),component:attr(),hasScrollAdjust:attr({compute(){if(this.threadViewOwner.threadViewer.chatter){return this.threadViewOwner.threadViewer.chatter.hasMessageListScrollAdjust;}
return clear();},default:true,}),isAtEnd:attr({compute(){const endThreshold=30;if(this.threadViewOwner.order==='asc'){return this.scrollTop>=this.scrollHeight-this.clientHeight-endThreshold;}
return this.scrollTop<=endThreshold;},}),isLastScrollProgrammatic:attr({default:false,}),messageListViewItems:many('MessageListViewItem',{compute(){if(!this.threadViewOwner.threadCache){return clear();}
const orderedMessages=this.threadViewOwner.threadCache.orderedNonEmptyMessages;if(this.threadViewOwner.order==='desc'){orderedMessages.reverse();}
const messageViewsData=[];let prevMessage;for(const message of orderedMessages){messageViewsData.push({isSquashed:this.threadViewOwner._shouldMessageBeSquashed(prevMessage,message),message,});prevMessage=message;}
return messageViewsData;},inverse:'messageListViewOwner',}),scrollHeight:attr(),scrollTop:attr(),thread:one('Thread',{related:'threadViewOwner.thread',}),threadViewOwner:one('ThreadView',{identifying:true,inverse:'messageListView',}),},});return __exports;});;

/* /mail/static/src/models/message_list_view_item.js */
odoo.define('@mail/models/message_list_view_item',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'MessageListViewItem',recordMethods:{isPartiallyVisible(){const itemView=this.messageView||this.notificationMessageView;if(!itemView||!itemView.component||!itemView.component.root.el){return false;}
const elRect=itemView.component.root.el.getBoundingClientRect();if(!itemView.component.root.el.parentNode){return false;}
const parentRect=itemView.component.root.el.parentNode.getBoundingClientRect();return(elRect.top<parentRect.bottom+5&&parentRect.top<elRect.bottom+5);},},fields:{isSquashed:attr({required:true,}),message:one('Message',{identifying:true,inverse:'messageListViewItems',}),messageListViewOwner:one('MessageListView',{identifying:true,inverse:'messageListViewItems',}),notificationMessageView:one('NotificationMessageView',{compute(){if(this.message&&this.message.originThread&&this.message.originThread.channel&&this.message.message_type==='notification'){return{};}
return clear();},inverse:'messageListViewItemOwner',}),messageView:one('MessageView',{compute(){if(this.message&&this.message.originThread&&!this.message.originThread.channel||this.message.message_type!=='notification'){return{};}
return clear();},inverse:'messageListViewItemOwner',}),threadViewOwnerAsLastMessageListViewItem:one('ThreadView',{inverse:'lastMessageListViewItem',readonly:true,}),},});return __exports;});;

/* /mail/static/src/models/message_notification_popover_content_view.js */
odoo.define('@mail/models/message_notification_popover_content_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'MessageNotificationPopoverContentView',fields:{messageView:one('MessageView',{related:'popoverViewOwner.messageViewOwnerAsNotificationContent',}),popoverViewOwner:one('PopoverView',{identifying:true,inverse:'messageNotificationPopoverContentView',}),},});return __exports;});;

/* /mail/static/src/models/message_notification_view.js */
odoo.define('@mail/models/message_notification_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'NotificationMessageView',recordMethods:{onComponentUpdate(){if(!this.exists()){return;}
if(this.messageListViewItemOwner.threadViewOwnerAsLastMessageListViewItem&&this.messageListViewItemOwner.isPartiallyVisible()){this.messageListViewItemOwner.threadViewOwnerAsLastMessageListViewItem.handleVisibleMessage(this.message);}},},fields:{component:attr(),message:one('Message',{related:'messageListViewItemOwner.message',inverse:'notificationMessageViews',required:true,}),messageListViewItemOwner:one('MessageListViewItem',{identifying:true,inverse:'notificationMessageView',}),},});return __exports;});;

/* /mail/static/src/models/message_reaction_group.js */
odoo.define('@mail/models/message_reaction_group',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{markEventHandled}=require('@mail/utils/utils');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'MessageReactionGroup',recordMethods:{onClick(ev){markEventHandled(ev,'MessageReactionGroup.Click');if(this.hasUserReacted){this.message.removeReaction(this.content);}else{this.message.addReaction(this.content);}},},fields:{content:attr({identifying:true,}),count:attr({required:true,}),guests:many('Guest'),hasUserReacted:attr({compute(){return Boolean((this.messaging.currentPartner&&this.partners.includes(this.messaging.currentPartner))||(this.messaging.currentGuest&&this.guests.includes(this.messaging.currentGuest)));},default:false,}),message:one('Message',{identifying:true,inverse:'messageReactionGroups',}),partners:many('Partner'),summary:attr({compute(){const{length,0:firstUser,1:secondUser,2:thirdUser,}=[...this.partners.map(partner=>{if(this.message.originThread){return this.message.originThread.getMemberName(partner.persona);}
return partner.nameOrDisplayName;}),...this.guests.map(guest=>guest.name),];switch(length){case 1:return sprintf(this.env._t('%s has reacted with %s'),firstUser,this.content);case 2:return sprintf(this.env._t('%s and %s have reacted with %s'),firstUser,secondUser,this.content);case 3:return sprintf(this.env._t('%s, %s, %s have reacted with %s'),firstUser,secondUser,thirdUser,this.content);case 4:return sprintf(this.env._t('%s, %s, %s and 1 other person have reacted with %s'),firstUser,secondUser,thirdUser,this.content);default:return sprintf(this.env._t('%s, %s, %s and %s other persons have reacted with %s'),firstUser,secondUser,thirdUser,length-3,this.content);}},}),},});return __exports;});;

/* /mail/static/src/models/message_seen_indicator.js */
odoo.define('@mail/models/message_seen_indicator',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'MessageSeenIndicator',fields:{hasEveryoneFetched:attr({compute(){if(!this.message||!this.thread||!this.thread.partnerSeenInfos){return false;}
const otherPartnerSeenInfosDidNotFetch=this.thread.partnerSeenInfos.filter(partnerSeenInfo=>partnerSeenInfo.partner!==this.message.author&&(!partnerSeenInfo.lastFetchedMessage||partnerSeenInfo.lastFetchedMessage.id<this.message.id));return otherPartnerSeenInfosDidNotFetch.length===0;},default:false,}),hasEveryoneSeen:attr({compute(){if(!this.message||!this.thread||!this.thread.partnerSeenInfos){return false;}
const otherPartnerSeenInfosDidNotSee=this.thread.partnerSeenInfos.filter(partnerSeenInfo=>partnerSeenInfo.partner!==this.message.author&&(!partnerSeenInfo.lastSeenMessage||partnerSeenInfo.lastSeenMessage.id<this.message.id));return otherPartnerSeenInfosDidNotSee.length===0;},default:false,}),hasSomeoneFetched:attr({compute(){if(!this.message||!this.thread||!this.thread.partnerSeenInfos){return false;}
const otherPartnerSeenInfosFetched=this.thread.partnerSeenInfos.filter(partnerSeenInfo=>partnerSeenInfo.partner!==this.message.author&&partnerSeenInfo.lastFetchedMessage&&partnerSeenInfo.lastFetchedMessage.id>=this.message.id);return otherPartnerSeenInfosFetched.length>0;},default:false,}),hasSomeoneSeen:attr({compute(){if(!this.message||!this.thread||!this.thread.partnerSeenInfos){return false;}
const otherPartnerSeenInfosSeen=this.thread.partnerSeenInfos.filter(partnerSeenInfo=>partnerSeenInfo.partner!==this.message.author&&partnerSeenInfo.lastSeenMessage&&partnerSeenInfo.lastSeenMessage.id>=this.message.id);return otherPartnerSeenInfosSeen.length>0;},default:false,}),id:attr(),isMessagePreviousToLastCurrentPartnerMessageSeenByEveryone:attr({compute(){if(!this.message||!this.thread||!this.thread.lastCurrentPartnerMessageSeenByEveryone){return false;}
return this.message.id<this.thread.lastCurrentPartnerMessageSeenByEveryone.id;},default:false,}),message:one('Message',{identifying:true,}),partnersThatHaveFetched:many('Partner',{compute(){if(!this.message||!this.thread||!this.thread.partnerSeenInfos){return clear();}
const otherPartnersThatHaveFetched=this.thread.partnerSeenInfos.filter(partnerSeenInfo=>partnerSeenInfo.partner&&partnerSeenInfo.partner!==this.message.author&&partnerSeenInfo.lastFetchedMessage&&partnerSeenInfo.lastFetchedMessage.id>=this.message.id).map(partnerSeenInfo=>partnerSeenInfo.partner);if(otherPartnersThatHaveFetched.length===0){return clear();}
return otherPartnersThatHaveFetched;},}),partnersThatHaveSeen:many('Partner',{compute(){if(!this.message||!this.thread||!this.thread.partnerSeenInfos){return clear();}
const otherPartnersThatHaveSeen=this.thread.partnerSeenInfos.filter(partnerSeenInfo=>partnerSeenInfo.partner&&partnerSeenInfo.partner!==this.message.author&&partnerSeenInfo.lastSeenMessage&&partnerSeenInfo.lastSeenMessage.id>=this.message.id).map(partnerSeenInfo=>partnerSeenInfo.partner);if(otherPartnersThatHaveSeen.length===0){return clear();}
return otherPartnersThatHaveSeen;},}),text:attr({compute(){if(this.hasEveryoneSeen){return this.env._t("Seen by Everyone");}
if(this.hasSomeoneSeen){const partnersThatHaveSeen=this.partnersThatHaveSeen.map(partner=>{if(this.message.originThread){return this.message.originThread.getMemberName(partner.persona);}
return partner.nameOrDisplayName;});if(partnersThatHaveSeen.length===1){return sprintf(this.env._t("Seen by %s"),partnersThatHaveSeen[0]);}
if(partnersThatHaveSeen.length===2){return sprintf(this.env._t("Seen by %s and %s"),partnersThatHaveSeen[0],partnersThatHaveSeen[1]);}
return sprintf(this.env._t("Seen by %s, %s and more"),partnersThatHaveSeen[0],partnersThatHaveSeen[1]);}
if(this.hasEveryoneFetched){return this.env._t("Received by Everyone");}
if(this.hasSomeoneFetched){const partnersThatHaveFetched=this.partnersThatHaveFetched.map(partner=>{if(this.message.originThread){return this.message.originThread.getMemberName(partner.persona);}
return partner.nameOrDisplayName;});if(partnersThatHaveFetched.length===1){return sprintf(this.env._t("Received by %s"),partnersThatHaveFetched[0]);}
if(partnersThatHaveFetched.length===2){return sprintf(this.env._t("Received by %s and %s"),partnersThatHaveFetched[0],partnersThatHaveFetched[1]);}
return sprintf(this.env._t("Received by %s, %s and more"),partnersThatHaveFetched[0],partnersThatHaveFetched[1]);}
return clear();},default:'',}),thread:one('Thread',{identifying:true,inverse:'messageSeenIndicators',}),},});return __exports;});;

/* /mail/static/src/models/message_seen_indicator_view.js */
odoo.define('@mail/models/message_seen_indicator_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'MessageSeenIndicatorView',fields:{messageViewOwner:one('MessageView',{identifying:true,inverse:'messageSeenIndicatorView',}),messageSeenIndicator:one('MessageSeenIndicator',{compute(){if(this.messageViewOwner.messageListViewItemOwner&&this.messageViewOwner.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread){return{message:this.messageViewOwner.message,thread:this.messageViewOwner.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread,};}
return clear();},}),},});return __exports;});;

/* /mail/static/src/models/message_view.js */
odoo.define('@mail/models/message_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{isEventHandled,markEventHandled}=require('@mail/utils/utils');registerModel({name:'MessageView',identifyingMode:'xor',recordMethods:{highlight(){this.update({highlightTimer:{doReset:this.highlightTimer?true:undefined},isHighlighted:true,});},async onClick(ev){if(ev.target.closest('.o_channel_redirect')){ev.preventDefault();const channel=this.messaging.models['Thread'].insert({id:Number(ev.target.dataset.oeId),model:'mail.channel',});if(!channel.isPinned){await channel.join();channel.update({isServerPinned:true});}
channel.open();return;}else if(ev.target.closest('.o_mail_redirect')){ev.preventDefault();this.messaging.openChat({partnerId:Number(ev.target.dataset.oeId)});return;}
if(ev.target.tagName==='A'){if(ev.target.dataset.oeId&&ev.target.dataset.oeModel){ev.preventDefault();this.messaging.openProfile({id:Number(ev.target.dataset.oeId),model:ev.target.dataset.oeModel,});}
return;}
if(!isEventHandled(ev,'Message.ClickAuthorAvatar')&&!isEventHandled(ev,'Message.ClickAuthorName')&&!isEventHandled(ev,'Message.ClickFailure')&&!isEventHandled(ev,'MessageActionList.Click')&&!isEventHandled(ev,'MessageReactionGroup.Click')&&!isEventHandled(ev,'MessageInReplyToView.ClickMessageInReplyTo')&&!isEventHandled(ev,'PersonaImStatusIcon.Click')){if(this.messagingAsClickedMessageView){this.messaging.update({clickedMessageView:clear()});}else{this.messaging.update({clickedMessageView:this});}}},onClickAuthorAvatar(ev){markEventHandled(ev,'Message.ClickAuthorAvatar');if(!this.message.author||!this.hasAuthorClickable){return;}
if(!this.hasAuthorOpenChat){this.message.author.openProfile();return;}
this.message.author.openChat();},onClickAuthorName(ev){markEventHandled(ev,'Message.ClickAuthorName');if(!this.message.author||!this.hasAuthorClickable){return;}
if(!this.hasAuthorOpenChat){this.message.author.openProfile();return;}
this.message.author.openChat();},onClickFailure(ev){markEventHandled(ev,'Message.ClickFailure');this.message.openResendAction();},onClickNotificationIcon(){this.update({notificationPopoverView:this.notificationPopoverView?clear():{}});},onClickOriginThread(ev){ev.preventDefault();this.message.originThread.open();},onComponentUpdate(){if(!this.exists()){return;}
if(this.doHighlight&&this.component&&this.component.root.el){this.component.root.el.scrollIntoView({behavior:'smooth',block:'center'});this.highlight();this.update({doHighlight:clear()});}
if(this.messageListViewItemOwner&&this.messageListViewItemOwner.threadViewOwnerAsLastMessageListViewItem&&this.messageListViewItemOwner.isPartiallyVisible()){this.messageListViewItemOwner.threadViewOwnerAsLastMessageListViewItem.handleVisibleMessage(this.message);}},onHighlightTimerTimeout(){this.update({highlightTimer:clear(),isHighlighted:false,});},onMouseenter(){if(!this.exists()){return;}
this.update({isHovered:true});},onMouseleave(){if(!this.exists()){return;}
this.update({isHovered:false,messagingAsClickedMessageView:clear(),});},replyTo(){if(this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.replyingToMessageView===this){this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.composerView.discard();return;}
this.message.originThread.update({composer:{isLog:!this.message.is_discussion&&!this.message.is_notification,},});this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.update({replyingToMessageView:this,composerView:{doFocus:true,},});},startEditing(){const parser=new DOMParser();const htmlDoc=parser.parseFromString(this.message.body.replaceAll('<br>','\n').replaceAll('</br>','\n'),"text/html");const textInputContent=htmlDoc.body.textContent;this.update({composerForEditing:{rawMentionedPartners:this.message.recipients,textInputContent,textInputCursorEnd:textInputContent.length,textInputCursorStart:textInputContent.length,textInputSelectionDirection:'none',},composerViewInEditing:{doFocus:true,hasToRestoreContent:true,},});},stopEditing(){if(this.messageListViewItemOwner&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.composerView&&!this.messaging.device.isMobileDevice){this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.composerView.update({doFocus:true});}
this.update({composerForEditing:clear(),composerViewInEditing:clear(),});},},fields:{attachmentList:one('AttachmentList',{compute(){return(this.message&&this.message.attachments.length>0)?{}:clear();},inverse:'messageViewOwner',}),authorTitleText:attr({compute(){return this.hasAuthorOpenChat?this.env._t("Open chat"):this.hasAuthorClickable?this.env._t("Open profile"):'';},}),clockWatcher:one('ClockWatcher',{default:{clock:{frequency:60*1000,},},inverse:'messageViewOwner',}),component:attr(),composerForEditing:one('Composer',{inverse:'messageViewInEditing',}),composerViewInEditing:one('ComposerView',{inverse:'messageViewInEditing',}),dateFromNow:attr({compute(){if(!this.message){return clear();}
if(!this.message.date){return clear();}
if(!this.clockWatcher.clock.date){return clear();}
const now=moment(this.clockWatcher.clock.date.getTime());if(now.diff(this.message.date,'seconds')<45){return this.env._t("now");}
return this.message.date.fromNow();},}),deleteMessageConfirmViewOwner:one('DeleteMessageConfirmView',{identifying:true,inverse:'messageView',}),doHighlight:attr(),extraClass:attr({compute(){if(this.messageListViewItemOwner){return'o_MessageList_item o_MessageList_message';}
return clear();},default:'',}),failureNotificationIconClassName:attr({compute(){return clear();},default:'fa fa-envelope',}),failureNotificationIconLabel:attr({compute(){return clear();},default:'',}),hasAuthorOpenChat:attr({compute(){if(this.messaging.currentGuest){return false;}
if(!this.message){return clear();}
if(!this.message.author){return false;}
if(this.messageListViewItemOwner&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread.channel&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread.channel.correspondent===this.message.author){return false;}
return true;},}),hasAuthorClickable:attr({compute(){return this.hasAuthorOpenChat;},}),highlightTimer:one('Timer',{inverse:'messageViewOwnerAsHighlight',}),isActive:attr({compute(){return Boolean(this.isHovered||this.messagingAsClickedMessageView||(this.messageActionList&&this.messageActionList.actionReaction&&this.messageActionList.actionReaction.messageActionView&&this.messageActionList.actionReaction.messageActionView.reactionPopoverView)||(this.messageActionList&&this.messageActionList.actionDelete&&this.messageActionList.actionDelete.messageActionView&&this.messageActionList.actionDelete.messageActionView.deleteConfirmDialog));},}),isHighlighted:attr(),isHovered:attr({default:false,}),isInDiscuss:attr({compute(){return Boolean(this.messageListViewItemOwner&&(this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.threadViewer.discuss||this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.threadViewer.discussPublicView));},}),isInChatWindow:attr({compute(){return Boolean(this.messageListViewItemOwner&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.threadViewer.chatWindow);},}),isInChatter:attr({compute(){return Boolean(this.messageListViewItemOwner&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.threadViewer.chatter);},}),isInChatWindowAndIsAlignedRight:attr({compute(){return Boolean(this.isInChatWindow&&this.message&&this.message.isCurrentUserOrGuestAuthor);},}),isInChatWindowAndIsAlignedLeft:attr({compute(){return Boolean(this.isInChatWindow&&this.message&&!this.message.isCurrentUserOrGuestAuthor);},}),isShowingAuthorName:attr({compute(){return Boolean(!(this.isInChatWindow&&((this.message&&this.message.isCurrentUserOrGuestAuthor)||(this.messageListViewItemOwner&&this.messageListViewItemOwner.messageListViewOwner.thread.channel&&this.messageListViewItemOwner.messageListViewOwner.thread.channel.channel_type==='chat'))));},}),isSelected:attr({compute(){return Boolean(this.messageListViewItemOwner&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.replyingToMessageView===this);},default:false,}),isSquashed:attr({compute(){if(this.messageListViewItemOwner){return this.messageListViewItemOwner.isSquashed;}
return clear();},default:false,}),linkPreviewListView:one('LinkPreviewListView',{compute(){return(this.message&&this.message.linkPreviews.length>0)?{}:clear();},inverse:'messageViewOwner',}),messageActionList:one('MessageActionList',{compute(){return this.deleteMessageConfirmViewOwner?clear():{};},inverse:'messageView',}),message:one('Message',{compute(){if(this.messageListViewItemOwner){return this.messageListViewItemOwner.message;}
if(this.deleteMessageConfirmViewOwner){return this.deleteMessageConfirmViewOwner.message;}
return clear();},inverse:'messageViews',required:true,}),messageInReplyToView:one('MessageInReplyToView',{compute(){return(this.message&&this.message.originThread&&this.message.originThread.model==='mail.channel'&&this.message.parentMessage)?{}:clear();},inverse:'messageView',}),messageListViewItemOwner:one('MessageListViewItem',{identifying:true,inverse:'messageView',}),messageSeenIndicatorView:one('MessageSeenIndicatorView',{compute(){if(this.message.isCurrentUserOrGuestAuthor&&this.messageListViewItemOwner&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread.hasSeenIndicators){return{};}
return clear();},inverse:'messageViewOwner',}),messagingAsClickedMessageView:one('Messaging',{inverse:'clickedMessageView',}),notificationIconClassName:attr({compute(){return clear();},default:'fa fa-envelope-o',}),notificationIconLabel:attr({compute(){return clear();},default:'',}),notificationIconRef:attr(),notificationPopoverView:one('PopoverView',{inverse:'messageViewOwnerAsNotificationContent',}),personaImStatusIconView:one('PersonaImStatusIconView',{compute(){if(this.message.guestAuthor&&this.message.guestAuthor.im_status){return{};}
return this.message.author&&this.message.author.isImStatusSet?{}:clear();},inverse:'messageViewOwner',}),},});return __exports;});;

/* /mail/static/src/models/messaging.js */
odoo.define('@mail/models/messaging',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerPatch({name:'Messaging',lifecycleHooks:{_created(){this._super();this.refreshIsNotificationPermissionDefault();},_willDelete(){this.env.services['im_status'].unregisterFromImStatus('res.partner');this.env.services['im_status'].unregisterFromImStatus('mail.guest');this.env.bus.removeEventListener('window_focus',this._handleGlobalWindowFocus);this._super();},},recordMethods:{async executeGracefully(functions){let date=new Date();for(const func of functions){if(new Date()-date>100){await new Promise(resolve=>setTimeout(resolve,this.isInQUnitTest?0:50));date=new Date();}
await func();}},async getChat({partnerId,userId}){if(userId){const user=this.messaging.models['User'].insert({id:userId});return user.getChat();}
if(partnerId){const partner=this.messaging.models['Partner'].insert({id:partnerId});return partner.getChat();}},notify(params){const{message,...options}=params;return this.env.services.notification.add(message,options);},async openActivityForm({activity,defaultActivityTypeId,thread}){const targetThread=activity&&activity.thread||thread;const context={default_res_id:targetThread.id,default_res_model:targetThread.model,};if(defaultActivityTypeId!==undefined){context.default_activity_type_id=defaultActivityTypeId;}
const action={type:'ir.actions.act_window',name:this.env._t("Schedule Activity"),res_model:'mail.activity',view_mode:'form',views:[[false,'form']],target:'new',context,res_id:activity?activity.id:false,};return new Promise(resolve=>{this.env.services.action.doAction(action,{onClose:resolve,});});},async openChat(person,options){const chat=await this.getChat(person);if(!this.exists()||!chat){return;}
await chat.thread.open(options);if(!this.exists()){return;}},async openDocument({id,model}){this.env.services.action.doAction({type:'ir.actions.act_window',res_model:model,views:[[false,'form']],res_id:id,});if(this.messaging.device.isSmall){this.messaging.chatWindowManager.closeAll();this.messaging.messagingMenu.close();}},async openProfile({id,model}){if(model==='res.partner'){const partner=this.messaging.models['Partner'].insert({id});return partner.openProfile();}
if(model==='res.users'){const user=this.messaging.models['User'].insert({id});return user.openProfile();}
if(model==='mail.channel'){let channel=this.messaging.models['Thread'].findFromIdentifyingData({id,model:'mail.channel'});if(!channel){const res=await this.messaging.models['Thread'].performRpcChannelInfo({ids:[id]});if(!this.exists()){return;}
channel=res[0];}
if(!channel){this.messaging.notify({message:this.env._t("You can only open the profile of existing channels."),type:'warning',});return;}
return channel.openProfile();}
return this.messaging.openDocument({id,model});},refreshIsNotificationPermissionDefault(){const browserNotification=this.messaging.browser.Notification;this.update({isNotificationPermissionDefault:Boolean(browserNotification)&&browserNotification.permission==='default',});},async start(){this.env.bus.addEventListener('window_focus',this._handleGlobalWindowFocus);await this.initializer.start();if(!this.exists()){return;}
if(this.notificationHandler){this.notificationHandler.start();}
await this._super();},updateImStatusRegistration(){const partnerIds=[];for(const partner of this.models['Partner'].all()){if(partner.im_status!=='im_partner'&&!partner.is_public){partnerIds.push(partner.id);}}
const guestIds=[];for(const guest of this.models['Guest'].all()){guestIds.push(guest.id);}
this.env.services['im_status'].registerToImStatus('res.partner',partnerIds);this.env.services['im_status'].registerToImStatus('mail.guest',guestIds);},_handleGlobalWindowFocus(){this.update({outOfFocusUnreadMessageCounter:0});this.env.bus.trigger('set_title_part',{part:'_chat',});},_onChangeAllCurrentClientThreads(){if(this.isInitialized){this.env.services.bus_service.forceUpdateChannels();}},_onChangeAllPersonas(){if(this.isInitialized){this.updateImStatusRegisterThrottle.do();}},_onChangeRingingThreads(){if(this.ringingThreads&&this.ringingThreads.length>0){this.soundEffects.incomingCall.play({loop:true});}else{this.soundEffects.incomingCall.stop();}},},fields:{allCurrentClientThreads:many('Thread',{inverse:'messagingAsAllCurrentClientThreads',}),allMailboxes:many('Mailbox',{inverse:'messagingAsAnyMailbox',}),allPersonas:many('Persona',{inverse:'messagingAsAnyPersona',}),callInviteRequestPopups:many('CallInviteRequestPopup',{compute(){if(this.ringingThreads.length===0){return clear();}
return this.ringingThreads.map(thread=>thread.callInviteRequestPopup);},isCausal:true,}),cannedResponses:many('CannedResponse'),chatWindowManager:one('ChatWindowManager',{default:{},isCausal:true,readonly:true,}),clickedMessageView:one('MessageView',{inverse:'messagingAsClickedMessageView',}),commands:many('ChannelCommand'),companyName:attr(),currentGuest:one('Guest'),currentPartner:one('Partner'),currentUser:one('User'),dialogManager:one('DialogManager',{default:{},isCausal:true,readonly:true,}),disableAnimation:attr({default:false,}),discuss:one('Discuss',{default:{},isCausal:true,readonly:true,}),discussPublicView:one('DiscussPublicView',{inverse:'messagingAsPublicView',isCausal:true,}),emojiRegistry:one('EmojiRegistry',{default:{},isCausal:true,readonly:true,}),hasLinkPreviewFeature:attr(),history:one('Mailbox',{default:{},inverse:'messagingAsHistory',}),inbox:one('Mailbox',{default:{},inverse:'messagingAsInbox',}),initializer:one('MessagingInitializer',{default:{},isCausal:true,readonly:true,}),internalUserGroupId:attr(),isCurrentUserGuest:attr({compute(){return Boolean(!this.currentPartner&&this.currentGuest);},}),isInQUnitTest:attr({default:false,}),isNotificationBlocked:attr({compute(){const windowNotification=this.browser.Notification;return(windowNotification&&windowNotification.permission!=='granted'&&!this.isNotificationPermissionDefault);},}),isNotificationPermissionDefault:attr(),loadingBaseDelayDuration:attr({default:400,}),messagingMenu:one('MessagingMenu',{default:{},isCausal:true,}),notificationHandler:one('MessagingNotificationHandler',{compute(){return{};},isCausal:true,}),outOfFocusUnreadMessageCounter:attr({default:0,}),partnerRoot:one('Partner'),popoverManager:one('PopoverManager',{default:{},isCausal:true,readonly:true,}),ringingThreads:many('Thread',{inverse:'messagingAsRingingThread',}),rtc:one('Rtc',{default:{},isCausal:true,readonly:true,}),soundEffects:one('SoundEffects',{default:{},isCausal:true,readonly:true,}),starred:one('Mailbox',{default:{},inverse:'messagingAsStarred',}),updateImStatusRegisterThrottle:one('Throttle',{compute(){return{func:this.updateImStatusRegistration};},inverse:'messagingAsUpdateImStatusRegister',}),userNotificationManager:one('UserNotificationManager',{default:{},isCausal:true,readonly:true,}),userSetting:one('UserSetting',{default:{},isCausal:true,}),},onChanges:[{dependencies:['ringingThreads'],methodName:'_onChangeRingingThreads',},{dependencies:['allCurrentClientThreads'],methodName:'_onChangeAllCurrentClientThreads',},{dependencies:['allPersonas'],methodName:'_onChangeAllPersonas',},],});return __exports;});;

/* /mail/static/src/models/messaging_initializer.js */
odoo.define('@mail/models/messaging_initializer',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{insert}=require('@mail/model/model_field_command');registerModel({name:'MessagingInitializer',recordMethods:{async performInitRpc(){return await this.messaging.rpc({route:'/mail/init_messaging',},{shadow:true});},async start(){this.messaging.device.start();const discuss=this.messaging.discuss;const data=await this.performInitRpc();if(!this.exists()){return;}
await this._init(data);if(!this.exists()){return;}
if(discuss.discussView){discuss.openInitThread();}
if(this.messaging.currentUser){this.messaging.updateImStatusRegistration();this._loadMessageFailures();}},async _init({channels,commands=[],companyName,current_partner,currentGuest,current_user_id,current_user_settings,hasLinkPreviewFeature,internalUserGroupId,menu_id,needaction_inbox_counter=0,partner_root,shortcodes=[],starred_counter=0,}){const discuss=this.messaging.discuss;this._initPartners({currentGuest,current_partner,current_user_id,partner_root,});this._initMailboxes({needaction_inbox_counter,starred_counter,});if(current_user_settings){this.messaging.models['res.users.settings'].insert(current_user_settings);}
this._initCannedResponses(shortcodes);if(!this.messaging.isCurrentUserGuest){this._initCommands();}
if(channels){await this._initChannels(channels);}
if(!this.exists()){return;}
discuss.update({menu_id});this.messaging.update({companyName,hasLinkPreviewFeature,internalUserGroupId});},_initCannedResponses(cannedResponsesData){this.messaging.update({cannedResponses:insert(cannedResponsesData),});},async _initChannels(channelsData){return this.messaging.executeGracefully(channelsData.map(channelData=>()=>{if(!this.exists()){return;}
const convertedData=this.messaging.models['Thread'].convertData(channelData);const channel=this.messaging.models['Thread'].insert(Object.assign({model:'mail.channel'},convertedData));if(!channel.isPinned){channel.pin();}}));},_initCommands(){this.messaging.update({commands:insert([{help:this.env._t("Show a helper message"),methodName:'execute_command_help',name:"help",},{help:this.env._t("Leave this channel"),methodName:'execute_command_leave',name:"leave",},{channel_types:['channel','chat','group'],help:this.env._t("List users in the current channel"),methodName:'execute_command_who',name:"who",}]),});},_initMailboxes({needaction_inbox_counter,starred_counter,}){this.messaging.inbox.update({counter:needaction_inbox_counter});this.messaging.starred.update({counter:starred_counter});},async _initMailFailures(mailFailuresData){await this.messaging.executeGracefully(mailFailuresData.map(messageData=>()=>{if(!this.exists()){return;}
const message=this.messaging.models['Message'].insert(this.messaging.models['Message'].convertData(messageData));if(!message.author&&this.messaging.currentPartner){message.update({author:this.messaging.currentPartner});}}));},_initPartners({currentGuest,current_partner,current_user_id:currentUserId,partner_root,}){if(currentGuest){this.messaging.update({currentGuest:insert(currentGuest)});}
if(current_partner){this.messaging.update({currentPartner:current_partner,currentUser:insert({id:currentUserId}),});}
if(partner_root){this.messaging.update({partnerRoot:partner_root,});}},async _loadMessageFailures(){const data=await this.messaging.rpc({route:'/mail/load_message_failures',},{shadow:true});this._initMailFailures(data);},},});return __exports;});;

/* /mail/static/src/models/messaging_menu.js */
odoo.define('@mail/models/messaging_menu',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'MessagingMenu',lifecycleHooks:{_created(){document.addEventListener('click',this._onClickCaptureGlobal,true);},_willDelete(){document.removeEventListener('click',this._onClickCaptureGlobal,true);},},recordMethods:{close(){this.update({isOpen:false});},onClickDesktopTabButton(ev){this.update({activeTabId:ev.currentTarget.dataset.tabId});},onClickNewMessage(ev){if(!this.messaging.device.isSmall){this.messaging.chatWindowManager.openNewMessage();this.close();}else{this.toggleMobileNewMessage();}},onClickToggler(ev){ev.preventDefault();if(!this.exists()){return;}
this.toggleOpen();},onHideMobileNewMessage(){this.update({isMobileNewMessageToggled:false});},onMobileNewMessageInputSelect(ev,ui){this.messaging.openChat({partnerId:ui.item.id});},onMobileNewMessageInputSource(req,res){const value=_.escape(req.term);this.messaging.models['Partner'].imSearch({callback:partners=>{const suggestions=partners.map(partner=>{return{id:partner.id,value:partner.nameOrDisplayName,label:partner.nameOrDisplayName,};});res(_.sortBy(suggestions,'label'));},keyword:value,limit:10,});},toggleMobileNewMessage(){this.update({isMobileNewMessageToggled:!this.isMobileNewMessageToggled});},toggleOpen(){this.update({isOpen:!this.isOpen});this.messaging.refreshIsNotificationPermissionDefault();if(this.isOpen){this.messaging.inbox.thread.cache.update({isCacheRefreshRequested:true});}},_onClickCaptureGlobal(ev){if(!this.exists()){return;}
if(!this.component){return;}
if(!this.component.root.el||this.component.root.el.contains(ev.target)){return;}
this.close();},},fields:{activeTabId:attr({default:'all',}),component:attr(),counter:attr({compute(){if(!this.messaging){return 0;}
const inboxCounter=this.messaging.inbox?this.messaging.inbox.counter:0;const unreadChannelsCounter=this.pinnedAndUnreadChannels.length;const notificationGroupsCounter=this.messaging.models['NotificationGroup'].all().reduce((total,group)=>total+group.notifications.length,0);const notificationPemissionCounter=this.messaging.isNotificationPermissionDefault?1:0;return inboxCounter+unreadChannelsCounter+notificationGroupsCounter+notificationPemissionCounter;},}),isMobileNewMessageToggled:attr({default:false,}),isOpen:attr({default:false,}),notificationListView:one('NotificationListView',{compute(){return this.isOpen?{}:clear();},inverse:'messagingMenuOwner',}),mobileMessagingNavbarView:one('MobileMessagingNavbarView',{compute(){if(this.messaging.device&&this.messaging.device.isSmall){return{};}
return clear();},inverse:'messagingMenu',}),mobileNewMessageAutocompleteInputView:one('AutocompleteInputView',{compute(){if(this.isOpen&&this.messaging.isInitialized&&this.messaging.device.isSmall&&this.isMobileNewMessageToggled){return{};}
return clear();},inverse:'messagingMenuOwnerAsMobileNewMessageInput',}),mobileNewMessageInputPlaceholder:attr({compute(){return this.env._t("Search user...");},}),pinnedAndUnreadChannels:many('Thread',{inverse:'messagingMenuAsPinnedAndUnreadChannel',readonly:true,}),viewId:attr({compute(){return _.uniqueId('o_messagingMenu_');},}),},});return __exports;});;

/* /mail/static/src/models/messaging_notification_handler.js */
odoo.define('@mail/models/messaging_notification_handler',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{decrement,increment,insert}=require('@mail/model/model_field_command');const{htmlToTextContentInline}=require('@mail/js/utils');const{escape,sprintf}=require('@web/core/utils/strings');const{str_to_datetime}=require('web.time');const{Markup}=require('web.utils');const{renderToString}=require("@web/core/utils/render");const PREVIEW_MSG_MAX_SIZE=350;registerModel({name:'MessagingNotificationHandler',lifecycleHooks:{_willDelete(){this.env.services['bus_service'].removeEventListener('notification',this._handleNotifications);},},recordMethods:{start(){this.env.services['bus_service'].addEventListener('notification',this._handleNotifications);this.env.services['bus_service'].start();},async _handleNotifications({detail:notifications}){const channelsLeft=new Set(notifications.filter(notification=>notification.type==='mail.channel/leave').map(notification=>notification.payload.id));const proms=notifications.map(message=>{if(typeof message==='object'){switch(message.type){case'bus/im_status':return this._handleNotificationBusImStatus(message.payload);case'ir.attachment/delete':return this._handleNotificationAttachmentDelete(message.payload);case'mail.channel.member/seen':return this._handleNotificationChannelMemberSeen(message.payload);case'mail.channel.member/fetched':return this._handleNotificationChannelMemberFetched(message.payload);case'mail.channel.member/typing_status':return this._handleNotificationChannelMemberTypingStatus(message.payload);case'mail.channel/new_message':if(channelsLeft.has(message.payload.id)){return;}
return this._handleNotificationChannelMessage(message.payload);case'mail.link.preview/insert':this.messaging.models['LinkPreview'].insert(message.payload);return;case'mail.link.preview/delete':{const linkPreview=this.messaging.models['LinkPreview'].findFromIdentifyingData(message.payload);if(linkPreview){linkPreview.delete();}
return;}
case'mail.message/delete':return this._handleNotificationMessageDelete(message.payload);case'mail.message/inbox':return this._handleNotificationNeedaction(message.payload);case'mail.message/mark_as_read':return this._handleNotificationPartnerMarkAsRead(message.payload);case'mail.message/notification_update':return this._handleNotificationPartnerMessageNotificationUpdate(message.payload);case'simple_notification':return this._handleNotificationSimpleNotification(message.payload);case'mail.message/toggle_star':return this._handleNotificationPartnerToggleStar(message.payload);case'mail.channel/transient_message':return this._handleNotificationPartnerTransientMessage(message.payload);case'mail.channel/leave':return this._handleNotificationChannelLeave(message.payload);case'res.users/connection':return this._handleNotificationPartnerUserConnection(message.payload);case'mail.activity/updated':{for(const activityMenuView of this.messaging.models['ActivityMenuView'].all()){if(message.payload.activity_created){activityMenuView.update({extraCount:increment()});}
if(message.payload.activity_deleted){activityMenuView.update({extraCount:decrement()});}}
return;}
case'mail.channel/unpin':return this._handleNotificationChannelUnpin(message.payload);case'mail.channel/joined':return this._handleNotificationChannelJoined(message.payload);case'mail.channel/last_interest_dt_changed':return this._handleNotificationChannelLastInterestDateTimeChanged(message.payload);case'mail.channel/legacy_insert':return this.messaging.models['Thread'].insert(this.messaging.models['Thread'].convertData({model:'mail.channel',...message.payload}));case'mail.channel/insert':return this.messaging.models['Channel'].insert(message.payload);case'mail.guest/insert':return this.messaging.models['Guest'].insert(message.payload);case'mail.message/insert':return this.messaging.models['Message'].insert(message.payload);case'mail.channel.rtc.session/insert':return this.messaging.models['RtcSession'].insert(message.payload);case'mail.channel.rtc.session/peer_notification':return this._handleNotificationRtcPeerToPeer(message.payload);case'mail.channel/rtc_sessions_update':return this._handleNotificationRtcSessionUpdate(message.payload);case'mail.channel.rtc.session/ended':return this._handleNotificationRtcSessionEnded(message.payload);case'mail.thread/insert':return this.messaging.models['Thread'].insert(message.payload);case'res.users.settings/insert':return this.messaging.models['res.users.settings'].insert(message.payload);case'res.users.settings.volumes/insert':return this.messaging.models['res.users.settings.volumes'].insert(message.payload);default:return this._handleNotification(message);}}});await Promise.all(proms);},_handleNotification(message){},_handleNotificationBusImStatus({partners,guests}){if(partners){this.models['Partner'].insert(partners);}
if(guests){this.models['Guest'].insert(guests);}},_handleNotificationAttachmentDelete(payload){const attachment=this.messaging.models['Attachment'].findFromIdentifyingData(payload);if(attachment){this.messaging.messagingBus.trigger('o-attachment-deleted',{attachment});attachment.delete();}},async _handleNotificationChannelMemberFetched({channel_id:channelId,last_message_id,partner_id,}){const channel=this.messaging.models['Channel'].findFromIdentifyingData({id:channelId});if(!channel){return;}
if(channel.channel_type==='channel'){return;}
this.messaging.models['ThreadPartnerSeenInfo'].insert({lastFetchedMessage:insert({id:last_message_id}),partner:{id:partner_id},thread:channel.thread,});this.messaging.models['MessageSeenIndicator'].insert({message:{id:last_message_id},thread:channel.thread,});},_handleNotificationChannelJoined({channel:channelData,invited_by_user_id:invitedByUserId,open_chat_window:openChatWindow}){const thread=this.messaging.models['Thread'].insert(this.messaging.models['Thread'].convertData(channelData));if(this.messaging.currentUser&&invitedByUserId!==this.messaging.currentUser.id){this.messaging.notify({message:sprintf(this.env._t("You have been invited to #%s"),thread.displayName),type:'info',});}
if(openChatWindow){if(thread.channel.channel_type!=='channel'&&!this.messaging.device.isSmall&&!thread.chatWindow){this.messaging.chatWindowManager.openThread(thread);}}},_handleNotificationChannelLastInterestDateTimeChanged({id,isServerPinned,last_interest_dt}){const channel=this.messaging.models['Thread'].findFromIdentifyingData({id:id,model:'mail.channel',});if(channel){channel.update({lastInterestDateTime:str_to_datetime(last_interest_dt),isServerPinned,});}},async _handleNotificationChannelMessage({id:channelId,message:messageData}){let channel=this.messaging.models['Channel'].findFromIdentifyingData({id:channelId});if(!channel&&this.messaging.isCurrentUserGuest){return;}
const convertedData=this.messaging.models['Message'].convertData(messageData);if(!channel||!channel.channel_type){const res=await this.messaging.models['Thread'].performRpcChannelInfo({ids:[channelId]});if(!this.exists()){return;}
channel=res[0].channel;}
if(!channel.thread.isPinned){channel.thread.pin();}
const message=this.messaging.models['Message'].insert(convertedData);this._notifyThreadViewsMessageReceived(message);if(message.author===this.messaging.currentPartner){return;}
const isChatWithOdooBot=(channel.correspondent&&channel.correspondent===this.messaging.partnerRoot);if(!isChatWithOdooBot){const isOdooFocused=this.env.services['presence'].isOdooFocused();if(!isOdooFocused&&channel.thread.isChatChannel){this._notifyNewChannelMessageWhileOutOfFocus({channel,message,});}
if(channel.channel_type!=='channel'&&!this.messaging.currentGuest){channel.thread.markAsFetched();}
if(channel.channel_type!=='channel'&&!this.messaging.device.isSmall&&!channel.thread.chatWindow){this.messaging.chatWindowManager.openThread(channel.thread);}}},async _handleNotificationChannelMemberSeen({channel_id:channelId,last_message_id,partner_id,}){const channel=this.messaging.models['Channel'].findFromIdentifyingData({id:channelId});if(!channel){return;}
const lastMessage=this.messaging.models['Message'].insert({id:last_message_id});const shouldComputeSeenIndicators=channel.channel_type!=='channel';if(shouldComputeSeenIndicators){this.messaging.models['ThreadPartnerSeenInfo'].insert({lastSeenMessage:lastMessage,partner:{id:partner_id},thread:channel.thread,});this.messaging.models['MessageSeenIndicator'].insert({message:lastMessage,thread:channel.thread,});}
if(this.messaging.currentPartner&&this.messaging.currentPartner.id===partner_id){channel.thread.update({pendingSeenMessageId:undefined,rawLastSeenByCurrentPartnerMessageId:last_message_id,});}},_handleNotificationChannelMemberTypingStatus(channelMemberData){const member=this.messaging.models['ChannelMember'].insert(channelMemberData);if(member.isMemberOfCurrentUser){return;}
if(member.isTyping){if(member.channel.thread.typingMembers.includes(member)){member.channel.thread.refreshOtherMemberTypingMember(member);}else{member.channel.thread.registerOtherMemberTypingMember(member);}}else{if(!member.channel.thread.typingMembers.includes(member)){return;}
member.channel.thread.unregisterOtherMemberTypingMember(member);}},_handleNotificationNeedaction(data){const message=this.messaging.models['Message'].insert(this.messaging.models['Message'].convertData(data));this.messaging.inbox.update({counter:increment()});const originThread=message.originThread;if(originThread&&message.isNeedaction){originThread.update({message_needaction_counter:increment()});}},_handleNotificationRtcPeerToPeer({sender,notifications}){for(const content of notifications){this.messaging.rtc.handleNotification(sender,content);}},_handleNotificationSimpleNotification({message,message_is_html,sticky,title,warning}){this.messaging.notify({message:message_is_html?Markup(message):message,sticky,title,type:warning?'warning':'danger',});},async _handleNotificationRtcSessionEnded({sessionId}){const currentSession=this.messaging.rtc.currentRtcSession;if(currentSession&&currentSession.id===sessionId){this.messaging.rtc.channel.endCall();this.messaging.notify({message:this.env._t("Disconnected from the RTC call by the server"),type:'warning',});}},async _handleNotificationRtcSessionUpdate({id,rtcSessions}){const channel=this.messaging.models['Thread'].findFromIdentifyingData({id,model:'mail.channel'});if(!channel){return;}
channel.updateRtcSessions(rtcSessions);},_handleNotificationMessageDelete({message_ids}){for(const id of message_ids){const message=this.messaging.models['Message'].findFromIdentifyingData({id});if(message){message.delete();}}},_handleNotificationPartnerMessageNotificationUpdate({elements}){for(const messageData of elements){const message=this.messaging.models['Message'].insert(this.messaging.models['Message'].convertData(messageData));if(!message.author&&this.messaging.currentPartner){message.update({author:this.messaging.currentPartner});}}},_handleNotificationPartnerMarkAsRead({message_ids=[],needaction_inbox_counter}){for(const message_id of message_ids){const message=this.messaging.models['Message'].findFromIdentifyingData({id:message_id});if(!message){continue;}
const originThread=message.originThread;if(originThread&&message.isNeedaction){originThread.update({message_needaction_counter:decrement()});}
message.update({isHistory:true,isNeedaction:false,});}
const inbox=this.messaging.inbox;if(needaction_inbox_counter!==undefined){inbox.update({counter:needaction_inbox_counter});}else{inbox.update({counter:decrement(message_ids.length)});}
if(inbox.counter>inbox.thread.cache.fetchedMessages.length){inbox.thread.cache.update({hasToLoadMessages:true});}},_handleNotificationPartnerToggleStar({message_ids=[],starred}){const starredMailbox=this.messaging.starred;for(const messageId of message_ids){const message=this.messaging.models['Message'].findFromIdentifyingData({id:messageId,});if(!message){continue;}
message.update({isStarred:starred});starredMailbox.update({counter:starred?increment():decrement(),});}},_handleNotificationPartnerTransientMessage(data){const convertedData=this.messaging.models['Message'].convertData(data);const lastMessageId=this.messaging.models['Message'].all().reduce((lastMessageId,message)=>Math.max(lastMessageId,message.id),0);const partnerRoot=this.messaging.partnerRoot;const message=this.messaging.models['Message'].insert(Object.assign(convertedData,{author:partnerRoot,id:lastMessageId+0.01,isTransient:true,}));this._notifyThreadViewsMessageReceived(message);},_handleNotificationChannelLeave({id}){const thread=this.messaging.models['Thread'].findFromIdentifyingData({id,model:'mail.channel',});if(!thread){return;}
const message=sprintf(this.env._t("You unsubscribed from %s."),thread.displayName);this.messaging.notify({message,type:'info'});thread.update({isServerPinned:false,});if(thread.channel&&thread.channel.memberOfCurrentUser){thread.channel.memberOfCurrentUser.delete();}},_handleNotificationChannelUnpin({id}){const thread=this.messaging.models['Thread'].findFromIdentifyingData({id,model:'mail.channel',});if(!thread){return;}
const message=sprintf(this.env._t("You unpinned your conversation with %s."),thread.displayName);this.messaging.notify({message,type:'info'});thread.update({isServerPinned:false,});if(thread.channel&&thread.channel.memberOfCurrentUser){thread.channel.memberOfCurrentUser.delete();}},async _handleNotificationPartnerUserConnection({partnerId,username}){const message=sprintf(this.env._t('%s connected'),username);const title=this.env._t("This is their first connection. Wish them luck.");this.messaging.userNotificationManager.sendNotification({message,title,type:'info'});const chat=await this.messaging.getChat({partnerId});if(!this.exists()||!chat||this.messaging.device.isSmall){return;}
this.messaging.chatWindowManager.openThread(chat.thread);},_notifyNewChannelMessageWhileOutOfFocus({channel,message}){const author=message.author;const messaging=this.messaging;let notificationTitle;if(!author){notificationTitle=this.env._t("New message");}else{if(channel.channel_type==='channel'){const channelIcon=renderToString('mail.ThreadIcon',{env:this.env,thread:channel.thread,});const channelName=channel.thread.displayName;const channelNameWithIcon=channelIcon+channelName;notificationTitle=sprintf(this.env._t("%s from %s"),author.nameOrDisplayName,channelNameWithIcon);}else{notificationTitle=author.nameOrDisplayName;}}
const notificationContent=escape(htmlToTextContentInline(message.body).substr(0,PREVIEW_MSG_MAX_SIZE));this.messaging.userNotificationManager.sendNotification({message:notificationContent,title:notificationTitle,type:'info',});messaging.update({outOfFocusUnreadMessageCounter:increment()});const titlePattern=messaging.outOfFocusUnreadMessageCounter===1?this.env._t("%s Message"):this.env._t("%s Messages");this.env.bus.trigger('set_title_part',{part:'_chat',title:sprintf(titlePattern,messaging.outOfFocusUnreadMessageCounter),});},_notifyThreadViewsMessageReceived(message){for(const thread of message.threads){for(const threadView of thread.threadViews){threadView.addComponentHint('message-received',{message});}}},},});return __exports;});;

/* /mail/static/src/models/mobile_messaging_navbar_view.js */
odoo.define('@mail/models/mobile_messaging_navbar_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'MobileMessagingNavbarView',identifyingMode:'xor',recordMethods:{onClick(tabId){if(this.discuss){if(this.discuss.activeMobileNavbarTabId===tabId){return;}
this.discuss.update({activeMobileNavbarTabId:tabId});if(this.discuss.activeMobileNavbarTabId==='mailbox'&&(!this.discuss.activeThread||!this.discuss.activeThread.mailbox)){this.discuss.update({thread:this.messaging.inbox.thread});}
if(this.discuss.activeMobileNavbarTabId!=='mailbox'){this.discuss.update({thread:clear()});}
if(this.discuss.activeMobileNavbarTabId!=='chat'){this.discuss.discussView.update({isAddingChat:false});}
if(this.discuss.activeMobileNavbarTabId!=='channel'){this.discuss.discussView.update({isAddingChannel:false});}}
if(this.messagingMenu){this.messagingMenu.update({activeTabId:tabId});}},},fields:{activeTabId:attr({compute(){if(this.discuss){return this.discuss.activeMobileNavbarTabId;}
if(this.messagingMenu){return this.messagingMenu.activeTabId;}
return clear();},}),discuss:one('Discuss',{identifying:true,inverse:'mobileMessagingNavbarView',}),messagingMenu:one('MessagingMenu',{identifying:true,inverse:'mobileMessagingNavbarView',}),tabs:attr({compute(){if(this.discuss){return[{icon:'fa fa-inbox',id:'mailbox',label:this.env._t("Mailboxes"),},{icon:'fa fa-user',id:'chat',label:this.env._t("Chat"),},{icon:'fa fa-users',id:'channel',label:this.env._t("Channel"),}];}
if(this.messagingMenu){return[{icon:'fa fa-envelope',id:'all',label:this.env._t("All"),},{icon:'fa fa-user',id:'chat',label:this.env._t("Chat"),},{icon:'fa fa-users',id:'channel',label:this.env._t("Channel"),}];}
return[];},}),},});return __exports;});;

/* /mail/static/src/models/notification.js */
odoo.define('@mail/models/notification',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear,insert}=require('@mail/model/model_field_command');registerModel({name:'Notification',modelMethods:{convertData(data){const data2={};if('failure_type'in data){data2.failure_type=data.failure_type;}
if('id'in data){data2.id=data.id;}
if('notification_status'in data){data2.notification_status=data.notification_status;}
if('notification_type'in data){data2.notification_type=data.notification_type;}
if('res_partner_id'in data){if(!data.res_partner_id){data2.partner=clear();}else{data2.partner=insert({display_name:data.res_partner_id[1],id:data.res_partner_id[0],});}}
return data2;},},fields:{failure_type:attr(),iconClass:attr({compute(){switch(this.notification_status){case'sent':return'fa fa-check';case'bounce':return'fa fa-exclamation';case'exception':return'fa fa-exclamation';case'ready':return'fa fa-send-o';case'canceled':return'fa fa-trash-o';}
return'';},}),iconTitle:attr({compute(){switch(this.notification_status){case'sent':return this.env._t("Sent");case'bounce':return this.env._t("Bounced");case'exception':return this.env._t("Error");case'ready':return this.env._t("Ready");case'canceled':return this.env._t("Canceled");}
return'';},}),id:attr({identifying:true,}),isFailure:attr({compute(){return['exception','bounce'].includes(this.notification_status);},}),isFromCurrentUser:attr({compute(){if(!this.messaging||!this.messaging.currentPartner||!this.message||!this.message.author){return clear();}
return this.messaging.currentPartner===this.message.author;},}),message:one('Message',{inverse:'notifications',}),notificationGroup:one('NotificationGroup',{compute(){if(!this.isFailure||!this.isFromCurrentUser){return clear();}
const thread=this.message.originThread;return{notification_type:this.notification_type,res_id:thread.model==='mail.channel'?thread.id:null,res_model:thread.model,res_model_name:thread.model_name,};},inverse:'notifications',}),notification_status:attr(),notification_type:attr(),partner:one('Partner'),},});return __exports;});;

/* /mail/static/src/models/notification_group.js */
odoo.define('@mail/models/notification_group',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,insert}=require('@mail/model/model_field_command');registerModel({name:'NotificationGroup',recordMethods:{notifyCancel(){this.messaging.rpc({model:this.res_model,method:'notify_cancel_by_type',kwargs:{notification_type:this.notification_type},});},openDocuments(){if(this.thread){this.thread.open();}else{this._openDocuments();}},_onChangeNotifications(){if(this.notifications.length===0){this.delete();}},_openDocuments(){if(this.notification_type!=='email'){return;}
this.env.services.action.doAction({name:this.env._t("Mail Failures"),type:'ir.actions.act_window',view_mode:'kanban,list,form',views:[[false,'kanban'],[false,'list'],[false,'form']],target:'current',res_model:this.res_model,domain:[['message_has_error','=',true]],context:{create:false},});if(this.messaging.device.isSmall){this.messaging.messagingMenu.close();}},},fields:{date:attr({compute(){const dates=this.notifications.filter(notification=>notification.message&&notification.message.date).map(notification=>notification.message.date);if(dates.length===0){return clear();}
return moment.max(dates);},}),notification_type:attr({identifying:true,}),notifications:many('Notification',{inverse:'notificationGroup',}),notificationGroupViews:many('NotificationGroupView',{inverse:'notificationGroup',}),res_id:attr({identifying:true,}),res_model:attr({identifying:true,}),res_model_name:attr(),sequence:attr({compute(){return-Math.max(...this.notifications.map(notification=>notification.message.id));},default:0,}),thread:one('Thread',{compute(){const notificationsThreadIds=this.notifications.filter(notification=>notification.message&&notification.message.originThread).map(notification=>notification.message.originThread.id);const threadIds=new Set(notificationsThreadIds);if(threadIds.size!==1){return clear();}
return insert({id:notificationsThreadIds[0],model:this.res_model,});},}),},onChanges:[{dependencies:['notifications'],methodName:'_onChangeNotifications',},],});return __exports;});;

/* /mail/static/src/models/notification_group_view.js */
odoo.define('@mail/models/notification_group_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'NotificationGroupView',recordMethods:{onClick(ev){if(!this.exists()){return;}
const markAsRead=this.markAsReadRef.el;if(markAsRead&&markAsRead.contains(ev.target)){return;}
const messaging=this.messaging;this.notificationGroup.openDocuments();if(!messaging.device.isSmall){messaging.messagingMenu.close();}},onClickMarkAsRead(ev){this.notificationGroup.notifyCancel();},},fields:{imageSrc:attr({compute(){if(this.notificationGroup.notification_type==='email'){return'/mail/static/src/img/smiley/mailfailure.jpg';}
return clear();},}),markAsReadRef:attr(),notificationGroup:one('NotificationGroup',{identifying:true,inverse:'notificationGroupViews',}),notificationListViewOwner:one('NotificationListView',{identifying:true,inverse:'notificationGroupViews',}),},});return __exports;});;

/* /mail/static/src/models/notification_list_view.js */
odoo.define('@mail/models/notification_list_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'NotificationListView',identifyingMode:'xor',lifecycleHooks:{_created(){this._loadPreviews();},},recordMethods:{async _loadPreviews(){const threads=this.channelPreviewViews.map(channelPreviewView=>channelPreviewView.thread);this.messaging.models['Thread'].loadPreviews(threads);},},fields:{channelPreviewViews:many('ChannelPreviewView',{compute(){return this.filteredChannels.sort((c1,c2)=>{if(c1.localMessageUnreadCounter>0&&c2.localMessageUnreadCounter===0){return-1;}
if(c1.localMessageUnreadCounter===0&&c2.localMessageUnreadCounter>0){return 1;}
if(c1.thread.lastMessage&&c2.thread.lastMessage){return c1.thread.lastMessage.id<c2.thread.lastMessage.id?1:-1;}
if(c1.thread.lastMessage){return-1;}
if(c2.thread.lastMessage){return 1;}
return c1.id<c2.id?-1:1;}).map(channel=>({channel}));},inverse:'notificationListViewOwner',}),discussOwner:one('Discuss',{identifying:true,inverse:'notificationListView',}),filter:attr({compute(){if(this.discussOwner){return this.discussOwner.activeMobileNavbarTabId;}
if(this.messagingMenuOwner){return this.messagingMenuOwner.activeTabId;}
return clear();},}),filteredChannels:many('Channel',{compute(){switch(this.filter){case'channel':{return this.messaging.models['Channel'].all(channel=>channel.channel_type==='channel'&&channel.thread.isPinned).sort((c1,c2)=>c1.displayName<c2.displayName?-1:1);}
case'chat':{return this.messaging.models['Channel'].all(channel=>channel.thread.isChatChannel&&channel.thread.isPinned).sort((c1,c2)=>c1.displayName<c2.displayName?-1:1);}
case'all':{return this.messaging.models['Channel'].all(channel=>channel.thread.isPinned).sort((c1,c2)=>c1.displayName<c2.displayName?-1:1);}}
return clear();},}),messagingMenuOwner:one('MessagingMenu',{identifying:true,inverse:'notificationListView',}),notificationGroupViews:many('NotificationGroupView',{compute(){if(this.filter!=='all'){return clear();}
return this.models['NotificationGroup'].all().sort((group1,group2)=>group1.sequence-group2.sequence).map(notificationGroup=>({notificationGroup}));},inverse:'notificationListViewOwner',}),notificationRequestView:one('NotificationRequestView',{compute(){return(this.filter==='all'&&this.messaging.isNotificationPermissionDefault)?{}:clear();},inverse:'notificationListViewOwner',}),notificationViews:many('Record',{compute(){const notifications=[];if(this.notificationRequestView){notifications.push(this.notificationRequestView);}
notifications.push(...this.notificationGroupViews);notifications.push(...this.threadNeedactionPreviewViews);notifications.push(...this.channelPreviewViews);return notifications;},isCausal:true,}),threadNeedactionPreviewViews:many('ThreadNeedactionPreviewView',{compute(){if(this.filter!=='all'){return clear();}
return this.messaging.models['Thread'].all(t=>!t.mailbox&&t.needactionMessagesAsOriginThread.length>0).sort((t1,t2)=>{if(t1.needactionMessagesAsOriginThread.length>0&&t2.needactionMessagesAsOriginThread.length===0){return-1;}
if(t1.needactionMessagesAsOriginThread.length===0&&t2.needactionMessagesAsOriginThread.length>0){return 1;}
if(t1.lastNeedactionMessageAsOriginThread&&t2.lastNeedactionMessageAsOriginThread){return t1.lastNeedactionMessageAsOriginThread.id<t2.lastNeedactionMessageAsOriginThread.id?1:-1;}
if(t1.lastNeedactionMessageAsOriginThread){return-1;}
if(t2.lastNeedactionMessageAsOriginThread){return 1;}
return t1.id<t2.id?-1:1;}).map(thread=>({thread}));},inverse:'notificationListViewOwner',}),},});return __exports;});;

/* /mail/static/src/models/notification_request_view.js */
odoo.define('@mail/models/notification_request_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'NotificationRequestView',fields:{headerText:attr({compute(){if(!this.messaging.partnerRoot){return clear();}
return sprintf(this.env._t("%(odoobotName)s has a request"),{odoobotName:this.messaging.partnerRoot.nameOrDisplayName},);},}),notificationListViewOwner:one('NotificationListView',{identifying:true,inverse:'notificationRequestView',}),personaImStatusIconView:one('PersonaImStatusIconView',{compute(){return this.messaging.partnerRoot&&this.messaging.partnerRoot.isImStatusSet?{}:clear();},inverse:'notificationRequestViewOwner',}),},});return __exports;});;

/* /mail/static/src/models/other_member_long_typing_in_thread_timer.js */
odoo.define('@mail/models/other_member_long_typing_in_thread_timer',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'OtherMemberLongTypingInThreadTimer',recordMethods:{onOtherMemberLongTypingTimeout(){this.thread.unregisterOtherMemberTypingMember(this.member);},},fields:{member:one('ChannelMember',{identifying:true,inverse:'otherMemberLongTypingInThreadTimers',}),thread:one('Thread',{identifying:true,inverse:'otherMembersLongTypingTimers',}),timer:one('Timer',{default:{},inverse:'otherMemberLongTypingInThreadTimerOwner',required:true,}),},});return __exports;});;

/* /mail/static/src/models/partner.js */
odoo.define('@mail/models/partner',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,insert}=require('@mail/model/model_field_command');const{cleanSearchTerm}=require('@mail/utils/utils');registerModel({name:'Partner',modelMethods:{async fetchSuggestions(searchTerm,{thread}={}){const kwargs={search:searchTerm};const isNonPublicChannel=thread&&thread.model==='mail.channel'&&(thread.authorizedGroupFullName||thread.channel.channel_type!=='channel');if(isNonPublicChannel){kwargs.channel_id=thread.id;}
const suggestedPartners=await this.messaging.rpc({model:'res.partner',method:'get_mention_suggestions',kwargs,},{shadow:true},);this.messaging.models['Partner'].insert(suggestedPartners);},getSuggestionSortFunction(searchTerm,{thread}={}){const cleanedSearchTerm=cleanSearchTerm(searchTerm);return(a,b)=>{const isAInternalUser=a.user&&a.user.isInternalUser;const isBInternalUser=b.user&&b.user.isInternalUser;if(isAInternalUser&&!isBInternalUser){return-1;}
if(!isAInternalUser&&isBInternalUser){return 1;}
if(thread&&thread.channel){const isAMember=a.persona.channelMembers.includes(thread.channel);const isBMember=b.persona.channelMembers.includes(thread.channel);if(isAMember&&!isBMember){return-1;}
if(!isAMember&&isBMember){return 1;}}
if(thread){const isAFollower=thread.followersPartner.includes(a);const isBFollower=thread.followersPartner.includes(b);if(isAFollower&&!isBFollower){return-1;}
if(!isAFollower&&isBFollower){return 1;}}
const cleanedAName=cleanSearchTerm(a.name||'');const cleanedBName=cleanSearchTerm(b.name||'');if(cleanedAName.startsWith(cleanedSearchTerm)&&!cleanedBName.startsWith(cleanedSearchTerm)){return-1;}
if(!cleanedAName.startsWith(cleanedSearchTerm)&&cleanedBName.startsWith(cleanedSearchTerm)){return 1;}
if(cleanedAName<cleanedBName){return-1;}
if(cleanedAName>cleanedBName){return 1;}
const cleanedAEmail=cleanSearchTerm(a.email||'');const cleanedBEmail=cleanSearchTerm(b.email||'');if(cleanedAEmail.startsWith(cleanedSearchTerm)&&!cleanedAEmail.startsWith(cleanedSearchTerm)){return-1;}
if(!cleanedBEmail.startsWith(cleanedSearchTerm)&&cleanedBEmail.startsWith(cleanedSearchTerm)){return 1;}
if(cleanedAEmail<cleanedBEmail){return-1;}
if(cleanedAEmail>cleanedBEmail){return 1;}
return a.id-b.id;};},async imSearch({callback,keyword,limit=10}){let partners=[];const cleanedSearchTerm=cleanSearchTerm(keyword);for(const partner of this.all(partner=>partner.active)){if(partners.length<limit){if(partner.name&&partner.user&&cleanSearchTerm(partner.name).includes(cleanedSearchTerm)){partners.push(partner);}}}
if(!partners.length){const partnersData=await this.messaging.rpc({model:'res.partner',method:'im_search',args:[keyword,limit]},{shadow:true});const newPartners=this.insert(partnersData);partners.push(...newPartners);}
callback(partners);},searchSuggestions(searchTerm,{thread}={}){let partners;const isNonPublicChannel=thread&&thread.channel&&(thread.authorizedGroupFullName||thread.channel.channel_type!=='channel');if(isNonPublicChannel){partners=thread.channel.channelMembers.filter(member=>member.persona&&member.persona.partner).map(member=>member.persona.partner);}else{partners=this.messaging.models['Partner'].all();}
const cleanedSearchTerm=cleanSearchTerm(searchTerm);const mainSuggestionList=[];const extraSuggestionList=[];for(const partner of partners){if((!partner.active&&partner!==this.messaging.partnerRoot)||partner.is_public){continue;}
if(!partner.name){continue;}
if((cleanSearchTerm(partner.name).includes(cleanedSearchTerm))||(partner.email&&cleanSearchTerm(partner.email).includes(cleanedSearchTerm))){if(partner.user){mainSuggestionList.push(partner);}else{extraSuggestionList.push(partner);}}}
return[mainSuggestionList,extraSuggestionList];},},recordMethods:{async checkIsUser(){const userIds=await this.messaging.rpc({model:'res.users',method:'search',args:[[['partner_id','=',this.id]]],kwargs:{context:{active_test:false},},},{shadow:true});if(!this.exists()){return;}
this.update({hasCheckedUser:true});if(userIds.length>0){this.update({user:insert({id:userIds[0]})});}},async getChat(){if(!this.user&&!this.hasCheckedUser){await this.checkIsUser();if(!this.exists()){return;}}
if(!this.user){this.messaging.notify({message:this.env._t("You can only chat with partners that have a dedicated user."),type:'info',});return;}
return this.user.getChat();},async openChat(options){const chat=await this.getChat();if(!this.exists()||!chat){return;}
await chat.thread.open(options);if(!this.exists()){return;}},async openProfile(){return this.messaging.openDocument({id:this.id,model:'res.partner',});},},fields:{active:attr({default:true,}),avatarUrl:attr({compute(){return`/web/image/res.partner/${this.id}/avatar_128`;},}),channelInvitationFormSelectablePartnerViews:many('ChannelInvitationFormSelectablePartnerView',{inverse:'partner',}),channelInvitationFormSelectedPartnerViews:many('ChannelInvitationFormSelectedPartnerView',{inverse:'partner',}),country:one('Country'),display_name:attr(),displayName:attr({compute(){if(this.display_name){return this.display_name;}
if(this.user&&this.user.displayName){return this.user.displayName;}
return clear();},default:"",}),dmChatWithCurrentPartner:one('Channel',{inverse:'correspondentOfDmChat',}),email:attr(),hasCheckedUser:attr({default:false,}),id:attr({identifying:true,}),im_status:attr(),isImStatusSet:attr({compute(){return Boolean(this.im_status&&this.im_status!=='im_partner');},}),isOnline:attr({compute(){return['online','away'].includes(this.im_status);},}),is_public:attr(),model:attr({default:'res.partner',}),name:attr(),nameOrDisplayName:attr({compute(){return this.name||this.displayName;},}),persona:one('Persona',{default:{},inverse:'partner',readonly:true,required:true,}),suggestable:one('ComposerSuggestable',{default:{},inverse:'partner',readonly:true,required:true,}),user:one('User',{inverse:'partner',}),volumeSetting:one('res.users.settings.volumes',{inverse:'partner_id',}),},});return __exports;});;

/* /mail/static/src/models/persona.js */
odoo.define('@mail/models/persona',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'Persona',identifyingMode:'xor',fields:{channelMembers:many('ChannelMember',{inverse:'persona',isCausal:true,}),guest:one('Guest',{identifying:true,inverse:'persona',}),im_status:attr({compute(){if(this.guest){return this.guest.im_status||clear();}
if(this.partner){return this.partner.im_status||clear();}
return clear();},}),messagingAsAnyPersona:one('Messaging',{default:{},inverse:'allPersonas',}),name:attr({compute(){if(this.guest){return this.guest.name||clear();}
if(this.partner){return this.partner.nameOrDisplayName||clear();}
return clear();},}),partner:one('Partner',{identifying:true,inverse:'persona',}),volumeSetting:one('res.users.settings.volumes',{compute(){if(this.guest){return this.guest.volumeSetting||clear();}
if(this.partner){return this.partner.volumeSetting||clear();}
return clear();},}),},});return __exports;});;

/* /mail/static/src/models/persona_im_status_icon_view.js */
odoo.define('@mail/models/persona_im_status_icon_view',async function(require){'use strict';let __exports={};const{one}=require('@mail/model/model_field');const{registerModel}=require('@mail/model/model_core');const{clear}=require('@mail/model/model_field_command');registerModel({name:'PersonaImStatusIconView',identifyingMode:'xor',fields:{channelInvitationFormSelectablePartnerViewOwner:one('ChannelInvitationFormSelectablePartnerView',{identifying:true,inverse:'personaImStatusIconView',}),channelMemberViewOwner:one('ChannelMemberView',{identifying:true,inverse:'personaImStatusIconView',}),channelPreviewViewOwner:one('ChannelPreviewView',{identifying:true,inverse:'personaImStatusIconView',}),composerSuggestionViewOwner:one('ComposerSuggestionView',{identifying:true,inverse:'personaImStatusIconView',}),messageViewOwner:one('MessageView',{identifying:true,inverse:'personaImStatusIconView',}),notificationRequestViewOwner:one('NotificationRequestView',{identifying:true,inverse:'personaImStatusIconView',}),persona:one('Persona',{compute(){if(this.channelInvitationFormSelectablePartnerViewOwner){return this.channelInvitationFormSelectablePartnerViewOwner.partner.persona;}
if(this.channelMemberViewOwner){return this.channelMemberViewOwner.channelMember.persona;}
if(this.channelPreviewViewOwner){return this.channelPreviewViewOwner.channel.correspondent.persona;}
if(this.composerSuggestionViewOwner){return this.composerSuggestionViewOwner.suggestable.partner.persona;}
if(this.messageViewOwner){if(this.messageViewOwner.message.author){return this.messageViewOwner.message.author.persona;}
if(this.messageViewOwner.message.guestAuthor){return this.messageViewOwner.message.guestAuthor.persona;}}
if(this.notificationRequestViewOwner){return this.messaging.partnerRoot.persona;}
if(this.threadNeedactionPreviewViewOwner){return this.threadNeedactionPreviewViewOwner.thread.channel.correspondent.persona;}
return clear();},required:true,}),threadNeedactionPreviewViewOwner:one('ThreadNeedactionPreviewView',{identifying:true,inverse:'personaImStatusIconView',}),},});return __exports;});;

/* /mail/static/src/models/popover_manager.js */
odoo.define('@mail/models/popover_manager',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{many}=require('@mail/model/model_field');registerModel({name:'PopoverManager',fields:{popoverViews:many('PopoverView',{inverse:'manager',isCausal:true,}),},});return __exports;});;

/* /mail/static/src/models/popover_view.js */
odoo.define('@mail/models/popover_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'PopoverView',identifyingMode:'xor',lifecycleHooks:{_created(){document.addEventListener('click',this._onClickCaptureGlobal,true);},_willDelete(){document.removeEventListener('click',this._onClickCaptureGlobal,true);},},recordMethods:{contains(element){return Boolean(this.component&&this.component.root.el&&this.component.root.el.contains(element));},_onClickCaptureGlobal(ev){if(!this.component||!this.component.root.el){return;}
if(this.anchorRef&&this.anchorRef.el&&this.anchorRef.el.contains(ev.target)){return;}
if(this.component.root.el.contains(ev.target)){return;}
this.delete();},},fields:{activityButtonViewOwnerAsActivityList:one('ActivityButtonView',{identifying:true,inverse:'activityListPopoverView',}),activityListView:one('ActivityListView',{compute(){return this.activityButtonViewOwnerAsActivityList?{}:clear();},inverse:'popoverViewOwner',}),activityMarkDonePopoverContentView:one('ActivityMarkDonePopoverContentView',{compute(){if(this.activityViewOwnerAsMarkDone){return{};}
return clear();},inverse:'popoverViewOwner',}),activityViewOwnerAsMarkDone:one('ActivityView',{identifying:true,inverse:'markDonePopoverView',}),anchorRef:attr({compute(){if(this.activityViewOwnerAsMarkDone){return this.activityViewOwnerAsMarkDone.markDoneButtonRef;}
if(this.callActionListViewOwnerAsMoreMenu){return this.callActionListViewOwnerAsMoreMenu.moreButtonRef;}
if(this.callParticipantCardOwner){return this.callParticipantCardOwner.volumeMenuAnchorRef;}
if(this.threadViewTopbarOwnerAsInvite){return this.threadViewTopbarOwnerAsInvite.inviteButtonRef;}
if(this.composerViewOwnerAsEmoji){return this.composerViewOwnerAsEmoji.buttonEmojisRef;}
if(this.activityButtonViewOwnerAsActivityList){return this.activityButtonViewOwnerAsActivityList.buttonRef;}
if(this.messageActionViewOwnerAsReaction){return this.messageActionViewOwnerAsReaction.actionRef;}
if(this.messageViewOwnerAsNotificationContent){return this.messageViewOwnerAsNotificationContent.notificationIconRef;}
return clear();},required:true,}),callActionListViewOwnerAsMoreMenu:one('CallActionListView',{identifying:true,inverse:'moreMenuPopoverView',}),callOptionMenuView:one('CallOptionMenu',{compute(){if(this.callActionListViewOwnerAsMoreMenu){return{};}
return clear();},inverse:'popoverViewOwner',}),callParticipantCardOwner:one('CallParticipantCard',{identifying:true,inverse:'callParticipantCardPopoverView',}),callParticipantCardPopoverContentView:one('CallParticipantCardPopoverContentView',{compute(){if(this.callParticipantCardOwner){return{};}
return clear();},inverse:'popoverViewOwner',}),channelInvitationForm:one('ChannelInvitationForm',{compute(){if(this.threadViewTopbarOwnerAsInvite){return{};}
return clear();},inverse:'popoverViewOwner',}),component:attr(),composerViewOwnerAsEmoji:one('ComposerView',{identifying:true,inverse:'emojisPopoverView',}),content:one('Record',{compute(){if(this.activityMarkDonePopoverContentView){return this.activityMarkDonePopoverContentView;}
if(this.callOptionMenuView){return this.callOptionMenuView;}
if(this.callParticipantCardPopoverContentView){return this.callParticipantCardPopoverContentView;}
if(this.channelInvitationForm){return this.channelInvitationForm;}
if(this.emojiPickerView){return this.emojiPickerView;}
if(this.activityButtonViewOwnerAsActivityList){return this.activityListView;}
if(this.messageNotificationPopoverContentView){return this.messageNotificationPopoverContentView;}
return clear();},required:true,}),contentClassName:attr({compute(){if(this.channelInvitationForm){return'o_PopoverView_channelInvitationForm';}
if(this.emojiPickerView){return'o_PopoverView_emojiPickerView';}
return clear();},default:'',}),contentComponentName:attr({compute(){if(this.activityMarkDonePopoverContentView){return'ActivityMarkDonePopoverContent';}
if(this.callOptionMenuView){return'CallOptionMenu';}
if(this.callParticipantCardPopoverContentView){return'CallParticipantCardPopoverContentView';}
if(this.channelInvitationForm){return'ChannelInvitationForm';}
if(this.emojiPickerView){return'EmojiPickerView';}
if(this.activityButtonViewOwnerAsActivityList){return'ActivityListView';}
if(this.messageNotificationPopoverContentView){return'MessageNotificationPopoverContent';}
return clear();},default:'',required:true,}),emojiPickerView:one('EmojiPickerView',{compute(){if(this.composerViewOwnerAsEmoji){return{};}
if(this.messageActionViewOwnerAsReaction){return{};}
return clear();},inverse:'popoverViewOwner',}),manager:one('PopoverManager',{compute(){if(this.messaging.popoverManager){return this.messaging.popoverManager;}
return clear();},inverse:'popoverViews',}),messageActionViewOwnerAsReaction:one('MessageActionView',{identifying:true,inverse:'reactionPopoverView',}),messageNotificationPopoverContentView:one('MessageNotificationPopoverContentView',{compute(){if(this.messageViewOwnerAsNotificationContent){return{};}
return clear();},inverse:'popoverViewOwner',}),messageViewOwnerAsNotificationContent:one('MessageView',{identifying:true,inverse:'notificationPopoverView',}),position:attr({compute(){if(this.activityViewOwnerAsMarkDone){return'right';}
if(this.callActionListViewOwnerAsMoreMenu){return'top';}
if(this.callParticipantCardOwner){return'bottom';}
if(this.threadViewTopbarOwnerAsInvite){return'bottom';}
if(this.composerViewOwnerAsEmoji){return'top';}
if(this.activityButtonViewOwnerAsActivityList){return'bottom-start';}
if(this.messageActionViewOwnerAsReaction){return'top';}
return clear();},default:'top',}),threadViewTopbarOwnerAsInvite:one('ThreadViewTopbar',{identifying:true,inverse:'invitePopoverView',}),},});return __exports;});;

/* /mail/static/src/models/res_users_settings.js */
odoo.define('@mail/models/res_users_settings',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');registerModel({name:'res.users.settings',fields:{id:attr({identifying:true,}),is_discuss_sidebar_category_channel_open:attr({default:true,}),is_discuss_sidebar_category_chat_open:attr({default:true,}),push_to_talk_key:attr(),use_push_to_talk:attr({default:false,}),user_id:one('User',{inverse:'res_users_settings_id',required:true,}),voice_active_duration:attr(),volume_settings_ids:many('res.users.settings.volumes',{inverse:'user_setting_id',isCausal:true,}),},});return __exports;});;

/* /mail/static/src/models/res_users_settings_volumes.js */
odoo.define('@mail/models/res_users_settings_volumes',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'res.users.settings.volumes',recordMethods:{_onChangeVolume(){const{rtcSessions}=this.partner_id||this.guest_id;if(!rtcSessions){return;}
for(const rtcSession of rtcSessions){if(rtcSession.audioElement){rtcSession.audioElement.volume=this.volume;}}},},fields:{guest_id:one('Guest',{inverse:'volumeSetting',}),id:attr({identifying:true,}),partner_id:one('Partner',{inverse:'volumeSetting',}),user_setting_id:one('res.users.settings',{inverse:'volume_settings_ids',readonly:true,required:true,}),volume:attr({default:0.5,}),},onChanges:[{dependencies:['volume'],methodName:'_onChangeVolume',},],});return __exports;});;

/* /mail/static/src/models/rtc.js */
odoo.define('@mail/models/rtc',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,insert,unlink}=require('@mail/model/model_field_command');const{monitorAudio}=require('@mail/utils/media_monitoring');const{sprintf}=require('@web/core/utils/strings');const getRTCPeerNotificationNextTemporaryId=(function(){let tmpId=0;return()=>{tmpId+=1;return tmpId;};})();registerModel({name:'Rtc',lifecycleHooks:{_created(){browser.addEventListener('keydown',this._onKeyDown);browser.addEventListener('keyup',this._onKeyUp);browser.addEventListener('beforeunload',this._onBeforeUnload);},async _willDelete(){browser.removeEventListener('beforeunload',this._onBeforeUnload);browser.removeEventListener('keydown',this._onKeyDown);browser.removeEventListener('keyup',this._onKeyUp);this.messaging.browser.clearInterval(this.pingInterval);},},recordMethods:{async deafen(){await this._setDeafState(true);this.messaging.soundEffects.deafen.play();},async filterCallees(currentSessions){const currentSessionsTokens=new Set(currentSessions.map(session=>session.id));for(const rtcSession of this.connectedRtcSessions){if(!currentSessionsTokens.has(rtcSession.id)){this._addLogEntry(rtcSession.id,'session removed from the server');this._removePeer(rtcSession.id);}}
if(this.channel&&this.currentRtcSession&&!currentSessionsTokens.has(this.currentRtcSession.id)){this.channel.endCall();}},async handleNotification(sender,content){const{event,channelId,payload}=JSON.parse(content);const rtcSession=this.messaging.models['RtcSession'].findFromIdentifyingData({id:sender});if(!rtcSession||rtcSession.channel!==this.channel){return;}
if(!this.messaging.device.hasRtcSupport){return;}
if(!rtcSession.rtcPeerConnection&&(!channelId||!this.channel||channelId!==this.channel.id)){return;}
switch(event){case"offer":this._addLogEntry(sender,`received notification: ${event}`,{step:'received offer'});await this._handleRtcTransactionOffer(rtcSession,payload);break;case"answer":this._addLogEntry(sender,`received notification: ${event}`,{step:'received answer'});await this._handleRtcTransactionAnswer(rtcSession,payload);break;case"ice-candidate":await this._handleRtcTransactionICECandidate(rtcSession,payload);break;case"disconnect":this._addLogEntry(sender,`received notification: ${event}`,{step:' peer cleanly disconnected '});this._removePeer(rtcSession.id);break;case'trackChange':this._handleTrackChange(rtcSession,payload);break;}},async initSession({currentSessionId,iceServers,startWithAudio,startWithVideo,videoType='user-video'}){this.reset();this.update({currentRtcSession:insert({id:currentSessionId}),iceServers:iceServers||this.iceServers,});await this._callSessions();await this.updateLocalAudioTrack(startWithAudio);if(startWithVideo){await this._toggleVideoBroadcast({type:videoType});}},async mute(){await this._setMuteState(true);this.messaging.soundEffects.mute.play();},async notifyPeers(targetTokens,{event,payload,type='server'}){if(!targetTokens.length||!this.channel||!this.currentRtcSession){return;}
if(type==='server'){this.update({peerNotificationsToSend:insert({channelId:this.channel.id,event,id:getRTCPeerNotificationNextTemporaryId(),payload,senderId:this.currentRtcSession.id,targetTokens}),});await this._sendPeerNotifications();}
if(type==='peerToPeer'){for(const token of targetTokens){const rtcSession=this.messaging.models['RtcSession'].findFromIdentifyingData({id:token});if(!rtcSession){continue;}
const rtcDataChannel=rtcSession.rtcDataChannel;if(!rtcDataChannel||rtcDataChannel.dataChannel.readyState!=='open'){continue;}
rtcDataChannel.dataChannel.send(JSON.stringify({event,channelId:this.channel.id,payload,}));}}},onClickActivityNoticeButton(ev){this.channel.open();},reset(){for(const rtcSession of this.connectedRtcSessions){this._removePeer(rtcSession.id);rtcSession.update({rtcPeerConnection:clear()});}
if(this.disconnectAudioMonitor){this.disconnectAudioMonitor()}
this.audioTrack&&this.audioTrack.stop();this.videoTrack&&this.videoTrack.stop();for(const rtcSession of this.messaging.models['RtcSession'].all()){this.messaging.browser.clearTimeout(rtcSession.connectionRecoveryTimeout);rtcSession.update({connectionRecoveryTimeout:clear(),isCurrentUserInitiatorOfConnectionOffer:clear(),rtcDataChannel:clear(),});}
this.update({blurManager:clear(),currentRtcSession:clear(),disconnectAudioMonitor:clear(),logs:clear(),sendUserVideo:clear(),sendDisplay:clear(),sourceVideoStream:clear(),videoTrack:clear(),audioTrack:clear(),});},async toggleMicrophone(){if(this.currentRtcSession.isMute){await this.unmute();}else{await this.mute();}},async toggleScreenShare(){this._toggleVideoBroadcast({type:'display'});},async toggleUserVideo({force}={}){this._toggleVideoBroadcast({type:'user-video',force});},async undeafen(){await this._setDeafState(false);this.messaging.soundEffects.undeafen.play();},async unmute(){if(this.audioTrack){await this._setMuteState(false);}else{await this.updateLocalAudioTrack(true);}
this.messaging.soundEffects.unmute.play();},async updateLocalAudioTrack(audio){if(this.audioTrack){this.audioTrack.stop();}
this.update({audioTrack:clear()});if(!this.channel){return;}
if(audio){let audioTrack;try{const audioStream=await browser.navigator.mediaDevices.getUserMedia({audio:this.messaging.userSetting.getAudioConstraints()});audioTrack=audioStream.getAudioTracks()[0];}catch(_e){this.messaging.notify({message:sprintf(this.env._t(`"%s" requires microphone access`),window.location.host,),type:'warning',});if(this.currentRtcSession){this.currentRtcSession.updateAndBroadcast({isSelfMuted:true});}
return;}
if(!this.currentRtcSession){audioTrack.stop();return;}
audioTrack.addEventListener('ended',async()=>{await this.updateLocalAudioTrack(false);if(!this.exists()){return;}
this.currentRtcSession.updateAndBroadcast({isSelfMuted:true});await this._updateLocalAudioTrackEnabledState();});this.currentRtcSession.updateAndBroadcast({isSelfMuted:false});audioTrack.enabled=!this.currentRtcSession.isMute&&this.currentRtcSession.isTalking;this.update({audioTrack});await this.updateVoiceActivation();if(!this.exists()){return;}
for(const rtcSession of this.connectedRtcSessions){await rtcSession.updateRemoteTrack('audio');}}},updateVideoConfig(constraints){const videoConfig=Object.assign(this.videoConfig,constraints);this.update({videoConfig});this.videoTrack&&this.videoTrack.applyConstraints(this.videoConfig);},async updateVoiceActivation(){if(this.disconnectAudioMonitor){this.disconnectAudioMonitor();}
if(!this.currentRtcSession){return;}
if(this.messaging.userSetting.usePushToTalk||!this.channel||!this.audioTrack){this.currentRtcSession.update({isTalking:false});await this._updateLocalAudioTrackEnabledState();return;}
try{this.update({disconnectAudioMonitor:await monitorAudio(this.audioTrack,{onThreshold:this._onThresholdAudioMonitor,volumeThreshold:this.messaging.userSetting.voiceActivationThreshold,},),});}catch(_e){this.messaging.notify({message:this.env._t("Your browser does not support voice activation"),type:'warning',});this.currentRtcSession.update({isTalking:true});}
await this._updateLocalAudioTrackEnabledState();},_addLogEntry(token,entry,{error,step,state,...data}={}){if(!this.modelManager.isDebug){return;}
if(!(token in this.logs)){this.logs[token]={step:'',state:'',logs:[]};}
const trace=window.Error().stack||'';this.logs[token].logs.push({event:`${window.moment().format('h:mm:ss')}: ${entry}`,error:error&&{name:error.name,message:error.message,stack:error.stack&&error.stack.split('\n'),},trace:trace.split('\n'),...data,});if(step){this.logs[token].step=step;}
if(state){this.logs[token].state=state;}},async _callPeer(rtcSession){this._createPeerConnection(rtcSession);for(const trackKind of this.orderedTransceiverNames){await rtcSession.updateRemoteTrack(trackKind,{initTransceiver:true});}
rtcSession.update({isCurrentUserInitiatorOfConnectionOffer:true});},_callSessions(){if(!this.channel.rtcSessions){return;}
for(const rtcSession of this.channel.rtcSessions){if(rtcSession.rtcPeerConnection&&rtcSession.rtcPeerConnection.peerConnection){continue;}
if(rtcSession===this.currentRtcSession){continue;}
rtcSession.update({connectionState:'Not connected: sending initial RTC offer',});this._addLogEntry(rtcSession.id,'init call',{step:'init call'});this._callPeer(rtcSession);}},_createPeerConnection(rtcSession){const peerConnection=new window.RTCPeerConnection({iceServers:this.iceServers});this._addLogEntry(rtcSession.id,`RTCPeerConnection created`,{step:'peer connection created'});peerConnection.onicecandidate=async(event)=>{if(!event.candidate){return;}
await this.notifyPeers([rtcSession.id],{event:'ice-candidate',payload:{candidate:event.candidate},});};peerConnection.oniceconnectionstatechange=(event)=>{this._onICEConnectionStateChange(peerConnection.iceConnectionState,rtcSession);};peerConnection.onconnectionstatechange=(event)=>{this._onConnectionStateChange(peerConnection.connectionState,rtcSession);};peerConnection.onicecandidateerror=async(error)=>{this._addLogEntry(rtcSession.id,`ice candidate error`);this._recoverConnection(rtcSession,{delay:this.recoveryTimeout,reason:'ice candidate error'});};peerConnection.onnegotiationneeded=async(event)=>{const offer=await peerConnection.createOffer();try{await peerConnection.setLocalDescription(offer);}catch(e){this._addLogEntry(rtcSession.id,`couldn't setLocalDescription`,{error:e});return;}
this._addLogEntry(rtcSession.id,`sending notification: offer`,{step:'sending offer'});await this.notifyPeers([rtcSession.id],{event:'offer',payload:{sdp:peerConnection.localDescription},});};peerConnection.ontrack=({transceiver,track})=>{this._addLogEntry(rtcSession.id,`received ${track.kind} track`);rtcSession.updateStream(track);};const dataChannel=peerConnection.createDataChannel("notifications",{negotiated:true,id:1});dataChannel.onmessage=(event)=>{this.handleNotification(rtcSession.id,event.data);};dataChannel.onopen=async()=>{try{await this.notifyPeers([rtcSession.id],{event:'trackChange',type:'peerToPeer',payload:{type:'audio',state:{isTalking:this.audioTrack&&this.audioTrack.enabled,isSelfMuted:this.currentRtcSession.isSelfMuted,},},});}catch(e){if(!(e instanceof DOMException)||e.name!=="OperationError"){throw e;}
this._addLogEntry(rtcSession.id,`failed to send on datachannel; dataChannelInfo: ${this._serializeRTCDataChannel(dataChannel)}`,{error:e});}};rtcSession.update({rtcPeerConnection:{peerConnection}});this.messaging.models['RtcDataChannel'].insert({dataChannel,rtcSession,});return rtcSession;},async _handleRtcTransactionAnswer(rtcSession,{sdp}){const rtcPeerConnection=rtcSession.rtcPeerConnection;if(!rtcPeerConnection||this.invalidIceConnectionStates.has(rtcPeerConnection.peerConnection.iceConnectionState)||rtcPeerConnection.peerConnection.signalingState==='stable'){return;}
if(rtcPeerConnection.peerConnection.signalingState==='have-remote-offer'){return;}
const rtcSessionDescription=new window.RTCSessionDescription(sdp);try{await rtcPeerConnection.peerConnection.setRemoteDescription(rtcSessionDescription);}catch(e){this._addLogEntry(rtcSession.id,'answer handling: Failed at setting remoteDescription',{error:e});}},async _handleRtcTransactionICECandidate(rtcSession,{candidate}){const rtcPeerConnection=rtcSession.rtcPeerConnection;if(!rtcPeerConnection||this.invalidIceConnectionStates.has(rtcPeerConnection.peerConnection.iceConnectionState)){return;}
const rtcIceCandidate=new window.RTCIceCandidate(candidate);try{await rtcPeerConnection.peerConnection.addIceCandidate(rtcIceCandidate);}catch(error){this._addLogEntry(rtcSession.id,'ICE candidate handling: failed at adding the candidate to the connection',{error});this._recoverConnection(rtcSession,{delay:this.recoveryTimeout,reason:'failed at adding ice candidate'});}},async _handleRtcTransactionOffer(rtcSession,{sdp}){if(!rtcSession.rtcPeerConnection){this._createPeerConnection(rtcSession)}
if(!rtcSession.rtcPeerConnection||this.invalidIceConnectionStates.has(rtcSession.rtcPeerConnection.peerConnection.iceConnectionState)){return;}
if(rtcSession.rtcPeerConnection.peerConnection.signalingState==='have-remote-offer'){return;}
const rtcSessionDescription=new window.RTCSessionDescription(sdp);try{await rtcSession.rtcPeerConnection.peerConnection.setRemoteDescription(rtcSessionDescription);}catch(e){this._addLogEntry(rtcSession.id,'offer handling: failed at setting remoteDescription',{error:e});return;}
await rtcSession.updateRemoteTrack('audio');await rtcSession.updateRemoteTrack('video');let answer;try{answer=await rtcSession.rtcPeerConnection.peerConnection.createAnswer();}catch(e){this._addLogEntry(rtcSession.id,'offer handling: failed at creating answer',{error:e});return;}
try{await rtcSession.rtcPeerConnection.peerConnection.setLocalDescription(answer);}catch(e){this._addLogEntry(rtcSession.id,'offer handling: failed at setting localDescription',{error:e});return;}
this._addLogEntry(rtcSession.id,`sending notification: answer`,{step:'sending answer'});await this.notifyPeers([rtcSession.id],{event:'answer',payload:{sdp:rtcSession.rtcPeerConnection.peerConnection.localDescription},});this._recoverConnection(rtcSession,{delay:this.recoveryTimeout,reason:'standard answer timeout'});},_handleTrackChange(rtcSession,{type,state}){const{isSelfMuted,isTalking,isSendingVideo,isDeaf}=state;if(type==='audio'){if(!rtcSession.audioStream){return;}
rtcSession.update({isSelfMuted,isTalking,isDeaf,});}
if(type==='video'&&isSendingVideo===false){rtcSession.update({videoStream:clear()});}},async _onRecoverConnectionTimeout(rtcSession,reason){rtcSession.update({connectionRecoveryTimeout:clear()});const rtcPeerConnection=rtcSession.rtcPeerConnection;if(!rtcPeerConnection||!this.channel){return;}
if(rtcSession.isCurrentUserInitiatorOfConnectionOffer){return;}
if(rtcPeerConnection.peerConnection.iceConnectionState==='connected'){return;}
this._addLogEntry(rtcSession.id,`calling back to recover ${rtcPeerConnection.peerConnection.iceConnectionState} connection, reason: ${reason}`);if(this.modelManager.isDebug){let stats;try{const peerConnectionStats=await rtcPeerConnection.peerConnection.getStats();stats=peerConnectionStats&&[...peerConnectionStats.values()];}catch(_e){}
this._addLogEntry(rtcSession.id,`calling back to recover "${rtcPeerConnection.peerConnection.iceConnectionState}" connection`,{reason,stats});}
await this.notifyPeers([rtcSession.id],{event:'disconnect',});this._removePeer(rtcSession.id);this._callPeer(rtcSession);},async _pingServer(){const channel=this.channel;const{rtcSessions}=await this.messaging.rpc({route:'/mail/channel/ping',params:{'channel_id':channel.id,'check_rtc_session_ids':channel.rtcSessions.map(rtcSession=>rtcSession.id),'rtc_session_id':this.currentRtcSession.id,},},{shadow:true});if(channel.exists()){channel.updateRtcSessions(rtcSessions);}},_recoverConnection(rtcSession,{delay=0,reason=''}={}){if(rtcSession.connectionRecoveryTimeout){return;}
rtcSession.update({connectionRecoveryTimeout:this.messaging.browser.setTimeout(this._onRecoverConnectionTimeout.bind(this,rtcSession,reason),delay,),});},_removePeer(sessionId){const rtcSession=this.messaging.models['RtcSession'].findFromIdentifyingData({id:sessionId});if(rtcSession){rtcSession.reset();const rtcDataChannel=rtcSession.rtcDataChannel;if(rtcDataChannel){rtcDataChannel.delete();}}
const rtcPeerConnection=rtcSession.rtcPeerConnection;if(rtcPeerConnection){this._removeRemoteTracks(rtcPeerConnection.peerConnection);rtcPeerConnection.delete();}
this.messaging.models['RtcSession'].insert({id:sessionId,isCurrentUserInitiatorOfConnectionOffer:clear(),});this._addLogEntry(sessionId,'peer removed',{step:'peer removed'});},_removeRemoteTracks(peerConnection){const RTCRtpSenders=peerConnection.getSenders();for(const sender of RTCRtpSenders){try{peerConnection.removeTrack(sender);}catch(_e){}}
for(const transceiver of peerConnection.getTransceivers()){try{transceiver.stop();}catch(_e){}}},async _sendPeerNotifications(){if(this.isNotifyPeersRPCInProgress){return;}
this.update({isNotifyPeersRPCInProgress:true});await new Promise(resolve=>setTimeout(resolve,this.peerNotificationWaitDelay));const peerNotifications=this.peerNotificationsToSend;try{await this.messaging.rpc({route:'/mail/rtc/session/notify_call_members',params:{'peer_notifications':peerNotifications.map(peerNotification=>[peerNotification.senderId,peerNotification.targetTokens,JSON.stringify({event:peerNotification.event,channelId:peerNotification.channelId,payload:peerNotification.payload,}),],),},},{shadow:true});if(!this.exists()){return;}
this.update({peerNotificationsToSend:unlink(peerNotifications)});}finally{if(this.exists()){this.update({isNotifyPeersRPCInProgress:false});if(this.peerNotificationsToSend.length>0){this._sendPeerNotifications();}}}},_serializeRTCDataChannel(dataChannel){const toLog=["binaryType","bufferedAmount","bufferedAmountLowThreshold","id","label","maxPacketLifeTime","maxRetransmits","negotiated","ordered","protocol","readyState",];return JSON.stringify(Object.fromEntries(toLog.map(p=>[p,dataChannel[p]])));},async _setDeafState(isDeaf){this.currentRtcSession.updateAndBroadcast({isDeaf});for(const session of this.messaging.models['RtcSession'].all()){if(!session.audioElement){continue;}
session.audioElement.muted=isDeaf;}
await this._updateLocalAudioTrackEnabledState();},async _setMuteState(isSelfMuted){this.currentRtcSession.updateAndBroadcast({isSelfMuted});await this._updateLocalAudioTrackEnabledState();},async _setSoundBroadcast(isTalking){if(!this.currentRtcSession){return;}
if(isTalking===this.currentRtcSession.isTalking){return;}
this.currentRtcSession.update({isTalking});if(!this.currentRtcSession.isMute){await this._updateLocalAudioTrackEnabledState();}},async _toggleVideoBroadcast(trackOptions){if(!this.channel){return;}
await this._toggleLocalVideoTrack(trackOptions);for(const rtcSession of this.connectedRtcSessions){await rtcSession.updateRemoteTrack('video');}
if(!this.currentRtcSession){return;}
this.currentRtcSession.updateAndBroadcast({isScreenSharingOn:!!this.sendDisplay,isCameraOn:!!this.sendUserVideo,});},async _toggleLocalVideoTrack({type,force}){if(type==='user-video'){const sendUserVideo=force!==undefined?force:!this.sendUserVideo;await this._updateLocalVideoTrack(type,sendUserVideo);}
if(type==='display'){const sendDisplay=force!==undefined?force:!this.sendDisplay;await this._updateLocalVideoTrack(type,sendDisplay);}
if(!this.currentRtcSession){return;}
if(!this.videoTrack){this.currentRtcSession.removeVideo();}else{this.currentRtcSession.updateStream(this.videoTrack);}},async _updateLocalAudioTrackEnabledState(){if(!this.audioTrack){return;}
this.audioTrack.enabled=!this.currentRtcSession.isMute&&this.currentRtcSession.isTalking;await this.notifyPeers(this.connectedRtcSessions.map(rtcSession=>rtcSession.id),{event:'trackChange',type:'peerToPeer',payload:{type:'audio',state:{isTalking:this.audioTrack.enabled,isSelfMuted:this.currentRtcSession.isSelfMuted,isDeaf:this.currentRtcSession.isDeaf,},},});},async _updateLocalVideoTrack(type,activateVideo){this.update({sendDisplay:false,sendUserVideo:false,});const stopVideo=()=>{if(this.videoTrack){this.videoTrack.stop();}
this.update({sourceVideoStream:clear(),videoTrack:clear(),});};if(!activateVideo){if(this.blurManager){this.blurManager.update({srcStream:clear(),});}
if(type==='display'){this.messaging.soundEffects.screenSharing.play();}
stopVideo();return;}
let sourceWebMediaStream;try{if(type==='user-video'){if(this.blurManager&&this.blurManager.srcStream){sourceWebMediaStream=this.blurManager.srcStream.webMediaStream;}else{sourceWebMediaStream=await browser.navigator.mediaDevices.getUserMedia({video:this.videoConfig});}}
if(type==='display'){sourceWebMediaStream=await browser.navigator.mediaDevices.getDisplayMedia({video:this.videoConfig});this.messaging.soundEffects.screenSharing.play();}}catch(_e){this.messaging.notify({message:sprintf(this.env._t(`"%s" requires "%s" access`),window.location.host,type==='user-video'?'camera':'display',),type:'warning',});stopVideo();return;}
let videoStream=sourceWebMediaStream;if(this.messaging.userSetting.useBlur&&type==='user-video'){try{this.update({blurManager:{srcStream:{webMediaStream:sourceWebMediaStream,id:sourceWebMediaStream.id}},});const mediaStream=await this.blurManager.stream;videoStream=mediaStream.webMediaStream;}catch(_e){this.messaging.notify({message:sprintf(this.env._t('To %(name)s: %(message)s)'),{name:_e.name,message:_e.message,},),type:'warning',});this.messaging.userSetting.update({useBlur:false});}}
const videoTrack=videoStream?videoStream.getVideoTracks()[0]:undefined;if(videoTrack){videoTrack.addEventListener('ended',async()=>{await this._toggleVideoBroadcast({force:false,type});});}
this.update({sourceVideoStream:{webMediaStream:sourceWebMediaStream,id:sourceWebMediaStream.id},videoTrack,sendUserVideo:type==='user-video'&&!!videoTrack,sendDisplay:type==='display'&&!!videoTrack,});},async _onBeforeUnload(ev){if(this.channel){await this.channel.performRpcLeaveCall();}},async _onConnectionStateChange(state,rtcSession){this._addLogEntry(rtcSession.id,`connection state changed: ${state}`);switch(state){case"closed":this._removePeer(rtcSession.id);break;case"failed":case"disconnected":await this._recoverConnection(rtcSession,{delay:this.recoveryDelay,reason:`connection ${state}`});break;}},async _onICEConnectionStateChange(connectionState,rtcSession){this._addLogEntry(rtcSession.id,`ICE connection state changed: ${connectionState}`,{state:connectionState});if(!rtcSession){return;}
rtcSession.update({connectionState,});switch(connectionState){case"connected":rtcSession.updateConnectionTypes();break;case"closed":this._removePeer(rtcSession.id);break;case"failed":case"disconnected":await this._recoverConnection(rtcSession,{delay:this.recoveryDelay,reason:`ice connection ${connectionState}`});break;}},_onKeyDown(ev){if(!this.channel){return;}
if(!this.messaging.userSetting.usePushToTalk||!this.messaging.userSetting.isPushToTalkKey(ev)){return;}
if(this.currentRtcSession.isMute){return;}
if(this.messaging.userSetting.isRegisteringKey){return;}
this.messaging.browser.clearTimeout(this.pushToTalkTimeout);if(!this.currentRtcSession.isTalking){this.messaging.soundEffects.pushToTalkOn.play();this._setSoundBroadcast(true);}},_onKeyUp(ev){if(!this.channel){return;}
if(!this.messaging.userSetting.usePushToTalk||!this.messaging.userSetting.isPushToTalkKey(ev,{ignoreModifiers:true})){return;}
if(!this.currentRtcSession.isTalking){return;}
if(!this.currentRtcSession.isMute){this.messaging.soundEffects.pushToTalkOff.play();}
this.update({pushToTalkTimeout:this.messaging.browser.setTimeout(this._onPushToTalkTimeout,this.messaging.userSetting.voiceActiveDuration,),});},_onPushToTalkTimeout(){this.update({pushToTalkTimeout:clear()});this._setSoundBroadcast(false);},async _onPingInterval(){if(!this.currentRtcSession||!this.channel){return;}
await this._pingServer();if(!this.currentRtcSession||!this.channel){return;}
this._callSessions();},_onThresholdAudioMonitor(isAboveThreshold){this._setSoundBroadcast(isAboveThreshold);},},fields:{audioTrack:attr(),blurManager:one('BlurManager',{inverse:'rtc',}),channel:one('Thread',{inverse:'rtc',}),connectedRtcSessions:many('RtcSession',{inverse:'rtcAsConnectedSession',}),currentRtcSession:one('RtcSession',{inverse:'rtcAsCurrentSession',}),disconnectAudioMonitor:attr(),iceServers:attr({default:[{urls:['stun:stun1.l.google.com:19302','stun:stun2.l.google.com:19302',],},],}),invalidIceConnectionStates:attr({default:new Set(['disconnected','failed','closed']),readonly:true,}),isNotifyPeersRPCInProgress:attr({default:false,}),logs:attr({default:{},}),orderedTransceiverNames:attr({default:['audio','video'],readonly:true,required:true,}),peerNotificationsToSend:many('RtcPeerNotification',{isCausal:true,}),peerNotificationWaitDelay:attr({default:50,}),pingInterval:attr({compute(){return this.messaging.browser.setInterval(this._onPingInterval,30000);},}),protocolsByCandidateTypes:attr({default:{'host':"HOST",'srflx':"STUN",'prflx':"STUN",'relay':"TURN",},readonly:true,required:true,}),pushToTalkTimeout:attr(),recoveryTimeout:attr({default:15000,}),recoveryDelay:attr({default:3000,}),callSystrayMenu:one('CallSystrayMenu',{default:{},inverse:'rtc',}),sendUserVideo:attr({default:false,}),sendDisplay:attr({default:false,}),sourceVideoStream:one('MediaStream',{isCausal:true,}),videoConfig:attr({default:{aspectRatio:16/9,frameRate:{max:30,},},}),videoTrack:attr(),},});return __exports;});;

/* /mail/static/src/models/rtc_data_channel.js */
odoo.define('@mail/models/rtc_data_channel',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'RtcDataChannel',lifecycleHooks:{_willDelete(){this.dataChannel.close();},},fields:{dataChannel:attr({required:true,readonly:true,}),rtcSession:one('RtcSession',{identifying:true,inverse:'rtcDataChannel',}),},});return __exports;});;

/* /mail/static/src/models/rtc_peer_connection.js */
odoo.define('@mail/models/rtc_peer_connection',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'RtcPeerConnection',lifecycleHooks:{_willDelete(){this.peerConnection.close();}},recordMethods:{getTransceiver(trackKind){const transceivers=this.peerConnection.getTransceivers();return transceivers[this.messaging.rtc.orderedTransceiverNames.indexOf(trackKind)];},_onChangeAcceptsVideoStream(){const transceiver=this.getTransceiver('video');if(!transceiver){return;}
const rtc=this.rtcSession.rtcAsConnectedSession;if(this.acceptsVideoStream){transceiver.direction=rtc.videoTrack?'sendrecv':'recvonly';}else{transceiver.direction=rtc.videoTrack?'sendonly':'inactive';}},},fields:{acceptsVideoStream:attr({compute(){return Boolean(this.rtcSession.callParticipantCards&&this.rtcSession.callParticipantCards.length>0);},}),peerConnection:attr(),rtcSession:one('RtcSession',{identifying:true,inverse:'rtcPeerConnection',}),},onChanges:[{dependencies:['acceptsVideoStream'],methodName:'_onChangeAcceptsVideoStream',},],});return __exports;});;

/* /mail/static/src/models/rtc_peer_notification.js */
odoo.define('@mail/models/rtc_peer_notification',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');registerModel({name:'RtcPeerNotification',fields:{channelId:attr({readonly:true,required:true,}),event:attr({readonly:true,required:true,}),id:attr({identifying:true,}),payload:attr({readonly:true,}),senderId:attr({readonly:true,required:true,}),targetTokens:attr({readonly:true,required:true,}),},});return __exports;});;

/* /mail/static/src/models/rtc_session.js */
odoo.define('@mail/models/rtc_session',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'RtcSession',lifecycleHooks:{_willDelete(){this._removeAudio();this._removeVideo();this.messaging.browser.clearTimeout(this.connectionRecoveryTimeout);},},recordMethods:{onBroadcastTimeout(){this.update({broadcastTimer:clear()});this.messaging.rpc({route:'/mail/rtc/session/update_and_broadcast',params:{session_id:this.id,values:{is_camera_on:this.isCameraOn,is_deaf:this.isDeaf,is_muted:this.isSelfMuted,is_screen_sharing_on:this.isScreenSharingOn,},},},{shadow:true},);},reset(){this.messaging.browser.clearTimeout(this.connectionRecoveryTimeout);this.removeVideo();this._removeAudio();this.update({audioElement:clear(),broadcastTimer:clear(),connectionRecoveryTimeout:clear(),isTalking:clear(),localCandidateType:clear(),remoteCandidateType:clear(),});},removeVideo(){this._removeVideo();this.update({videoStream:clear(),});},setVolume(volume){this.update({localVolume:volume});if(this.audioElement){this.audioElement.volume=this.volume;}
if(this.isOwnSession){return;}
if(this.messaging.isCurrentUserGuest){return;}
if(this.channelMember.persona.volumeSetting){this.channelMember.persona.volumeSetting.update({volume:this.volume});}
this.messaging.userSetting.saveVolumeSetting({partnerId:this.channelMember.persona.partner&&this.channelMember.persona.partner.id,guestId:this.channelMember.persona.guest&&this.channelMember.persona.guest.id,volume:this.volume,});},async toggleDeaf(){if(!this.rtcAsCurrentSession){return;}
if(this.messaging.rtc.currentRtcSession.isDeaf){await this.messaging.rtc.undeafen();}else{await this.messaging.rtc.deafen();}},updateAndBroadcast(data){if(!this.rtcAsCurrentSession){return;}
this.update({...data,broadcastTimer:{doReset:this.broadcastTimer?true:undefined},});},async updateConnectionTypes(){if(!this.rtcPeerConnection){return;}
const stats=await this.rtcPeerConnection.peerConnection.getStats();for(const{localCandidateId,remoteCandidateId,state,type}of stats.values()){if(type==='candidate-pair'&&state==='succeeded'&&localCandidateId){const localCandidate=stats.get(localCandidateId);const remoteCandidate=stats.get(remoteCandidateId);this.update({localCandidateType:localCandidate?localCandidate.candidateType:clear(),remoteCandidateType:remoteCandidate?remoteCandidate.candidateType:clear(),});return;}}
this.update({localCandidateType:clear(),remoteCandidateType:clear(),});},updateStream(track){const stream=new window.MediaStream();stream.addTrack(track);if(track.kind==='audio'){this._setAudio({audioStream:stream,isSelfMuted:false,isTalking:false,});}
if(track.kind==='video'){this.update({videoStream:stream});}},async updateRemoteTrack(trackKind,{initTransceiver}={}){if(!this.rtcAsConnectedSession){return;}
const track=trackKind==='audio'?this.rtcAsConnectedSession.audioTrack:this.rtcAsConnectedSession.videoTrack;let transceiverDirection=track?'sendrecv':'recvonly';if(trackKind==='video'&&!this.rtcPeerConnection.acceptsVideoStream){transceiverDirection=track?'sendonly':'inactive';}
let transceiver;if(initTransceiver){transceiver=this.rtcPeerConnection.peerConnection.addTransceiver(trackKind);}else{transceiver=this.rtcPeerConnection.getTransceiver(trackKind);}
if(track){try{await transceiver.sender.replaceTrack(track);transceiver.direction=transceiverDirection;}catch(_e){}
return;}
try{await transceiver.sender.replaceTrack(null);transceiver.direction=transceiverDirection;}catch(_e){}
if(trackKind==='video'){this.rtcAsConnectedSession.notifyPeers([this.id],{event:'trackChange',type:'peerToPeer',payload:{type:'video',state:{isSendingVideo:false},},});}},_removeAudio(){if(this.audioStream){for(const track of this.audioStream.getTracks()||[]){track.stop();}}
if(this.audioElement){this.audioElement.pause();try{this.audioElement.srcObject=undefined;}catch(_error){}}},_removeVideo(){if(this.videoStream){for(const track of this.videoStream.getTracks()||[]){track.stop();}}},async _setAudio({audioStream,isSelfMuted,isTalking}){const audioElement=this.audioElement||new window.Audio();try{audioElement.srcObject=audioStream;}catch(error){this.update({isAudioInError:true});console.error(error);}
audioElement.load();if(this.channelMember.persona.partner&&this.channelMember.persona.partner.volumeSetting){audioElement.volume=this.channelMember.persona.partner.volumeSetting.volume;}else if(this.channelMember.persona.guest&&this.channelMember.persona.guest.volumeSetting){audioElement.volume=this.channelMember.persona.guest.volumeSetting.volume;}else{audioElement.volume=this.volume;}
audioElement.muted=this.messaging.rtc.currentRtcSession.isDeaf;audioElement.autoplay=true;this.update({audioElement,audioStream,isSelfMuted,isTalking,});try{await audioElement.play();if(!this.exists()){return;}
this.update({isAudioInError:false});}catch(error){if(typeof error==='object'&&error.name==='NotAllowedError'){return;}
if(this.exists()){this.update({isAudioInError:true});}
console.error(error);}},},fields:{audioElement:attr(),audioStream:attr(),broadcastTimer:one('Timer',{inverse:'rtcSessionOwnerAsBroadcast',}),channel:one('Thread',{inverse:'rtcSessions',}),channelMember:one('ChannelMember',{inverse:'rtcSession',}),connectionRecoveryTimeout:attr(),connectionState:attr({default:'Waiting for the peer to send a RTC offer',}),id:attr({identifying:true,}),calledChannels:many('Thread',{inverse:'rtcInvitingSession',}),callParticipantCards:many('CallParticipantCard',{inverse:'rtcSession',}),isAudioInError:attr({default:false,}),isCameraOn:attr({default:false,}),isCurrentUserInitiatorOfConnectionOffer:attr({default:false,}),isDeaf:attr({default:false,}),isSelfMuted:attr({default:false,}),isMute:attr({compute(){return this.isSelfMuted||this.isDeaf;},default:false,}),isOwnSession:attr({compute(){if(!this.messaging||!this.channelMember){return;}
return(this.channelMember.persona.partner&&this.messaging.currentPartner===this.channelMember.persona.partner)||(this.channelMember.persona.guest&&this.messaging.currentGuest===this.channelMember.persona.guest);},}),isScreenSharingOn:attr({default:false,}),isTalking:attr({default:false,}),localCandidateType:attr(),localVolume:attr(),peerToken:attr({compute(){return String(this.id);},}),remoteCandidateType:attr(),rtcAsCurrentSession:one('Rtc',{inverse:'currentRtcSession',}),rtcAsConnectedSession:one('Rtc',{compute(){if(!this.messaging||!this.messaging.rtc){return clear();}
if(this.rtcPeerConnection){return this.messaging.rtc;}
return clear();},inverse:'connectedRtcSessions',}),rtcPeerConnection:one('RtcPeerConnection',{inverse:'rtcSession',}),rtcDataChannel:one('RtcDataChannel',{inverse:'rtcSession',}),videoStream:attr(),volume:attr({compute(){if(this.localVolume!==undefined){return this.localVolume;}
if(this.channelMember&&this.channelMember.persona.volumeSetting){return this.channelMember.persona.volumeSetting.volume;}
if(this.audioElement){return this.audioElement.volume;}},default:0.5,}),},});return __exports;});;

/* /mail/static/src/models/sound_effect.js */
odoo.define('@mail/models/sound_effect',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'SoundEffect',recordMethods:{play({loop=false,volume}={}){if(this.messaging.isInQUnitTest){return;}
if(typeof(Audio)==="undefined"){return;}
if(!this.audio){const audio=new window.Audio();this.update({audio});audio.src=this.source;}
this.audio.pause();this.audio.currentTime=0;this.audio.loop=loop;this.audio.volume=volume!==undefined?volume:this.defaultVolume;this.update({canPlay:true});Promise.resolve(this.audio.play()).catch(e=>this._onAudioPlayError(e));},stop(){this.update({canPlay:false});if(this.audio){this.audio.pause();this.audio.loop=false;this.audio.currentTime=0;}},_onAudioPlayError(error){if(!this.exists()){return;}
if(!this.canPlay){this.stop();return;}
this.update({audioPlayError:error});Promise.resolve(this.audio.play()).catch(()=>{});},_onSourceChanged(){if(!this.audio){return;}
this.audio.src=this.source;this.audio.load();},},fields:{canPlay:attr({default:false,}),audio:attr(),audioPlayError:attr(),defaultVolume:attr({default:1,}),extension:attr({compute(){if(!this.audio){return clear();}
if(this.audioPlayError&&this.audioPlayError.name==='NotSupportedError'){return'.mp3';}
return this.audio.canPlayType('audio/ogg; codecs=vorbis')?'.ogg':'.mp3';},}),filename:attr({identifying:true,}),path:attr({default:'/mail/static/src/audio/',identifying:true,}),source:attr({compute(){if(!this.extension){return clear();}
return`${this.path}${this.filename}${this.extension}`;},}),},onChanges:[{dependencies:['source'],methodName:'_onSourceChanged',},],});return __exports;});;

/* /mail/static/src/models/sound_effects.js */
odoo.define('@mail/models/sound_effects',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'SoundEffects',fields:{channelJoin:one('SoundEffect',{default:{defaultVolume:0.3,filename:'channel_01_in'},isCausal:true,}),channelLeave:one('SoundEffect',{default:{filename:'channel_04_out'},isCausal:true,}),deafen:one('SoundEffect',{default:{defaultVolume:0.15,filename:'deafen_new_01'},isCausal:true,}),incomingCall:one('SoundEffect',{default:{defaultVolume:0.15,filename:'call_02_in_'},isCausal:true,}),memberLeave:one('SoundEffect',{default:{defaultVolume:0.5,filename:'channel_01_out'},isCausal:true,}),mute:one('SoundEffect',{default:{defaultVolume:0.2,filename:'mute_1'},isCausal:true,}),newMessage:one('SoundEffect',{default:{filename:'dm_02'},isCausal:true,}),pushToTalkOn:one('SoundEffect',{default:{defaultVolume:0.05,filename:'ptt_push_1'},isCausal:true,}),pushToTalkOff:one('SoundEffect',{default:{defaultVolume:0.05,filename:'ptt_release_1'},isCausal:true,}),screenSharing:one('SoundEffect',{default:{defaultVolume:0.5,filename:'share_02'},isCausal:true,}),undeafen:one('SoundEffect',{default:{defaultVolume:0.15,filename:'undeafen_new_01'},isCausal:true,}),unmute:one('SoundEffect',{default:{defaultVolume:0.2,filename:'unmute_1'},isCausal:true,}),},});return __exports;});;

/* /mail/static/src/models/suggested_recipient_info.js */
odoo.define('@mail/models/suggested_recipient_info',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'SuggestedRecipientInfo',fields:{composerSuggestedRecipientViews:many('ComposerSuggestedRecipientView',{inverse:'suggestedRecipientInfo',}),dialogText:attr({compute(){return this.env._t("Please complete customer's information");},}),email:attr({readonly:true,}),id:attr({identifying:true,}),isChecked:attr(),isSelected:attr({compute(){return this.partner?this.isChecked:false;},default:true,}),lang:attr(),name:attr({compute(){return this.partner&&this.partner.nameOrDisplayName||this.name;},}),partner:one('Partner'),reason:attr(),thread:one('Thread',{inverse:'suggestedRecipientInfoList',required:true,}),titleText:attr({compute(){return sprintf(this.env._t("Add as recipient and follower (reason: %s)"),this.reason);},}),},});return __exports;});;

/* /mail/static/src/models/thread.js */
odoo.define('@mail/models/thread',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,insert,insertAndUnlink,link,unlink}=require('@mail/model/model_field_command');const{cleanSearchTerm}=require('@mail/utils/utils');const mailUtils=require('@mail/js/utils');const{sprintf}=require('@web/core/utils/strings');const{url}=require('@web/core/utils/urls');const{str_to_datetime}=require('web.time');const getSuggestedRecipientInfoNextTemporaryId=(function(){let tmpId=0;return()=>{tmpId+=1;return tmpId;};})();registerModel({name:'Thread',lifecycleHooks:{_willDelete(){if(this.isTemporary){for(const message of this.messages){message.delete();}}},},modelMethods:{convertData(data){const data2={};if('authorizedGroupFullName'in data){data2.authorizedGroupFullName=data.authorizedGroupFullName;}
if('canPostOnReadonly'in data){data2.canPostOnReadonly=data.canPostOnReadonly;}
if('channel'in data){data2.channel=data.channel;data2.model='mail.channel';}
if('defaultDisplayMode'in data){data2.defaultDisplayMode=data.defaultDisplayMode;}
if('description'in data){data2.description=data.description;}
if('model'in data){data2.model=data.model;}
if('create_uid'in data){data2.creator=insert({id:data.create_uid});}
if('group_based_subscription'in data){data2.group_based_subscription=data.group_based_subscription;}
if('id'in data){data2.id=data.id;}
if('invitedMembers'in data){data2.invitedMembers=data.invitedMembers;}
if('is_minimized'in data&&'state'in data){data2.serverFoldState=data.is_minimized?data.state:'closed';}
if('is_pinned'in data){data2.isServerPinned=data.is_pinned;}
if('last_interest_dt'in data&&data.last_interest_dt){data2.lastInterestDateTime=str_to_datetime(data.last_interest_dt);}
if('last_message'in data&&data.last_message){const messageData=this.messaging.models['Message'].convertData({id:data.last_message.id,model:data2.model,res_id:data2.id,});data2.serverLastMessage=insert(messageData);}
if('last_message_id'in data&&data.last_message_id){const messageData=this.messaging.models['Message'].convertData({id:data.last_message_id,model:data2.model,res_id:data2.id,});data2.serverLastMessage=insert(messageData);}
if('message_needaction_counter'in data){data2.message_needaction_counter=data.message_needaction_counter;}
if('name'in data){data2.name=data.name;}
if('seen_message_id'in data){data2.rawLastSeenByCurrentPartnerMessageId=data.seen_message_id;}
if('uuid'in data){data2.uuid=data.uuid;}
if('rtc_inviting_session'in data){data2.rtcInvitingSession=insert(data.rtc_inviting_session);}
if('rtcSessions'in data){data2.rtcSessions=data.rtcSessions;}
if('seen_partners_info'in data){if(!data.seen_partners_info){data2.partnerSeenInfos=clear();}else{data2.partnerSeenInfos=data.seen_partners_info.map(({fetched_message_id,partner_id,seen_message_id})=>{return{lastFetchedMessage:fetched_message_id?insert({id:fetched_message_id}):clear(),lastSeenMessage:seen_message_id?insert({id:seen_message_id}):clear(),partner:{id:partner_id},};});if(data.id||this.id){const messageIds=data.seen_partners_info.reduce((currentSet,{fetched_message_id,seen_message_id})=>{if(fetched_message_id){currentSet.add(fetched_message_id);}
if(seen_message_id){currentSet.add(seen_message_id);}
return currentSet;},new Set());if(messageIds.size>0){data2.messageSeenIndicators=[...messageIds].map(messageId=>{return{message:{id:messageId},};});}}}}
return data2;},async createGroupChat({default_display_mode,partners_to}){const channelData=await this.messaging.rpc({model:'mail.channel',method:'create_group',kwargs:{default_display_mode,partners_to,},});return this.messaging.models['Thread'].insert(this.messaging.models['Thread'].convertData(channelData));},async fetchSuggestions(searchTerm,{thread}={}){const channelsData=await this.messaging.rpc({model:'mail.channel',method:'get_mention_suggestions',kwargs:{search:searchTerm},},{shadow:true},);this.messaging.models['Thread'].insert(channelsData.map(channelData=>this.messaging.models['Thread'].convertData(channelData)));},getSuggestionSortFunction(searchTerm,{thread}={}){const cleanedSearchTerm=cleanSearchTerm(searchTerm);return(a,b)=>{const isAPublicChannel=a.model==='mail.channel'&&a.channel.channel_type==='channel'&&(!a.authorizedGroupFullName);const isBPublicChannel=b.model==='mail.channel'&&b.channel.channel_type==='channel'&&(!b.authorizedGroupFullName);if(isAPublicChannel&&!isBPublicChannel){return-1;}
if(!isAPublicChannel&&isBPublicChannel){return 1;}
const isMemberOfA=a.channel&&a.channel.memberOfCurrentUser;const isMemberOfB=b.channel&&b.channel.memberOfCurrentUser;if(isMemberOfA&&!isMemberOfB){return-1;}
if(!isMemberOfA&&isMemberOfB){return 1;}
const cleanedAName=cleanSearchTerm(a.name||'');const cleanedBName=cleanSearchTerm(b.name||'');if(cleanedAName.startsWith(cleanedSearchTerm)&&!cleanedBName.startsWith(cleanedSearchTerm)){return-1;}
if(!cleanedAName.startsWith(cleanedSearchTerm)&&cleanedBName.startsWith(cleanedSearchTerm)){return 1;}
if(cleanedAName<cleanedBName){return-1;}
if(cleanedAName>cleanedBName){return 1;}
return a.id-b.id;};},async loadPreviews(threads){const channelIds=threads.reduce((list,thread)=>{if(thread.model==='mail.channel'){return list.concat(thread.id);}
return list;},[]);if(channelIds.length===0){return;}
const channelPreviews=await this.messaging.rpc({model:'mail.channel',method:'channel_fetch_preview',args:[channelIds],},{shadow:true});this.messaging.models['Message'].insert(channelPreviews.filter(p=>p.last_message).map(channelPreview=>this.messaging.models['Message'].convertData(channelPreview.last_message)));},async performRpcChannelFold(channelId,state){return this.messaging.rpc({model:'mail.channel',method:'channel_fold',args:[[channelId]],kwargs:{state,}},{shadow:true});},async performRpcChannelInfo({ids}){const channelInfos=await this.messaging.rpc({model:'mail.channel',method:'channel_info',args:[ids],},{shadow:true});const channels=this.messaging.models['Thread'].insert(channelInfos.map(channelInfo=>this.messaging.models['Thread'].convertData(channelInfo)));return channels;},async performRpcChannelSeen({id,lastMessageId}){return this.messaging.rpc({route:`/mail/channel/set_last_seen_message`,params:{channel_id:id,last_message_id:lastMessageId,},},{shadow:true});},async performRpcChannelPin({channelId,pinned=false}){return this.messaging.rpc({model:'mail.channel',method:'channel_pin',args:[[channelId]],kwargs:{pinned,},},{shadow:true});},async performRpcCreateChannel({name,group_id}){const data=await this.messaging.rpc({model:'mail.channel',method:'channel_create',args:[name,group_id],});return this.messaging.models['Thread'].insert(this.messaging.models['Thread'].convertData(data));},async searchChannelsToOpen({limit,searchTerm}){const domain=[['channel_type','=','channel'],['name','ilike',searchTerm],];const fields=['channel_type','name'];const channelsData=await this.messaging.rpc({model:"mail.channel",method:"search_read",kwargs:{domain,fields,limit,},});return this.insert(channelsData.map(channelData=>this.messaging.models['Thread'].convertData({channel:{channel_type:channelData.channel_type,id:channelData.id,},id:channelData.id,name:channelData.name,})));},searchSuggestions(searchTerm,{thread}={}){let threads;if(thread&&thread.model==='mail.channel'&&(thread.channel.channel_type!=='channel'||(thread.channel.channel_type==='channel'&&thread.authorizedGroupFullName))){threads=[thread];}else{threads=this.messaging.models['Thread'].all();}
const cleanedSearchTerm=cleanSearchTerm(searchTerm);return[threads.filter(thread=>!thread.isTemporary&&thread.channel&&thread.channel.channel_type==='channel'&&thread.displayName&&cleanSearchTerm(thread.displayName).includes(cleanedSearchTerm))];},},recordMethods:{async changeDescription(description){this.update({description});return this.messaging.rpc({model:'mail.channel',method:'channel_change_description',args:[[this.id]],kwargs:{description},});},endCall(){if(this.rtc){this.rtc.reset();this.messaging.soundEffects.channelLeave.play();}
this.update({rtc:clear(),rtcInvitingSession:clear(),});},async fetchData(requestList){if(this.isTemporary){return;}
const requestSet=new Set(requestList);if(!this.hasActivities){requestSet.delete('activities');}
if(requestSet.has('attachments')){this.update({isLoadingAttachments:true});}
if(requestSet.has('messages')){this.cache.loadNewMessages();}
const{activities:activitiesData,attachments:attachmentsData,canPostOnReadonly,followers:followersData,hasWriteAccess,mainAttachment,hasReadAccess,suggestedRecipients:suggestedRecipientsData,}=await this.messaging.rpc({route:'/mail/thread/data',params:{request_list:[...requestSet],thread_id:this.id,thread_model:this.model,},},{shadow:true});if(!this.exists()){return;}
const values={canPostOnReadonly,hasWriteAccess,mainAttachment,hasReadAccess};if(activitiesData){Object.assign(values,{activities:activitiesData.map(activityData=>this.messaging.models['Activity'].convertData(activityData)),});}
if(attachmentsData){Object.assign(values,{areAttachmentsLoaded:true,isLoadingAttachments:false,originThreadAttachments:attachmentsData,});}
if(followersData){Object.assign(values,{followers:followersData.map(followerData=>this.messaging.models['Follower'].convertData(followerData)),});}
if(suggestedRecipientsData){const recipientInfoList=suggestedRecipientsData.map(recipientInfoData=>{const[partner_id,emailInfo,lang,reason]=recipientInfoData;const[name,email]=emailInfo&&mailUtils.parseEmail(emailInfo);return{email,id:getSuggestedRecipientInfoNextTemporaryId(),name,lang,partner:partner_id?insert({id:partner_id}):clear(),reason,};});Object.assign(values,{suggestedRecipientInfoList:recipientInfoList,});}
this.update(values);this.messaging.messagingBus.trigger('o-thread-loaded-data',{thread:this});},async follow(){await this.messaging.rpc({model:this.model,method:'message_subscribe',args:[[this.id]],kwargs:{partner_ids:[this.messaging.currentPartner.id],},});if(!this.exists()){return;}
this.fetchData(['followers','suggestedRecipients']);},async performRpcLeaveCall(){await this.messaging.rpc({route:'/mail/rtc/channel/leave_call',params:{channel_id:this.id},},{shadow:true});},async toggleCall(options){this.update({hasPendingRtcRequest:true});const isActiveCall=!!this.rtc;if(this.messaging.rtc.channel){await this.messaging.rtc.channel.leaveCall();}
if(isActiveCall){this.update({hasPendingRtcRequest:false});return;}
await this._joinCall(options);this.update({hasPendingRtcRequest:false});},async _joinCall({startWithVideo=false,videoType}={}){if(this.model!=='mail.channel'){return;}
if(!this.messaging.device.hasRtcSupport){this.messaging.notify({message:this.env._t("Your browser does not support webRTC."),type:'warning',});return;}
const{rtcSessions,iceServers,sessionId,invitedMembers}=await this.messaging.rpc({route:'/mail/rtc/channel/join_call',params:{channel_id:this.id,check_rtc_session_ids:this.rtcSessions.map(rtcSession=>rtcSession.id),},},{shadow:true});if(!this.exists()){return;}
this.update({rtc:this.messaging.rtc,rtcInvitingSession:clear(),rtcSessions,invitedMembers,});await this.messaging.rtc.initSession({currentSessionId:sessionId,iceServers,startWithAudio:true,startWithVideo,videoType,});if(!this.exists()){return;}
this.messaging.soundEffects.channelJoin.play();},async leaveCall(){await this.performRpcLeaveCall();this.endCall();},updateRtcSessions(rtcSessions){const oldCount=this.rtcSessions.length;this.update({rtcSessions});if(this.rtc){const newCount=this.rtcSessions.length;if(newCount>oldCount){this.messaging.soundEffects.channelJoin.play();}
if(newCount<oldCount){this.messaging.soundEffects.memberLeave.play();}}
this.rtc&&this.rtc.filterCallees(this.rtcSessions);if(this.rtc&&!this.rtc.currentRtcSession){this.endCall();}},getMemberName(persona){return persona.name;},async join(){await this.messaging.rpc({model:'mail.channel',method:'add_members',args:[[this.id]],kwargs:{partner_ids:[this.messaging.currentPartner.id]}});},async leave(){await this.messaging.rpc({model:'mail.channel',method:'action_unfollow',args:[[this.id]],});},async markAsFetched(){await this.messaging.rpc({model:'mail.channel',method:'channel_fetched',args:[[this.id]],},{shadow:true});},async markAsSeen(message){if(this.messaging.currentGuest){return;}
if(this.model!=='mail.channel'){return;}
if(this.pendingSeenMessageId&&message.id<=this.pendingSeenMessageId){return;}
if(this.lastSeenByCurrentPartnerMessageId&&message.id<=this.lastSeenByCurrentPartnerMessageId){return;}
this.update({pendingSeenMessageId:message.id});return this.messaging.models['Thread'].performRpcChannelSeen({id:this.id,lastMessageId:message.id,});},async markNeedactionMessagesAsOriginThreadAsRead(){await this.messaging.models['Message'].markAsRead(this.needactionMessagesAsOriginThread);},async notifyFoldStateToServer(state){if(this.model!=='mail.channel'){return;}
return this.messaging.models['Thread'].performRpcChannelFold(this.id,state);},async notifyPinStateToServer(){if(this.channel.channel_type==='channel'){await this.leave();return;}
await this.messaging.models['Thread'].performRpcChannelPin({channelId:this.id,pinned:this.isPendingPinned,});},async open({expanded=false,focus}={}){const discuss=this.messaging.discuss;if(!this.channel&&!this.mailbox){if(expanded||discuss.discussView){this.messaging.chatWindowManager.closeThread(this);await this.messaging.openDocument({id:this.id,model:this.model,});return;}}
if((!this.messaging.device.isSmall&&(discuss.discussView||expanded))||this.mailbox){return discuss.openThread(this,{focus:focus!==undefined?focus:!this.messaging.device.isMobileDevice,});}
return this.messaging.chatWindowManager.openThread(this,{makeActive:true,});},async openProfile(){return this.messaging.openDocument({id:this.id,model:this.model,});},async pin(){this.update({isPendingPinned:true});if(this.messaging.currentGuest){return;}
await this.notifyPinStateToServer();},refreshCurrentPartnerIsTyping(){this.update({currentPartnerInactiveTypingTimer:{doReset:this.currentPartnerInactiveTypingTimer?true:undefined},});},refreshOtherMemberTypingMember(member){this.messaging.models['OtherMemberLongTypingInThreadTimer'].insert({member,thread:this,timer:{doReset:true,},});},async registerCurrentPartnerIsTyping(){this.update({currentPartnerInactiveTypingTimer:{},currentPartnerLongTypingTimer:{},});const memberOfCurrentUser=this.channel.memberOfCurrentUser;if(!memberOfCurrentUser){return;}
const newOrderedTypingMembers=[...this.orderedTypingMembers.filter(member=>member!==memberOfCurrentUser),memberOfCurrentUser,];this.update({isCurrentPartnerTyping:true,orderedTypingMembers:newOrderedTypingMembers,typingMembers:link(memberOfCurrentUser),});await this.throttleNotifyCurrentPartnerTypingStatus.do();},registerOtherMemberTypingMember(member){this.update({otherMembersLongTypingTimers:insert({member})});const newOrderedTypingMembers=[...this.orderedTypingMembers.filter(currentMember=>currentMember!==member),member,];this.update({orderedTypingMembers:newOrderedTypingMembers,typingMembers:link(member),});},async rename(name){this.update({name});return this.messaging.rpc({model:'mail.channel',method:'channel_rename',args:[[this.id]],kwargs:{name},});},async setCustomName(newName){return this.messaging.rpc({model:'mail.channel',method:'channel_set_custom_name',args:[this.id],kwargs:{name:newName},});},async setMainAttachment(attachment){this.update({mainAttachment:attachment});await this.messaging.rpc({model:'ir.attachment',method:'register_as_main_attachment',args:[[this.mainAttachment.id]],});},async unfollow(){await this.followerOfCurrentPartner.remove();},async unpin(){this.update({isPendingPinned:false});if(this.messaging.currentGuest){return;}
await this.notifyPinStateToServer();},unregisterCurrentPartnerIsTyping({immediateNotify=false}={}){this.update({currentPartnerInactiveTypingTimer:clear(),currentPartnerLongTypingTimer:clear(),});const memberOfCurrentUser=this.channel.memberOfCurrentUser;const newOrderedTypingMembers=this.orderedTypingMembers.filter(member=>member!==memberOfCurrentUser);this.update({isCurrentPartnerTyping:false,orderedTypingMembers:newOrderedTypingMembers,typingMembers:memberOfCurrentUser?unlink(memberOfCurrentUser):undefined,});if(immediateNotify){this.throttleNotifyCurrentPartnerTypingStatus.clear();}
this.throttleNotifyCurrentPartnerTypingStatus.do();},unregisterOtherMemberTypingMember(member){this.update({otherMembersLongTypingTimers:insertAndUnlink({member})});const newOrderedTypingMembers=this.orderedTypingMembers.filter(currentMember=>currentMember!==member);this.update({orderedTypingMembers:newOrderedTypingMembers,typingMembers:unlink(member),});},unsubscribe(){this.leaveCall();this.messaging.chatWindowManager.closeThread(this);this.unpin();},async _notifyCurrentPartnerTypingStatus(){if(this.forceNotifyNextCurrentPartnerTypingStatus||this.isCurrentPartnerTyping!==this.currentPartnerLastNotifiedIsTyping){if(this.model==='mail.channel'){await this.messaging.rpc({route:'/mail/channel/notify_typing',params:{'channel_id':this.id,'is_typing':this.isCurrentPartnerTyping,},},{shadow:true});if(!this.exists()){return;}}
if(this.isCurrentPartnerTyping&&this.currentPartnerLongTypingTimer){this.currentPartnerLongTypingTimer.update({doReset:true});}}
this.update({currentPartnerLastNotifiedIsTyping:this.isCurrentPartnerTyping,forceNotifyNextCurrentPartnerTypingStatus:false,});},_onChangeLastSeenByCurrentPartnerMessageId(){this.messaging.messagingBus.trigger('o-thread-last-seen-by-current-partner-message-id-changed',{thread:this,});},_onIsServerPinnedChanged(){if(this.isServerPinned===this.isPendingPinned){this.update({isPendingPinned:clear()});}},_onServerFoldStateChanged(){if(!this.messaging.chatWindowManager){return;}
if(this.messaging.device.isSmall){return;}
if(this.serverFoldState==='closed'){this.messaging.chatWindowManager.closeThread(this,{notifyServer:false,});}else{this.messaging.chatWindowManager.openThread(this,{isFolded:this.serverFoldState==='folded',notifyServer:false,});}},async onClick(){await this.open();},onCurrentPartnerInactiveTypingTimeout(){this.unregisterCurrentPartnerIsTyping();},async onCurrentPartnerLongTypingTimeout(){this.update({currentPartnerLongTypingTimer:clear(),forceNotifyNextCurrentPartnerTypingStatus:true,isCurrentPartnerTyping:true,});this.throttleNotifyCurrentPartnerTypingStatus.clear();await this.throttleNotifyCurrentPartnerTypingStatus.do();},},fields:{accessRestrictedToGroupText:attr({compute(){if(!this.authorizedGroupFullName){return clear();}
return sprintf(this.env._t('Access restricted to group "%(groupFullName)s"'),{'groupFullName':this.authorizedGroupFullName});},default:'',}),activities:many('Activity',{inverse:'thread',}),activity_state:attr({compute(){if(this.overdueActivities.length>0){return'overdue';}
if(this.todayActivities.length>0){return'today';}
if(this.futureActivities.length>0){return'planned';}
return clear();},}),allAttachments:many('Attachment',{compute(){const allAttachments=[...new Set(this.originThreadAttachments.concat(this.attachments))].sort((a1,a2)=>{if(!a1.isUploading&&a2.isUploading){return 1;}
if(a1.isUploading&&!a2.isUploading){return-1;}
return Math.abs(a2.id)-Math.abs(a1.id);});return allAttachments;},inverse:'allThreads',}),areAttachmentsLoaded:attr({default:false,}),attachments:many('Attachment',{inverse:'threads',}),attachmentsInWebClientView:many('Attachment',{inverse:'threadsAsAttachmentsInWebClientView',readonly:true,sort:[['greater-first','id']],}),authorizedGroupFullName:attr(),cache:one('ThreadCache',{default:{},inverse:'thread',readonly:true,required:true,}),canPostOnReadonly:attr({default:false,}),channel:one('Channel',{inverse:'thread',isCausal:true,readonly:true,}),chatWindow:one('ChatWindow',{inverse:'thread',}),composer:one('Composer',{compute(){if(this.mailbox){return clear();}
return{};},inverse:'thread',}),creator:one('User'),currentPartnerInactiveTypingTimer:one('Timer',{inverse:'threadAsCurrentPartnerInactiveTypingTimerOwner',}),currentPartnerLastNotifiedIsTyping:attr(),currentPartnerLongTypingTimer:one('Timer',{inverse:'threadAsCurrentPartnerLongTypingTimerOwner',}),defaultDisplayMode:attr(),description:attr(),displayName:attr({compute(){if(this.channel){return this.channel.displayName;}
if(this.mailbox){return this.mailbox.name;}
return this.name;},}),fetchMessagesParams:attr({compute(){if(this.model==='mail.channel'){return{'channel_id':this.id};}
if(this.mailbox){return{};}
return{'thread_id':this.id,'thread_model':this.model,};},}),fetchMessagesUrl:attr({compute(){if(this.model==='mail.channel'){return`/mail/channel/messages`;}
if(this.mailbox){return this.mailbox.fetchMessagesUrl;}
return`/mail/thread/messages`;},}),followerOfCurrentPartner:one('Follower',{inverse:'followedThreadAsFollowerOfCurrentPartner',}),followersPartner:many('Partner',{related:'followers.partner',}),followers:many('Follower',{inverse:'followedThread',}),forceNotifyNextCurrentPartnerTypingStatus:attr({default:false,}),futureActivities:many('Activity',{compute(){return this.activities.filter(activity=>activity.state==='planned');},}),group_based_subscription:attr({default:false,}),hasReadAccess:attr(),hasActivities:attr({default:false,}),hasCallFeature:attr({compute(){if(!this.channel){return clear();}
return['channel','chat','group'].includes(this.channel.channel_type);},}),hasInviteFeature:attr({compute(){return this.model==='mail.channel';},}),hasMemberListFeature:attr({compute(){if(!this.channel){return clear();}
return['channel','group'].includes(this.channel.channel_type);},}),hasPendingRtcRequest:attr({default:false,}),hasSeenIndicators:attr({compute(){if(!this.channel){return clear();}
return['chat','livechat'].includes(this.channel.channel_type);},default:false,}),hasWriteAccess:attr({default:false,}),id:attr({identifying:true,}),invitationLink:attr({compute(){if(!this.channel){return clear();}
if(!this.uuid||!this.channel.channel_type||this.channel.channel_type==='chat'){return clear();}
return`${window.location.origin}/chat/${this.id}/${this.uuid}`;},}),invitedMembers:many('ChannelMember'),isChannelDescriptionChangeable:attr({compute(){if(!this.channel){return clear();}
return['channel','group'].includes(this.channel.channel_type);},}),isChannelRenamable:attr({compute(){if(!this.channel){return clear();}
return['chat','channel','group'].includes(this.channel.channel_type);},}),isChatChannel:attr({compute(){if(!this.channel){return clear();}
return['chat','group'].includes(this.channel.channel_type);},default:false,}),isCurrentPartnerFollowing:attr({compute(){return this.followers.some(follower=>follower.partner&&follower.partner===this.messaging.currentPartner);},default:false,}),isCurrentPartnerTyping:attr({default:false,}),isDescriptionEditableByCurrentUser:attr({compute(){return Boolean(this.messaging&&this.messaging.currentUser&&this.messaging.currentUser.isInternalUser&&this.isChannelDescriptionChangeable);},}),isLoadingAttachments:attr({default:false,}),isPendingPinned:attr(),isPinned:attr({compute(){return this.isPendingPinned!==undefined?this.isPendingPinned:this.isServerPinned;},}),isServerPinned:attr({default:false,}),isTemporary:attr({default:false,}),lastInterestDateTime:attr(),lastCurrentPartnerMessageSeenByEveryone:one('Message',{compute(){const otherPartnerSeenInfos=this.partnerSeenInfos.filter(partnerSeenInfo=>partnerSeenInfo.partner!==this.messaging.currentPartner);if(otherPartnerSeenInfos.length===0){return clear();}
const otherPartnersLastSeenMessageIds=otherPartnerSeenInfos.map(partnerSeenInfo=>partnerSeenInfo.lastSeenMessage?partnerSeenInfo.lastSeenMessage.id:0);if(otherPartnersLastSeenMessageIds.length===0){return clear();}
const lastMessageSeenByAllId=Math.min(...otherPartnersLastSeenMessageIds);const currentPartnerOrderedSeenMessages=this.orderedNonTransientMessages.filter(message=>message.author===this.messaging.currentPartner&&message.id<=lastMessageSeenByAllId);if(!currentPartnerOrderedSeenMessages||currentPartnerOrderedSeenMessages.length===0){return clear();}
return currentPartnerOrderedSeenMessages.slice().pop();},}),lastMessage:one('Message',{compute(){const{length:l,[l-1]:lastMessage,}=this.orderedMessages;if(lastMessage){return lastMessage;}
return clear();},}),lastNeedactionMessageAsOriginThread:one('Message',{compute(){const orderedNeedactionMessagesAsOriginThread=this.needactionMessagesAsOriginThread.sort((m1,m2)=>m1.id<m2.id?-1:1);const{length:l,[l-1]:lastNeedactionMessageAsOriginThread,}=orderedNeedactionMessagesAsOriginThread;if(lastNeedactionMessageAsOriginThread){return lastNeedactionMessageAsOriginThread;}
return clear();},}),lastNonTransientMessage:one('Message',{compute(){const{length:l,[l-1]:lastMessage,}=this.orderedNonTransientMessages;if(lastMessage){return lastMessage;}
return clear();},}),lastSeenByCurrentPartnerMessageId:attr({compute(){const firstMessage=this.orderedMessages[0];if(firstMessage&&this.rawLastSeenByCurrentPartnerMessageId&&this.rawLastSeenByCurrentPartnerMessageId<firstMessage.id){return this.rawLastSeenByCurrentPartnerMessageId;}
let lastSeenByCurrentPartnerMessageId=this.rawLastSeenByCurrentPartnerMessageId;for(const message of this.orderedMessages){if(message.id<=this.rawLastSeenByCurrentPartnerMessageId){continue;}
if((message.author&&this.messaging.currentPartner&&message.author===this.messaging.currentPartner)||(message.guestAuthor&&this.messaging.currentGuest&&message.guestAuthor===this.messaging.currentGuest)||message.isTransient){lastSeenByCurrentPartnerMessageId=message.id;continue;}
return lastSeenByCurrentPartnerMessageId;}
return lastSeenByCurrentPartnerMessageId;},default:0,}),mailbox:one('Mailbox',{inverse:'thread',}),mainAttachment:one('Attachment'),mentionedChannelsBackup:many('Thread'),mentionedPartnersBackup:many('Partner'),messageAfterNewMessageSeparator:one('Message',{compute(){if(!this.channel){return clear();}
if(this.channel.localMessageUnreadCounter===0){return clear();}
const index=this.orderedMessages.findIndex(message=>message.id===this.lastSeenByCurrentPartnerMessageId);if(index===-1){return clear();}
const message=this.orderedMessages[index+1];if(!message){return clear();}
return message;},}),message_needaction_counter:attr({default:0,}),messages:many('Message',{inverse:'threads',readonly:true,}),messagesAsOriginThread:many('Message',{inverse:'originThread',isCausal:true,}),messageSeenIndicators:many('MessageSeenIndicator',{inverse:'thread',}),messagingAsAllCurrentClientThreads:one('Messaging',{compute(){if(!this.messaging||!this.channel||!this.channel.memberOfCurrentUser||!this.isServerPinned){return clear();}
return this.messaging;},inverse:'allCurrentClientThreads',}),messagingAsRingingThread:one('Messaging',{compute(){if(this.rtcInvitingSession){return this.messaging;}
return clear();},inverse:'ringingThreads',}),messagingMenuAsPinnedAndUnreadChannel:one('MessagingMenu',{compute(){if(!this.messaging||!this.messaging.messagingMenu){return clear();}
if(this.channel&&this.isPinned&&this.channel.localMessageUnreadCounter>0){return this.messaging.messagingMenu;}
return clear();},inverse:'pinnedAndUnreadChannels',}),model:attr({identifying:true,}),model_name:attr(),moduleIcon:attr(),name:attr(),needactionMessagesAsOriginThread:many('Message',{compute(){return this.messagesAsOriginThread.filter(message=>message.isNeedaction);},}),orderedMessages:many('Message',{compute(){return this.messages.sort((m1,m2)=>m1.id<m2.id?-1:1);},}),orderedNonTransientMessages:many('Message',{compute(){return this.orderedMessages.filter(m=>!m.isTransient);},}),orderedOtherTypingMembers:many('ChannelMember',{compute(){return this.orderedTypingMembers.filter(member=>!member.isMemberOfCurrentUser);},}),orderedTypingMembers:many('ChannelMember'),originThreadAttachments:many('Attachment',{inverse:'originThread',isCausal:true,}),otherMembersLongTypingTimers:many('OtherMemberLongTypingInThreadTimer',{inverse:'thread',}),overdueActivities:many('Activity',{compute(){return this.activities.filter(activity=>activity.state==='overdue');},}),partnerSeenInfos:many('ThreadPartnerSeenInfo',{inverse:'thread',}),pendingSeenMessageId:attr(),rawLastSeenByCurrentPartnerMessageId:attr({default:0,}),rtc:one('Rtc',{inverse:'channel',}),callInviteRequestPopup:one('CallInviteRequestPopup',{compute(){if(this.rtcInvitingSession){return{};}
return clear();},inverse:'thread',}),rtcInvitingSession:one('RtcSession',{inverse:'calledChannels',}),rtcSessions:many('RtcSession',{inverse:'channel',isCausal:true,}),serverFoldState:attr({default:'closed',}),serverLastMessage:one('Message'),suggestable:one('ComposerSuggestable',{default:{},inverse:'thread',readonly:true,required:true,}),suggestedRecipientInfoList:many('SuggestedRecipientInfo',{inverse:'thread',isCausal:true,}),textInputContentBackup:attr({default:"",}),textInputCursorEndBackup:attr({default:0,}),textInputCursorStartBackup:attr({default:0,}),textInputSelectionDirectionBackup:attr({default:"none",}),threadViews:many('ThreadView',{inverse:'thread',}),throttleNotifyCurrentPartnerTypingStatus:one('Throttle',{compute(){return{func:()=>this._notifyCurrentPartnerTypingStatus(),};},inverse:'threadAsThrottleNotifyCurrentPartnerTypingStatus',}),todayActivities:many('Activity',{compute(){return this.activities.filter(activity=>activity.state==='today');},}),threadNeedactionPreviewViews:many('ThreadNeedactionPreviewView',{inverse:'thread',}),typingMembers:many('ChannelMember'),typingStatusText:attr({compute(){if(this.orderedOtherTypingMembers.length===0){return clear();}
if(this.orderedOtherTypingMembers.length===1){return sprintf(this.env._t("%s is typing..."),this.getMemberName(this.orderedOtherTypingMembers[0].persona));}
if(this.orderedOtherTypingMembers.length===2){return sprintf(this.env._t("%s and %s are typing..."),this.getMemberName(this.orderedOtherTypingMembers[0].persona),this.getMemberName(this.orderedOtherTypingMembers[1].persona));}
return sprintf(this.env._t("%s, %s and more are typing..."),this.getMemberName(this.orderedOtherTypingMembers[0].persona),this.getMemberName(this.orderedOtherTypingMembers[1].persona));},default:'',}),url:attr({compute(){const baseHref=url('/web');if(this.model==='mail.channel'){return`${baseHref}#action=mail.action_discuss&active_id=${this.model}_${this.id}`;}
return`${baseHref}#model=${this.model}&id=${this.id}`;},default:'',}),uuid:attr(),videoCount:attr({compute(){return this.rtcSessions.filter(session=>session.videoStream).length;},default:0,}),},onChanges:[{dependencies:['lastSeenByCurrentPartnerMessageId'],methodName:'_onChangeLastSeenByCurrentPartnerMessageId',},{dependencies:['isServerPinned'],methodName:'_onIsServerPinnedChanged',},{dependencies:['serverFoldState'],methodName:'_onServerFoldStateChanged',},],});return __exports;});;

/* /mail/static/src/models/thread_cache.js */
odoo.define('@mail/models/thread_cache',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,link}=require('@mail/model/model_field_command');registerModel({name:'ThreadCache',recordMethods:{async loadMoreMessages(){if(this.isAllHistoryLoaded||this.isLoading){return;}
if(!this.isLoaded){this.update({isCacheRefreshRequested:true});return;}
this.update({isLoadingMore:true});const messageIds=this.fetchedMessages.map(message=>message.id);const limit=30;let fetchedMessages;let success;try{fetchedMessages=await this._loadMessages({limit,maxId:Math.min(...messageIds)});success=true;}catch(_e){success=false;}
if(!this.exists()){return;}
if(success){if(fetchedMessages.length<limit){this.update({isAllHistoryLoaded:true});}
for(const threadView of this.threadViews){threadView.addComponentHint('more-messages-loaded',{fetchedMessages});}}
this.update({isLoadingMore:false});},async loadNewMessages(){if(this.isLoading){return;}
if(!this.isLoaded){this.update({isCacheRefreshRequested:true});return;}
const messageIds=this.fetchedMessages.map(message=>message.id);const fetchedMessages=this._loadMessages({minId:Math.max(...messageIds,0)});if(!fetchedMessages||fetchedMessages.length===0){return;}
for(const threadView of this.threadViews){threadView.addComponentHint('new-messages-loaded',{fetchedMessages});}
return fetchedMessages;},_computeHasToLoadMessages(){const res={hasToLoadMessages:false};if(!this.thread){return res;}
if(this.hasLoadingFailed){return res;}
const wasCacheRefreshRequested=this.isCacheRefreshRequested;if(this.isCacheRefreshRequested){res.isCacheRefreshRequested=false;}
if(this.thread.isTemporary){return res;}
if(!wasCacheRefreshRequested&&this.threadViews.length===0){return res;}
if(this.isLoading){return res;}
if(!wasCacheRefreshRequested&&this.isLoaded){return res;}
if(this.isLoaded){return res;}
res.hasToLoadMessages=true;return res;},async _loadMessages({limit=30,maxId,minId}={}){this.update({isLoading:true});let messages;try{messages=await this.messaging.models['Message'].performRpcMessageFetch(this.thread.fetchMessagesUrl,{...this.thread.fetchMessagesParams,limit,'max_id':maxId,'min_id':minId,});}catch(e){if(this.exists()){this.update({hasLoadingFailed:true,isLoading:false,});}
throw e;}
if(!this.exists()){return;}
this.update({rawFetchedMessages:link(messages),hasLoadingFailed:false,isLoaded:true,isLoading:false,});if(!minId&&messages.length<limit){this.update({isAllHistoryLoaded:true});}
this.messaging.messagingBus.trigger('o-thread-cache-loaded-messages',{fetchedMessages:messages,threadCache:this,});return messages;},_onChangeForHasToLoadMessages(){this.update(this._computeHasToLoadMessages());},async _onHasToLoadMessagesChanged(){if(!this.hasToLoadMessages){return;}
const fetchedMessages=await this._loadMessages();if(!this.exists()){return;}
for(const threadView of this.threadViews){threadView.addComponentHint('messages-loaded',{fetchedMessages});}
this.messaging.messagingBus.trigger('o-thread-loaded-messages',{thread:this.thread});},},fields:{fetchedMessages:many('Message',{compute(){if(!this.thread){return clear();}
return this.rawFetchedMessages.filter(m=>this.thread.messages.includes(m));},}),hasLoadingFailed:attr({default:false,}),hasToLoadMessages:attr(),isAllHistoryLoaded:attr({default:false,}),isLoaded:attr({default:false,}),isLoading:attr({default:false,}),isLoadingMore:attr({default:false,}),isCacheRefreshRequested:attr({default:false,}),lastFetchedMessage:one('Message',{compute(){const{length:l,[l-1]:lastFetchedMessage,}=this.orderedFetchedMessages;if(!lastFetchedMessage){return clear();}
return lastFetchedMessage;},}),lastMessage:one('Message',{compute(){const{length:l,[l-1]:lastMessage,}=this.orderedMessages;if(!lastMessage){return clear();}
return lastMessage;},}),messages:many('Message',{compute(){if(!this.thread){return clear();}
let newerMessages;if(!this.lastFetchedMessage){newerMessages=this.thread.messages;}else{newerMessages=this.thread.messages.filter(message=>message.id>this.lastFetchedMessage.id);}
return[...this.fetchedMessages,...this.temporaryMessages,...newerMessages];},}),orderedFetchedMessages:many('Message',{compute(){return this.fetchedMessages.sort((m1,m2)=>m1.id<m2.id?-1:1);},}),orderedMessages:many('Message',{compute(){return this.messages.sort((m1,m2)=>m1.id<m2.id?-1:1);},}),orderedNonEmptyMessages:many('Message',{compute(){return this.orderedMessages.filter(message=>!message.isEmpty);},}),rawFetchedMessages:many('Message'),temporaryMessages:many('Message'),thread:one('Thread',{identifying:true,inverse:'cache',}),threadViews:many('ThreadView',{inverse:'threadCache',}),},onChanges:[{dependencies:['hasLoadingFailed','isCacheRefreshRequested','isLoaded','isLoading','thread.isTemporary','threadViews'],methodName:'_onChangeForHasToLoadMessages',},{dependencies:['hasToLoadMessages'],methodName:'_onHasToLoadMessagesChanged',},],});return __exports;});;

/* /mail/static/src/models/thread_needaction_preview_view.js */
odoo.define('@mail/models/thread_needaction_preview_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{htmlToTextContentInline}=require('@mail/js/utils');registerModel({name:'ThreadNeedactionPreviewView',recordMethods:{onClick(ev){if(!this.exists()){return;}
const markAsRead=this.markAsReadRef.el;if(markAsRead&&markAsRead.contains(ev.target)){return;}
const messaging=this.messaging;this.thread.open();if(!messaging.device.isSmall){messaging.messagingMenu.close();}},onClickMarkAsRead(ev){this.messaging.models['Message'].markAllAsRead([['model','=',this.thread.model],['res_id','=',this.thread.id],]);},},fields:{inlineLastNeedactionMessageAsOriginThreadBody:attr({compute(){if(!this.thread.lastNeedactionMessageAsOriginThread){return clear();}
return htmlToTextContentInline(this.thread.lastNeedactionMessageAsOriginThread.prettyBody);},default:"",}),isEmpty:attr({compute(){return!this.inlineLastNeedactionMessageAsOriginThreadBody&&!this.lastTrackingValue;},}),lastTrackingValue:one('TrackingValue',{compute(){if(this.thread.lastMessage&&this.thread.lastMessage.lastTrackingValue){return this.thread.lastMessage.lastTrackingValue;}
return clear();},}),markAsReadRef:attr(),messageAuthorPrefixView:one('MessageAuthorPrefixView',{compute(){if(this.thread.lastNeedactionMessageAsOriginThread&&this.thread.lastNeedactionMessageAsOriginThread.author){return{};}
return clear();},inverse:'threadNeedactionPreviewViewOwner',}),notificationListViewOwner:one('NotificationListView',{identifying:true,inverse:'threadNeedactionPreviewViews',}),personaImStatusIconView:one('PersonaImStatusIconView',{compute(){if(this.thread.channel&&this.thread.channel.correspondent&&this.thread.channel.correspondent.isImStatusSet){return{};}
return clear();},inverse:'threadNeedactionPreviewViewOwner',}),thread:one('Thread',{identifying:true,inverse:'threadNeedactionPreviewViews',}),},});return __exports;});;

/* /mail/static/src/models/thread_partner_seen_info.js */
odoo.define('@mail/models/thread_partner_seen_info',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerModel({name:'ThreadPartnerSeenInfo',fields:{lastFetchedMessage:one('Message'),lastSeenMessage:one('Message'),partner:one('Partner',{identifying:true,}),thread:one('Thread',{inverse:'partnerSeenInfos',identifying:true,}),},});return __exports;});;

/* /mail/static/src/models/thread_view.js */
odoo.define('@mail/models/thread_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ThreadView',lifecycleHooks:{_willDelete(){this.messaging.browser.clearTimeout(this.loaderTimeout);},},recordMethods:{addComponentHint(hintType,hintData){const hint={data:hintData,type:hintType};this.update({componentHintList:this.componentHintList.concat([hint]),});},handleVisibleMessage(message){if(!this.lastVisibleMessage||this.lastVisibleMessage.id<message.id){this.update({lastVisibleMessage:message});}},markComponentHintProcessed(hint){this.update({componentHintList:this.componentHintList.filter(h=>h!==hint),});this.messaging.messagingBus.trigger('o-thread-view-hint-processed',{hint,threadViewer:this.threadViewer,});},onClickRetryLoadMessages(){if(!this.exists()){return;}
if(!this.threadCache){return;}
this.threadCache.update({hasLoadingFailed:false});},onFocusin(){if(!this.exists()){return;}
if(this.threadViewer.chatWindow){this.threadViewer.chatWindow.update({isFocused:true});}},startEditingLastMessageFromCurrentUser(){const messageListViewItems=this.messageListView.messageListViewItems;messageListViewItems.reverse();const messageListViewItem=messageListViewItems.find(messageListViewItem=>messageListViewItem.message.isCurrentUserOrGuestAuthor&&messageListViewItem.message.canBeDeleted);if(messageListViewItem){messageListViewItem.messageView.startEditing();}},_computeThreadShouldBeSetAsSeen(){if(!this.thread){return;}
if(!this.thread.lastNonTransientMessage){return;}
if(!this.lastVisibleMessage){return;}
if(this.lastVisibleMessage!==this.lastMessage){return;}
if(!this.isComposerFocused){return;}
if(this.messaging.currentGuest){return;}
this.thread.markAsSeen(this.thread.lastNonTransientMessage);},_onThreadCacheChanged(){this.update({componentHintList:clear()});this.addComponentHint('change-of-thread-cache');if(this.threadCache){this.threadCache.update({isCacheRefreshRequested:true,});}
this.update({lastVisibleMessage:clear()});},_onThreadCacheIsLoadingChanged(){if(this.threadCache&&this.threadCache.isLoading){if(!this.isLoading&&!this.isPreparingLoading){this.update({isPreparingLoading:true});(new Promise(resolve=>{this.update({loaderTimeout:this.messaging.browser.setTimeout(resolve,this.messaging.loadingBaseDelayDuration)});})).then(()=>{if(!this.exists()){return;}
const isLoading=this.threadCache?this.threadCache.isLoading:false;this.update({isLoading,isPreparingLoading:false});});}
return;}
this.messaging.browser.clearTimeout(this.loaderTimeout);this.update({isLoading:false,isPreparingLoading:false});},_shouldMessageBeSquashed(prevMessage,message){if(!this.hasSquashCloseMessages){return false;}
if(message.parentMessage){return false;}
if(!prevMessage){return false;}
if(!prevMessage.date&&message.date){return false;}
if(message.date&&prevMessage.date&&Math.abs(message.date.diff(prevMessage.date))>60000){return false;}
if(prevMessage.dateDay!==message.dateDay){return false;}
if(prevMessage.message_type!=='comment'||message.message_type!=='comment'){return false;}
if(prevMessage.author!==message.author||prevMessage.guestAuthor!==message.guestAuthor){return false;}
if(prevMessage.originThread!==message.originThread){return false;}
if(prevMessage.notifications.length>0||message.notifications.length>0){return false;}
const prevOriginThread=prevMessage.originThread;const originThread=message.originThread;if(prevOriginThread&&originThread&&prevOriginThread.model===originThread.model&&originThread.model!=='mail.channel'&&prevOriginThread.id!==originThread.id){return false;}
return true;},},fields:{callSettingsMenu:one('CallSettingsMenu',{compute(){if(this.isCallSettingsMenuOpen){return{};}
return clear();},inverse:'threadViewOwner',}),channelMemberListView:one('ChannelMemberListView',{compute(){if(this.thread&&this.thread.hasMemberListFeature&&this.hasMemberList&&this.isMemberListOpened){return{};}
return clear();},inverse:'threadViewOwner',}),compact:attr({related:'threadViewer.compact',}),componentHintList:attr({default:[],}),composerView:one('ComposerView',{compute(){if(!this.thread||this.thread.mailbox){return clear();}
if(this.threadViewer&&this.threadViewer.chatter){return clear();}
return{};},inverse:'threadView',}),extraClass:attr({related:'threadViewer.extraClass',}),hasMemberList:attr({related:'threadViewer.hasMemberList',}),hasSquashCloseMessages:attr({compute(){return Boolean(this.threadViewer&&!this.threadViewer.chatter&&this.thread&&!this.thread.mailbox);},}),hasTopbar:attr({related:'threadViewer.hasTopbar',}),isCallSettingsMenuOpen:attr({default:false,}),isComposerFocused:attr({related:'composerView.isFocused',}),isLoading:attr({default:false,}),isMemberListOpened:attr({default:false,}),isPreparingLoading:attr({default:false,}),hasAutoScrollOnMessageReceived:attr({default:true,}),hasComposerThreadName:attr({compute(){if(this.threadViewer.discuss){return this.threadViewer.discuss.activeThread===this.messaging.inbox.thread;}
return clear();},default:false,}),hasComposerThreadTyping:attr({compute(){if(this.threadViewer.threadView_hasComposerThreadTyping!==undefined){return this.threadViewer.threadView_hasComposerThreadTyping;}
return clear();},default:false,}),lastMessage:one('Message',{related:'thread.lastMessage',}),lastMessageListViewItem:one('MessageListViewItem',{compute(){if(!this.messageListView){return clear();}
const{length,[length-1]:messageListViewItem}=this.messageListView.messageListViewItems;return messageListViewItem;},inverse:'threadViewOwnerAsLastMessageListViewItem',}),lastVisibleMessage:one('Message'),loaderTimeout:attr(),messageListView:one('MessageListView',{compute(){return((this.thread&&this.thread.isTemporary)||(this.threadCache&&this.threadCache.isLoaded))?{}:clear();},inverse:'threadViewOwner',}),messages:many('Message',{related:'threadCache.messages',}),order:attr({related:'threadViewer.order',}),replyingToMessageView:one('MessageView'),callView:one('CallView',{compute(){return(this.thread&&this.thread.model==='mail.channel'&&this.thread.rtcSessions.length>0)?{}:clear();},inverse:'threadView',}),thread:one('Thread',{inverse:'threadViews',related:'threadViewer.thread',}),threadCache:one('ThreadCache',{inverse:'threadViews',related:'threadViewer.threadCache',}),threadCacheInitialScrollHeight:attr({compute(){if(!this.threadCache){return clear();}
const threadCacheInitialScrollHeight=this.threadCacheInitialScrollHeights[this.threadCache.localId];if(threadCacheInitialScrollHeight!==undefined){return threadCacheInitialScrollHeight;}
return clear();},}),threadCacheInitialScrollPosition:attr({compute(){if(!this.threadCache){return clear();}
const threadCacheInitialScrollPosition=this.threadCacheInitialScrollPositions[this.threadCache.localId];if(threadCacheInitialScrollPosition!==undefined){return threadCacheInitialScrollPosition;}
return clear();},}),threadCacheInitialScrollHeights:attr({default:{},related:'threadViewer.threadCacheInitialScrollHeights',}),threadCacheInitialScrollPositions:attr({default:{},related:'threadViewer.threadCacheInitialScrollPositions',}),threadViewer:one('ThreadViewer',{identifying:true,inverse:'threadView',}),topbar:one('ThreadViewTopbar',{compute(){return this.hasTopbar?{}:clear();},inverse:'threadView',}),},onChanges:[{dependencies:['threadCache'],methodName:'_onThreadCacheChanged',},{dependencies:['threadCache.isLoading'],methodName:'_onThreadCacheIsLoadingChanged',},{dependencies:['isComposerFocused','lastMessage','thread.lastNonTransientMessage','lastVisibleMessage','threadCache'],methodName:'_computeThreadShouldBeSetAsSeen',},],});return __exports;});;

/* /mail/static/src/models/thread_view_topbar.js */
odoo.define('@mail/models/thread_view_topbar',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ThreadViewTopbar',lifecycleHooks:{_created(){document.addEventListener('click',this._onClickCaptureGlobal,true);},_willDelete(){document.removeEventListener('click',this._onClickCaptureGlobal,true);},},recordMethods:{async onClickCamera(ev){if(this.thread.hasPendingRtcRequest){return;}
await this.thread.toggleCall({startWithVideo:true,});},onClickHideCallSettingsMenu(ev){this.threadView.update({isCallSettingsMenuOpen:false});},onClickHideMemberList(ev){this.threadView.update({isMemberListOpened:false});this.threadView.addComponentHint('member-list-hidden');},onClickInboxMarkAllAsRead(ev){this.messaging.models['Message'].markAllAsRead();},onClickInviteButton(ev){if(this.invitePopoverView){this.update({invitePopoverView:clear()});}else{this.openInvitePopoverView();}},async onClickPhone(ev){if(this.thread.hasPendingRtcRequest){return;}
await this.thread.toggleCall();},onClickShowCallSettingsMenu(ev){this.threadView.update({isCallSettingsMenuOpen:true,isMemberListOpened:false,});},onClickShowMemberList(ev){this.threadView.update({isCallSettingsMenuOpen:false,isMemberListOpened:true,});},onClickTopbarThreadName(ev){if(!this.thread||!this.thread.isChannelRenamable){return;}
if(this.messaging.isCurrentUserGuest){return;}
const selection=window.getSelection();this.update({doFocusOnThreadNameInput:true,doSetSelectionDirectionOnThreadNameInput:selection.anchorOffset<selection.focusOffset?'forward':'backward',doSetSelectionEndOnThreadNameInput:Math.max(selection.focusOffset,selection.anchorOffset),doSetSelectionStartOnThreadNameInput:Math.min(selection.focusOffset,selection.anchorOffset),isEditingThreadName:true,isMouseOverThreadName:false,pendingThreadName:this.thread.displayName,});},onClickTopbarThreadDescription(ev){if(!this.thread||!this.thread.isDescriptionEditableByCurrentUser){return;}
const selection=window.getSelection();this.update({doFocusOnThreadDescriptionInput:true,doSetSelectionDirectionOnThreadDescriptionInput:selection.anchorOffset<selection.focusOffset?'forward':'backward',doSetSelectionEndOnThreadDescriptionInput:Math.max(selection.focusOffset,selection.anchorOffset),doSetSelectionStartOnThreadDescriptionInput:Math.min(selection.focusOffset,selection.anchorOffset),isEditingThreadDescription:true,isMouseOverThreadDescription:false,pendingThreadDescription:this.thread.description||"",});},onClickUnstarAll(ev){this.messaging.models['Message'].unstarAll();},onClickUserName(ev){if(!this.messaging.isCurrentUserGuest){return;}
const selection=window.getSelection();this.update({doFocusOnGuestNameInput:true,doSetSelectionDirectionOnGuestNameInput:selection.anchorOffset<selection.focusOffset?'forward':'backward',doSetSelectionEndOnGuestNameInput:Math.max(selection.focusOffset,selection.anchorOffset),doSetSelectionStartOnGuestNameInput:Math.min(selection.focusOffset,selection.anchorOffset),isEditingGuestName:true,isMouseOverUserName:false,pendingGuestName:this.messaging.currentGuest.name,});},onComponentUpdate(){if(this.doFocusOnGuestNameInput){this.guestNameInputRef.el.focus();this.update({doFocusOnGuestNameInput:clear()});}
if(this.doFocusOnThreadNameInput){this.threadNameInputRef.el.focus();this.update({doFocusOnThreadNameInput:clear()});}
if(this.doFocusOnThreadDescriptionInput){this.threadDescriptionInputRef.el.focus();this.update({doFocusOnThreadDescriptionInput:clear()});}
if(this.doSetSelectionStartOnGuestNameInput!==undefined&&this.doSetSelectionEndOnGuestNameInput!==undefined&&this.doSetSelectionDirectionOnGuestNameInput!==undefined){this.guestNameInputRef.el.setSelectionRange(this.doSetSelectionStartOnGuestNameInput,this.doSetSelectionEndOnGuestNameInput,this.doSetSelectionDirectionOnGuestNameInput);this.update({doSetSelectionDirectionOnGuestNameInput:clear(),doSetSelectionEndOnGuestNameInput:clear(),doSetSelectionStartOnGuestNameInput:clear(),});}
if(this.doSetSelectionStartOnThreadNameInput!==undefined&&this.doSetSelectionEndOnThreadNameInput!==undefined&&this.doSetSelectionDirectionOnThreadNameInput!==undefined){this.threadNameInputRef.el.setSelectionRange(this.doSetSelectionStartOnThreadNameInput,this.doSetSelectionEndOnThreadNameInput,this.doSetSelectionDirectionOnThreadNameInput);this.update({doSetSelectionDirectionOnThreadNameInput:clear(),doSetSelectionEndOnThreadNameInput:clear(),doSetSelectionStartOnThreadNameInput:clear(),});}
if(this.doSetSelectionStartOnThreadDescriptionInput!==undefined&&this.doSetSelectionEndOnThreadDescriptionInput!==undefined&&this.doSetSelectionDirectionOnThreadDescriptionInput!==undefined){this.threadDescriptionInputRef.el.setSelectionRange(this.doSetSelectionStartOnThreadDescriptionInput,this.doSetSelectionEndOnThreadDescriptionInput,this.doSetSelectionDirectionOnThreadDescriptionInput);this.update({doSetSelectionDirectionOnThreadDescriptionInput:clear(),doSetSelectionEndOnThreadDescriptionInput:clear(),doSetSelectionStartOnThreadDescriptionInput:clear(),});}},onInputGuestNameInput(ev){this.update({pendingGuestName:this.guestNameInputRef.el.value});},onInputThreadNameInput(ev){this.update({pendingThreadName:ev.target.value});},onInputThreadDescriptionInput(ev){this.update({pendingThreadDescription:ev.target.value});},onKeyDownGuestNameInput(ev){switch(ev.key){case'Enter':if(this.pendingGuestName.trim()!==''){this._applyGuestRename();}
break;case'Escape':this._resetGuestNameInput();break;}},onKeyDownThreadNameInput(ev){switch(ev.key){case'Enter':this._applyThreadRename();break;case'Escape':this._discardThreadRename();break;}},onKeyDownThreadDescriptionInput(ev){switch(ev.key){case'Enter':this._applyThreadChangeDescription();break;case'Escape':this._discardThreadChangeDescription();break;}},onMouseEnterTopbarThreadName(ev){if(!this.exists()||!this.thread||!this.thread.isChannelRenamable){return;}
this.update({isMouseOverThreadName:true});},onMouseEnterTopbarThreadDescription(ev){if(!this.exists()){return;}
this.update({isMouseOverThreadDescription:true});},onMouseEnterUserName(ev){if(!this.exists()){return;}
this.update({isMouseOverUserName:true});},onMouseLeaveTopbarThreadName(ev){if(!this.exists()){return;}
this.update({isMouseOverThreadName:false});},onMouseLeaveTopbarThreadDescription(ev){if(!this.exists()){return;}
this.update({isMouseOverThreadDescription:false});},onMouseLeaveUserName(ev){if(!this.exists()){return;}
this.update({isMouseOverUserName:false});},openInvitePopoverView(){this.update({invitePopoverView:{}});if(this.messaging.isCurrentUserGuest){return;}
this.invitePopoverView.channelInvitationForm.update({doFocusOnSearchInput:true});this.invitePopoverView.channelInvitationForm.searchPartnersToInvite();},_applyGuestRename(){if(this.hasGuestNameChanged){this.messaging.models['Guest'].performRpcGuestUpdateName({id:this.messaging.currentGuest.id,name:this.pendingGuestName.trim(),});}
this._resetGuestNameInput();},_applyThreadRename(){const newName=this.pendingThreadName;this.update({isEditingThreadName:false,pendingThreadName:clear(),});if(this.thread.channel.channel_type==='chat'&&newName!==this.thread.channel.custom_channel_name){this.thread.setCustomName(newName);}
if(newName&&this.thread.channel.channel_type==='channel'&&newName!==this.thread.name){this.thread.rename(newName);}
if(this.thread.channel.channel_type==='group'&&newName!==this.thread.name){this.thread.rename(newName);}},_applyThreadChangeDescription(){const newDescription=this.pendingThreadDescription||"";this.update({isEditingThreadDescription:false,pendingThreadDescription:clear(),});if(newDescription!==this.thread.description){this.thread.changeDescription(newDescription);}},_discardThreadRename(){this.update({isEditingThreadName:false,pendingThreadName:clear(),});},_discardThreadChangeDescription(){this.update({isEditingThreadDescription:false,pendingThreadDescription:clear(),});},_onClickCaptureGlobal(ev){if(this.isEditingGuestName&&this.guestNameInputRef.el&&!this.guestNameInputRef.el.contains(ev.target)){if(this.pendingGuestName.trim()!==''){this._applyGuestRename();}else{this._resetGuestNameInput();}}
if(this.isEditingThreadName&&this.threadNameInputRef.el&&!this.threadNameInputRef.el.contains(ev.target)){this._applyThreadRename();}
if(this.isEditingThreadDescription&&this.threadDescriptionInputRef.el&&!this.threadDescriptionInputRef.el.contains(ev.target)){this._applyThreadChangeDescription();}},_resetGuestNameInput(){this.update({isEditingGuestName:false,pendingGuestName:clear(),});},},fields:{avatarUrl:attr({compute(){if(this.messaging.isCurrentUserGuest){if(!this.thread){return'';}
return`/mail/channel/${this.thread.id}/guest/${this.messaging.currentGuest.id}/avatar_128?unique=${this.messaging.currentGuest.name}`;}
if(this.messaging.currentPartner){return this.messaging.currentPartner.avatarUrl;}
return clear();},default:'',}),doFocusOnGuestNameInput:attr(),doFocusOnThreadNameInput:attr(),doFocusOnThreadDescriptionInput:attr(),doSetSelectionDirectionOnGuestNameInput:attr(),doSetSelectionDirectionOnThreadNameInput:attr(),doSetSelectionDirectionOnThreadDescriptionInput:attr(),doSetSelectionEndOnGuestNameInput:attr(),doSetSelectionEndOnThreadNameInput:attr(),doSetSelectionEndOnThreadDescriptionInput:attr(),doSetSelectionStartOnGuestNameInput:attr(),doSetSelectionStartOnThreadNameInput:attr(),doSetSelectionStartOnThreadDescriptionInput:attr(),guestNameInputRef:attr(),hasGuestNameChanged:attr({compute(){return Boolean(this.messaging.currentGuest&&this.pendingGuestName!==this.messaging.currentGuest.name);},}),hasDescriptionArea:attr({compute(){return Boolean(this.thread&&(this.thread.description||this.thread.isDescriptionEditableByCurrentUser));},}),isEditingGuestName:attr({default:false,}),inviteButtonRef:attr(),invitePopoverView:one('PopoverView',{inverse:'threadViewTopbarOwnerAsInvite',}),isDescriptionHighlighted:attr({compute(){return Boolean(this.isMouseOverThreadDescription&&this.thread.isDescriptionEditableByCurrentUser);},}),isEditingThreadName:attr({default:false,}),isEditingThreadDescription:attr({default:false,}),isMouseOverThreadName:attr({default:false,}),isMouseOverThreadDescription:attr({default:false,}),isMouseOverUserName:attr({default:false,}),pendingGuestName:attr({default:"",}),pendingThreadName:attr({default:"",}),pendingThreadDescription:attr({default:"",}),thread:one('Thread',{related:'threadView.thread',}),threadNameInputRef:attr(),threadDescriptionInputRef:attr(),threadView:one('ThreadView',{identifying:true,inverse:'topbar',}),},});return __exports;});;

/* /mail/static/src/models/thread_viewer.js */
odoo.define('@mail/models/thread_viewer',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ThreadViewer',identifyingMode:'xor',recordMethods:{saveThreadCacheScrollHeightAsInitial(scrollHeight,threadCache){threadCache=threadCache||this.threadCache;if(!threadCache){return;}
if(this.chatter){return;}
this.update({threadCacheInitialScrollHeights:Object.assign({},this.threadCacheInitialScrollHeights,{[threadCache.localId]:scrollHeight,}),});},saveThreadCacheScrollPositionsAsInitial(scrollTop,threadCache){threadCache=threadCache||this.threadCache;if(!threadCache){return;}
if(this.chatter){return;}
this.update({threadCacheInitialScrollPositions:Object.assign({},this.threadCacheInitialScrollPositions,{[threadCache.localId]:scrollTop,}),});},},fields:{chatter:one('Chatter',{identifying:true,inverse:'threadViewer',}),chatWindow:one('ChatWindow',{identifying:true,inverse:'threadViewer',}),compact:attr({default:false,}),discuss:one('Discuss',{identifying:true,inverse:'threadViewer',}),discussPublicView:one('DiscussPublicView',{identifying:true,inverse:'threadViewer',}),extraClass:attr(),hasMemberList:attr({default:false,}),hasThreadView:attr({default:false,}),hasTopbar:attr({default:false,}),order:attr({default:'asc',}),thread:one('Thread'),threadCache:one('ThreadCache',{related:'thread.cache',}),threadCacheInitialScrollHeights:attr({default:{},}),threadCacheInitialScrollPositions:attr({default:{},}),threadView:one('ThreadView',{compute(){return this.hasThreadView?{}:clear();},inverse:'threadViewer',}),threadView_hasComposerThreadTyping:attr({compute(){if(this.discussPublicView){return true;}
if(this.discuss){return true;}
return clear();},}),},});return __exports;});;

/* /mail/static/src/models/throttle.js */
odoo.define('@mail/models/throttle',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'Throttle',identifyingMode:'xor',recordMethods:{clear(){this.update({cooldownTimer:clear(),shouldInvoke:false,});},async do(){if(!this.cooldownTimer){this.func();this.update({cooldownTimer:{}});}else{this.update({shouldInvoke:true});}},onTimeout(){if(this.shouldInvoke){this.func();}
this.update({cooldownTimer:clear(),shouldInvoke:false,});},},fields:{cooldownTimer:one('Timer',{inverse:'throttleOwner',}),duration:attr({compute(){if(this.emojiGridViewAsOnScroll){return 150;}
if(this.threadAsThrottleNotifyCurrentPartnerTypingStatus){return 2.5*1000;}
if(this.messagingAsUpdateImStatusRegister){return 10*1000;}
return clear();},required:true,}),emojiGridViewAsOnScroll:one('EmojiGridView',{identifying:true,inverse:'onScrollThrottle',}),func:attr(),messagingAsUpdateImStatusRegister:one('Messaging',{identifying:true,inverse:'updateImStatusRegisterThrottle',}),shouldInvoke:attr({default:false,}),threadAsThrottleNotifyCurrentPartnerTypingStatus:one('Thread',{identifying:true,inverse:'throttleNotifyCurrentPartnerTypingStatus',}),},});return __exports;});;

/* /mail/static/src/models/timer.js */
odoo.define('@mail/models/timer',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerPatch({name:'Timer',recordMethods:{onTimeout(){if(this.blurManagerOwnerAsFrameRequest){this.blurManagerOwnerAsFrameRequest.onRequestFrameTimerTimeout();return;}
if(this.callMainViewAsShowOverlay){this.callMainViewAsShowOverlay.onShowOverlayTimeout();return;}
if(this.chatterOwnerAsAttachmentsLoader){this.chatterOwnerAsAttachmentsLoader.onAttachmentsLoadingTimeout();return;}
if(this.messageViewOwnerAsHighlight){this.messageViewOwnerAsHighlight.onHighlightTimerTimeout();return;}
if(this.rtcSessionOwnerAsBroadcast){this.rtcSessionOwnerAsBroadcast.onBroadcastTimeout();return;}
if(this.threadAsCurrentPartnerInactiveTypingTimerOwner){this.threadAsCurrentPartnerInactiveTypingTimerOwner.onCurrentPartnerInactiveTypingTimeout();return;}
if(this.threadAsCurrentPartnerLongTypingTimerOwner){this.threadAsCurrentPartnerLongTypingTimerOwner.onCurrentPartnerLongTypingTimeout();return;}
if(this.otherMemberLongTypingInThreadTimerOwner){this.otherMemberLongTypingInThreadTimerOwner.onOtherMemberLongTypingTimeout();return;}
if(this.throttleOwner){this.throttleOwner.onTimeout();return;}
return this._super();},},fields:{blurManagerOwnerAsFrameRequest:one('BlurManager',{identifying:true,inverse:'frameRequestTimer',}),callMainViewAsShowOverlay:one('CallMainView',{identifying:true,inverse:'showOverlayTimer',}),chatterOwnerAsAttachmentsLoader:one('Chatter',{identifying:true,inverse:'attachmentsLoaderTimer',}),duration:{compute(){if(this.blurManagerOwnerAsFrameRequest){return Math.floor(1000/30);}
if(this.callMainViewAsShowOverlay){return 3*1000;}
if(this.chatterOwnerAsAttachmentsLoader){return this.messaging.loadingBaseDelayDuration;}
if(this.messageViewOwnerAsHighlight){return 2*1000;}
if(this.rtcSessionOwnerAsBroadcast){return 3*1000;}
if(this.threadAsCurrentPartnerInactiveTypingTimerOwner){return 5*1000;}
if(this.threadAsCurrentPartnerLongTypingTimerOwner){return 50*1000;}
if(this.otherMemberLongTypingInThreadTimerOwner){return 60*1000;}
if(this.throttleOwner){return this.throttleOwner.duration;}
return this._super();},},messageViewOwnerAsHighlight:one('MessageView',{identifying:true,inverse:'highlightTimer',}),otherMemberLongTypingInThreadTimerOwner:one('OtherMemberLongTypingInThreadTimer',{identifying:true,inverse:'timer',isCausal:true,}),rtcSessionOwnerAsBroadcast:one('RtcSession',{identifying:true,inverse:'broadcastTimer',}),threadAsCurrentPartnerInactiveTypingTimerOwner:one('Thread',{identifying:true,inverse:'currentPartnerInactiveTypingTimer',}),threadAsCurrentPartnerLongTypingTimerOwner:one('Thread',{identifying:true,inverse:'currentPartnerLongTypingTimer',}),throttleOwner:one('Throttle',{identifying:true,inverse:'cooldownTimer',}),},});return __exports;});;

/* /mail/static/src/models/tracking_value.js */
odoo.define('@mail/models/tracking_value',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{sprintf}=require('@web/core/utils/strings');registerModel({name:'TrackingValue',fields:{changedField:attr({required:true,}),formattedChangedField:attr({compute(){return sprintf(this.env._t("%s"),this.changedField);},}),id:attr({identifying:true,}),messageOwner:one('Message',{inverse:'trackingValues',readonly:true,required:true,}),newValue:one('TrackingValueItem',{inverse:'trackingValueAsNewValue',}),oldValue:one('TrackingValueItem',{inverse:'trackingValueAsOldValue',}),},});return __exports;});;

/* /mail/static/src/models/tracking_value_item.js */
odoo.define('@mail/models/tracking_value_item',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{format}=require('web.field_utils');const{session}=require('@web/session');const{registry}=require('@web/core/registry');const{deserializeDateTime}=require('@web/core/l10n/dates');const formatters=registry.category("formatters");registerModel({name:'TrackingValueItem',identifyingMode:'xor',fields:{currencyId:attr(),fieldType:attr(),formattedValue:attr({compute(){switch(this.fieldType){case'boolean':return this.value?this.env._t("Yes"):this.env._t("No");case'char':case'many2one':case'selection':return format.char(this.value);case'date':if(this.value){return format.date(moment.utc(this.value));}
return format.date(this.value);case'datetime':{const value=this.value?deserializeDateTime(this.value):this.value;return formatters.get("datetime")(value);}
case'float':return format.float(this.value);case'integer':return format.integer(this.value);case'text':return format.text(this.value);case'monetary':return format.monetary(this.value,undefined,{currency:this.currencyId?session.currencies[this.currencyId]:undefined,forceString:true,});default:return this.value;}},}),formattedValueOrNone:attr({compute(){return this.formattedValue||this.env._t("None");},}),trackingValueAsNewValue:one('TrackingValue',{identifying:true,inverse:'newValue',}),trackingValueAsOldValue:one('TrackingValue',{identifying:true,inverse:'oldValue',}),value:attr(),},});return __exports;});;

/* /mail/static/src/models/use_drag_visible_drop_zone.js */
odoo.define('@mail/models/use_drag_visible_drop_zone',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{decrement,increment}=require('@mail/model/model_field_command');registerModel({name:'UseDragVisibleDropZone',identifyingMode:'xor',lifecycleHooks:{_created(){document.addEventListener('dragenter',this._onDragenterListener,true);document.addEventListener('dragleave',this._onDragleaveListener,true);document.addEventListener('drop',this._onDropListener);window.addEventListener('dragover',ev=>ev.preventDefault());window.addEventListener('drop',ev=>ev.preventDefault());},_willDelete(){document.removeEventListener('dragenter',this._onDragenterListener,true);document.removeEventListener('dragleave',this._onDragleaveListener,true);document.removeEventListener('drop',this._onDropListener);window.removeEventListener('dragover',ev=>ev.preventDefault());window.removeEventListener('drop',ev=>ev.preventDefault());},},recordMethods:{_onDragenterListener(ev){if(this.dragCount===0&&ev.dataTransfer&&ev.dataTransfer.types.includes('Files')){this.update({isVisible:true});}
this.update({dragCount:increment()});},_onDragleaveListener(ev){this.update({dragCount:decrement()});if(this.dragCount===0){this.update({isVisible:false});}},_onDropListener(ev){this.update({dragCount:0,isVisible:false,});},},fields:{chatterOwner:one('Chatter',{identifying:true,inverse:'useDragVisibleDropZone',}),composerViewOwner:one('ComposerView',{identifying:true,inverse:'useDragVisibleDropZone',}),dragCount:attr({default:0}),isVisible:attr({default:false,}),},});return __exports;});;

/* /mail/static/src/models/user.js */
odoo.define('@mail/models/user',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,many,one}=require('@mail/model/model_field');const{clear,insert}=require('@mail/model/model_field_command');registerModel({name:'User',modelMethods:{convertData(data){const data2={};if('id'in data){data2.id=data.id;}
if('partner_id'in data){if(!data.partner_id){data2.partner=clear();}else{const partnerNameGet=data['partner_id'];const partnerData={display_name:partnerNameGet[1],id:partnerNameGet[0],};data2.partner=insert(partnerData);}}
return data2;},async performRpcRead({context,fields,ids}){const usersData=await this.messaging.rpc({model:'res.users',method:'read',args:[ids,fields],kwargs:{context,},},{shadow:true});return this.messaging.models['User'].insert(usersData.map(userData=>this.messaging.models['User'].convertData(userData)));},},recordMethods:{async fetchPartner(){return this.messaging.models['User'].performRpcRead({ids:[this.id],fields:['partner_id'],context:{active_test:false},});},async getChat(){if(!this.partner){await this.fetchPartner();if(!this.exists()){return;}}
if(!this.partner){this.messaging.notify({message:this.env._t("You can only chat with existing users."),type:'warning',});return;}
let chat=this.partner.dmChatWithCurrentPartner;if(!chat||!chat.thread.isPinned){chat=await this.messaging.models['Channel'].performRpcCreateChat({partnerIds:[this.partner.id],});if(!this.exists()){return;}}
if(!chat){this.messaging.notify({message:this.env._t("An unexpected error occurred during the creation of the chat."),type:'warning',});return;}
return chat;},async openChat(options){const chat=await this.getChat();if(!this.exists()||!chat){return;}
await chat.thread.open(options);if(!this.exists()||!chat.exists()){return;}},async openProfile(){if(!this.partner){await this.fetchPartner();if(!this.exists()){return;}}
if(!this.partner){this.messaging.notify({message:this.env._t("You can only open the profile of existing users."),type:'warning',});return;}
return this.partner.openProfile();},},fields:{activitiesAsAssignee:many('Activity',{inverse:'assignee',}),id:attr({identifying:true,}),isInternalUser:attr(),display_name:attr(),displayName:attr({compute(){if(this.display_name){return this.display_name;}
if(this.partner&&this.partner.displayName){return this.partner.displayName;}
return clear();},default:"",}),model:attr({default:'res.user',}),nameOrDisplayName:attr({compute(){return this.partner&&this.partner.nameOrDisplayName||this.display_name;},}),partner:one('Partner',{inverse:'user',}),res_users_settings_id:one('res.users.settings',{inverse:'user_id',}),},});return __exports;});;

/* /mail/static/src/models/user_notification_manager.js */
odoo.define('@mail/models/user_notification_manager',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{clear}=require("@mail/model/model_field_command");const{url}=require('@web/core/utils/urls');registerModel({name:'UserNotificationManager',recordMethods:{sendNotification({message,title,type}){if(!this.canSendNativeNotification){this._sendOdooNotification(message,{title,type});return;}
if(!this.messaging.env.services['multi_tab'].isOnMainTab()){return;}
try{this._sendNativeNotification(title,message);}catch(error){if(error.message.includes('ServiceWorkerRegistration')){this._sendOdooNotification(message,{title,type});}else{throw error;}}},_onClickNotification({target:notification}){window.focus();notification.close();},_sendNativeNotification(title,message){const notification=new Notification(_.unescape(title),{body:_.unescape(message),icon:this.icon,});notification.addEventListener('click',this._onClickNotification);},async _sendOdooNotification(message,options){this.messaging.env.services['notification'].add(message,options);if(this.canPlayAudio&&this.messaging.env.services['multi_tab'].isOnMainTab()){try{await this.audio.play();}catch{}}},},fields:{audio:attr({compute(){if(!this.canPlayAudio){return clear();}
const audioElement=new Audio();audioElement.src=audioElement.canPlayType("audio/ogg; codecs=vorbis")?url('/mail/static/src/audio/ting.ogg'):url('/mail/static/src/audio/ting.mp3');return audioElement;},}),canPlayAudio:attr({default:typeof(Audio)!=='undefined',}),canSendNativeNotification:attr({compute(){return Boolean(this.messaging.browser.Notification&&this.messaging.browser.Notification.permission==='granted');},}),icon:attr({default:'/mail/static/src/img/odoobot_transparent.png',}),},});return __exports;});;

/* /mail/static/src/models/user_setting.js */
odoo.define('@mail/models/user_setting',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'UserSetting',lifecycleHooks:{_created(){this._loadLocalSettings();browser.addEventListener('storage',this._onStorage);},_willDelete(){browser.removeEventListener('storage',this._onStorage);for(const timeout of Object.values(this.volumeSettingsTimeouts)){this.messaging.browser.clearTimeout(timeout);}
this.messaging.browser.clearTimeout(this.globalSettingsTimeout);},},recordMethods:{getAudioConstraints(){const constraints={echoCancellation:true,noiseSuppression:true,};if(this.audioInputDeviceId){constraints.deviceId=this.audioInputDeviceId;}
return constraints;},isPushToTalkKey(ev,{ignoreModifiers=false}={}){if(!this.usePushToTalk||!this.pushToTalkKey){return false;}
const{key,shiftKey,ctrlKey,altKey}=this.pushToTalkKeyFormat();if(ignoreModifiers){return ev.key===key;}
return(ev.key===key&&ev.shiftKey===shiftKey&&ev.ctrlKey===ctrlKey&&ev.altKey===altKey);},pushToTalkKeyFormat(){if(!this.pushToTalkKey){return;}
const[shiftKey,ctrlKey,altKey,key]=this.pushToTalkKey.split('.');return{shiftKey:!!shiftKey,ctrlKey:!!ctrlKey,altKey:!!altKey,key:key||false,};},pushToTalkKeyToString(){const{shiftKey,ctrlKey,altKey,key}=this.pushToTalkKeyFormat();const f=(k,name)=>k?name:'';return`${f(ctrlKey, 'Ctrl + ')}${f(altKey, 'Alt + ')}${f(shiftKey, 'Shift + ')}${key}`;},async setAudioInputDevice(audioInputDeviceId){this.update({audioInputDeviceId,});browser.localStorage.setItem('mail_user_setting_audio_input_device_id',audioInputDeviceId);await this.messaging.rtc.updateLocalAudioTrack(true);},setDelayValue(value){this.update({localVoiceActiveDuration:parseInt(value,10)});if(this.messaging.currentUser){this._saveSettings();}},async setPushToTalkKey(ev){const pushToTalkKey=`${ev.shiftKey || ''}.${ev.ctrlKey || ev.metaKey || ''}.${ev.altKey || ''}.${ev.key}`;this.update({localPushToTalkKey:pushToTalkKey});if(this.messaging.currentUser){this._saveSettings();}},async saveVolumeSetting({guestId,partnerId,volume}){if(this.volumeSettingsTimeouts[partnerId]){this.messaging.browser.clearTimeout(this.volumeSettingsTimeouts[partnerId]);}
this.update({volumeSettingsTimeouts:{...this.volumeSettingsTimeouts,[partnerId]:this.messaging.browser.setTimeout(this._onSaveVolumeSettingTimeout.bind(this,{guestId,partnerId,volume}),5000,),},});},async setThresholdValue(voiceActivationThreshold){this.update({voiceActivationThreshold});browser.localStorage.setItem('mail_user_setting_voice_threshold',voiceActivationThreshold.toString());await this.messaging.rtc.updateVoiceActivation();},async togglePushToTalk(){this.update({localUsePushToTalk:!this.usePushToTalk});await this.messaging.rtc.updateVoiceActivation();if(this.messaging.currentUser){this._saveSettings();}},toggleWindow(){this.update({isOpen:!this.isOpen});},_loadLocalSettings(){const voiceActivationThresholdString=browser.localStorage.getItem("mail_user_setting_voice_threshold");const audioInputDeviceId=browser.localStorage.getItem("mail_user_setting_audio_input_device_id");this.update({voiceActivationThreshold:voiceActivationThresholdString?parseFloat(voiceActivationThresholdString):undefined,audioInputDeviceId:audioInputDeviceId||undefined,});},_onChangeUseBlur(){if(!this.messaging.rtc.sendUserVideo){return;}
this.messaging.rtc.toggleUserVideo({force:true});},async _onStorage(ev){if(ev.key==='mail_user_setting_voice_threshold'){this.update({voiceActivationThreshold:ev.newValue});await this.messaging.rtc.updateVoiceActivation();}},async _onSaveGlobalSettingsTimeout(){if(!this.exists()){return;}
this.update({globalSettingsTimeout:clear()});await this.messaging.rpc({model:'res.users.settings',method:'set_res_users_settings',args:[[this.messaging.currentUser.res_users_settings_id.id],{push_to_talk_key:this.pushToTalkKey,use_push_to_talk:this.usePushToTalk,voice_active_duration:this.voiceActiveDuration,}],},{shadow:true},);},async _onSaveVolumeSettingTimeout({guestId,partnerId,volume}){if(!this.exists()){return;}
const newVolumeSettingsTimeouts={...this.volumeSettingsTimeouts};delete newVolumeSettingsTimeouts[partnerId];this.update({volumeSettingsTimeouts:newVolumeSettingsTimeouts});await this.messaging.rpc({model:'res.users.settings',method:'set_volume_setting',args:[[this.messaging.currentUser.res_users_settings_id.id],partnerId,volume,],kwargs:{guest_id:guestId,},},{shadow:true},);},async _saveSettings(){this.messaging.browser.clearTimeout(this.globalSettingsTimeout);this.update({globalSettingsTimeout:this.messaging.browser.setTimeout(this._onSaveGlobalSettingsTimeout,2000,),});},},fields:{audioInputDeviceId:attr({default:'',}),backgroundBlurAmount:attr({default:10,}),edgeBlurAmount:attr({default:10,}),globalSettingsTimeout:attr(),isRegisteringKey:attr({default:false,}),localPushToTalkKey:attr(),localUsePushToTalk:attr(),localVoiceActiveDuration:attr(),pushToTalkKey:attr({compute(){if(this.localPushToTalkKey!==undefined){return this.localPushToTalkKey;}
if(!this.messaging.currentUser){return clear();}
if(!this.messaging.currentUser.res_users_settings_id){return clear();}
return this.messaging.currentUser.res_users_settings_id.push_to_talk_key;},default:'',}),useBlur:attr({default:false,}),usePushToTalk:attr({compute(){if(this.localUsePushToTalk!==undefined){return this.localUsePushToTalk;}
if(!this.messaging.currentUser){return clear();}
if(!this.messaging.currentUser.res_users_settings_id){return clear();}
return this.messaging.currentUser.res_users_settings_id.use_push_to_talk;},default:false,}),voiceActivationThreshold:attr({default:0.05,}),voiceActiveDuration:attr({compute(){if(this.localVoiceActiveDuration!==undefined){return this.localVoiceActiveDuration;}
if(!this.messaging.currentUser){return clear();}
if(!this.messaging.currentUser.res_users_settings_id){return clear();}
return this.messaging.currentUser.res_users_settings_id.voice_active_duration;},default:0,}),volumeSettingsTimeouts:attr({default:{},}),},onChanges:[{dependencies:['useBlur'],methodName:'_onChangeUseBlur',},],});return __exports;});;

/* /mail/static/src/models/web_client_view_attachment_view.js */
odoo.define('@mail/models/web_client_view_attachment_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{hidePDFJSButtons}=require('@web/legacy/js/libs/pdfjs');registerModel({name:'WebClientViewAttachmentView',recordMethods:{onClickNext(ev){ev.preventDefault();const index=this.thread.attachmentsInWebClientView.findIndex(attachment=>attachment===this.thread.mainAttachment);this.setMainAttachmentFromIndex(index===this.thread.attachmentsInWebClientView.length-1?0:index+1);},onClickPrevious(ev){ev.preventDefault();const index=this.thread.attachmentsInWebClientView.findIndex(attachment=>attachment===this.thread.mainAttachment);this.setMainAttachmentFromIndex(index===0?this.thread.attachmentsInWebClientView.length-1:index-1);},onComponentUpdate(){if(this.iframeViewerPdfRef.el){hidePDFJSButtons(this.iframeViewerPdfRef.el);}
this.component.trigger('preview_attachment_validation');},async setMainAttachmentFromIndex(index){await this.thread.setMainAttachment(this.thread.attachmentsInWebClientView[index]);},_onChangeThreadAttachmentsInWebClientView(){if(this.thread.areAttachmentsLoaded&&!this.thread.isLoadingAttachments&&!this.thread.mainAttachment&&this.thread.attachmentsInWebClientView.length>0){this.setMainAttachmentFromIndex(0);}},},fields:{component:attr(),id:attr({identifying:true,}),iframeViewerPdfRef:attr(),thread:one('Thread',{required:true,}),},onChanges:[{dependencies:['thread.areAttachmentsLoaded','thread.attachmentsInWebClientView','thread.isLoadingAttachments'],methodName:'_onChangeThreadAttachmentsInWebClientView',},],});return __exports;});;

/* /mail/static/src/models/welcome_view.js */
odoo.define('@mail/models/welcome_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const getNextGuestNameInputId=(function(){let id=0;return()=>++id;})();registerModel({name:'WelcomeView',recordMethods:{async joinChannel(){if(this.hasGuestNameChanged){await this.messaging.models['Guest'].performRpcGuestUpdateName({id:this.messaging.currentGuest.id,name:this.pendingGuestName.trim(),});}
if(this.discussPublicView.shouldAddGuestAsMemberOnJoin){await this.performRpcAddGuestAsMember();}
this.discussPublicView.switchToThreadView();},onClickJoinButton(ev){this.joinChannel();},onComponentUpdate(){this._handleFocus();},onInputGuestNameInput(ev){this._updateGuestNameWithInputValue();},onKeydownGuestNameInput(ev){if(ev.key==='Enter'){this.joinChannel();}},async performRpcAddGuestAsMember(){await this.messaging.rpc({route:'/mail/channel/add_guest_as_member',params:{channel_id:this.channel.id,channel_uuid:this.channel.uuid,},});},_handleFocus(){if(this.isDoFocusGuestNameInput){if(!this.guestNameInputRef.el){return;}
this.update({isDoFocusGuestNameInput:false});this.guestNameInputRef.el.focus();const{length}=(this.pendingGuestName||'');this.guestNameInputRef.el.setSelectionRange(length,length);}},_updateGuestNameWithInputValue(){this.update({pendingGuestName:this.guestNameInputRef.el.value});},},fields:{channel:one('Thread',{readonly:true,required:true,}),discussPublicView:one('DiscussPublicView',{identifying:true,inverse:'welcomeView',}),guestNameInputRef:attr(),guestNameInputUniqueId:attr({compute(){return`o_WelcomeView_guestNameInput_${getNextGuestNameInputId()}`;},}),hasGuestNameChanged:attr({compute(){return Boolean(this.messaging.currentGuest&&this.originalGuestName!==this.pendingGuestName);},}),isDoFocusGuestNameInput:attr(),isJoinButtonDisabled:attr({compute(){return Boolean(this.messaging.currentGuest&&this.pendingGuestName.trim()==='');},}),callDemoView:one('CallDemoView',{compute(){return(this.channel&&this.channel.defaultDisplayMode==='video_full_screen')?{}:clear();},inverse:'welcomeView',}),originalGuestName:attr(),pendingGuestName:attr({default:'',}),},});return __exports;});;

/* /mail/static/lib/selfie_segmentation/selfie_segmentation.js */
(function(){'use strict';var D;function aa(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}var ba="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};function ca(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");}var H=ca(this);function J(a,b){if(b)a:{var c=H;a=a.split(".");for(var d=0;d<a.length-1;d++){var f=a[d];if(!(f in c))break a;c=c[f]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&ba(c,a,{configurable:!0,writable:!0,value:b})}}
J("Symbol",function(a){function b(h){if(this instanceof b)throw new TypeError("Symbol is not a constructor");return new c(d+(h||"")+"_"+f++,h)}function c(h,e){this.g=h;ba(this,"description",{configurable:!0,writable:!0,value:e})}if(a)return a;c.prototype.toString=function(){return this.g};var d="jscomp_symbol_"+(1E9*Math.random()>>>0)+"_",f=0;return b});J("Symbol.iterator",function(a){if(a)return a;a=Symbol("Symbol.iterator");for(var b="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),c=0;c<b.length;c++){var d=H[b[c]];"function"===typeof d&&"function"!=typeof d.prototype[a]&&ba(d.prototype,a,{configurable:!0,writable:!0,value:function(){return da(aa(this))}})}return a});function da(a){a={next:a};a[Symbol.iterator]=function(){return this};return a}
function M(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:aa(a)}}function ea(a){if(!(a instanceof Array)){a=M(a);for(var b,c=[];!(b=a.next()).done;)c.push(b.value);a=c}return a}var fa="function"==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},ha;if("function"==typeof Object.setPrototypeOf)ha=Object.setPrototypeOf;else{var ia;a:{var ja={a:!0},ka={};try{ka.__proto__=ja;ia=ka.a;break a}catch(a){}ia=!1}ha=ia?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}var la=ha;function ma(a,b){a.prototype=fa(b.prototype);a.prototype.constructor=a;if(la)la(a,b);else for(var c in b)if("prototype"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.ea=b.prototype}function na(){this.l=!1;this.i=null;this.h=void 0;this.g=1;this.s=this.m=0;this.j=null}function oa(a){if(a.l)throw new TypeError("Generator is already running");a.l=!0}na.prototype.o=function(a){this.h=a};function pa(a,b){a.j={U:b,V:!0};a.g=a.m||a.s}na.prototype.return=function(a){this.j={return:a};this.g=this.s};function N(a,b,c){a.g=c;return{value:b}}function qa(a){this.g=new na;this.h=a}function ra(a,b){oa(a.g);var c=a.g.i;if(c)return sa(a,"return"in c?c["return"]:function(d){return{value:d,done:!0}},b,a.g.return);a.g.return(b);return ta(a)}
function sa(a,b,c,d){try{var f=b.call(a.g.i,c);if(!(f instanceof Object))throw new TypeError("Iterator result "+f+" is not an object");if(!f.done)return a.g.l=!1,f;var h=f.value}catch(e){return a.g.i=null,pa(a.g,e),ta(a)}a.g.i=null;d.call(a.g,h);return ta(a)}function ta(a){for(;a.g.g;)try{var b=a.h(a.g);if(b)return a.g.l=!1,{value:b.value,done:!1}}catch(c){a.g.h=void 0,pa(a.g,c)}a.g.l=!1;if(a.g.j){b=a.g.j;a.g.j=null;if(b.V)throw b.U;return{value:b.return,done:!0}}return{value:void 0,done:!0}}
function ua(a){this.next=function(b){oa(a.g);a.g.i?b=sa(a,a.g.i.next,b,a.g.o):(a.g.o(b),b=ta(a));return b};this.throw=function(b){oa(a.g);a.g.i?b=sa(a,a.g.i["throw"],b,a.g.o):(pa(a.g,b),b=ta(a));return b};this.return=function(b){return ra(a,b)};this[Symbol.iterator]=function(){return this}}function O(a,b){b=new ua(new qa(b));la&&a.prototype&&la(b,a.prototype);return b}
function va(a,b){a instanceof String&&(a+="");var c=0,d=!1,f={next:function(){if(!d&&c<a.length){var h=c++;return{value:b(h,a[h]),done:!1}}d=!0;return{done:!0,value:void 0}}};f[Symbol.iterator]=function(){return f};return f}var wa="function"==typeof Object.assign?Object.assign:function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var f in d)Object.prototype.hasOwnProperty.call(d,f)&&(a[f]=d[f])}return a};J("Object.assign",function(a){return a||wa});J("Promise",function(a){function b(e){this.h=0;this.i=void 0;this.g=[];this.o=!1;var g=this.j();try{e(g.resolve,g.reject)}catch(k){g.reject(k)}}function c(){this.g=null}function d(e){return e instanceof b?e:new b(function(g){g(e)})}if(a)return a;c.prototype.h=function(e){if(null==this.g){this.g=[];var g=this;this.i(function(){g.l()})}this.g.push(e)};var f=H.setTimeout;c.prototype.i=function(e){f(e,0)};c.prototype.l=function(){for(;this.g&&this.g.length;){var e=this.g;this.g=[];for(var g=0;g<e.length;++g){var k=e[g];e[g]=null;try{k()}catch(l){this.j(l)}}}this.g=null};c.prototype.j=function(e){this.i(function(){throw e;})};b.prototype.j=function(){function e(l){return function(q){k||(k=!0,l.call(g,q))}}var g=this,k=!1;return{resolve:e(this.C),reject:e(this.l)}};b.prototype.C=function(e){if(e===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof b)this.F(e);else{a:switch(typeof e){case"object":var g=null!=e;break a;case"function":g=!0;break a;default:g=!1}g?this.u(e):this.m(e)}};b.prototype.u=function(e){var g=void 0;try{g=e.then}catch(k){this.l(k);return}"function"==typeof g?this.G(g,e):this.m(e)};b.prototype.l=function(e){this.s(2,e)};b.prototype.m=function(e){this.s(1,e)};b.prototype.s=function(e,g){if(0!=this.h)throw Error("Cannot settle("+e+", "+g+"): Promise already settled in state"+this.h);this.h=e;this.i=g;2===this.h&&this.D();this.A()};b.prototype.D=function(){var e=this;f(function(){if(e.B()){var g=H.console;"undefined"!==typeof g&&g.error(e.i)}},1)};b.prototype.B=function(){if(this.o)return!1;var e=H.CustomEvent,g=H.Event,k=H.dispatchEvent;if("undefined"===typeof k)return!0;"function"===typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"===typeof g?e=new g("unhandledrejection",{cancelable:!0}):(e=H.document.createEvent("CustomEvent"),e.initCustomEvent("unhandledrejection",!1,!0,e));e.promise=this;e.reason=this.i;return k(e)};b.prototype.A=function(){if(null!=this.g){for(var e=0;e<this.g.length;++e)h.h(this.g[e]);this.g=null}};var h=new c;b.prototype.F=function(e){var g=this.j();e.J(g.resolve,g.reject)};b.prototype.G=function(e,g){var k=this.j();try{e.call(g,k.resolve,k.reject)}catch(l){k.reject(l)}};b.prototype.then=function(e,g){function k(w,t){return"function"==typeof w?function(y){try{l(w(y))}catch(m){q(m)}}:t}var l,q,v=new b(function(w,t){l=w;q=t});this.J(k(e,l),k(g,q));return v};b.prototype.catch=function(e){return this.then(void 0,e)};b.prototype.J=function(e,g){function k(){switch(l.h){case 1:e(l.i);break;case 2:g(l.i);break;default:throw Error("Unexpected state: "+
l.h);}}var l=this;null==this.g?h.h(k):this.g.push(k);this.o=!0};b.resolve=d;b.reject=function(e){return new b(function(g,k){k(e)})};b.race=function(e){return new b(function(g,k){for(var l=M(e),q=l.next();!q.done;q=l.next())d(q.value).J(g,k)})};b.all=function(e){var g=M(e),k=g.next();return k.done?d([]):new b(function(l,q){function v(y){return function(m){w[y]=m;t--;0==t&&l(w)}}var w=[],t=0;do w.push(void 0),t++,d(k.value).J(v(w.length-1),q),k=g.next();while(!k.done)})};return b});J("Object.is",function(a){return a?a:function(b,c){return b===c?0!==b||1/b===1/c:b!==b&&c!==c}});J("Array.prototype.includes",function(a){return a?a:function(b,c){var d=this;d instanceof String&&(d=String(d));var f=d.length;c=c||0;for(0>c&&(c=Math.max(c+f,0));c<f;c++){var h=d[c];if(h===b||Object.is(h,b))return!0}return!1}});J("String.prototype.includes",function(a){return a?a:function(b,c){if(null==this)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(b instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return-1!==this.indexOf(b,c||0)}});J("Array.prototype.keys",function(a){return a?a:function(){return va(this,function(b){return b})}});var xa=this||self;function ya(a,b){a=a.split(".");var c=xa;a[0]in c||"undefined"==typeof c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)a.length||void 0===b?c[d]&&c[d]!==Object.prototype[d]?c=c[d]:c=c[d]={}:c[d]=b};function za(a,b){b=String.fromCharCode.apply(null,b);return null==a?b:a+b}var Aa,Ba="undefined"!==typeof TextDecoder,Ca,Da="undefined"!==typeof TextEncoder;function Ea(a){if(Da)a=(Ca||(Ca=new TextEncoder)).encode(a);else{var b=void 0;b=void 0===b?!1:b;for(var c=0,d=new Uint8Array(3*a.length),f=0;f<a.length;f++){var h=a.charCodeAt(f);if(128>h)d[c++]=h;else{if(2048>h)d[c++]=h>>6|192;else{if(55296<=h&&57343>=h){if(56319>=h&&f<a.length){var e=a.charCodeAt(++f);if(56320<=e&&57343>=e){h=1024*(h-55296)+e-56320+65536;d[c++]=h>>18|240;d[c++]=h>>12&63|128;d[c++]=h>>6&63|128;d[c++]=h&63|128;continue}else f--}if(b)throw Error("Found an unpaired surrogate");h=65533}d[c++]=h>>12|224;d[c++]=h>>6&63|128}d[c++]=h&63|128}}a=d.subarray(0,c)}return a};var Fa={},Ga=null;function Ha(a,b){void 0===b&&(b=0);Ja();b=Fa[b];for(var c=Array(Math.floor(a.length/3)),d=b[64]||"",f=0,h=0;f<a.length-2;f+=3){var e=a[f],g=a[f+1],k=a[f+2],l=b[e>>2];e=b[(e&3)<<4|g>>4];g=b[(g&15)<<2|k>>6];k=b[k&63];c[h++]=l+e+g+k}l=0;k=d;switch(a.length-f){case 2:l=a[f+1],k=b[(l&15)<<2]||d;case 1:a=a[f],c[h]=b[a>>2]+b[(a&3)<<4|l>>4]+k+d}return c.join("")}
function Ka(a){var b=a.length,c=3*b/4;c%3?c=Math.floor(c):-1!="=.".indexOf(a[b-1])&&(c=-1!="=.".indexOf(a[b-2])?c-2:c-1);var d=new Uint8Array(c),f=0;La(a,function(h){d[f++]=h});return d.subarray(0,f)}
function La(a,b){function c(k){for(;d<a.length;){var l=a.charAt(d++),q=Ga[l];if(null!=q)return q;if(!/^[\s\xa0]*$/.test(l))throw Error("Unknown base64 encoding at char: "+l);}return k}Ja();for(var d=0;;){var f=c(-1),h=c(0),e=c(64),g=c(64);if(64===g&&-1===f)break;b(f<<2|h>>4);64!=e&&(b(h<<4&240|e>>2),64!=g&&b(e<<6&192|g))}}
function Ja(){if(!Ga){Ga={};for(var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),b=["+/=","+/","-_=","-_.","-_"],c=0;5>c;c++){var d=a.concat(b[c].split(""));Fa[c]=d;for(var f=0;f<d.length;f++){var h=d[f];void 0===Ga[h]&&(Ga[h]=f)}}}};var Ma="function"===typeof Uint8Array.prototype.slice,Na;function Oa(a,b,c){return b===c?Na||(Na=new Uint8Array(0)):Ma?a.slice(b,c):new Uint8Array(a.subarray(b,c))}var P=0,Q=0;function Pa(a,b){b=void 0===b?{}:b;b=void 0===b.v?!1:b.v;this.h=null;this.g=this.i=this.j=0;this.l=!1;this.v=b;a&&Qa(this,a)}function Qa(a,b){b=b.constructor===Uint8Array?b:b.constructor===ArrayBuffer?new Uint8Array(b):b.constructor===Array?new Uint8Array(b):b.constructor===String?Ka(b):b instanceof Uint8Array?new Uint8Array(b.buffer,b.byteOffset,b.byteLength):new Uint8Array(0);a.h=b;a.j=0;a.i=a.h.length;a.g=a.j}Pa.prototype.reset=function(){this.g=this.j};function Ra(a){var b=a.h,c=b[a.g],d=c&127;if(128>c)return a.g+=1,d;c=b[a.g+1];d|=(c&127)<<7;if(128>c)return a.g+=2,d;c=b[a.g+2];d|=(c&127)<<14;if(128>c)return a.g+=3,d;c=b[a.g+3];d|=(c&127)<<21;if(128>c)return a.g+=4,d;c=b[a.g+4];d|=(c&15)<<28;if(128>c)return a.g+=5,d>>>0;a.g+=5;128<=b[a.g++]&&128<=b[a.g++]&&128<=b[a.g++]&&128<=b[a.g++]&&a.g++;return d}
function R(a){var b=a.h[a.g];var c=a.h[a.g+1];var d=a.h[a.g+2],f=a.h[a.g+3];a.g+=4;c=(b<<0|c<<8|d<<16|f<<24)>>>0;a=2*(c>>31)+1;b=c>>>23&255;c&=8388607;return 255==b?c?NaN:Infinity*a:0==b?a*Math.pow(2,-149)*c:a*Math.pow(2,b-150)*(c+Math.pow(2,23))}var Sa=[];function Ta(){this.g=new Uint8Array(64);this.h=0}Ta.prototype.push=function(a){if(!(this.h+1<this.g.length)){var b=this.g;this.g=new Uint8Array(Math.ceil(1+2*this.g.length));this.g.set(b)}this.g[this.h++]=a};Ta.prototype.length=function(){return this.h};Ta.prototype.end=function(){var a=this.g,b=this.h;this.h=0;return Oa(a,0,b)};function S(a,b){for(;127<b;)a.push(b&127|128),b>>>=7;a.push(b)};function Ua(a){var b={},c=void 0===b.N?!1:b.N;this.o={v:void 0===b.v?!1:b.v};this.N=c;b=this.o;Sa.length?(c=Sa.pop(),b&&(c.v=b.v),a&&Qa(c,a),a=c):a=new Pa(a,b);this.g=a;this.m=this.g.g;this.h=this.i=this.l=-1;this.j=!1}Ua.prototype.reset=function(){this.g.reset();this.h=this.l=-1};function Va(a){var b=a.g;(b=b.g==b.i)||(b=a.j)||(b=a.g,b=b.l||0>b.g||b.g>b.i);if(b)return!1;a.m=a.g.g;b=Ra(a.g);var c=b&7;if(0!=c&&5!=c&&1!=c&&2!=c&&3!=c&&4!=c)return a.j=!0,!1;a.i=b;a.l=b>>>3;a.h=c;return!0}
function Wa(a){switch(a.h){case 0:if(0!=a.h)Wa(a);else{for(a=a.g;a.h[a.g]&128;)a.g++;a.g++}break;case 1:1!=a.h?Wa(a):(a=a.g,a.g+=8);break;case 2:if(2!=a.h)Wa(a);else{var b=Ra(a.g);a=a.g;a.g+=b}break;case 5:5!=a.h?Wa(a):(a=a.g,a.g+=4);break;case 3:b=a.l;do{if(!Va(a)){a.j=!0;break}if(4==a.h){a.l!=b&&(a.j=!0);break}Wa(a)}while(1);break;default:a.j=!0}}function Xa(a,b,c){var d=a.g.i,f=Ra(a.g);f=a.g.g+f;a.g.i=f;c(b,a);a.g.g=f;a.g.i=d;return b}
function Ya(a){var b=Ra(a.g);a=a.g;var c=a.g;a.g+=b;a=a.h;var d;if(Ba)(d=Aa)||(d=Aa=new TextDecoder("utf-8",{fatal:!1})),d=d.decode(a.subarray(c,c+b));else{b=c+b;for(var f=[],h=null,e,g,k;c<b;)e=a[c++],128>e?f.push(e):224>e?c>=b?f.push(65533):(g=a[c++],194>e||128!==(g&192)?(c--,f.push(65533)):f.push((e&31)<<6|g&63)):240>e?c>=b-1?f.push(65533):(g=a[c++],128!==(g&192)||224===e&&160>g||237===e&&160<=g||128!==((d=a[c++])&192)?(c--,f.push(65533)):f.push((e&15)<<12|(g&63)<<6|d&63)):244>=e?c>=b-2?f.push(65533):(g=a[c++],128!==(g&192)||0!==(e<<28)+(g-144)>>30||128!==((d=a[c++])&192)||128!==((k=a[c++])&192)?(c--,f.push(65533)):(e=(e&7)<<18|(g&63)<<12|(d&63)<<6|k&63,e-=65536,f.push((e>>10&1023)+55296,(e&1023)+56320))):f.push(65533),8192<=f.length&&(h=za(h,f),f.length=0);d=za(h,f)}return d};function Za(){this.h=[];this.i=0;this.g=new Ta}function $a(a,b){0!==b.length&&(a.h.push(b),a.i+=b.length)}function ab(a){var b=a.i+a.g.length();if(0===b)return new Uint8Array(0);b=new Uint8Array(b);for(var c=a.h,d=c.length,f=0,h=0;h<d;h++){var e=c[h];0!==e.length&&(b.set(e,f),f+=e.length)}c=a.g;d=c.h;0!==d&&(b.set(c.g.subarray(0,d),f),c.h=0);a.h=[b];return b}
function T(a,b,c){if(null!=c){S(a.g,8*b+5);a=a.g;var d=c;d=(c=0>d?1:0)?-d:d;0===d?0<1/d?P=Q=0:(Q=0,P=2147483648):isNaN(d)?(Q=0,P=2147483647):3.4028234663852886E38<d?(Q=0,P=(c<<31|2139095040)>>>0):1.1754943508222875E-38>d?(d=Math.round(d/Math.pow(2,-149)),Q=0,P=(c<<31|d)>>>0):(b=Math.floor(Math.log(d)/Math.LN2),d*=Math.pow(2,-b),d=Math.round(8388608*d)&8388607,Q=0,P=(c<<31|b+127<<23|d)>>>0);c=P;a.push(c>>>0&255);a.push(c>>>8&255);a.push(c>>>16&255);a.push(c>>>24&255)}};var bb="function"===typeof Uint8Array;function cb(a,b,c){if(null!=a)return"object"===typeof a?bb&&a instanceof Uint8Array?c(a):db(a,b,c):b(a)}function db(a,b,c){if(Array.isArray(a)){for(var d=Array(a.length),f=0;f<a.length;f++)d[f]=cb(a[f],b,c);Array.isArray(a)&&a.W&&eb(d);return d}d={};for(f in a)d[f]=cb(a[f],b,c);return d}function fb(a){return"number"===typeof a?isFinite(a)?a:String(a):a}var gb={W:{value:!0,configurable:!0}};function eb(a){Array.isArray(a)&&!Object.isFrozen(a)&&Object.defineProperties(a,gb);return a};var hb;function U(a,b,c){var d=hb;hb=null;a||(a=d);d=this.constructor.ca;a||(a=d?[d]:[]);this.j=d?0:-1;this.i=null;this.g=a;a:{d=this.g.length;a=d-1;if(d&&(d=this.g[a],null!==d&&"object"===typeof d&&d.constructor===Object)){this.l=a-this.j;this.h=d;break a}void 0!==b&&-1<b?(this.l=Math.max(b,a+1-this.j),this.h=null):this.l=Number.MAX_VALUE}if(c)for(b=0;b<c.length;b++)a=c[b],a<this.l?(a+=this.j,(d=this.g[a])?eb(d):this.g[a]=ib):(jb(this),(d=this.h[a])?eb(d):this.h[a]=ib)}var ib=Object.freeze(eb([]));function jb(a){var b=a.l+a.j;a.g[b]||(a.h=a.g[b]={})}function V(a,b,c){return-1===b?null:(void 0===c?0:c)||b>=a.l?a.h?a.h[b]:void 0:a.g[b+a.j]}function kb(a){var b=void 0===b?!1:b;var c=V(a,1,b);null==c&&(c=ib);c===ib&&(c=eb([]),W(a,1,c,b));return c}function X(a,b,c){a=V(a,b);a=null==a?a:+a;return null==a?void 0===c?0:c:a}function W(a,b,c,d){(void 0===d?0:d)||b>=a.l?(jb(a),a.h[b]=c):a.g[b+a.j]=c}
function lb(a,b){a.i||(a.i={});var c=a.i[1];if(!c){var d=kb(a);c=[];for(var f=0;f<d.length;f++)c[f]=new b(d[f]);a.i[1]=c}return c}function mb(a,b,c,d){var f=lb(a,c);b=b?b:new c;a=kb(a);void 0!=d?(f.splice(d,0,b),a.splice(d,0,nb(b,!1))):(f.push(b),a.push(nb(b,!1)))}U.prototype.toJSON=function(){var a=nb(this,!1);return db(a,fb,Ha)};function nb(a,b){if(a.i)for(var c in a.i){var d=a.i[c];if(Array.isArray(d))for(var f=0;f<d.length;f++)d[f]&&nb(d[f],b);else d&&nb(d,b)}return a.g}
U.prototype.toString=function(){return nb(this,!1).toString()};function ob(a,b){a=V(a,b);return null==a?0:a}function pb(a,b){a=V(a,b);return null==a?"":a};function qb(a,b){if(a=a.m){$a(b,b.g.end());for(var c=0;c<a.length;c++)$a(b,a[c])}}function rb(a,b){if(4==b.h)return!1;var c=b.m;Wa(b);b.N||(b=Oa(b.g.h,c,b.g.g),(c=a.m)?c.push(b):a.m=[b]);return!0};function Y(a,b){var c=void 0;return new(c||(c=Promise))(function(d,f){function h(k){try{g(b.next(k))}catch(l){f(l)}}function e(k){try{g(b["throw"](k))}catch(l){f(l)}}function g(k){k.done?d(k.value):(new c(function(l){l(k.value)})).then(h,e)}g((b=b.apply(a,void 0)).next())})};function sb(a){U.call(this,a)}ma(sb,U);function tb(a,b){for(;Va(b);)switch(b.i){case 8:var c=Ra(b.g);W(a,1,c);break;case 21:c=R(b.g);W(a,2,c);break;case 26:c=Ya(b);W(a,3,c);break;case 34:c=Ya(b);W(a,4,c);break;default:if(!rb(a,b))return a}return a};function ub(a){U.call(this,a,-1,vb)}ma(ub,U);ub.prototype.addClassification=function(a,b){mb(this,a,sb,b)};var vb=[1];function wb(a){U.call(this,a)}ma(wb,U);function xb(a,b){for(;Va(b);)switch(b.i){case 13:var c=R(b.g);W(a,1,c);break;case 21:c=R(b.g);W(a,2,c);break;case 29:c=R(b.g);W(a,3,c);break;case 37:c=R(b.g);W(a,4,c);break;case 45:c=R(b.g);W(a,5,c);break;default:if(!rb(a,b))return a}return a};function yb(a){U.call(this,a,-1,zb)}ma(yb,U);var zb=[1];function Ab(a){U.call(this,a)}ma(Ab,U);function Bb(a,b,c){c=a.createShader(0===c?a.VERTEX_SHADER:a.FRAGMENT_SHADER);a.shaderSource(c,b);a.compileShader(c);if(!a.getShaderParameter(c,a.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+a.getShaderInfoLog(c));return c};function Cb(a){return lb(a,sb).map(function(b){return{index:ob(b,1),Y:X(b,2),label:null!=V(b,3)?pb(b,3):void 0,displayName:null!=V(b,4)?pb(b,4):void 0}})};function Db(a){return{x:X(a,1),y:X(a,2),z:X(a,3),visibility:null!=V(a,4)?X(a,4):void 0}};function Eb(a,b){this.h=a;this.g=b;this.l=0}
function Fb(a,b,c){Gb(a,b);if("function"===typeof a.g.canvas.transferToImageBitmap)return Promise.resolve(a.g.canvas.transferToImageBitmap());if(c)return Promise.resolve(a.g.canvas);if("function"===typeof createImageBitmap)return createImageBitmap(a.g.canvas);void 0===a.i&&(a.i=document.createElement("canvas"));return new Promise(function(d){a.i.height=a.g.canvas.height;a.i.width=a.g.canvas.width;a.i.getContext("2d",{}).drawImage(a.g.canvas,0,0,a.g.canvas.width,a.g.canvas.height);d(a.i)})}
function Gb(a,b){var c=a.g;if(void 0===a.m){var d=Bb(c,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),f=Bb(c,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),h=c.createProgram();c.attachShader(h,d);c.attachShader(h,f);c.linkProgram(h);if(!c.getProgramParameter(h,c.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+
c.getProgramInfoLog(h));d=a.m=h;c.useProgram(d);f=c.getUniformLocation(d,"sampler0");a.j={I:c.getAttribLocation(d,"aVertex"),H:c.getAttribLocation(d,"aTex"),da:f};a.s=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,a.s);c.enableVertexAttribArray(a.j.I);c.vertexAttribPointer(a.j.I,2,c.FLOAT,!1,0,0);c.bufferData(c.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),c.STATIC_DRAW);c.bindBuffer(c.ARRAY_BUFFER,null);a.o=c.createBuffer();c.bindBuffer(c.ARRAY_BUFFER,a.o);c.enableVertexAttribArray(a.j.H);c.vertexAttribPointer(a.j.H,2,c.FLOAT,!1,0,0);c.bufferData(c.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),c.STATIC_DRAW);c.bindBuffer(c.ARRAY_BUFFER,null);c.uniform1i(f,0)}d=a.j;c.useProgram(a.m);c.canvas.width=b.width;c.canvas.height=b.height;c.viewport(0,0,b.width,b.height);c.activeTexture(c.TEXTURE0);a.h.bindTexture2d(b.glName);c.enableVertexAttribArray(d.I);c.bindBuffer(c.ARRAY_BUFFER,a.s);c.vertexAttribPointer(d.I,2,c.FLOAT,!1,0,0);c.enableVertexAttribArray(d.H);c.bindBuffer(c.ARRAY_BUFFER,a.o);c.vertexAttribPointer(d.H,2,c.FLOAT,!1,0,0);c.bindFramebuffer(c.DRAW_FRAMEBUFFER?c.DRAW_FRAMEBUFFER:c.FRAMEBUFFER,null);c.clearColor(0,0,0,0);c.clear(c.COLOR_BUFFER_BIT);c.colorMask(!0,!0,!0,!0);c.drawArrays(c.TRIANGLE_FAN,0,4);c.disableVertexAttribArray(d.I);c.disableVertexAttribArray(d.H);c.bindBuffer(c.ARRAY_BUFFER,null);a.h.bindTexture2d(0)}function Hb(a){this.g=a};var Ib=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Jb(a,b){return b+a}function Kb(a,b){window[a]=b}function Lb(a){var b=document.createElement("script");b.setAttribute("src",a);b.setAttribute("crossorigin","anonymous");return new Promise(function(c){b.addEventListener("load",function(){c()},!1);b.addEventListener("error",function(){c()},!1);document.body.appendChild(b)})}
function Mb(){return Y(this,function b(){return O(b,function(c){switch(c.g){case 1:return c.m=2,N(c,WebAssembly.instantiate(Ib),4);case 4:c.g=3;c.m=0;break;case 2:return c.m=0,c.j=null,c.return(!1);case 3:return c.return(!0)}})})}
function Nb(a){this.g=a;this.listeners={};this.j={};this.F={};this.m={};this.s={};this.G=this.o=this.R=!0;this.C=Promise.resolve();this.P="";this.B={};this.locateFile=a&&a.locateFile||Jb;if("object"===typeof window)var b=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if("undefined"!==typeof location)b=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");this.S=b;if(a.options){b=M(Object.keys(a.options));for(var c=b.next();!c.done;c=b.next()){c=c.value;var d=a.options[c].default;void 0!==d&&(this.j[c]="function"===typeof d?d():d)}}}D=Nb.prototype;D.close=function(){this.i&&this.i.delete();return Promise.resolve()};function Ob(a,b){return void 0===a.g.files?[]:"function"===typeof a.g.files?a.g.files(b):a.g.files}
function Pb(a){return Y(a,function c(){var d=this,f,h,e,g,k,l,q,v,w,t,y;return O(c,function(m){switch(m.g){case 1:f=d;if(!d.R)return m.return();h=Ob(d,d.j);return N(m,Mb(),2);case 2:e=m.h;if("object"===typeof window)return Kb("createMediapipeSolutionsWasm",{locateFile:d.locateFile}),Kb("createMediapipeSolutionsPackedAssets",{locateFile:d.locateFile}),l=h.filter(function(u){return void 0!==u.data}),q=h.filter(function(u){return void 0===u.data}),v=Promise.all(l.map(function(u){var x=Qb(f,u.url);if(void 0!==u.path){var z=u.path;x=x.then(function(E){f.overrideFile(z,E);return Promise.resolve(E)})}return x})),w=Promise.all(q.map(function(u){return void 0===u.simd||u.simd&&e||!u.simd&&!e?Lb(f.locateFile(u.url,f.S)):Promise.resolve()})).then(function(){return Y(f,function x(){var z,E,F=this;return O(x,function(K){if(1==K.g)return z=window.createMediapipeSolutionsWasm,E=window.createMediapipeSolutionsPackedAssets,N(K,z(E),2);F.h=K.h;K.g=0})})}),t=function(){return Y(f,function x(){var z=this;return O(x,function(E){z.g.graph&&z.g.graph.url?E=N(E,Qb(z,z.g.graph.url),0):(E.g=0,E=void 0);return E})})}(),N(m,Promise.all([w,v,t]),7);if("function"!==typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");g=h.filter(function(u){return void 0===u.simd||u.simd&&e||!u.simd&&!e}).map(function(u){return f.locateFile(u.url,f.S)});importScripts.apply(null,ea(g));return N(m,createMediapipeSolutionsWasm(Module),6);case 6:d.h=m.h;d.l=new OffscreenCanvas(1,1);d.h.canvas=d.l;k=d.h.GL.createContext(d.l,{antialias:!1,alpha:!1,ba:"undefined"!==typeof WebGL2RenderingContext?2:1});d.h.GL.makeContextCurrent(k);m.g=4;break;case 7:d.l=document.createElement("canvas");y=d.l.getContext("webgl2",{});if(!y&&(y=d.l.getContext("webgl",{}),!y))return alert("Failed to create WebGL canvas context when passing video frame."),m.return();d.D=y;d.h.canvas=d.l;d.h.createContext(d.l,!0,!0,{});case 4:d.i=new d.h.SolutionWasm,d.R=!1,m.g=0}})})}
function Rb(a){return Y(a,function c(){var d=this,f,h,e,g,k,l,q,v;return O(c,function(w){if(1==w.g){if(d.g.graph&&d.g.graph.url&&d.P===d.g.graph.url)return w.return();d.o=!0;if(!d.g.graph||!d.g.graph.url){w.g=2;return}d.P=d.g.graph.url;return N(w,Qb(d,d.g.graph.url),3)}2!=w.g&&(f=w.h,d.i.loadGraph(f));h=M(Object.keys(d.B));for(e=h.next();!e.done;e=h.next())g=e.value,d.i.overrideFile(g,d.B[g]);d.B={};if(d.g.listeners)for(k=M(d.g.listeners),l=k.next();!l.done;l=k.next())q=l.value,Sb(d,q);v=d.j;d.j={};d.setOptions(v);w.g=0})})}D.reset=function(){return Y(this,function b(){var c=this;return O(b,function(d){c.i&&(c.i.reset(),c.m={},c.s={});d.g=0})})};D.setOptions=function(a,b){var c=this;if(b=b||this.g.options){for(var d=[],f=[],h={},e=M(Object.keys(a)),g=e.next();!g.done;h={K:h.K,L:h.L},g=e.next()){var k=g.value;k in this.j&&this.j[k]===a[k]||(this.j[k]=a[k],g=b[k],void 0!==g&&(g.onChange&&(h.K=g.onChange,h.L=a[k],d.push(function(l){return function(){return Y(c,function v(){var w,t=this;return O(v,function(y){if(1==y.g)return N(y,l.K(l.L),2);w=y.h;!0===w&&(t.o=!0);y.g=0})})}}(h))),g.graphOptionXref&&(k={valueNumber:1===g.type?a[k]:0,valueBoolean:0===g.type?a[k]:!1,valueString:2===g.type?a[k]:""},g=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),g.graphOptionXref),k),f.push(g))))}if(0!==d.length||0!==f.length)this.o=!0,this.A=(void 0===this.A?[]:this.A).concat(f),this.u=(void 0===this.u?[]:this.u).concat(d)}};function Tb(a){return Y(a,function c(){var d=this,f,h,e,g,k,l,q;return O(c,function(v){switch(v.g){case 1:if(!d.o)return v.return();if(!d.u){v.g=2;break}f=M(d.u);h=f.next();case 3:if(h.done){v.g=5;break}e=h.value;return N(v,e(),4);case 4:h=f.next();v.g=3;break;case 5:d.u=void 0;case 2:if(d.A){g=new d.h.GraphOptionChangeRequestList;k=M(d.A);for(l=k.next();!l.done;l=k.next())q=l.value,g.push_back(q);d.i.changeOptions(g);g.delete();d.A=void 0}d.o=!1;v.g=0}})})}
D.initialize=function(){return Y(this,function b(){var c=this;return O(b,function(d){return 1==d.g?N(d,Pb(c),2):3!=d.g?N(d,Rb(c),3):N(d,Tb(c),0)})})};function Qb(a,b){return Y(a,function d(){var f=this,h,e;return O(d,function(g){if(b in f.F)return g.return(f.F[b]);h=f.locateFile(b,"");e=fetch(h).then(function(k){return k.arrayBuffer()});f.F[b]=e;return g.return(e)})})}D.overrideFile=function(a,b){this.i?this.i.overrideFile(a,b):this.B[a]=b};D.clearOverriddenFiles=function(){this.B={};this.i&&this.i.clearOverriddenFiles()};D.send=function(a,b){return Y(this,function d(){var f=this,h,e,g,k,l,q,v,w,t;return O(d,function(y){switch(y.g){case 1:if(!f.g.inputs)return y.return();h=1E3*(void 0===b||null===b?performance.now():b);return N(y,f.C,2);case 2:return N(y,f.initialize(),3);case 3:e=new f.h.PacketDataList;g=M(Object.keys(a));for(k=g.next();!k.done;k=g.next())if(l=k.value,q=f.g.inputs[l]){a:{var m=f;var u=a[l];switch(q.type){case"video":var x=m.m[q.stream];x||(x=new Eb(m.h,m.D),m.m[q.stream]=x);m=x;0===m.l&&(m.l=m.h.createTexture());if("undefined"!==typeof HTMLVideoElement&&u instanceof HTMLVideoElement){var z=u.videoWidth;x=u.videoHeight}else"undefined"!==typeof HTMLImageElement&&u instanceof HTMLImageElement?(z=u.naturalWidth,x=u.naturalHeight):(z=u.width,x=u.height);x={glName:m.l,width:z,height:x};z=m.g;z.canvas.width=x.width;z.canvas.height=x.height;z.activeTexture(z.TEXTURE0);m.h.bindTexture2d(m.l);z.texImage2D(z.TEXTURE_2D,0,z.RGBA,z.RGBA,z.UNSIGNED_BYTE,u);m.h.bindTexture2d(0);m=x;break a;case"detections":x=m.m[q.stream];x||(x=new Hb(m.h),m.m[q.stream]=x);m=x;m.data||(m.data=new m.g.DetectionListData);m.data.reset(u.length);for(x=0;x<u.length;++x){z=u[x];var E=m.data,F=E.setBoundingBox,K=x;var I=z.T;var r=new Ab;W(r,1,I.Z);W(r,2,I.$);W(r,3,I.height);W(r,4,I.width);W(r,5,I.rotation);W(r,6,I.X);var A=I=new Za;T(A,1,V(r,1));T(A,2,V(r,2));T(A,3,V(r,3));T(A,4,V(r,4));T(A,5,V(r,5));var C=V(r,6);if(null!=C&&null!=C){S(A.g,48);var p=A.g,B=C;C=0>B;B=Math.abs(B);var n=B>>>0;B=Math.floor((B-n)/4294967296);B>>>=0;C&&(B=~B>>>0,n=(~n>>>0)+1,4294967295<n&&(n=0,B++,4294967295<B&&(B=0)));P=n;Q=B;C=P;for(n=Q;0<n||127<C;)p.push(C&127|128),C=(C>>>7|n<<25)>>>0,n>>>=7;p.push(C)}qb(r,A);I=ab(I);F.call(E,K,I);if(z.O)for(E=0;E<z.O.length;++E)r=z.O[E],A=r.visibility?!0:!1,F=m.data,K=F.addNormalizedLandmark,I=x,r=Object.assign(Object.assign({},r),{visibility:A?r.visibility:0}),A=new wb,W(A,1,r.x),W(A,2,r.y),W(A,3,r.z),r.visibility&&W(A,4,r.visibility),p=r=new Za,T(p,1,V(A,1)),T(p,2,V(A,2)),T(p,3,V(A,3)),T(p,4,V(A,4)),T(p,5,V(A,5)),qb(A,p),r=ab(r),K.call(F,I,r);if(z.M)for(E=0;E<z.M.length;++E){F=m.data;K=F.addClassification;I=x;r=z.M[E];A=new sb;W(A,2,r.Y);r.index&&W(A,1,r.index);r.label&&W(A,3,r.label);r.displayName&&W(A,4,r.displayName);p=r=new Za;n=V(A,1);if(null!=n&&null!=n)if(S(p.g,8),C=p.g,0<=n)S(C,n);else{for(B=0;9>B;B++)C.push(n&127|128),n>>=7;C.push(1)}T(p,2,V(A,2));C=V(A,3);null!=C&&(C=Ea(C),S(p.g,26),S(p.g,C.length),$a(p,p.g.end()),$a(p,C));C=V(A,4);null!=C&&(C=Ea(C),S(p.g,34),S(p.g,C.length),$a(p,p.g.end()),$a(p,C));qb(A,p);r=ab(r);K.call(F,I,r)}}m=m.data;break a;default:m={}}}v=m;w=q.stream;switch(q.type){case"video":e.pushTexture2d(Object.assign(Object.assign({},v),{stream:w,timestamp:h}));break;case"detections":t=v;t.stream=w;t.timestamp=h;e.pushDetectionList(t);break;default:throw Error("Unknown input config type: '"+q.type+"'");}}f.i.send(e);return N(y,f.C,4);case 4:e.delete(),y.g=0}})})};function Ub(a,b,c){return Y(a,function f(){var h,e,g,k,l,q,v=this,w,t,y,m,u,x,z,E;return O(f,function(F){switch(F.g){case 1:if(!c)return F.return(b);h={};e=0;g=M(Object.keys(c));for(k=g.next();!k.done;k=g.next())l=k.value,q=c[l],"string"!==typeof q&&"texture"===q.type&&void 0!==b[q.stream]&&++e;1<e&&(v.G=!1);w=M(Object.keys(c));k=w.next();case 2:if(k.done){F.g=4;break}t=k.value;y=c[t];if("string"===typeof y)return z=h,E=t,N(F,Vb(v,t,b[y]),14);m=b[y.stream];if("detection_list"===y.type){if(m){var K=m.getRectList();for(var I=m.getLandmarksList(),r=m.getClassificationsList(),A=[],C=0;C<K.size();++C){var p=K.get(C);a:{var B=new Ab;for(p=new Ua(p);Va(p);)switch(p.i){case 13:var n=R(p.g);W(B,1,n);break;case 21:n=R(p.g);W(B,2,n);break;case 29:n=R(p.g);W(B,3,n);break;case 37:n=R(p.g);W(B,4,n);break;case 45:n=R(p.g);W(B,5,n);break;case 48:for(var G=p.g,L=128,Ia=0,Z=n=0;4>Z&&128<=L;Z++)L=G.h[G.g++],Ia|=(L&127)<<7*Z;128<=L&&(L=G.h[G.g++],Ia|=(L&127)<<28,n|=(L&127)>>4);if(128<=L)for(Z=0;5>Z&&128<=L;Z++)L=G.h[G.g++],n|=(L&127)<<7*Z+3;if(128>L){G=Ia>>>0;L=n>>>0;if(n=L&2147483648)G=~G+1>>>0,L=~L>>>0,0==G&&(L=L+1>>>0);G=4294967296*L+(G>>>0);n=n?-G:G}else G.l=!0,n=void 0;W(B,6,n);break;default:if(!rb(B,p))break a}}B={Z:X(B,1),$:X(B,2),height:X(B,3),width:X(B,4),rotation:X(B,5,0),X:ob(B,6)};n=I.get(C);a:for(p=new yb,n=new Ua(n);Va(n);)switch(n.i){case 10:G=Xa(n,new wb,xb);mb(p,G,wb,void 0);break;default:if(!rb(p,n))break a}p=lb(p,wb).map(Db);G=r.get(C);a:for(n=new ub,G=new Ua(G);Va(G);)switch(G.i){case 10:n.addClassification(Xa(G,new sb,tb));break;default:if(!rb(n,G))break a}B={T:B,O:p,M:Cb(n)};A.push(B)}K=A}else K=[];h[t]=K;F.g=7;break}if("proto_list"===y.type){if(m){K=Array(m.size());for(I=0;I<m.size();I++)K[I]=m.get(I);m.delete()}else K=[];h[t]=K;F.g=7;break}if(void 0===m){F.g=3;break}if("float_list"===y.type){h[t]=m;F.g=7;break}if("proto"===y.type){h[t]=m;F.g=7;break}if("texture"!==y.type)throw Error("Unknown output config type: '"+y.type+"'");u=v.s[t];u||(u=new Eb(v.h,v.D),v.s[t]=u);return N(F,Fb(u,m,v.G),13);case 13:x=F.h,h[t]=x;case 7:y.transform&&h[t]&&(h[t]=y.transform(h[t]));F.g=3;break;case 14:z[E]=F.h;case 3:k=w.next();F.g=2;break;case 4:return F.return(h)}})})}function Vb(a,b,c){return Y(a,function f(){var h=this,e;return O(f,function(g){return"number"===typeof c||c instanceof Uint8Array||c instanceof h.h.Uint8BlobList?g.return(c):c instanceof h.h.Texture2dDataOut?(e=h.s[b],e||(e=new Eb(h.h,h.D),h.s[b]=e),g.return(Fb(e,c,h.G))):g.return(void 0)})})}
function Sb(a,b){for(var c=b.name||"$",d=[].concat(ea(b.wants)),f=new a.h.StringList,h=M(b.wants),e=h.next();!e.done;e=h.next())f.push_back(e.value);h=a.h.PacketListener.implement({onResults:function(g){for(var k={},l=0;l<b.wants.length;++l)k[d[l]]=g.get(l);var q=a.listeners[c];q&&(a.C=Ub(a,k,b.outs).then(function(v){v=q(v);for(var w=0;w<b.wants.length;++w){var t=k[d[w]];"object"===typeof t&&t.hasOwnProperty&&t.hasOwnProperty("delete")&&t.delete()}v&&(a.C=v)}))}});a.i.attachMultiListener(f,h);f.delete()}
D.onResults=function(a,b){this.listeners[b||"$"]=a};ya("Solution",Nb);ya("OptionType",{BOOL:0,NUMBER:1,aa:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Wb(a){void 0===a&&(a=0);switch(a){case 1:return"selfie_segmentation_landscape.tflite";default:return"selfie_segmentation.tflite"}}
function Xb(a){var b=this;a=a||{};this.g=new Nb({locateFile:a.locateFile,files:function(c){return[{simd:!0,url:"selfie_segmentation_solution_simd_wasm_bin.js"},{simd:!1,url:"selfie_segmentation_solution_wasm_bin.js"},{data:!0,url:Wb(c.modelSelection)}]},graph:{url:"selfie_segmentation.binarypb"},listeners:[{wants:["segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelSelection:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelSelection",fieldName:"int_value"},onChange:function(c){return Y(b,function f(){var h,e,g=this,k;return O(f,function(l){if(1==l.g)return h=Wb(c),e="third_party/mediapipe/modules/selfie_segmentation/"+h,N(l,Qb(g.g,h),2);k=l.h;g.g.overrideFile(e,k);return l.return(!0)})})}}}})}D=Xb.prototype;D.close=function(){this.g.close();return Promise.resolve()};D.onResults=function(a){this.g.onResults(a)};D.initialize=function(){return Y(this,function b(){var c=this;return O(b,function(d){return N(d,c.g.initialize(),0)})})};D.reset=function(){this.g.reset()};D.send=function(a){return Y(this,function c(){var d=this;return O(c,function(f){return N(f,d.g.send(a),0)})})};D.setOptions=function(a){this.g.setOptions(a)};ya("SelfieSegmentation",Xb);ya("VERSION","0.1.1632777926");}).call(this);;

/* /website/static/src/models/chat_window_manager.js */
odoo.define('@website/models/chat_window_manager',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{BASE_VISUAL}=require('@mail/models/chat_window_manager');registerPatch({name:'ChatWindowManager',fields:{visual:{compute(){if(this.messaging.isWebsitePreviewOpen){return JSON.parse(JSON.stringify(BASE_VISUAL));}
return this._super();},},},});return __exports;});;

/* /website/static/src/models/messaging.js */
odoo.define('@website/models/messaging',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');registerPatch({name:'Messaging',fields:{isWebsitePreviewOpen:attr({default:false,}),},});return __exports;});;

/* /mail_enterprise/static/src/models/channel_preview_view.js */
odoo.define('@mail_enterprise/models/channel_preview_view',async function(require){'use strict';let __exports={};const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'ChannelPreviewView',fields:{swiperView:one('SwiperView',{compute(){return(this.messaging.device.isSmall&&((this.thread.isChatChannel&&this.thread.isPinned)||(this.channel.localMessageUnreadCounter>0)))?{}:clear();},inverse:'channelPreviewViewOwner',}),},});return __exports;});;

/* /mail_enterprise/static/src/models/message_view.js */
odoo.define('@mail_enterprise/models/message_view',async function(require){'use strict';let __exports={};const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'MessageView',fields:{swiperView:one('SwiperView',{compute(){return(this.messaging&&this.messaging.device&&this.messaging.device.isSmall&&this.message&&this.message.isNeedaction&&this.messageListViewItemOwner&&this.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread===this.messaging.inbox.thread)?{}:clear();},inverse:'messageViewOwner',}),},});return __exports;});;

/* /mail_enterprise/static/src/models/notification_group_view.js */
odoo.define('@mail_enterprise/models/notification_group_view',async function(require){'use strict';let __exports={};const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'NotificationGroupView',fields:{swiperView:one('SwiperView',{compute(){return(this.messaging.device.isSmall&&this.notificationGroup.notifications.length)>0?{}:clear();},inverse:'notificationGroupViewOwner',}),},});return __exports;});;

/* /mail_enterprise/static/src/models/swiper_view.js */
odoo.define('@mail_enterprise/models/swiper_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'SwiperView',identifyingMode:'xor',recordMethods:{onLeftSwipe(){if(this.channelPreviewViewOwner){this.channelPreviewViewOwner.thread.unpin();}},onRightSwipe(){if(this.channelPreviewViewOwner){if(this.channelPreviewViewOwner.thread.lastNonTransientMessage){this.channelPreviewViewOwner.thread.markAsSeen(this.channelPreviewViewOwner.thread.lastNonTransientMessage);}}
if(this.messageViewOwner){this.messageViewOwner.message.markAsRead();}
if(this.notificationGroupViewOwner){if(this.notificationGroupViewOwner.notificationGroup.notifications.length>0){this.notificationGroupViewOwner.notificationGroup.notifyCancel();}}
if(this.threadNeedactionPreviewViewOwner){this.models['Message'].markAllAsRead([['model','=',this.threadNeedactionPreviewViewOwner.thread.model],['res_id','=',this.threadNeedactionPreviewViewOwner.thread.id],]);}},},fields:{channelPreviewViewOwner:one('ChannelPreviewView',{identifying:true,inverse:'swiperView',}),componentName:attr({compute(){if(this.channelPreviewViewOwner){return'ChannelPreviewView';}
if(this.messageViewOwner){return'Message';}
if(this.notificationGroupViewOwner){return'NotificationGroup';}
if(this.threadNeedactionPreviewViewOwner){return'ThreadNeedactionPreview';}
return clear();},required:true,}),hasLeftSwipe:attr({compute(){if(this.channelPreviewViewOwner){return(this.channelPreviewViewOwner.thread.isChatChannel&&this.channelPreviewViewOwner.thread.isPinned);}
return false;},required:true,}),hasRightSwipe:attr({compute(){if(this.channelPreviewViewOwner){return this.channelPreviewViewOwner.channel.localMessageUnreadCounter>0;}
if(this.messageViewOwner){return true;}
if(this.notificationGroupViewOwner){return true;}
if(this.threadNeedactionPreviewViewOwner){return true;}
return false;},required:true,}),leftSwipeBackgroundColor:attr({compute(){if(this.channelPreviewViewOwner){return'bg-danger';}
return clear();},}),leftSwipeIcon:attr({compute(){if(this.channelPreviewViewOwner){return'fa-times-circle';}
return clear();},}),messageViewOwner:one('MessageView',{identifying:true,inverse:'swiperView',}),notificationGroupViewOwner:one('NotificationGroupView',{identifying:true,inverse:'swiperView',}),record:one('Record',{compute(){if(this.channelPreviewViewOwner){return this.channelPreviewViewOwner;}
if(this.messageViewOwner){return this.messageViewOwner;}
if(this.notificationGroupViewOwner){return this.notificationGroupViewOwner;}
if(this.threadNeedactionPreviewViewOwner){return this.threadNeedactionPreviewViewOwner;}
return clear();},required:true,}),rightSwipeBackgroundColor:attr({compute(){if(this.channelPreviewViewOwner){return'bg-success';}
if(this.messageViewOwner){return'bg-success';}
if(this.notificationGroupViewOwner){return'bg-warning';}
if(this.threadNeedactionPreviewViewOwner){return'bg-success';}
return clear();},}),rightSwipeIcon:attr({compute(){if(this.channelPreviewViewOwner){return'fa-check-circle';}
if(this.messageViewOwner){return'fa-check-circle';}
if(this.notificationGroupViewOwner){return'fa-times-circle';}
if(this.threadNeedactionPreviewViewOwner){return'fa-check-circle';}
return clear();},}),threadNeedactionPreviewViewOwner:one('ThreadNeedactionPreviewView',{identifying:true,inverse:'swiperView',}),},});return __exports;});;

/* /mail_enterprise/static/src/models/thread_needaction_preview_view.js */
odoo.define('@mail_enterprise/models/thread_needaction_preview_view',async function(require){'use strict';let __exports={};const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'ThreadNeedactionPreviewView',fields:{swiperView:one('SwiperView',{compute(){return this.messaging.device.isSmall?{}:clear();},inverse:'threadNeedactionPreviewViewOwner',}),},});return __exports;});;

/* /hr/static/src/models/employee.js */
odoo.define('@hr/models/employee',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear,insert}=require('@mail/model/model_field_command');registerModel({name:'Employee',modelMethods:{convertData(data){const data2={};if('id'in data){data2.id=data.id;}
if('user_id'in data){data2.hasCheckedUser=true;if(!data.user_id){data2.user=clear();}else{const partnerNameGet=data['user_partner_id'];const partnerData={display_name:partnerNameGet[1],id:partnerNameGet[0],};const userNameGet=data['user_id'];const userData={id:userNameGet[0],partner:insert(partnerData),display_name:userNameGet[1],};data2.user=insert(userData);}}
return data2;},async performRpcRead({context,fields,ids}){const employeesData=await this.messaging.rpc({model:'hr.employee.public',method:'read',args:[ids,fields],kwargs:{context,},});this.messaging.models['Employee'].insert(employeesData.map(employeeData=>this.messaging.models['Employee'].convertData(employeeData)));},async performRpcSearchRead({context,domain,fields}){const employeesData=await this.messaging.rpc({model:'hr.employee.public',method:'search_read',kwargs:{context,domain,fields,},});this.messaging.models['Employee'].insert(employeesData.map(employeeData=>this.messaging.models['Employee'].convertData(employeeData)));},},recordMethods:{async checkIsUser(){return this.messaging.models['Employee'].performRpcRead({ids:[this.id],fields:['user_id','user_partner_id'],context:{active_test:false},});},async getChat(){if(!this.user&&!this.hasCheckedUser){await this.checkIsUser();}
if(!this.exists()){return;}
if(!this.user){this.messaging.notify({message:this.env._t("You can only chat with employees that have a dedicated user."),type:'info',});return;}
return this.user.getChat();},async openChat(options){const chat=await this.getChat();if(!this.exists()){return;}
if(!chat){return;}
await chat.thread.open(options);if(!this.exists()){return;}},async openProfile(model='hr.employee.public'){return this.messaging.openDocument({id:this.id,model:model,});},},fields:{hasCheckedUser:attr({default:false,}),id:attr({identifying:true,}),partner:one('Partner',{inverse:'employee',related:'user.partner',}),user:one('User',{inverse:'employee',}),},});return __exports;});;

/* /hr/static/src/models/messaging.js */
odoo.define('@hr/models/messaging',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');require('@mail/models/messaging');registerPatch({name:'Messaging',recordMethods:{async getChat({employeeId}){if(employeeId){const employee=this.messaging.models['Employee'].insert({id:employeeId});return employee.getChat();}
return this._super(...arguments);},async openProfile({id,model}){if(model==='hr.employee'||model==='hr.employee.public'){const employee=this.messaging.models['Employee'].insert({id});return employee.openProfile(model);}
return this._super(...arguments);},},});return __exports;});;

/* /hr/static/src/models/partner.js */
odoo.define('@hr/models/partner',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerPatch({name:'Partner',recordMethods:{async checkIsEmployee(){await this.messaging.models['Employee'].performRpcSearchRead({context:{active_test:false},domain:[['user_partner_id','=',this.id]],fields:['user_id','user_partner_id'],});if(!this.exists()){return;}
this.update({hasCheckedEmployee:true});},async openProfile(){const _super=this._super.bind(this,...arguments);if(!this.employee&&!this.hasCheckedEmployee){await this.checkIsEmployee();}
if(!this.exists()){return;}
if(this.employee){return this.employee.openProfile();}
return _super();},},fields:{employee:one('Employee',{inverse:'partner',}),hasCheckedEmployee:attr({default:false,}),},});return __exports;});;

/* /hr/static/src/models/user.js */
odoo.define('@hr/models/user',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerPatch({name:'User',fields:{employee:one('Employee',{inverse:'user',}),},});return __exports;});;

/* /sms/static/src/models/message.js */
odoo.define('@sms/models/message',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'Message',recordMethods:{openResendAction(){if(this.message_type==='sms'){this.env.services.action.doAction('sms.sms_resend_action',{additionalContext:{default_mail_message_id:this.id,},},);}else{this._super(...arguments);}},},});return __exports;});;

/* /sms/static/src/models/message_view.js */
odoo.define('@sms/models/message_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'MessageView',fields:{failureNotificationIconClassName:{compute(){if(this.message&&this.message.message_type==='sms'){return'fa fa-mobile';}
return this._super();},},failureNotificationIconLabel:{compute(){if(this.message&&this.message.message_type==='sms'){return this.env._t("SMS");}
return this._super();},},notificationIconClassName:{compute(){if(this.message&&this.message.message_type==='sms'){return'fa fa-mobile';}
return this._super();},},notificationIconLabel:{compute(){if(this.message&&this.message.message_type==='sms'){return this.env._t("SMS");}
return this._super();},},},});return __exports;});;

/* /sms/static/src/models/notification_group.js */
odoo.define('@sms/models/notification_group',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'NotificationGroup',recordMethods:{_openDocuments(){if(this.notification_type!=='sms'){return this._super(...arguments);}
this.env.services.action.doAction({name:this.env._t("SMS Failures"),type:'ir.actions.act_window',view_mode:'kanban,list,form',views:[[false,'kanban'],[false,'list'],[false,'form']],target:'current',res_model:this.res_model,domain:[['message_has_sms_error','=',true]],context:{create:false},});if(this.messaging.device.isSmall){this.messaging.messagingMenu.close();}},},});return __exports;});;

/* /sms/static/src/models/notification_group_view.js */
odoo.define('@sms/models/notification_group_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'NotificationGroupView',fields:{imageSrc:{compute(){if(this.notificationGroup.notification_type==='sms'){return'/sms/static/img/sms_failure.svg';}
return this._super();},},},});return __exports;});;

/* /calendar/static/src/models/activity.js */
odoo.define('@calendar/models/activity',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');registerPatch({name:'Activity',modelMethods:{convertData(data){const res=this._super(data);if('calendar_event_id'in data){res.calendar_event_id=data.calendar_event_id[0];}
return res;},},recordMethods:{async deleteServerRecord(){if(!this.calendar_event_id){await this._super();}else{await this.messaging.rpc({model:'mail.activity',method:'unlink_w_meeting',args:[[this.id]],});if(!this.exists()){return;}
this.delete();}},async edit(){if(!this.calendar_event_id){await this._super();}else{const action=await this.messaging.rpc({model:'mail.activity',method:'action_create_calendar_event',args:[[this.id]],});this.env.services.action.doAction(action);}},},fields:{calendar_event_id:attr({default:false,}),},});return __exports;});;

/* /calendar/static/src/models/activity_group.js */
odoo.define('@calendar/models/activity_group',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{many}=require('@mail/model/model_field');registerPatch({name:'ActivityGroup',modelMethods:{convertData(data){const data2=this._super(data);data2.meetings=data.meetings;return data2;},},recordMethods:{_onChangeMeetings(){if(this.type==='meeting'&&this.meetings.length===0){this.delete();}},},fields:{meetings:many('calendar.event'),},onChanges:[{dependencies:['meetings','type'],methodName:'_onChangeMeetings',},],});return __exports;});;

/* /calendar/static/src/models/activity_group_view.js */
odoo.define('@calendar/models/activity_group_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'ActivityGroupView',recordMethods:{onClickFilterButton(ev){const $el=$(ev.currentTarget);const data=_.extend({},$el.data());if(data.res_model==="calendar.event"&&data.filter==="my"){this.activityMenuViewOwner.update({isOpen:false});this.env.services['action'].doAction('calendar.action_calendar_event',{additionalContext:{default_mode:'day',search_default_mymeetings:1,},clearBreadcrumbs:true,});}else{this._super.apply(this,arguments);}},},});return __exports;});;

/* /calendar/static/src/models/activity_view.js */
odoo.define('@calendar/models/activity_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const Dialog=require('web.Dialog');registerPatch({name:'ActivityView',recordMethods:{async onClickCancel(ev){if(this.activity.calendar_event_id){await new Promise(resolve=>{Dialog.confirm(this,this.env._t("The activity is linked to a meeting. Deleting it will remove the meeting as well. Do you want to proceed?"),{confirm_callback:resolve},);});}
if(!this.exists()){return;}
await this._super();},},});return __exports;});;

/* /calendar/static/src/models/calendar_event.js */
odoo.define('@calendar/models/calendar_event',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const fieldUtils=require('web.field_utils');const{getLangTimeFormat}=require('web.time');registerModel({name:'calendar.event',fields:{allday:attr(),attendee_status:attr(),formattedStart:attr({compute(){if(!this.start){return clear();}
return moment(fieldUtils.parse.datetime(this.start,false,{isUTC:true})).local().format(getLangTimeFormat());},}),id:attr({identifying:true,}),name:attr(),start:attr(),},});return __exports;});;

/* /hr_holidays/static/src/models/partner.js */
odoo.define('@hr_holidays/models/partner',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{str_to_date}=require('web.time');registerPatch({name:'Partner',fields:{isOnline:{compute(){if(['leave_online','leave_away'].includes(this.im_status)){return true;}
return this._super();},},out_of_office_date_end:attr(),outOfOfficeText:attr({compute(){if(!this.out_of_office_date_end){return clear();}
if(!this.messaging.locale||!this.messaging.locale.language){return clear();}
const currentDate=new Date();const date=str_to_date(this.out_of_office_date_end);const options={day:'numeric',month:'short'};if(currentDate.getFullYear()!==date.getFullYear()){options.year='numeric';}
let localeCode=this.messaging.locale.language.replace(/_/g,'-');if(localeCode==="sr@latin"){localeCode="sr-Latn-RS";}
const formattedDate=date.toLocaleDateString(localeCode,options);return _.str.sprintf(this.env._t("Out of office until %s"),formattedDate);},}),},});return __exports;});;

/* /approvals/static/src/models/activity.js */
odoo.define('@approvals/models/activity',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear,insert}=require('@mail/model/model_field_command');registerPatch({name:'Activity',modelMethods:{convertData(data){const data2=this._super(data);if('approver_id'in data&&'approver_status'in data){if(!data.approver_id){data2.approval=clear();}else{data2.approval=[insert({id:data.approver_id,status:data.approver_status}),];}}
return data2;},},fields:{approval:one('Approval',{inverse:'activity',}),},});return __exports;});;

/* /approvals/static/src/models/activity_list_view_item.js */
odoo.define('@approvals/models/activity_list_view_item',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');require('@mail/models/activity_list_view_item');registerPatch({name:'ActivityListViewItem',fields:{approvalView:one('ApprovalView',{compute(){if(this.activity.approval){return{};}
return clear();},inverse:'activityListViewItemOwner',}),hasEditButton:{compute(){if(this.approvalView){return false;}
return this._super();}},hasMarkDoneButton:{compute(){if(this.approvalView){return false;}
return this._super();},},}});return __exports;});;

/* /approvals/static/src/models/activity_view.js */
odoo.define('@approvals/models/activity_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerPatch({name:'ActivityView',fields:{approvalView:one('ApprovalView',{compute(){if(this.activity.approval){return{};}
return clear();},inverse:'activityViewOwner',}),},});return __exports;});;

/* /approvals/static/src/models/approval.js */
odoo.define('@approvals/models/approval',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'Approval',recordMethods:{async approve(){const activity=this.activity;await this.messaging.rpc({model:'approval.approver',method:'action_approve',args:[[this.id]],});if(activity.exists()){activity.delete();}
if(!this.exists()){return;}
this.delete();},async refuse(){const activity=this.activity;await this.messaging.rpc({model:'approval.approver',method:'action_refuse',args:[[this.id]],});if(activity.exists()){activity.delete();}
if(!this.exists()){return;}
this.delete();},},fields:{activity:one('Activity',{inverse:'approval',}),id:attr({identifying:true,}),isCurrentPartnerApprover:attr({default:false,related:'activity.isCurrentPartnerAssignee',}),status:attr(),},});return __exports;});;

/* /approvals/static/src/models/approval_view.js */
odoo.define('@approvals/models/approval_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'ApprovalView',identifyingMode:'xor',recordMethods:{async onClickApprove(){if(!this.exists()){return;}
const chatter=this.activityViewOwner&&this.activityViewOwner.activityBoxView.chatter;const webRecord=this.activityListViewItemOwner&&this.activityListViewItemOwner.webRecord;const thread=this.activity.thread;await this.activity.approval.approve();if(chatter&&chatter.exists()){chatter.reloadParentView();}
if(webRecord){webRecord.model.load({resId:thread.id});}},async onClickRefuse(){if(!this.exists()){return;}
const chatter=this.activityViewOwner&&this.activityViewOwner.activityBoxView.chatter;const webRecord=this.activityListViewItemOwner&&this.activityListViewItemOwner.webRecord;const thread=this.activity.thread;await this.activity.approval.refuse();if(chatter&&chatter.exists()){chatter.reloadParentView();}
if(webRecord){webRecord.model.load({resId:thread.id});}},},fields:{activity:one('Activity',{compute(){if(this.activityViewOwner){return this.activityViewOwner.activity;}
if(this.activityListViewItemOwner){return this.activityListViewItemOwner.activity;}
return clear();}}),activityListViewItemOwner:one('ActivityListViewItem',{identifying:true,inverse:'approvalView',}),activityViewOwner:one('ActivityView',{identifying:true,inverse:'approvalView',}),},});return __exports;});;

/* /note/static/src/models/activity_group.js */
odoo.define('@note/models/activity_group',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');registerPatch({name:'ActivityGroup',fields:{isNote:attr({compute(){return this.irModel.model==='note.note';},}),},});return __exports;});;

/* /note/static/src/models/activity_menu_view.js */
odoo.define('@note/models/activity_menu_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');const{DateTime}=luxon;const urlRegExp=/http(s)?:\/\/(www\.)?[a-zA-Z0-9@:%_+~#=~#?&/=\-;!.]{3,2000}/g;registerPatch({name:'ActivityMenuView',recordMethods:{close(){this.update({addingNoteDoFocus:clear(),isAddingNote:false,});this._super();},onClickAddNote(ev){this.update({addingNoteDoFocus:true,isAddingNote:true,});},onClickSaveNote(ev){this.saveNote();},onComponentUpdate(){if(this.addingNoteDoFocus&&this.noteInputRef.el){this.noteInputRef.el.focus();this.update({addingNoteDoFocus:clear()});}},onDateTimeChanged(date){this.update({addingNoteDate:date?date:clear()});},onKeydownNoteInput(ev){if(ev.key==='Enter'){this.saveNote();}},async saveNote(){const note=this.noteInputRef.el.value.replace(urlRegExp,'<a href="$&">$&</a>').trim();if(!note){return;}
this.update({isAddingNote:false});await this.messaging.rpc({route:'/note/new',params:{'note':note,'date_deadline':this.addingNoteDate?this.addingNoteDate:new DateTime.local(),},});this.fetchData();},_onClickCaptureGlobal(ev){if(ev.target.closest('.bootstrap-datetimepicker-widget')){return;}
this._super(ev);},},fields:{activityGroups:{sort(){return[['truthy-first','isNote'],...this._super,];},},addingNoteDate:attr(),addingNoteDatePlaceholder:attr({compute(){return this.env._t("Today");},}),addingNoteDoFocus:attr({default:false,}),isAddingNote:attr({default:false,}),noteInputRef:attr(),},});return __exports;});;

/* /rating/static/src/models/channel_preview_view.js */
odoo.define('@rating/models/channel_preview_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');registerPatch({name:'ChannelPreviewView',fields:{isEmpty:{compute(){return this.isRating||this._super();},},isRating:attr({compute(){return Boolean(this.thread.lastMessage&&this.thread.lastMessage.rating);},}),},});return __exports;});;

/* /rating/static/src/models/message.js */
odoo.define('@rating/models/message',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');registerPatch({name:'Message',modelMethods:{convertData(data){const data2=this._super(data);if('rating'in data){data2.rating=data.rating;}
return data2;},},fields:{rating:one('Rating',{isCausal:true,}),},});return __exports;});;

/* /rating/static/src/models/rating.js */
odoo.define('@rating/models/rating',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');registerModel({name:'Rating',fields:{id:attr({identifying:true,}),ratingImageUrl:attr({readonly:true,}),ratingText:attr({readonly:true,}),},});return __exports;});;

/* /rating/static/src/models/thread_needaction_preview_view.js */
odoo.define('@rating/models/thread_needaction_preview_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');registerPatch({name:'ThreadNeedactionPreviewView',fields:{isEmpty:{compute(){return this.isRating||this._super();},},isRating:attr({compute(){return Boolean(this.thread.lastNeedactionMessageAsOriginThread&&this.thread.lastNeedactionMessageAsOriginThread.rating);},}),},});return __exports;});;

/* /snailmail/static/src/models/dialog.js */
odoo.define('@snailmail/models/dialog',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerPatch({name:'Dialog',fields:{componentClassName:{compute(){if(this.snailmailErrorView){return'o_Dialog_componentMediumSize align-self-start mt-5';}
return this._super();},},componentName:{compute(){if(this.snailmailErrorView){return'SnailmailError';}
return this._super();},},messageViewOwnerAsSnailmailError:one('MessageView',{identifying:true,inverse:'snailmailErrorDialog',}),record:{compute(){if(this.snailmailErrorView){return this.snailmailErrorView;}
return this._super();},},snailmailErrorView:one('SnailmailErrorView',{compute(){if(this.messageViewOwnerAsSnailmailError){return{};}
return clear();},inverse:'dialogOwner',}),},});return __exports;});;

/* /snailmail/static/src/models/message.js */
odoo.define('@snailmail/models/message',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'Message',recordMethods:{async cancelLetter(){await this.messaging.rpc({model:'mail.message',method:'cancel_letter',args:[[this.id]],});},openFormatLetterAction(){this.env.services.action.doAction('snailmail.snailmail_letter_format_error_action',{additionalContext:{message_id:this.id,},},);},async openMissingFieldsLetterAction(){const letterIds=await this.messaging.rpc({model:'snailmail.letter',method:'search',args:[[['message_id','=',this.id]]],});this.env.services.action.doAction('snailmail.snailmail_letter_missing_required_fields_action',{additionalContext:{default_letter_id:letterIds[0],},});},async resendLetter(){await this.messaging.rpc({model:'mail.message',method:'send_letter',args:[[this.id]],});},},});return __exports;});;

/* /snailmail/static/src/models/message_view.js */
odoo.define('@snailmail/models/message_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerPatch({name:'MessageView',recordMethods:{onClickFailure(){if(this.message.message_type==='snailmail'){switch(this.message.notifications[0].failure_type){case'sn_credit':this.messaging.fetchSnailmailCreditsUrl();this.update({snailmailErrorDialog:{}});break;case'sn_error':this.update({snailmailErrorDialog:{}});break;case'sn_fields':this.message.openMissingFieldsLetterAction();break;case'sn_format':this.message.openFormatLetterAction();break;case'sn_price':this.update({snailmailErrorDialog:{}});break;case'sn_trial':this.messaging.fetchSnailmailCreditsUrlTrial();this.update({snailmailErrorDialog:{}});break;}}else{this._super(...arguments);}},onClickNotificationIcon(){if(this.message&&this.message.message_type==='snailmail'){this.update({snailmailNotificationPopoverView:this.snailmailNotificationPopoverView?clear():{}});return;}
return this._super();},},fields:{failureNotificationIconClassName:{compute(){if(this.message&&this.message.message_type==='snailmail'){return'fa fa-paper-plane';}
return this._super();},},notificationIconClassName:{compute(){if(this.message&&this.message.message_type==='snailmail'){return'fa fa-paper-plane';}
return this._super();},},snailmailErrorDialog:one('Dialog',{inverse:'messageViewOwnerAsSnailmailError',}),snailmailNotificationPopoverView:one('PopoverView',{inverse:'messageViewOwnerAsSnailmailNotificationContent',}),},});return __exports;});;

/* /snailmail/static/src/models/messaging.js */
odoo.define('@snailmail/models/messaging',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{attr}=require('@mail/model/model_field');registerPatch({name:'Messaging',recordMethods:{async fetchSnailmailCreditsUrl(){const snailmail_credits_url=await this.messaging.rpc({model:'iap.account',method:'get_credits_url',args:['snailmail'],});if(!this.exists()){return;}
this.update({snailmail_credits_url,});},async fetchSnailmailCreditsUrlTrial(){const snailmail_credits_url_trial=await this.messaging.rpc({model:'iap.account',method:'get_credits_url',args:['snailmail','',0,true],});if(!this.exists()){return;}
this.update({snailmail_credits_url_trial,});},},fields:{snailmail_credits_url:attr(),snailmail_credits_url_trial:attr(),},});return __exports;});;

/* /snailmail/static/src/models/notification_group.js */
odoo.define('@snailmail/models/notification_group',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'NotificationGroup',recordMethods:{_openDocuments(){if(this.notification_type!=='snail'){return this._super(...arguments);}
this.env.services.action.doAction({name:this.env._t("Snailmail Failures"),type:'ir.actions.act_window',view_mode:'kanban,list,form',views:[[false,'kanban'],[false,'list'],[false,'form']],target:'current',res_model:this.res_model,domain:[['message_ids.snailmail_error','=',true]],});if(this.messaging.device.isSmall){this.messaging.messagingMenu.close();}},},});return __exports;});;

/* /snailmail/static/src/models/notification_group_view.js */
odoo.define('@snailmail/models/notification_group_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');registerPatch({name:'NotificationGroupView',fields:{imageSrc:{compute(){if(this.notificationGroup.notification_type==='snail'){return'/snailmail/static/img/snailmail_failure.png';}
return this._super();},},},});return __exports;});;

/* /snailmail/static/src/models/popover_view.js */
odoo.define('@snailmail/models/popover_view',async function(require){'use strict';let __exports={};const{registerPatch}=require('@mail/model/model_core');const{one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerPatch({name:'PopoverView',fields:{anchorRef:{compute(){if(this.messageViewOwnerAsSnailmailNotificationContent){return this.messageViewOwnerAsSnailmailNotificationContent.notificationIconRef;}
return this._super();},},content:{compute(){if(this.snailmailNotificationPopoverContentView){return this.snailmailNotificationPopoverContentView;}
return this._super();},},contentComponentName:{compute(){if(this.snailmailNotificationPopoverContentView){return'SnailmailNotificationPopoverContentView';}
return this._super();},},messageViewOwnerAsSnailmailNotificationContent:one('MessageView',{identifying:true,inverse:'snailmailNotificationPopoverView',}),snailmailNotificationPopoverContentView:one('SnailmailNotificationPopoverContentView',{compute(){if(this.messageViewOwnerAsSnailmailNotificationContent){return{};}
return clear();},inverse:'popoverViewOwner',}),},});return __exports;});;

/* /snailmail/static/src/models/snailmail_error_view.js */
odoo.define('@snailmail/models/snailmail_error_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');registerModel({name:'SnailmailErrorView',recordMethods:{containsElement(element){return Boolean(this.component&&this.component.root.el&&this.component.root.el.contains(element));},onClickCancelLetter(){this.message.cancelLetter();this.dialogOwner.delete();},onClickClose(){this.dialogOwner.delete();},onClickResendLetter(){this.message.resendLetter();this.dialogOwner.delete();},},fields:{component:attr(),dialogOwner:one('Dialog',{identifying:true,inverse:'snailmailErrorView',}),hasCreditsError:attr({compute(){return Boolean(this.notification&&(this.notification.failure_type==='sn_credit'||this.notification.failure_type==='sn_trial'));},}),message:one('Message',{compute(){return this.dialogOwner.messageViewOwnerAsSnailmailError.message;},required:true,}),notification:one('Notification',{compute(){return this.message.notifications[0];},required:true,}),},});return __exports;});;

/* /snailmail/static/src/models/snailmail_notification_popover_content_view.js */
odoo.define('@snailmail/models/snailmail_notification_popover_content_view',async function(require){'use strict';let __exports={};const{registerModel}=require('@mail/model/model_core');const{attr,one}=require('@mail/model/model_field');const{clear}=require('@mail/model/model_field_command');registerModel({name:'SnailmailNotificationPopoverContentView',fields:{iconClass:attr({compute(){if(!this.notification){return clear();}
switch(this.notification.notification_status){case'sent':return'fa fa-check';case'ready':return'fa fa-clock-o';case'canceled':return'fa fa-trash-o';default:return'fa fa-exclamation text-danger';}},default:'',}),iconTitle:attr({compute(){if(!this.notification){return clear();}
switch(this.notification.notification_status){case'sent':return this.env._t("Sent");case'ready':return this.env._t("Awaiting Dispatch");case'canceled':return this.env._t("Canceled");default:return this.env._t("Error");}},default:'',}),message:one('Message',{compute(){return this.popoverViewOwner.messageViewOwnerAsSnailmailNotificationContent.message;},}),notification:one('Notification',{compute(){if(!this.message){return clear();}
return this.message.notifications[0];},}),popoverViewOwner:one('PopoverView',{identifying:true,inverse:'snailmailNotificationPopoverContentView',}),},});return __exports;});;

/* /mail/static/src/public/discuss_public_boot.js */
odoo.define('@mail/public/discuss_public_boot',async function(require){'use strict';let __exports={};const{data}=require('mail.discuss_public_channel_template');const{messagingToLegacyEnv}=require('@mail/utils/make_messaging_to_legacy_env');const{DialogManagerContainer}=require('@mail/components/dialog_manager_container/dialog_manager_container');const{DiscussPublicViewContainer}=require('@mail/components/discuss_public_view_container/discuss_public_view_container');const{PopoverManagerContainer}=require('@mail/components/popover_manager_container/popover_manager_container');const{messagingService}=require('@mail/services/messaging_service');const{MainComponentsContainer}=require('@web/core/main_components_container');const{registry}=require('@web/core/registry');const{makeEnv,startServices}=require('@web/env');const{makeLegacyCrashManagerService,makeLegacyDialogMappingService,makeLegacyNotificationService,makeLegacyRpcService,makeLegacySessionService,mapLegacyEnvToWowlEnv,}=require('@web/legacy/utils');const{session}=require('@web/session');const{templates}=require('@web/core/assets');const AbstractService=require('web.AbstractService');const legacyEnv=require('web.env');const legacySession=require('web.session');const{Component,mount,whenReady}=owl;Component.env=legacyEnv;(async function boot(){await whenReady();const messagingValuesService={start(){return{};}};AbstractService.prototype.deployServices(Component.env);const serviceRegistry=registry.category('services');serviceRegistry.add('legacy_rpc',makeLegacyRpcService(Component.env));serviceRegistry.add('legacy_session',makeLegacySessionService(Component.env,legacySession));serviceRegistry.add('legacy_notification',makeLegacyNotificationService(Component.env));serviceRegistry.add('legacy_crash_manager',makeLegacyCrashManagerService(Component.env));serviceRegistry.add('legacy_dialog_mapping',makeLegacyDialogMappingService(Component.env));serviceRegistry.add('messaging',messagingService);serviceRegistry.add('messagingValues',messagingValuesService);registry.category('wowlToLegacyServiceMappers').add('make_messaging_to_legacy_env',messagingToLegacyEnv);const mainComponentsRegistry=registry.category('main_components');mainComponentsRegistry.add('DiscussPublicViewContainer',{Component:DiscussPublicViewContainer,props:{data}});mainComponentsRegistry.add('DialogManagerContainer',{Component:DialogManagerContainer});mainComponentsRegistry.add('PopoverManagerContainer',{Component:PopoverManagerContainer});await legacySession.is_bound;Object.assign(odoo,{info:{db:session.db,server_version:session.server_version,server_version_info:session.server_version_info,isEnterprise:session.server_version_info.slice(-1)[0]==='e',},isReady:false,});const env=makeEnv();await startServices(env);mapLegacyEnvToWowlEnv(Component.env,env);odoo.isReady=true;await mount(MainComponentsContainer,document.body,{env,templates,dev:env.debug});})();return __exports;});;

/* /mail/static/src/public/root_widget.js */
odoo.define("root.widget",function(require){require("@mail/public/discuss_public_boot");const{standaloneAdapter}=require("web.OwlCompatibility");const{Component}=owl;return standaloneAdapter({Component});});;

/* /mail/static/src/services/messaging_service.js */
odoo.define('@mail/services/messaging_service',async function(require){'use strict';let __exports={};const{ModelManager}=require('@mail/model/model_manager');const messagingService=__exports.messagingService={dependencies:['effect','bus_service','localization','messagingValues','orm','presence','router','rpc','ui','user',],start(env,{messagingValues}){const modelManager=new ModelManager(env);this._startModelManager(modelManager,messagingValues);return{async get(){return modelManager.getMessaging();},modelManager,};},_startModelManager(modelManager,messagingValues){modelManager.start(messagingValues);},};return __exports;});;

/* /mail/static/src/utils/deferred.js */
odoo.define('@mail/utils/deferred',async function(require){'use strict';let __exports={};__exports.makeDeferred=makeDeferred;function makeDeferred(){let resolve;let reject;const prom=new Promise(function(res,rej){resolve=res.bind(this);reject=rej.bind(this);});prom.resolve=(...args)=>resolve(...args);prom.reject=(...args)=>reject(...args);return prom;}
return __exports;});;

/* /mail/static/src/utils/make_messaging_to_legacy_env.js */
odoo.define('@mail/utils/make_messaging_to_legacy_env',async function(require){'use strict';let __exports={};__exports.makeMessagingToLegacyEnv=makeMessagingToLegacyEnv;function makeMessagingToLegacyEnv(legacyEnv){return{dependencies:['messaging'],start(_,{messaging}){legacyEnv.services.messaging=messaging;},};}
return __exports;});;

/* /mail/static/src/utils/media_monitoring.js */
odoo.define('@mail/utils/media_monitoring',async function(require){'use strict';let __exports={};const HUMAN_VOICE_FREQUENCY_RANGE=[80,1000];__exports.monitorAudio=monitorAudio;async function monitorAudio(track,processorOptions){const monitoredTrack=track.clone();monitoredTrack.enabled=true;const stream=new window.MediaStream([monitoredTrack]);const AudioContext=window.AudioContext||window.webkitAudioContext;if(!AudioContext){throw'missing audio context';}
const audioContext=new AudioContext();const source=audioContext.createMediaStreamSource(stream);let processor;try{processor=await _loadAudioWorkletProcessor(source,audioContext,processorOptions);}catch(_e){processor=_loadScriptProcessor(source,audioContext,processorOptions);}
return async()=>{processor.disconnect();source.disconnect();monitoredTrack.stop();try{await audioContext.close();}catch(e){if(e.name==='InvalidStateError'){return;}
throw e;}}}
function _loadScriptProcessor(source,audioContext,{frequencyRange=HUMAN_VOICE_FREQUENCY_RANGE,minimumActiveCycles=10,onThreshold,onTic,volumeThreshold=0.3}={}){const bitSize=1024;const analyser=audioContext.createAnalyser();source.connect(analyser);const scriptProcessorNode=audioContext.createScriptProcessor(bitSize,1,1);analyser.connect(scriptProcessorNode);analyser.fftsize=bitSize;scriptProcessorNode.connect(audioContext.destination);const processInterval=50;const intervalInFrames=processInterval/1000*analyser.context.sampleRate;let nextUpdateFrame=processInterval;let activityBuffer=0;let wasAboveThreshold=undefined;let isAboveThreshold=false;scriptProcessorNode.onaudioprocess=()=>{nextUpdateFrame-=bitSize;if(nextUpdateFrame>=0){return;}
nextUpdateFrame+=intervalInFrames;const normalizedVolume=getFrequencyAverage(analyser,frequencyRange[0],frequencyRange[1]);if(normalizedVolume>=volumeThreshold){activityBuffer=minimumActiveCycles;}else if(normalizedVolume<volumeThreshold&&activityBuffer>0){activityBuffer--;}
isAboveThreshold=activityBuffer>0;onTic&&onTic(normalizedVolume);if(wasAboveThreshold!==isAboveThreshold){wasAboveThreshold=isAboveThreshold;onThreshold&&onThreshold(isAboveThreshold);}};return{disconnect:()=>{analyser.disconnect();scriptProcessorNode.disconnect();scriptProcessorNode.onaudioprocess=null;},};}
async function _loadAudioWorkletProcessor(source,audioContext,{frequencyRange=HUMAN_VOICE_FREQUENCY_RANGE,minimumActiveCycles=10,onThreshold,onTic,volumeThreshold=0.3}={}){await audioContext.resume();await audioContext.audioWorklet.addModule('/mail/rtc/audio_worklet_processor');const thresholdProcessor=new window.AudioWorkletNode(audioContext,'audio-processor',{processorOptions:{minimumActiveCycles,volumeThreshold,frequencyRange,postAllTics:!!onTic,}});source.connect(thresholdProcessor);thresholdProcessor.port.onmessage=(event)=>{const{isAboveThreshold,volume}=event.data;onThreshold&&isAboveThreshold!==undefined&&onThreshold(isAboveThreshold);onTic&&volume!==undefined&&onTic(volume);};return{disconnect:()=>{thresholdProcessor.disconnect();},};}
function getFrequencyAverage(analyser,lowerFrequency,higherFrequency){const frequencies=new window.Uint8Array(analyser.frequencyBinCount);analyser.getByteFrequencyData(frequencies);const sampleRate=analyser.context.sampleRate;const startIndex=_getFrequencyIndex(lowerFrequency,sampleRate,analyser.frequencyBinCount);const endIndex=_getFrequencyIndex(higherFrequency,sampleRate,analyser.frequencyBinCount);const count=endIndex-startIndex;let sum=0;for(let index=startIndex;index<endIndex;index++){sum+=frequencies[index]/255;}
if(!count){return 0;}
return sum/count;}
function _getFrequencyIndex(targetFrequency,sampleRate,binCount){const index=Math.round(targetFrequency/(sampleRate/2)*binCount);return Math.min(Math.max(0,index),binCount);}
return __exports;});;

/* /mail/static/src/utils/messaging_component.js */
odoo.define('@mail/utils/messaging_component',async function(require){'use strict';let __exports={};const{useModels}=require('@mail/component_hooks/use_models');const{useRef}=owl;const componentRegistry={};__exports.registerMessagingComponent=registerMessagingComponent;function registerMessagingComponent(ComponentClass){const{defaultProps,components,name,props}=ComponentClass;if(componentRegistry[name]){throw new Error(`There already is a registered component with the name "${name}"`);}
const decoratedName=`@messaging ${name}`;const MessagingClass={[decoratedName]:class extends ComponentClass{setup(){this.root=useRef('root');useModels();super.setup();}
get className(){let res='';if(this.props.className){res+=this.props.className;}
if(this.props.classNameObj){for(const[key,val]of Object.entries(this.props.classNameObj)){if(val){res+=' '+key;}}}
return res;}
get messaging(){return this.env.services.messaging.modelManager.messaging;}
toString(){return`component(${decoratedName}, props: ${Object.entries(this.props || {})})`;}}}[decoratedName];MessagingClass.components=Object.assign(Object.create(componentRegistry),components);MessagingClass.defaultProps={...defaultProps,};MessagingClass.props={className:{type:String,optional:true,},classNameObj:{type:Object,optional:true,},...props,};componentRegistry[name]=MessagingClass;}
__exports.unregisterMessagingComponent=unregisterMessagingComponent;function unregisterMessagingComponent(ComponentClass){delete componentRegistry[ComponentClass.name];}
__exports.getMessagingComponent=getMessagingComponent;function getMessagingComponent(name){return componentRegistry[name];}
return __exports;});;

/* /mail/static/src/utils/utils.js */
odoo.define('@mail/utils/utils',async function(require){'use strict';let __exports={};const{delay}=require('web.concurrency');const{unaccent}=require('web.utils');const eventHandledWeakMap=new WeakMap();function cleanSearchTerm(searchTerm){return unaccent(searchTerm.toLowerCase());}
function isEventHandled(ev,markName){if(!eventHandledWeakMap.get(ev)){return false;}
return eventHandledWeakMap.get(ev).includes(markName);}
function markEventHandled(ev,markName){if(!eventHandledWeakMap.get(ev)){eventHandledWeakMap.set(ev,[]);}
eventHandledWeakMap.get(ev).push(markName);}
async function nextTick(){await delay(0);}
Object.assign(__exports,{cleanSearchTerm,isEventHandled,markEventHandled,nextTick,});return __exports;});;

/* /web/static/lib/luxon/luxon.js */
var luxon=(function(exports){'use strict';function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}
function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,"prototype",{writable:false});return Constructor;}
function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}
return target;};return _extends.apply(this,arguments);}
function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;_setPrototypeOf(subClass,superClass);}
function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf.bind():function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}
function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf?Object.setPrototypeOf.bind():function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}
function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}
function _construct(Parent,args,Class){if(_isNativeReflectConstruct()){_construct=Reflect.construct.bind();}else{_construct=function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var Constructor=Function.bind.apply(Parent,a);var instance=new Constructor();if(Class)_setPrototypeOf(instance,Class.prototype);return instance;};}
return _construct.apply(null,arguments);}
function _isNativeFunction(fn){return Function.toString.call(fn).indexOf("[native code]")!==-1;}
function _wrapNativeSuper(Class){var _cache=typeof Map==="function"?new Map():undefined;_wrapNativeSuper=function _wrapNativeSuper(Class){if(Class===null||!_isNativeFunction(Class))return Class;if(typeof Class!=="function"){throw new TypeError("Super expression must either be null or a function");}
if(typeof _cache!=="undefined"){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper);}
function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor);}
Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:false,writable:true,configurable:true}});return _setPrototypeOf(Wrapper,Class);};return _wrapNativeSuper(Class);}
function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}
return target;}
function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}
function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2;}
function _createForOfIteratorHelperLoose(o,allowArrayLike){var it=typeof Symbol!=="undefined"&&o[Symbol.iterator]||o["@@iterator"];if(it)return(it=it.call(o)).next.bind(it);if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;return function(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};};}
throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}
var LuxonError=function(_Error){_inheritsLoose(LuxonError,_Error);function LuxonError(){return _Error.apply(this,arguments)||this;}
return LuxonError;}(_wrapNativeSuper(Error));var InvalidDateTimeError=function(_LuxonError){_inheritsLoose(InvalidDateTimeError,_LuxonError);function InvalidDateTimeError(reason){return _LuxonError.call(this,"Invalid DateTime: "+reason.toMessage())||this;}
return InvalidDateTimeError;}(LuxonError);var InvalidIntervalError=function(_LuxonError2){_inheritsLoose(InvalidIntervalError,_LuxonError2);function InvalidIntervalError(reason){return _LuxonError2.call(this,"Invalid Interval: "+reason.toMessage())||this;}
return InvalidIntervalError;}(LuxonError);var InvalidDurationError=function(_LuxonError3){_inheritsLoose(InvalidDurationError,_LuxonError3);function InvalidDurationError(reason){return _LuxonError3.call(this,"Invalid Duration: "+reason.toMessage())||this;}
return InvalidDurationError;}(LuxonError);var ConflictingSpecificationError=function(_LuxonError4){_inheritsLoose(ConflictingSpecificationError,_LuxonError4);function ConflictingSpecificationError(){return _LuxonError4.apply(this,arguments)||this;}
return ConflictingSpecificationError;}(LuxonError);var InvalidUnitError=function(_LuxonError5){_inheritsLoose(InvalidUnitError,_LuxonError5);function InvalidUnitError(unit){return _LuxonError5.call(this,"Invalid unit "+unit)||this;}
return InvalidUnitError;}(LuxonError);var InvalidArgumentError=function(_LuxonError6){_inheritsLoose(InvalidArgumentError,_LuxonError6);function InvalidArgumentError(){return _LuxonError6.apply(this,arguments)||this;}
return InvalidArgumentError;}(LuxonError);var ZoneIsAbstractError=function(_LuxonError7){_inheritsLoose(ZoneIsAbstractError,_LuxonError7);function ZoneIsAbstractError(){return _LuxonError7.call(this,"Zone is an abstract class")||this;}
return ZoneIsAbstractError;}(LuxonError);var n="numeric",s="short",l="long";var DATE_SHORT={year:n,month:n,day:n};var DATE_MED={year:n,month:s,day:n};var DATE_MED_WITH_WEEKDAY={year:n,month:s,day:n,weekday:s};var DATE_FULL={year:n,month:l,day:n};var DATE_HUGE={year:n,month:l,day:n,weekday:l};var TIME_SIMPLE={hour:n,minute:n};var TIME_WITH_SECONDS={hour:n,minute:n,second:n};var TIME_WITH_SHORT_OFFSET={hour:n,minute:n,second:n,timeZoneName:s};var TIME_WITH_LONG_OFFSET={hour:n,minute:n,second:n,timeZoneName:l};var TIME_24_SIMPLE={hour:n,minute:n,hourCycle:"h23"};var TIME_24_WITH_SECONDS={hour:n,minute:n,second:n,hourCycle:"h23"};var TIME_24_WITH_SHORT_OFFSET={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:s};var TIME_24_WITH_LONG_OFFSET={hour:n,minute:n,second:n,hourCycle:"h23",timeZoneName:l};var DATETIME_SHORT={year:n,month:n,day:n,hour:n,minute:n};var DATETIME_SHORT_WITH_SECONDS={year:n,month:n,day:n,hour:n,minute:n,second:n};var DATETIME_MED={year:n,month:s,day:n,hour:n,minute:n};var DATETIME_MED_WITH_SECONDS={year:n,month:s,day:n,hour:n,minute:n,second:n};var DATETIME_MED_WITH_WEEKDAY={year:n,month:s,day:n,weekday:s,hour:n,minute:n};var DATETIME_FULL={year:n,month:l,day:n,hour:n,minute:n,timeZoneName:s};var DATETIME_FULL_WITH_SECONDS={year:n,month:l,day:n,hour:n,minute:n,second:n,timeZoneName:s};var DATETIME_HUGE={year:n,month:l,day:n,weekday:l,hour:n,minute:n,timeZoneName:l};var DATETIME_HUGE_WITH_SECONDS={year:n,month:l,day:n,weekday:l,hour:n,minute:n,second:n,timeZoneName:l};function isUndefined(o){return typeof o==="undefined";}
function isNumber(o){return typeof o==="number";}
function isInteger(o){return typeof o==="number"&&o%1===0;}
function isString(o){return typeof o==="string";}
function isDate(o){return Object.prototype.toString.call(o)==="[object Date]";}
function hasRelative(){try{return typeof Intl!=="undefined"&&!!Intl.RelativeTimeFormat;}catch(e){return false;}}
function maybeArray(thing){return Array.isArray(thing)?thing:[thing];}
function bestBy(arr,by,compare){if(arr.length===0){return undefined;}
return arr.reduce(function(best,next){var pair=[by(next),next];if(!best){return pair;}else if(compare(best[0],pair[0])===best[0]){return best;}else{return pair;}},null)[1];}
function pick(obj,keys){return keys.reduce(function(a,k){a[k]=obj[k];return a;},{});}
function hasOwnProperty(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop);}
function integerBetween(thing,bottom,top){return isInteger(thing)&&thing>=bottom&&thing<=top;}
function floorMod(x,n){return x-n*Math.floor(x/n);}
function padStart(input,n){if(n===void 0){n=2;}
var isNeg=input<0;var padded;if(isNeg){padded="-"+(""+-input).padStart(n,"0");}else{padded=(""+input).padStart(n,"0");}
return padded;}
function parseInteger(string){if(isUndefined(string)||string===null||string===""){return undefined;}else{return parseInt(string,10);}}
function parseFloating(string){if(isUndefined(string)||string===null||string===""){return undefined;}else{return parseFloat(string);}}
function parseMillis(fraction){if(isUndefined(fraction)||fraction===null||fraction===""){return undefined;}else{var f=parseFloat("0."+fraction)*1000;return Math.floor(f);}}
function roundTo(number,digits,towardZero){if(towardZero===void 0){towardZero=false;}
var factor=Math.pow(10,digits),rounder=towardZero?Math.trunc:Math.round;return rounder(number*factor)/factor;}
function isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0);}
function daysInYear(year){return isLeapYear(year)?366:365;}
function daysInMonth(year,month){var modMonth=floorMod(month-1,12)+1,modYear=year+(month-modMonth)/12;if(modMonth===2){return isLeapYear(modYear)?29:28;}else{return[31,null,31,30,31,30,31,31,30,31,30,31][modMonth-1];}}
function objToLocalTS(obj){var d=Date.UTC(obj.year,obj.month-1,obj.day,obj.hour,obj.minute,obj.second,obj.millisecond);if(obj.year<100&&obj.year>=0){d=new Date(d);d.setUTCFullYear(d.getUTCFullYear()-1900);}
return+d;}
function weeksInWeekYear(weekYear){var p1=(weekYear+Math.floor(weekYear/4)-Math.floor(weekYear/100)+Math.floor(weekYear/400))%7,last=weekYear-1,p2=(last+Math.floor(last/4)-Math.floor(last/100)+Math.floor(last/400))%7;return p1===4||p2===3?53:52;}
function untruncateYear(year){if(year>99){return year;}else return year>60?1900+year:2000+year;}
function parseZoneInfo(ts,offsetFormat,locale,timeZone){if(timeZone===void 0){timeZone=null;}
var date=new Date(ts),intlOpts={hourCycle:"h23",year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"};if(timeZone){intlOpts.timeZone=timeZone;}
var modified=_extends({timeZoneName:offsetFormat},intlOpts);var parsed=new Intl.DateTimeFormat(locale,modified).formatToParts(date).find(function(m){return m.type.toLowerCase()==="timezonename";});return parsed?parsed.value:null;}
function signedOffset(offHourStr,offMinuteStr){var offHour=parseInt(offHourStr,10);if(Number.isNaN(offHour)){offHour=0;}
var offMin=parseInt(offMinuteStr,10)||0,offMinSigned=offHour<0||Object.is(offHour,-0)?-offMin:offMin;return offHour*60+offMinSigned;}
function asNumber(value){var numericValue=Number(value);if(typeof value==="boolean"||value===""||Number.isNaN(numericValue))throw new InvalidArgumentError("Invalid unit value "+value);return numericValue;}
function normalizeObject(obj,normalizer){var normalized={};for(var u in obj){if(hasOwnProperty(obj,u)){var v=obj[u];if(v===undefined||v===null)continue;normalized[normalizer(u)]=asNumber(v);}}
return normalized;}
function formatOffset(offset,format){var hours=Math.trunc(Math.abs(offset/60)),minutes=Math.trunc(Math.abs(offset%60)),sign=offset>=0?"+":"-";switch(format){case"short":return""+sign+padStart(hours,2)+":"+padStart(minutes,2);case"narrow":return""+sign+hours+(minutes>0?":"+minutes:"");case"techie":return""+sign+padStart(hours,2)+padStart(minutes,2);default:throw new RangeError("Value format "+format+" is out of range for property format");}}
function timeObject(obj){return pick(obj,["hour","minute","second","millisecond"]);}
var ianaRegex=/[A-Za-z_+-]{1,256}(?::?\/[A-Za-z0-9_+-]{1,256}(?:\/[A-Za-z0-9_+-]{1,256})?)?/;var monthsLong=["January","February","March","April","May","June","July","August","September","October","November","December"];var monthsShort=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];var monthsNarrow=["J","F","M","A","M","J","J","A","S","O","N","D"];function months(length){switch(length){case"narrow":return[].concat(monthsNarrow);case"short":return[].concat(monthsShort);case"long":return[].concat(monthsLong);case"numeric":return["1","2","3","4","5","6","7","8","9","10","11","12"];case"2-digit":return["01","02","03","04","05","06","07","08","09","10","11","12"];default:return null;}}
var weekdaysLong=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];var weekdaysShort=["Mon","Tue","Wed","Thu","Fri","Sat","Sun"];var weekdaysNarrow=["M","T","W","T","F","S","S"];function weekdays(length){switch(length){case"narrow":return[].concat(weekdaysNarrow);case"short":return[].concat(weekdaysShort);case"long":return[].concat(weekdaysLong);case"numeric":return["1","2","3","4","5","6","7"];default:return null;}}
var meridiems=["AM","PM"];var erasLong=["Before Christ","Anno Domini"];var erasShort=["BC","AD"];var erasNarrow=["B","A"];function eras(length){switch(length){case"narrow":return[].concat(erasNarrow);case"short":return[].concat(erasShort);case"long":return[].concat(erasLong);default:return null;}}
function meridiemForDateTime(dt){return meridiems[dt.hour<12?0:1];}
function weekdayForDateTime(dt,length){return weekdays(length)[dt.weekday-1];}
function monthForDateTime(dt,length){return months(length)[dt.month-1];}
function eraForDateTime(dt,length){return eras(length)[dt.year<0?0:1];}
function formatRelativeTime(unit,count,numeric,narrow){if(numeric===void 0){numeric="always";}
if(narrow===void 0){narrow=false;}
var units={years:["year","yr."],quarters:["quarter","qtr."],months:["month","mo."],weeks:["week","wk."],days:["day","day","days"],hours:["hour","hr."],minutes:["minute","min."],seconds:["second","sec."]};var lastable=["hours","minutes","seconds"].indexOf(unit)===-1;if(numeric==="auto"&&lastable){var isDay=unit==="days";switch(count){case 1:return isDay?"tomorrow":"next "+units[unit][0];case-1:return isDay?"yesterday":"last "+units[unit][0];case 0:return isDay?"today":"this "+units[unit][0];}}
var isInPast=Object.is(count,-0)||count<0,fmtValue=Math.abs(count),singular=fmtValue===1,lilUnits=units[unit],fmtUnit=narrow?singular?lilUnits[1]:lilUnits[2]||lilUnits[1]:singular?units[unit][0]:unit;return isInPast?fmtValue+" "+fmtUnit+" ago":"in "+fmtValue+" "+fmtUnit;}
function stringifyTokens(splits,tokenToString){var s="";for(var _iterator=_createForOfIteratorHelperLoose(splits),_step;!(_step=_iterator()).done;){var token=_step.value;if(token.literal){s+=token.val;}else{s+=tokenToString(token.val);}}
return s;}
var _macroTokenToFormatOpts={D:DATE_SHORT,DD:DATE_MED,DDD:DATE_FULL,DDDD:DATE_HUGE,t:TIME_SIMPLE,tt:TIME_WITH_SECONDS,ttt:TIME_WITH_SHORT_OFFSET,tttt:TIME_WITH_LONG_OFFSET,T:TIME_24_SIMPLE,TT:TIME_24_WITH_SECONDS,TTT:TIME_24_WITH_SHORT_OFFSET,TTTT:TIME_24_WITH_LONG_OFFSET,f:DATETIME_SHORT,ff:DATETIME_MED,fff:DATETIME_FULL,ffff:DATETIME_HUGE,F:DATETIME_SHORT_WITH_SECONDS,FF:DATETIME_MED_WITH_SECONDS,FFF:DATETIME_FULL_WITH_SECONDS,FFFF:DATETIME_HUGE_WITH_SECONDS};var Formatter=function(){Formatter.create=function create(locale,opts){if(opts===void 0){opts={};}
return new Formatter(locale,opts);};Formatter.parseFormat=function parseFormat(fmt){var current=null,currentFull="",bracketed=false;var splits=[];for(var i=0;i<fmt.length;i++){var c=fmt.charAt(i);if(c==="'"){if(currentFull.length>0){splits.push({literal:bracketed,val:currentFull});}
current=null;currentFull="";bracketed=!bracketed;}else if(bracketed){currentFull+=c;}else if(c===current){currentFull+=c;}else{if(currentFull.length>0){splits.push({literal:false,val:currentFull});}
currentFull=c;current=c;}}
if(currentFull.length>0){splits.push({literal:bracketed,val:currentFull});}
return splits;};Formatter.macroTokenToFormatOpts=function macroTokenToFormatOpts(token){return _macroTokenToFormatOpts[token];};function Formatter(locale,formatOpts){this.opts=formatOpts;this.loc=locale;this.systemLoc=null;}
var _proto=Formatter.prototype;_proto.formatWithSystemDefault=function formatWithSystemDefault(dt,opts){if(this.systemLoc===null){this.systemLoc=this.loc.redefaultToSystem();}
var df=this.systemLoc.dtFormatter(dt,_extends({},this.opts,opts));return df.format();};_proto.formatDateTime=function formatDateTime(dt,opts){if(opts===void 0){opts={};}
var df=this.loc.dtFormatter(dt,_extends({},this.opts,opts));return df.format();};_proto.formatDateTimeParts=function formatDateTimeParts(dt,opts){if(opts===void 0){opts={};}
var df=this.loc.dtFormatter(dt,_extends({},this.opts,opts));return df.formatToParts();};_proto.resolvedOptions=function resolvedOptions(dt,opts){if(opts===void 0){opts={};}
var df=this.loc.dtFormatter(dt,_extends({},this.opts,opts));return df.resolvedOptions();};_proto.num=function num(n,p){if(p===void 0){p=0;}
if(this.opts.forceSimple){return padStart(n,p);}
var opts=_extends({},this.opts);if(p>0){opts.padTo=p;}
return this.loc.numberFormatter(opts).format(n);};_proto.formatDateTimeFromString=function formatDateTimeFromString(dt,fmt){var _this=this;var knownEnglish=this.loc.listingMode()==="en",useDateTimeFormatter=this.loc.outputCalendar&&this.loc.outputCalendar!=="gregory",string=function string(opts,extract){return _this.loc.extract(dt,opts,extract);},formatOffset=function formatOffset(opts){if(dt.isOffsetFixed&&dt.offset===0&&opts.allowZ){return"Z";}
return dt.isValid?dt.zone.formatOffset(dt.ts,opts.format):"";},meridiem=function meridiem(){return knownEnglish?meridiemForDateTime(dt):string({hour:"numeric",hourCycle:"h12"},"dayperiod");},month=function month(length,standalone){return knownEnglish?monthForDateTime(dt,length):string(standalone?{month:length}:{month:length,day:"numeric"},"month");},weekday=function weekday(length,standalone){return knownEnglish?weekdayForDateTime(dt,length):string(standalone?{weekday:length}:{weekday:length,month:"long",day:"numeric"},"weekday");},maybeMacro=function maybeMacro(token){var formatOpts=Formatter.macroTokenToFormatOpts(token);if(formatOpts){return _this.formatWithSystemDefault(dt,formatOpts);}else{return token;}},era=function era(length){return knownEnglish?eraForDateTime(dt,length):string({era:length},"era");},tokenToString=function tokenToString(token){switch(token){case"S":return _this.num(dt.millisecond);case"u":case"SSS":return _this.num(dt.millisecond,3);case"s":return _this.num(dt.second);case"ss":return _this.num(dt.second,2);case"uu":return _this.num(Math.floor(dt.millisecond/10),2);case"uuu":return _this.num(Math.floor(dt.millisecond/100));case"m":return _this.num(dt.minute);case"mm":return _this.num(dt.minute,2);case"h":return _this.num(dt.hour%12===0?12:dt.hour%12);case"hh":return _this.num(dt.hour%12===0?12:dt.hour%12,2);case"H":return _this.num(dt.hour);case"HH":return _this.num(dt.hour,2);case"Z":return formatOffset({format:"narrow",allowZ:_this.opts.allowZ});case"ZZ":return formatOffset({format:"short",allowZ:_this.opts.allowZ});case"ZZZ":return formatOffset({format:"techie",allowZ:_this.opts.allowZ});case"ZZZZ":return dt.zone.offsetName(dt.ts,{format:"short",locale:_this.loc.locale});case"ZZZZZ":return dt.zone.offsetName(dt.ts,{format:"long",locale:_this.loc.locale});case"z":return dt.zoneName;case"a":return meridiem();case"d":return useDateTimeFormatter?string({day:"numeric"},"day"):_this.num(dt.day);case"dd":return useDateTimeFormatter?string({day:"2-digit"},"day"):_this.num(dt.day,2);case"c":return _this.num(dt.weekday);case"ccc":return weekday("short",true);case"cccc":return weekday("long",true);case"ccccc":return weekday("narrow",true);case"E":return _this.num(dt.weekday);case"EEE":return weekday("short",false);case"EEEE":return weekday("long",false);case"EEEEE":return weekday("narrow",false);case"L":return useDateTimeFormatter?string({month:"numeric",day:"numeric"},"month"):_this.num(dt.month);case"LL":return useDateTimeFormatter?string({month:"2-digit",day:"numeric"},"month"):_this.num(dt.month,2);case"LLL":return month("short",true);case"LLLL":return month("long",true);case"LLLLL":return month("narrow",true);case"M":return useDateTimeFormatter?string({month:"numeric"},"month"):_this.num(dt.month);case"MM":return useDateTimeFormatter?string({month:"2-digit"},"month"):_this.num(dt.month,2);case"MMM":return month("short",false);case"MMMM":return month("long",false);case"MMMMM":return month("narrow",false);case"y":return useDateTimeFormatter?string({year:"numeric"},"year"):_this.num(dt.year);case"yy":return useDateTimeFormatter?string({year:"2-digit"},"year"):_this.num(dt.year.toString().slice(-2),2);case"yyyy":return useDateTimeFormatter?string({year:"numeric"},"year"):_this.num(dt.year,4);case"yyyyyy":return useDateTimeFormatter?string({year:"numeric"},"year"):_this.num(dt.year,6);case"G":return era("short");case"GG":return era("long");case"GGGGG":return era("narrow");case"kk":return _this.num(dt.weekYear.toString().slice(-2),2);case"kkkk":return _this.num(dt.weekYear,4);case"W":return _this.num(dt.weekNumber);case"WW":return _this.num(dt.weekNumber,2);case"o":return _this.num(dt.ordinal);case"ooo":return _this.num(dt.ordinal,3);case"q":return _this.num(dt.quarter);case"qq":return _this.num(dt.quarter,2);case"X":return _this.num(Math.floor(dt.ts/1000));case"x":return _this.num(dt.ts);default:return maybeMacro(token);}};return stringifyTokens(Formatter.parseFormat(fmt),tokenToString);};_proto.formatDurationFromString=function formatDurationFromString(dur,fmt){var _this2=this;var tokenToField=function tokenToField(token){switch(token[0]){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":return"hour";case"d":return"day";case"w":return"week";case"M":return"month";case"y":return"year";default:return null;}},tokenToString=function tokenToString(lildur){return function(token){var mapped=tokenToField(token);if(mapped){return _this2.num(lildur.get(mapped),token.length);}else{return token;}};},tokens=Formatter.parseFormat(fmt),realTokens=tokens.reduce(function(found,_ref){var literal=_ref.literal,val=_ref.val;return literal?found:found.concat(val);},[]),collapsed=dur.shiftTo.apply(dur,realTokens.map(tokenToField).filter(function(t){return t;}));return stringifyTokens(tokens,tokenToString(collapsed));};return Formatter;}();var Invalid=function(){function Invalid(reason,explanation){this.reason=reason;this.explanation=explanation;}
var _proto=Invalid.prototype;_proto.toMessage=function toMessage(){if(this.explanation){return this.reason+": "+this.explanation;}else{return this.reason;}};return Invalid;}();var Zone=function(){function Zone(){}
var _proto=Zone.prototype;_proto.offsetName=function offsetName(ts,opts){throw new ZoneIsAbstractError();};_proto.formatOffset=function formatOffset(ts,format){throw new ZoneIsAbstractError();};_proto.offset=function offset(ts){throw new ZoneIsAbstractError();};_proto.equals=function equals(otherZone){throw new ZoneIsAbstractError();};_createClass(Zone,[{key:"type",get:function get(){throw new ZoneIsAbstractError();}},{key:"name",get:function get(){throw new ZoneIsAbstractError();}},{key:"ianaName",get:function get(){return this.name;}},{key:"isUniversal",get:function get(){throw new ZoneIsAbstractError();}},{key:"isValid",get:function get(){throw new ZoneIsAbstractError();}}]);return Zone;}();var singleton$1=null;var SystemZone=function(_Zone){_inheritsLoose(SystemZone,_Zone);function SystemZone(){return _Zone.apply(this,arguments)||this;}
var _proto=SystemZone.prototype;_proto.offsetName=function offsetName(ts,_ref){var format=_ref.format,locale=_ref.locale;return parseZoneInfo(ts,format,locale);};_proto.formatOffset=function formatOffset$1(ts,format){return formatOffset(this.offset(ts),format);};_proto.offset=function offset(ts){return-new Date(ts).getTimezoneOffset();};_proto.equals=function equals(otherZone){return otherZone.type==="system";};_createClass(SystemZone,[{key:"type",get:function get(){return"system";}},{key:"name",get:function get(){return new Intl.DateTimeFormat().resolvedOptions().timeZone;}},{key:"isUniversal",get:function get(){return false;}},{key:"isValid",get:function get(){return true;}}],[{key:"instance",get:function get(){if(singleton$1===null){singleton$1=new SystemZone();}
return singleton$1;}}]);return SystemZone;}(Zone);var dtfCache={};function makeDTF(zone){if(!dtfCache[zone]){dtfCache[zone]=new Intl.DateTimeFormat("en-US",{hour12:false,timeZone:zone,year:"numeric",month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit",second:"2-digit",era:"short"});}
return dtfCache[zone];}
var typeToPos={year:0,month:1,day:2,era:3,hour:4,minute:5,second:6};function hackyOffset(dtf,date){var formatted=dtf.format(date).replace(/\u200E/g,""),parsed=/(\d+)\/(\d+)\/(\d+) (AD|BC),? (\d+):(\d+):(\d+)/.exec(formatted),fMonth=parsed[1],fDay=parsed[2],fYear=parsed[3],fadOrBc=parsed[4],fHour=parsed[5],fMinute=parsed[6],fSecond=parsed[7];return[fYear,fMonth,fDay,fadOrBc,fHour,fMinute,fSecond];}
function partsOffset(dtf,date){var formatted=dtf.formatToParts(date);var filled=[];for(var i=0;i<formatted.length;i++){var _formatted$i=formatted[i],type=_formatted$i.type,value=_formatted$i.value;var pos=typeToPos[type];if(type==="era"){filled[pos]=value;}else if(!isUndefined(pos)){filled[pos]=parseInt(value,10);}}
return filled;}
var ianaZoneCache={};var IANAZone=function(_Zone){_inheritsLoose(IANAZone,_Zone);IANAZone.create=function create(name){if(!ianaZoneCache[name]){ianaZoneCache[name]=new IANAZone(name);}
return ianaZoneCache[name];};IANAZone.resetCache=function resetCache(){ianaZoneCache={};dtfCache={};};IANAZone.isValidSpecifier=function isValidSpecifier(s){return this.isValidZone(s);};IANAZone.isValidZone=function isValidZone(zone){if(!zone){return false;}
try{new Intl.DateTimeFormat("en-US",{timeZone:zone}).format();return true;}catch(e){return false;}};function IANAZone(name){var _this;_this=_Zone.call(this)||this;_this.zoneName=name;_this.valid=IANAZone.isValidZone(name);return _this;}
var _proto=IANAZone.prototype;_proto.offsetName=function offsetName(ts,_ref){var format=_ref.format,locale=_ref.locale;return parseZoneInfo(ts,format,locale,this.name);};_proto.formatOffset=function formatOffset$1(ts,format){return formatOffset(this.offset(ts),format);};_proto.offset=function offset(ts){var date=new Date(ts);if(isNaN(date))return NaN;var dtf=makeDTF(this.name);var _ref2=dtf.formatToParts?partsOffset(dtf,date):hackyOffset(dtf,date),year=_ref2[0],month=_ref2[1],day=_ref2[2],adOrBc=_ref2[3],hour=_ref2[4],minute=_ref2[5],second=_ref2[6];if(adOrBc==="BC"){year=-Math.abs(year)+1;}
var adjustedHour=hour===24?0:hour;var asUTC=objToLocalTS({year:year,month:month,day:day,hour:adjustedHour,minute:minute,second:second,millisecond:0});var asTS=+date;var over=asTS%1000;asTS-=over>=0?over:1000+over;return(asUTC-asTS)/(60*1000);};_proto.equals=function equals(otherZone){return otherZone.type==="iana"&&otherZone.name===this.name;};_createClass(IANAZone,[{key:"type",get:function get(){return"iana";}},{key:"name",get:function get(){return this.zoneName;}},{key:"isUniversal",get:function get(){return false;}},{key:"isValid",get:function get(){return this.valid;}}]);return IANAZone;}(Zone);var singleton=null;var FixedOffsetZone=function(_Zone){_inheritsLoose(FixedOffsetZone,_Zone);FixedOffsetZone.instance=function instance(offset){return offset===0?FixedOffsetZone.utcInstance:new FixedOffsetZone(offset);};FixedOffsetZone.parseSpecifier=function parseSpecifier(s){if(s){var r=s.match(/^utc(?:([+-]\d{1,2})(?::(\d{2}))?)?$/i);if(r){return new FixedOffsetZone(signedOffset(r[1],r[2]));}}
return null;};function FixedOffsetZone(offset){var _this;_this=_Zone.call(this)||this;_this.fixed=offset;return _this;}
var _proto=FixedOffsetZone.prototype;_proto.offsetName=function offsetName(){return this.name;};_proto.formatOffset=function formatOffset$1(ts,format){return formatOffset(this.fixed,format);};_proto.offset=function offset(){return this.fixed;};_proto.equals=function equals(otherZone){return otherZone.type==="fixed"&&otherZone.fixed===this.fixed;};_createClass(FixedOffsetZone,[{key:"type",get:function get(){return"fixed";}},{key:"name",get:function get(){return this.fixed===0?"UTC":"UTC"+formatOffset(this.fixed,"narrow");}},{key:"ianaName",get:function get(){if(this.fixed===0){return"Etc/UTC";}else{return"Etc/GMT"+formatOffset(-this.fixed,"narrow");}}},{key:"isUniversal",get:function get(){return true;}},{key:"isValid",get:function get(){return true;}}],[{key:"utcInstance",get:function get(){if(singleton===null){singleton=new FixedOffsetZone(0);}
return singleton;}}]);return FixedOffsetZone;}(Zone);var InvalidZone=function(_Zone){_inheritsLoose(InvalidZone,_Zone);function InvalidZone(zoneName){var _this;_this=_Zone.call(this)||this;_this.zoneName=zoneName;return _this;}
var _proto=InvalidZone.prototype;_proto.offsetName=function offsetName(){return null;};_proto.formatOffset=function formatOffset(){return"";};_proto.offset=function offset(){return NaN;};_proto.equals=function equals(){return false;};_createClass(InvalidZone,[{key:"type",get:function get(){return"invalid";}},{key:"name",get:function get(){return this.zoneName;}},{key:"isUniversal",get:function get(){return false;}},{key:"isValid",get:function get(){return false;}}]);return InvalidZone;}(Zone);function normalizeZone(input,defaultZone){if(isUndefined(input)||input===null){return defaultZone;}else if(input instanceof Zone){return input;}else if(isString(input)){var lowered=input.toLowerCase();if(lowered==="default")return defaultZone;else if(lowered==="local"||lowered==="system")return SystemZone.instance;else if(lowered==="utc"||lowered==="gmt")return FixedOffsetZone.utcInstance;else return FixedOffsetZone.parseSpecifier(lowered)||IANAZone.create(input);}else if(isNumber(input)){return FixedOffsetZone.instance(input);}else if(typeof input==="object"&&input.offset&&typeof input.offset==="number"){return input;}else{return new InvalidZone(input);}}
var now=function now(){return Date.now();},defaultZone="system",defaultLocale=null,defaultNumberingSystem=null,defaultOutputCalendar=null,throwOnInvalid;var Settings=function(){function Settings(){}
Settings.resetCaches=function resetCaches(){Locale.resetCache();IANAZone.resetCache();};_createClass(Settings,null,[{key:"now",get:function get(){return now;},set:function set(n){now=n;}},{key:"defaultZone",get:function get(){return normalizeZone(defaultZone,SystemZone.instance);},set:function set(zone){defaultZone=zone;}},{key:"defaultLocale",get:function get(){return defaultLocale;},set:function set(locale){defaultLocale=locale;}},{key:"defaultNumberingSystem",get:function get(){return defaultNumberingSystem;},set:function set(numberingSystem){defaultNumberingSystem=numberingSystem;}},{key:"defaultOutputCalendar",get:function get(){return defaultOutputCalendar;},set:function set(outputCalendar){defaultOutputCalendar=outputCalendar;}},{key:"throwOnInvalid",get:function get(){return throwOnInvalid;},set:function set(t){throwOnInvalid=t;}}]);return Settings;}();var _excluded=["base"],_excluded2=["padTo","floor"];var intlLFCache={};function getCachedLF(locString,opts){if(opts===void 0){opts={};}
var key=JSON.stringify([locString,opts]);var dtf=intlLFCache[key];if(!dtf){dtf=new Intl.ListFormat(locString,opts);intlLFCache[key]=dtf;}
return dtf;}
var intlDTCache={};function getCachedDTF(locString,opts){if(opts===void 0){opts={};}
var key=JSON.stringify([locString,opts]);var dtf=intlDTCache[key];if(!dtf){dtf=new Intl.DateTimeFormat(locString,opts);intlDTCache[key]=dtf;}
return dtf;}
var intlNumCache={};function getCachedINF(locString,opts){if(opts===void 0){opts={};}
var key=JSON.stringify([locString,opts]);var inf=intlNumCache[key];if(!inf){inf=new Intl.NumberFormat(locString,opts);intlNumCache[key]=inf;}
return inf;}
var intlRelCache={};function getCachedRTF(locString,opts){if(opts===void 0){opts={};}
var _opts=opts;_opts.base;var cacheKeyOpts=_objectWithoutPropertiesLoose(_opts,_excluded);var key=JSON.stringify([locString,cacheKeyOpts]);var inf=intlRelCache[key];if(!inf){inf=new Intl.RelativeTimeFormat(locString,opts);intlRelCache[key]=inf;}
return inf;}
var sysLocaleCache=null;function systemLocale(){if(sysLocaleCache){return sysLocaleCache;}else{sysLocaleCache=new Intl.DateTimeFormat().resolvedOptions().locale;return sysLocaleCache;}}
function parseLocaleString(localeStr){var uIndex=localeStr.indexOf("-u-");if(uIndex===-1){return[localeStr];}else{var options;var smaller=localeStr.substring(0,uIndex);try{options=getCachedDTF(localeStr).resolvedOptions();}catch(e){options=getCachedDTF(smaller).resolvedOptions();}
var _options=options,numberingSystem=_options.numberingSystem,calendar=_options.calendar;return[smaller,numberingSystem,calendar];}}
function intlConfigString(localeStr,numberingSystem,outputCalendar){if(outputCalendar||numberingSystem){localeStr+="-u";if(outputCalendar){localeStr+="-ca-"+outputCalendar;}
if(numberingSystem){localeStr+="-nu-"+numberingSystem;}
return localeStr;}else{return localeStr;}}
function mapMonths(f){var ms=[];for(var i=1;i<=12;i++){var dt=DateTime.utc(2016,i,1);ms.push(f(dt));}
return ms;}
function mapWeekdays(f){var ms=[];for(var i=1;i<=7;i++){var dt=DateTime.utc(2016,11,13+i);ms.push(f(dt));}
return ms;}
function listStuff(loc,length,defaultOK,englishFn,intlFn){var mode=loc.listingMode(defaultOK);if(mode==="error"){return null;}else if(mode==="en"){return englishFn(length);}else{return intlFn(length);}}
function supportsFastNumbers(loc){if(loc.numberingSystem&&loc.numberingSystem!=="latn"){return false;}else{return loc.numberingSystem==="latn"||!loc.locale||loc.locale.startsWith("en")||new Intl.DateTimeFormat(loc.intl).resolvedOptions().numberingSystem==="latn";}}
var PolyNumberFormatter=function(){function PolyNumberFormatter(intl,forceSimple,opts){this.padTo=opts.padTo||0;this.floor=opts.floor||false;opts.padTo;opts.floor;var otherOpts=_objectWithoutPropertiesLoose(opts,_excluded2);if(!forceSimple||Object.keys(otherOpts).length>0){var intlOpts=_extends({useGrouping:false},opts);if(opts.padTo>0)intlOpts.minimumIntegerDigits=opts.padTo;this.inf=getCachedINF(intl,intlOpts);}}
var _proto=PolyNumberFormatter.prototype;_proto.format=function format(i){if(this.inf){var fixed=this.floor?Math.floor(i):i;return this.inf.format(fixed);}else{var _fixed=this.floor?Math.floor(i):roundTo(i,3);return padStart(_fixed,this.padTo);}};return PolyNumberFormatter;}();var PolyDateFormatter=function(){function PolyDateFormatter(dt,intl,opts){this.opts=opts;var z;if(dt.zone.isUniversal){var gmtOffset=-1*(dt.offset/60);var offsetZ=gmtOffset>=0?"Etc/GMT+"+gmtOffset:"Etc/GMT"+gmtOffset;if(dt.offset!==0&&IANAZone.create(offsetZ).valid){z=offsetZ;this.dt=dt;}else{z="UTC";if(opts.timeZoneName){this.dt=dt;}else{this.dt=dt.offset===0?dt:DateTime.fromMillis(dt.ts+dt.offset*60*1000);}}}else if(dt.zone.type==="system"){this.dt=dt;}else{this.dt=dt;z=dt.zone.name;}
var intlOpts=_extends({},this.opts);if(z){intlOpts.timeZone=z;}
this.dtf=getCachedDTF(intl,intlOpts);}
var _proto2=PolyDateFormatter.prototype;_proto2.format=function format(){return this.dtf.format(this.dt.toJSDate());};_proto2.formatToParts=function formatToParts(){return this.dtf.formatToParts(this.dt.toJSDate());};_proto2.resolvedOptions=function resolvedOptions(){return this.dtf.resolvedOptions();};return PolyDateFormatter;}();var PolyRelFormatter=function(){function PolyRelFormatter(intl,isEnglish,opts){this.opts=_extends({style:"long"},opts);if(!isEnglish&&hasRelative()){this.rtf=getCachedRTF(intl,opts);}}
var _proto3=PolyRelFormatter.prototype;_proto3.format=function format(count,unit){if(this.rtf){return this.rtf.format(count,unit);}else{return formatRelativeTime(unit,count,this.opts.numeric,this.opts.style!=="long");}};_proto3.formatToParts=function formatToParts(count,unit){if(this.rtf){return this.rtf.formatToParts(count,unit);}else{return[];}};return PolyRelFormatter;}();var Locale=function(){Locale.fromOpts=function fromOpts(opts){return Locale.create(opts.locale,opts.numberingSystem,opts.outputCalendar,opts.defaultToEN);};Locale.create=function create(locale,numberingSystem,outputCalendar,defaultToEN){if(defaultToEN===void 0){defaultToEN=false;}
var specifiedLocale=locale||Settings.defaultLocale;var localeR=specifiedLocale||(defaultToEN?"en-US":systemLocale());var numberingSystemR=numberingSystem||Settings.defaultNumberingSystem;var outputCalendarR=outputCalendar||Settings.defaultOutputCalendar;return new Locale(localeR,numberingSystemR,outputCalendarR,specifiedLocale);};Locale.resetCache=function resetCache(){sysLocaleCache=null;intlDTCache={};intlNumCache={};intlRelCache={};};Locale.fromObject=function fromObject(_temp){var _ref=_temp===void 0?{}:_temp,locale=_ref.locale,numberingSystem=_ref.numberingSystem,outputCalendar=_ref.outputCalendar;return Locale.create(locale,numberingSystem,outputCalendar);};function Locale(locale,numbering,outputCalendar,specifiedLocale){var _parseLocaleString=parseLocaleString(locale),parsedLocale=_parseLocaleString[0],parsedNumberingSystem=_parseLocaleString[1],parsedOutputCalendar=_parseLocaleString[2];this.locale=parsedLocale;this.numberingSystem=numbering||parsedNumberingSystem||null;this.outputCalendar=outputCalendar||parsedOutputCalendar||null;this.intl=intlConfigString(this.locale,this.numberingSystem,this.outputCalendar);this.weekdaysCache={format:{},standalone:{}};this.monthsCache={format:{},standalone:{}};this.meridiemCache=null;this.eraCache={};this.specifiedLocale=specifiedLocale;this.fastNumbersCached=null;}
var _proto4=Locale.prototype;_proto4.listingMode=function listingMode(){var isActuallyEn=this.isEnglish();var hasNoWeirdness=(this.numberingSystem===null||this.numberingSystem==="latn")&&(this.outputCalendar===null||this.outputCalendar==="gregory");return isActuallyEn&&hasNoWeirdness?"en":"intl";};_proto4.clone=function clone(alts){if(!alts||Object.getOwnPropertyNames(alts).length===0){return this;}else{return Locale.create(alts.locale||this.specifiedLocale,alts.numberingSystem||this.numberingSystem,alts.outputCalendar||this.outputCalendar,alts.defaultToEN||false);}};_proto4.redefaultToEN=function redefaultToEN(alts){if(alts===void 0){alts={};}
return this.clone(_extends({},alts,{defaultToEN:true}));};_proto4.redefaultToSystem=function redefaultToSystem(alts){if(alts===void 0){alts={};}
return this.clone(_extends({},alts,{defaultToEN:false}));};_proto4.months=function months$1(length,format,defaultOK){var _this=this;if(format===void 0){format=false;}
if(defaultOK===void 0){defaultOK=true;}
return listStuff(this,length,defaultOK,months,function(){var intl=format?{month:length,day:"numeric"}:{month:length},formatStr=format?"format":"standalone";if(!_this.monthsCache[formatStr][length]){_this.monthsCache[formatStr][length]=mapMonths(function(dt){return _this.extract(dt,intl,"month");});}
return _this.monthsCache[formatStr][length];});};_proto4.weekdays=function weekdays$1(length,format,defaultOK){var _this2=this;if(format===void 0){format=false;}
if(defaultOK===void 0){defaultOK=true;}
return listStuff(this,length,defaultOK,weekdays,function(){var intl=format?{weekday:length,year:"numeric",month:"long",day:"numeric"}:{weekday:length},formatStr=format?"format":"standalone";if(!_this2.weekdaysCache[formatStr][length]){_this2.weekdaysCache[formatStr][length]=mapWeekdays(function(dt){return _this2.extract(dt,intl,"weekday");});}
return _this2.weekdaysCache[formatStr][length];});};_proto4.meridiems=function meridiems$1(defaultOK){var _this3=this;if(defaultOK===void 0){defaultOK=true;}
return listStuff(this,undefined,defaultOK,function(){return meridiems;},function(){if(!_this3.meridiemCache){var intl={hour:"numeric",hourCycle:"h12"};_this3.meridiemCache=[DateTime.utc(2016,11,13,9),DateTime.utc(2016,11,13,19)].map(function(dt){return _this3.extract(dt,intl,"dayperiod");});}
return _this3.meridiemCache;});};_proto4.eras=function eras$1(length,defaultOK){var _this4=this;if(defaultOK===void 0){defaultOK=true;}
return listStuff(this,length,defaultOK,eras,function(){var intl={era:length};if(!_this4.eraCache[length]){_this4.eraCache[length]=[DateTime.utc(-40,1,1),DateTime.utc(2017,1,1)].map(function(dt){return _this4.extract(dt,intl,"era");});}
return _this4.eraCache[length];});};_proto4.extract=function extract(dt,intlOpts,field){var df=this.dtFormatter(dt,intlOpts),results=df.formatToParts(),matching=results.find(function(m){return m.type.toLowerCase()===field;});return matching?matching.value:null;};_proto4.numberFormatter=function numberFormatter(opts){if(opts===void 0){opts={};}
return new PolyNumberFormatter(this.intl,opts.forceSimple||this.fastNumbers,opts);};_proto4.dtFormatter=function dtFormatter(dt,intlOpts){if(intlOpts===void 0){intlOpts={};}
return new PolyDateFormatter(dt,this.intl,intlOpts);};_proto4.relFormatter=function relFormatter(opts){if(opts===void 0){opts={};}
return new PolyRelFormatter(this.intl,this.isEnglish(),opts);};_proto4.listFormatter=function listFormatter(opts){if(opts===void 0){opts={};}
return getCachedLF(this.intl,opts);};_proto4.isEnglish=function isEnglish(){return this.locale==="en"||this.locale.toLowerCase()==="en-us"||new Intl.DateTimeFormat(this.intl).resolvedOptions().locale.startsWith("en-us");};_proto4.equals=function equals(other){return this.locale===other.locale&&this.numberingSystem===other.numberingSystem&&this.outputCalendar===other.outputCalendar;};_createClass(Locale,[{key:"fastNumbers",get:function get(){if(this.fastNumbersCached==null){this.fastNumbersCached=supportsFastNumbers(this);}
return this.fastNumbersCached;}}]);return Locale;}();function combineRegexes(){for(var _len=arguments.length,regexes=new Array(_len),_key=0;_key<_len;_key++){regexes[_key]=arguments[_key];}
var full=regexes.reduce(function(f,r){return f+r.source;},"");return RegExp("^"+full+"$");}
function combineExtractors(){for(var _len2=arguments.length,extractors=new Array(_len2),_key2=0;_key2<_len2;_key2++){extractors[_key2]=arguments[_key2];}
return function(m){return extractors.reduce(function(_ref,ex){var mergedVals=_ref[0],mergedZone=_ref[1],cursor=_ref[2];var _ex=ex(m,cursor),val=_ex[0],zone=_ex[1],next=_ex[2];return[_extends({},mergedVals,val),zone||mergedZone,next];},[{},null,1]).slice(0,2);};}
function parse(s){if(s==null){return[null,null];}
for(var _len3=arguments.length,patterns=new Array(_len3>1?_len3-1:0),_key3=1;_key3<_len3;_key3++){patterns[_key3-1]=arguments[_key3];}
for(var _i=0,_patterns=patterns;_i<_patterns.length;_i++){var _patterns$_i=_patterns[_i],regex=_patterns$_i[0],extractor=_patterns$_i[1];var m=regex.exec(s);if(m){return extractor(m);}}
return[null,null];}
function simpleParse(){for(var _len4=arguments.length,keys=new Array(_len4),_key4=0;_key4<_len4;_key4++){keys[_key4]=arguments[_key4];}
return function(match,cursor){var ret={};var i;for(i=0;i<keys.length;i++){ret[keys[i]]=parseInteger(match[cursor+i]);}
return[ret,null,cursor+i];};}
var offsetRegex=/(?:(Z)|([+-]\d\d)(?::?(\d\d))?)/;var isoExtendedZone="(?:"+offsetRegex.source+"?(?:\\[("+ianaRegex.source+")\\])?)?";var isoTimeBaseRegex=/(\d\d)(?::?(\d\d)(?::?(\d\d)(?:[.,](\d{1,30}))?)?)?/;var isoTimeRegex=RegExp(""+isoTimeBaseRegex.source+isoExtendedZone);var isoTimeExtensionRegex=RegExp("(?:T"+isoTimeRegex.source+")?");var isoYmdRegex=/([+-]\d{6}|\d{4})(?:-?(\d\d)(?:-?(\d\d))?)?/;var isoWeekRegex=/(\d{4})-?W(\d\d)(?:-?(\d))?/;var isoOrdinalRegex=/(\d{4})-?(\d{3})/;var extractISOWeekData=simpleParse("weekYear","weekNumber","weekDay");var extractISOOrdinalData=simpleParse("year","ordinal");var sqlYmdRegex=/(\d{4})-(\d\d)-(\d\d)/;var sqlTimeRegex=RegExp(isoTimeBaseRegex.source+" ?(?:"+offsetRegex.source+"|("+ianaRegex.source+"))?");var sqlTimeExtensionRegex=RegExp("(?: "+sqlTimeRegex.source+")?");function int(match,pos,fallback){var m=match[pos];return isUndefined(m)?fallback:parseInteger(m);}
function extractISOYmd(match,cursor){var item={year:int(match,cursor),month:int(match,cursor+1,1),day:int(match,cursor+2,1)};return[item,null,cursor+3];}
function extractISOTime(match,cursor){var item={hours:int(match,cursor,0),minutes:int(match,cursor+1,0),seconds:int(match,cursor+2,0),milliseconds:parseMillis(match[cursor+3])};return[item,null,cursor+4];}
function extractISOOffset(match,cursor){var local=!match[cursor]&&!match[cursor+1],fullOffset=signedOffset(match[cursor+1],match[cursor+2]),zone=local?null:FixedOffsetZone.instance(fullOffset);return[{},zone,cursor+3];}
function extractIANAZone(match,cursor){var zone=match[cursor]?IANAZone.create(match[cursor]):null;return[{},zone,cursor+1];}
var isoTimeOnly=RegExp("^T?"+isoTimeBaseRegex.source+"$");var isoDuration=/^-?P(?:(?:(-?\d{1,20}(?:\.\d{1,20})?)Y)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20}(?:\.\d{1,20})?)W)?(?:(-?\d{1,20}(?:\.\d{1,20})?)D)?(?:T(?:(-?\d{1,20}(?:\.\d{1,20})?)H)?(?:(-?\d{1,20}(?:\.\d{1,20})?)M)?(?:(-?\d{1,20})(?:[.,](-?\d{1,20}))?S)?)?)$/;function extractISODuration(match){var s=match[0],yearStr=match[1],monthStr=match[2],weekStr=match[3],dayStr=match[4],hourStr=match[5],minuteStr=match[6],secondStr=match[7],millisecondsStr=match[8];var hasNegativePrefix=s[0]==="-";var negativeSeconds=secondStr&&secondStr[0]==="-";var maybeNegate=function maybeNegate(num,force){if(force===void 0){force=false;}
return num!==undefined&&(force||num&&hasNegativePrefix)?-num:num;};return[{years:maybeNegate(parseFloating(yearStr)),months:maybeNegate(parseFloating(monthStr)),weeks:maybeNegate(parseFloating(weekStr)),days:maybeNegate(parseFloating(dayStr)),hours:maybeNegate(parseFloating(hourStr)),minutes:maybeNegate(parseFloating(minuteStr)),seconds:maybeNegate(parseFloating(secondStr),secondStr==="-0"),milliseconds:maybeNegate(parseMillis(millisecondsStr),negativeSeconds)}];}
var obsOffsets={GMT:0,EDT:-4*60,EST:-5*60,CDT:-5*60,CST:-6*60,MDT:-6*60,MST:-7*60,PDT:-7*60,PST:-8*60};function fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result={year:yearStr.length===2?untruncateYear(parseInteger(yearStr)):parseInteger(yearStr),month:monthsShort.indexOf(monthStr)+1,day:parseInteger(dayStr),hour:parseInteger(hourStr),minute:parseInteger(minuteStr)};if(secondStr)result.second=parseInteger(secondStr);if(weekdayStr){result.weekday=weekdayStr.length>3?weekdaysLong.indexOf(weekdayStr)+1:weekdaysShort.indexOf(weekdayStr)+1;}
return result;}
var rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|(?:([+-]\d\d)(\d\d)))$/;function extractRFC2822(match){var weekdayStr=match[1],dayStr=match[2],monthStr=match[3],yearStr=match[4],hourStr=match[5],minuteStr=match[6],secondStr=match[7],obsOffset=match[8],milOffset=match[9],offHourStr=match[10],offMinuteStr=match[11],result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);var offset;if(obsOffset){offset=obsOffsets[obsOffset];}else if(milOffset){offset=0;}else{offset=signedOffset(offHourStr,offMinuteStr);}
return[result,new FixedOffsetZone(offset)];}
function preprocessRFC2822(s){return s.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").trim();}
var rfc1123=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\d\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\d{4}) (\d\d):(\d\d):(\d\d) GMT$/,rfc850=/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\d\d)-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\d\d) (\d\d):(\d\d):(\d\d) GMT$/,ascii=/^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( \d|\d\d) (\d\d):(\d\d):(\d\d) (\d{4})$/;function extractRFC1123Or850(match){var weekdayStr=match[1],dayStr=match[2],monthStr=match[3],yearStr=match[4],hourStr=match[5],minuteStr=match[6],secondStr=match[7],result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);return[result,FixedOffsetZone.utcInstance];}
function extractASCII(match){var weekdayStr=match[1],monthStr=match[2],dayStr=match[3],hourStr=match[4],minuteStr=match[5],secondStr=match[6],yearStr=match[7],result=fromStrings(weekdayStr,yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr);return[result,FixedOffsetZone.utcInstance];}
var isoYmdWithTimeExtensionRegex=combineRegexes(isoYmdRegex,isoTimeExtensionRegex);var isoWeekWithTimeExtensionRegex=combineRegexes(isoWeekRegex,isoTimeExtensionRegex);var isoOrdinalWithTimeExtensionRegex=combineRegexes(isoOrdinalRegex,isoTimeExtensionRegex);var isoTimeCombinedRegex=combineRegexes(isoTimeRegex);var extractISOYmdTimeAndOffset=combineExtractors(extractISOYmd,extractISOTime,extractISOOffset,extractIANAZone);var extractISOWeekTimeAndOffset=combineExtractors(extractISOWeekData,extractISOTime,extractISOOffset,extractIANAZone);var extractISOOrdinalDateAndTime=combineExtractors(extractISOOrdinalData,extractISOTime,extractISOOffset,extractIANAZone);var extractISOTimeAndOffset=combineExtractors(extractISOTime,extractISOOffset,extractIANAZone);function parseISODate(s){return parse(s,[isoYmdWithTimeExtensionRegex,extractISOYmdTimeAndOffset],[isoWeekWithTimeExtensionRegex,extractISOWeekTimeAndOffset],[isoOrdinalWithTimeExtensionRegex,extractISOOrdinalDateAndTime],[isoTimeCombinedRegex,extractISOTimeAndOffset]);}
function parseRFC2822Date(s){return parse(preprocessRFC2822(s),[rfc2822,extractRFC2822]);}
function parseHTTPDate(s){return parse(s,[rfc1123,extractRFC1123Or850],[rfc850,extractRFC1123Or850],[ascii,extractASCII]);}
function parseISODuration(s){return parse(s,[isoDuration,extractISODuration]);}
var extractISOTimeOnly=combineExtractors(extractISOTime);function parseISOTimeOnly(s){return parse(s,[isoTimeOnly,extractISOTimeOnly]);}
var sqlYmdWithTimeExtensionRegex=combineRegexes(sqlYmdRegex,sqlTimeExtensionRegex);var sqlTimeCombinedRegex=combineRegexes(sqlTimeRegex);var extractISOTimeOffsetAndIANAZone=combineExtractors(extractISOTime,extractISOOffset,extractIANAZone);function parseSQL(s){return parse(s,[sqlYmdWithTimeExtensionRegex,extractISOYmdTimeAndOffset],[sqlTimeCombinedRegex,extractISOTimeOffsetAndIANAZone]);}
var INVALID$2="Invalid Duration";var lowOrderMatrix={weeks:{days:7,hours:7*24,minutes:7*24*60,seconds:7*24*60*60,milliseconds:7*24*60*60*1000},days:{hours:24,minutes:24*60,seconds:24*60*60,milliseconds:24*60*60*1000},hours:{minutes:60,seconds:60*60,milliseconds:60*60*1000},minutes:{seconds:60,milliseconds:60*1000},seconds:{milliseconds:1000}},casualMatrix=_extends({years:{quarters:4,months:12,weeks:52,days:365,hours:365*24,minutes:365*24*60,seconds:365*24*60*60,milliseconds:365*24*60*60*1000},quarters:{months:3,weeks:13,days:91,hours:91*24,minutes:91*24*60,seconds:91*24*60*60,milliseconds:91*24*60*60*1000},months:{weeks:4,days:30,hours:30*24,minutes:30*24*60,seconds:30*24*60*60,milliseconds:30*24*60*60*1000}},lowOrderMatrix),daysInYearAccurate=146097.0/400,daysInMonthAccurate=146097.0/4800,accurateMatrix=_extends({years:{quarters:4,months:12,weeks:daysInYearAccurate/7,days:daysInYearAccurate,hours:daysInYearAccurate*24,minutes:daysInYearAccurate*24*60,seconds:daysInYearAccurate*24*60*60,milliseconds:daysInYearAccurate*24*60*60*1000},quarters:{months:3,weeks:daysInYearAccurate/28,days:daysInYearAccurate/4,hours:daysInYearAccurate*24/4,minutes:daysInYearAccurate*24*60/4,seconds:daysInYearAccurate*24*60*60/4,milliseconds:daysInYearAccurate*24*60*60*1000/4},months:{weeks:daysInMonthAccurate/7,days:daysInMonthAccurate,hours:daysInMonthAccurate*24,minutes:daysInMonthAccurate*24*60,seconds:daysInMonthAccurate*24*60*60,milliseconds:daysInMonthAccurate*24*60*60*1000}},lowOrderMatrix);var orderedUnits$1=["years","quarters","months","weeks","days","hours","minutes","seconds","milliseconds"];var reverseUnits=orderedUnits$1.slice(0).reverse();function clone$1(dur,alts,clear){if(clear===void 0){clear=false;}
var conf={values:clear?alts.values:_extends({},dur.values,alts.values||{}),loc:dur.loc.clone(alts.loc),conversionAccuracy:alts.conversionAccuracy||dur.conversionAccuracy};return new Duration(conf);}
function antiTrunc(n){return n<0?Math.floor(n):Math.ceil(n);}
function convert(matrix,fromMap,fromUnit,toMap,toUnit){var conv=matrix[toUnit][fromUnit],raw=fromMap[fromUnit]/conv,sameSign=Math.sign(raw)===Math.sign(toMap[toUnit]),added=!sameSign&&toMap[toUnit]!==0&&Math.abs(raw)<=1?antiTrunc(raw):Math.trunc(raw);toMap[toUnit]+=added;fromMap[fromUnit]-=added*conv;}
function normalizeValues(matrix,vals){reverseUnits.reduce(function(previous,current){if(!isUndefined(vals[current])){if(previous){convert(matrix,vals,previous,vals,current);}
return current;}else{return previous;}},null);}
var Duration=function(){function Duration(config){var accurate=config.conversionAccuracy==="longterm"||false;this.values=config.values;this.loc=config.loc||Locale.create();this.conversionAccuracy=accurate?"longterm":"casual";this.invalid=config.invalid||null;this.matrix=accurate?accurateMatrix:casualMatrix;this.isLuxonDuration=true;}
Duration.fromMillis=function fromMillis(count,opts){return Duration.fromObject({milliseconds:count},opts);};Duration.fromObject=function fromObject(obj,opts){if(opts===void 0){opts={};}
if(obj==null||typeof obj!=="object"){throw new InvalidArgumentError("Duration.fromObject: argument expected to be an object, got "+(obj===null?"null":typeof obj));}
return new Duration({values:normalizeObject(obj,Duration.normalizeUnit),loc:Locale.fromObject(opts),conversionAccuracy:opts.conversionAccuracy});};Duration.fromDurationLike=function fromDurationLike(durationLike){if(isNumber(durationLike)){return Duration.fromMillis(durationLike);}else if(Duration.isDuration(durationLike)){return durationLike;}else if(typeof durationLike==="object"){return Duration.fromObject(durationLike);}else{throw new InvalidArgumentError("Unknown duration argument "+durationLike+" of type "+typeof durationLike);}};Duration.fromISO=function fromISO(text,opts){var _parseISODuration=parseISODuration(text),parsed=_parseISODuration[0];if(parsed){return Duration.fromObject(parsed,opts);}else{return Duration.invalid("unparsable","the input \""+text+"\" can't be parsed as ISO 8601");}};Duration.fromISOTime=function fromISOTime(text,opts){var _parseISOTimeOnly=parseISOTimeOnly(text),parsed=_parseISOTimeOnly[0];if(parsed){return Duration.fromObject(parsed,opts);}else{return Duration.invalid("unparsable","the input \""+text+"\" can't be parsed as ISO 8601");}};Duration.invalid=function invalid(reason,explanation){if(explanation===void 0){explanation=null;}
if(!reason){throw new InvalidArgumentError("need to specify a reason the Duration is invalid");}
var invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidDurationError(invalid);}else{return new Duration({invalid:invalid});}};Duration.normalizeUnit=function normalizeUnit(unit){var normalized={year:"years",years:"years",quarter:"quarters",quarters:"quarters",month:"months",months:"months",week:"weeks",weeks:"weeks",day:"days",days:"days",hour:"hours",hours:"hours",minute:"minutes",minutes:"minutes",second:"seconds",seconds:"seconds",millisecond:"milliseconds",milliseconds:"milliseconds"}[unit?unit.toLowerCase():unit];if(!normalized)throw new InvalidUnitError(unit);return normalized;};Duration.isDuration=function isDuration(o){return o&&o.isLuxonDuration||false;};var _proto=Duration.prototype;_proto.toFormat=function toFormat(fmt,opts){if(opts===void 0){opts={};}
var fmtOpts=_extends({},opts,{floor:opts.round!==false&&opts.floor!==false});return this.isValid?Formatter.create(this.loc,fmtOpts).formatDurationFromString(this,fmt):INVALID$2;};_proto.toHuman=function toHuman(opts){var _this=this;if(opts===void 0){opts={};}
var l=orderedUnits$1.map(function(unit){var val=_this.values[unit];if(isUndefined(val)){return null;}
return _this.loc.numberFormatter(_extends({style:"unit",unitDisplay:"long"},opts,{unit:unit.slice(0,-1)})).format(val);}).filter(function(n){return n;});return this.loc.listFormatter(_extends({type:"conjunction",style:opts.listStyle||"narrow"},opts)).format(l);};_proto.toObject=function toObject(){if(!this.isValid)return{};return _extends({},this.values);};_proto.toISO=function toISO(){if(!this.isValid)return null;var s="P";if(this.years!==0)s+=this.years+"Y";if(this.months!==0||this.quarters!==0)s+=this.months+this.quarters*3+"M";if(this.weeks!==0)s+=this.weeks+"W";if(this.days!==0)s+=this.days+"D";if(this.hours!==0||this.minutes!==0||this.seconds!==0||this.milliseconds!==0)s+="T";if(this.hours!==0)s+=this.hours+"H";if(this.minutes!==0)s+=this.minutes+"M";if(this.seconds!==0||this.milliseconds!==0)
s+=roundTo(this.seconds+this.milliseconds/1000,3)+"S";if(s==="P")s+="T0S";return s;};_proto.toISOTime=function toISOTime(opts){if(opts===void 0){opts={};}
if(!this.isValid)return null;var millis=this.toMillis();if(millis<0||millis>=86400000)return null;opts=_extends({suppressMilliseconds:false,suppressSeconds:false,includePrefix:false,format:"extended"},opts);var value=this.shiftTo("hours","minutes","seconds","milliseconds");var fmt=opts.format==="basic"?"hhmm":"hh:mm";if(!opts.suppressSeconds||value.seconds!==0||value.milliseconds!==0){fmt+=opts.format==="basic"?"ss":":ss";if(!opts.suppressMilliseconds||value.milliseconds!==0){fmt+=".SSS";}}
var str=value.toFormat(fmt);if(opts.includePrefix){str="T"+str;}
return str;};_proto.toJSON=function toJSON(){return this.toISO();};_proto.toString=function toString(){return this.toISO();};_proto.toMillis=function toMillis(){return this.as("milliseconds");};_proto.valueOf=function valueOf(){return this.toMillis();};_proto.plus=function plus(duration){if(!this.isValid)return this;var dur=Duration.fromDurationLike(duration),result={};for(var _iterator=_createForOfIteratorHelperLoose(orderedUnits$1),_step;!(_step=_iterator()).done;){var k=_step.value;if(hasOwnProperty(dur.values,k)||hasOwnProperty(this.values,k)){result[k]=dur.get(k)+this.get(k);}}
return clone$1(this,{values:result},true);};_proto.minus=function minus(duration){if(!this.isValid)return this;var dur=Duration.fromDurationLike(duration);return this.plus(dur.negate());};_proto.mapUnits=function mapUnits(fn){if(!this.isValid)return this;var result={};for(var _i=0,_Object$keys=Object.keys(this.values);_i<_Object$keys.length;_i++){var k=_Object$keys[_i];result[k]=asNumber(fn(this.values[k],k));}
return clone$1(this,{values:result},true);};_proto.get=function get(unit){return this[Duration.normalizeUnit(unit)];};_proto.set=function set(values){if(!this.isValid)return this;var mixed=_extends({},this.values,normalizeObject(values,Duration.normalizeUnit));return clone$1(this,{values:mixed});};_proto.reconfigure=function reconfigure(_temp){var _ref=_temp===void 0?{}:_temp,locale=_ref.locale,numberingSystem=_ref.numberingSystem,conversionAccuracy=_ref.conversionAccuracy;var loc=this.loc.clone({locale:locale,numberingSystem:numberingSystem}),opts={loc:loc};if(conversionAccuracy){opts.conversionAccuracy=conversionAccuracy;}
return clone$1(this,opts);};_proto.as=function as(unit){return this.isValid?this.shiftTo(unit).get(unit):NaN;};_proto.normalize=function normalize(){if(!this.isValid)return this;var vals=this.toObject();normalizeValues(this.matrix,vals);return clone$1(this,{values:vals},true);};_proto.shiftTo=function shiftTo(){for(var _len=arguments.length,units=new Array(_len),_key=0;_key<_len;_key++){units[_key]=arguments[_key];}
if(!this.isValid)return this;if(units.length===0){return this;}
units=units.map(function(u){return Duration.normalizeUnit(u);});var built={},accumulated={},vals=this.toObject();var lastUnit;for(var _iterator2=_createForOfIteratorHelperLoose(orderedUnits$1),_step2;!(_step2=_iterator2()).done;){var k=_step2.value;if(units.indexOf(k)>=0){lastUnit=k;var own=0;for(var ak in accumulated){own+=this.matrix[ak][k]*accumulated[ak];accumulated[ak]=0;}
if(isNumber(vals[k])){own+=vals[k];}
var i=Math.trunc(own);built[k]=i;accumulated[k]=(own*1000-i*1000)/1000;for(var down in vals){if(orderedUnits$1.indexOf(down)>orderedUnits$1.indexOf(k)){convert(this.matrix,vals,down,built,k);}}}else if(isNumber(vals[k])){accumulated[k]=vals[k];}}
for(var key in accumulated){if(accumulated[key]!==0){built[lastUnit]+=key===lastUnit?accumulated[key]:accumulated[key]/this.matrix[lastUnit][key];}}
return clone$1(this,{values:built},true).normalize();};_proto.negate=function negate(){if(!this.isValid)return this;var negated={};for(var _i2=0,_Object$keys2=Object.keys(this.values);_i2<_Object$keys2.length;_i2++){var k=_Object$keys2[_i2];negated[k]=this.values[k]===0?0:-this.values[k];}
return clone$1(this,{values:negated},true);};_proto.equals=function equals(other){if(!this.isValid||!other.isValid){return false;}
if(!this.loc.equals(other.loc)){return false;}
function eq(v1,v2){if(v1===undefined||v1===0)return v2===undefined||v2===0;return v1===v2;}
for(var _iterator3=_createForOfIteratorHelperLoose(orderedUnits$1),_step3;!(_step3=_iterator3()).done;){var u=_step3.value;if(!eq(this.values[u],other.values[u])){return false;}}
return true;};_createClass(Duration,[{key:"locale",get:function get(){return this.isValid?this.loc.locale:null;}},{key:"numberingSystem",get:function get(){return this.isValid?this.loc.numberingSystem:null;}},{key:"years",get:function get(){return this.isValid?this.values.years||0:NaN;}},{key:"quarters",get:function get(){return this.isValid?this.values.quarters||0:NaN;}},{key:"months",get:function get(){return this.isValid?this.values.months||0:NaN;}},{key:"weeks",get:function get(){return this.isValid?this.values.weeks||0:NaN;}},{key:"days",get:function get(){return this.isValid?this.values.days||0:NaN;}},{key:"hours",get:function get(){return this.isValid?this.values.hours||0:NaN;}},{key:"minutes",get:function get(){return this.isValid?this.values.minutes||0:NaN;}},{key:"seconds",get:function get(){return this.isValid?this.values.seconds||0:NaN;}},{key:"milliseconds",get:function get(){return this.isValid?this.values.milliseconds||0:NaN;}},{key:"isValid",get:function get(){return this.invalid===null;}},{key:"invalidReason",get:function get(){return this.invalid?this.invalid.reason:null;}},{key:"invalidExplanation",get:function get(){return this.invalid?this.invalid.explanation:null;}}]);return Duration;}();var INVALID$1="Invalid Interval";function validateStartEnd(start,end){if(!start||!start.isValid){return Interval.invalid("missing or invalid start");}else if(!end||!end.isValid){return Interval.invalid("missing or invalid end");}else if(end<start){return Interval.invalid("end before start","The end of an interval must be after its start, but you had start="+start.toISO()+" and end="+end.toISO());}else{return null;}}
var Interval=function(){function Interval(config){this.s=config.start;this.e=config.end;this.invalid=config.invalid||null;this.isLuxonInterval=true;}
Interval.invalid=function invalid(reason,explanation){if(explanation===void 0){explanation=null;}
if(!reason){throw new InvalidArgumentError("need to specify a reason the Interval is invalid");}
var invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidIntervalError(invalid);}else{return new Interval({invalid:invalid});}};Interval.fromDateTimes=function fromDateTimes(start,end){var builtStart=friendlyDateTime(start),builtEnd=friendlyDateTime(end);var validateError=validateStartEnd(builtStart,builtEnd);if(validateError==null){return new Interval({start:builtStart,end:builtEnd});}else{return validateError;}};Interval.after=function after(start,duration){var dur=Duration.fromDurationLike(duration),dt=friendlyDateTime(start);return Interval.fromDateTimes(dt,dt.plus(dur));};Interval.before=function before(end,duration){var dur=Duration.fromDurationLike(duration),dt=friendlyDateTime(end);return Interval.fromDateTimes(dt.minus(dur),dt);};Interval.fromISO=function fromISO(text,opts){var _split=(text||"").split("/",2),s=_split[0],e=_split[1];if(s&&e){var start,startIsValid;try{start=DateTime.fromISO(s,opts);startIsValid=start.isValid;}catch(e){startIsValid=false;}
var end,endIsValid;try{end=DateTime.fromISO(e,opts);endIsValid=end.isValid;}catch(e){endIsValid=false;}
if(startIsValid&&endIsValid){return Interval.fromDateTimes(start,end);}
if(startIsValid){var dur=Duration.fromISO(e,opts);if(dur.isValid){return Interval.after(start,dur);}}else if(endIsValid){var _dur=Duration.fromISO(s,opts);if(_dur.isValid){return Interval.before(end,_dur);}}}
return Interval.invalid("unparsable","the input \""+text+"\" can't be parsed as ISO 8601");};Interval.isInterval=function isInterval(o){return o&&o.isLuxonInterval||false;};var _proto=Interval.prototype;_proto.length=function length(unit){if(unit===void 0){unit="milliseconds";}
return this.isValid?this.toDuration.apply(this,[unit]).get(unit):NaN;};_proto.count=function count(unit){if(unit===void 0){unit="milliseconds";}
if(!this.isValid)return NaN;var start=this.start.startOf(unit),end=this.end.startOf(unit);return Math.floor(end.diff(start,unit).get(unit))+1;};_proto.hasSame=function hasSame(unit){return this.isValid?this.isEmpty()||this.e.minus(1).hasSame(this.s,unit):false;};_proto.isEmpty=function isEmpty(){return this.s.valueOf()===this.e.valueOf();};_proto.isAfter=function isAfter(dateTime){if(!this.isValid)return false;return this.s>dateTime;};_proto.isBefore=function isBefore(dateTime){if(!this.isValid)return false;return this.e<=dateTime;};_proto.contains=function contains(dateTime){if(!this.isValid)return false;return this.s<=dateTime&&this.e>dateTime;};_proto.set=function set(_temp){var _ref=_temp===void 0?{}:_temp,start=_ref.start,end=_ref.end;if(!this.isValid)return this;return Interval.fromDateTimes(start||this.s,end||this.e);};_proto.splitAt=function splitAt(){var _this=this;if(!this.isValid)return[];for(var _len=arguments.length,dateTimes=new Array(_len),_key=0;_key<_len;_key++){dateTimes[_key]=arguments[_key];}
var sorted=dateTimes.map(friendlyDateTime).filter(function(d){return _this.contains(d);}).sort(),results=[];var s=this.s,i=0;while(s<this.e){var added=sorted[i]||this.e,next=+added>+this.e?this.e:added;results.push(Interval.fromDateTimes(s,next));s=next;i+=1;}
return results;};_proto.splitBy=function splitBy(duration){var dur=Duration.fromDurationLike(duration);if(!this.isValid||!dur.isValid||dur.as("milliseconds")===0){return[];}
var s=this.s,idx=1,next;var results=[];while(s<this.e){var added=this.start.plus(dur.mapUnits(function(x){return x*idx;}));next=+added>+this.e?this.e:added;results.push(Interval.fromDateTimes(s,next));s=next;idx+=1;}
return results;};_proto.divideEqually=function divideEqually(numberOfParts){if(!this.isValid)return[];return this.splitBy(this.length()/numberOfParts).slice(0,numberOfParts);};_proto.overlaps=function overlaps(other){return this.e>other.s&&this.s<other.e;};_proto.abutsStart=function abutsStart(other){if(!this.isValid)return false;return+this.e===+other.s;};_proto.abutsEnd=function abutsEnd(other){if(!this.isValid)return false;return+other.e===+this.s;};_proto.engulfs=function engulfs(other){if(!this.isValid)return false;return this.s<=other.s&&this.e>=other.e;};_proto.equals=function equals(other){if(!this.isValid||!other.isValid){return false;}
return this.s.equals(other.s)&&this.e.equals(other.e);};_proto.intersection=function intersection(other){if(!this.isValid)return this;var s=this.s>other.s?this.s:other.s,e=this.e<other.e?this.e:other.e;if(s>=e){return null;}else{return Interval.fromDateTimes(s,e);}};_proto.union=function union(other){if(!this.isValid)return this;var s=this.s<other.s?this.s:other.s,e=this.e>other.e?this.e:other.e;return Interval.fromDateTimes(s,e);};Interval.merge=function merge(intervals){var _intervals$sort$reduc=intervals.sort(function(a,b){return a.s-b.s;}).reduce(function(_ref2,item){var sofar=_ref2[0],current=_ref2[1];if(!current){return[sofar,item];}else if(current.overlaps(item)||current.abutsStart(item)){return[sofar,current.union(item)];}else{return[sofar.concat([current]),item];}},[[],null]),found=_intervals$sort$reduc[0],final=_intervals$sort$reduc[1];if(final){found.push(final);}
return found;};Interval.xor=function xor(intervals){var _Array$prototype;var start=null,currentCount=0;var results=[],ends=intervals.map(function(i){return[{time:i.s,type:"s"},{time:i.e,type:"e"}];}),flattened=(_Array$prototype=Array.prototype).concat.apply(_Array$prototype,ends),arr=flattened.sort(function(a,b){return a.time-b.time;});for(var _iterator=_createForOfIteratorHelperLoose(arr),_step;!(_step=_iterator()).done;){var i=_step.value;currentCount+=i.type==="s"?1:-1;if(currentCount===1){start=i.time;}else{if(start&&+start!==+i.time){results.push(Interval.fromDateTimes(start,i.time));}
start=null;}}
return Interval.merge(results);};_proto.difference=function difference(){var _this2=this;for(var _len2=arguments.length,intervals=new Array(_len2),_key2=0;_key2<_len2;_key2++){intervals[_key2]=arguments[_key2];}
return Interval.xor([this].concat(intervals)).map(function(i){return _this2.intersection(i);}).filter(function(i){return i&&!i.isEmpty();});};_proto.toString=function toString(){if(!this.isValid)return INVALID$1;return"["+this.s.toISO()+" \u2013 "+this.e.toISO()+")";};_proto.toISO=function toISO(opts){if(!this.isValid)return INVALID$1;return this.s.toISO(opts)+"/"+this.e.toISO(opts);};_proto.toISODate=function toISODate(){if(!this.isValid)return INVALID$1;return this.s.toISODate()+"/"+this.e.toISODate();};_proto.toISOTime=function toISOTime(opts){if(!this.isValid)return INVALID$1;return this.s.toISOTime(opts)+"/"+this.e.toISOTime(opts);};_proto.toFormat=function toFormat(dateFormat,_temp2){var _ref3=_temp2===void 0?{}:_temp2,_ref3$separator=_ref3.separator,separator=_ref3$separator===void 0?" – ":_ref3$separator;if(!this.isValid)return INVALID$1;return""+this.s.toFormat(dateFormat)+separator+this.e.toFormat(dateFormat);};_proto.toDuration=function toDuration(unit,opts){if(!this.isValid){return Duration.invalid(this.invalidReason);}
return this.e.diff(this.s,unit,opts);};_proto.mapEndpoints=function mapEndpoints(mapFn){return Interval.fromDateTimes(mapFn(this.s),mapFn(this.e));};_createClass(Interval,[{key:"start",get:function get(){return this.isValid?this.s:null;}},{key:"end",get:function get(){return this.isValid?this.e:null;}},{key:"isValid",get:function get(){return this.invalidReason===null;}},{key:"invalidReason",get:function get(){return this.invalid?this.invalid.reason:null;}},{key:"invalidExplanation",get:function get(){return this.invalid?this.invalid.explanation:null;}}]);return Interval;}();var Info=function(){function Info(){}
Info.hasDST=function hasDST(zone){if(zone===void 0){zone=Settings.defaultZone;}
var proto=DateTime.now().setZone(zone).set({month:12});return!zone.isUniversal&&proto.offset!==proto.set({month:6}).offset;};Info.isValidIANAZone=function isValidIANAZone(zone){return IANAZone.isValidZone(zone);};Info.normalizeZone=function normalizeZone$1(input){return normalizeZone(input,Settings.defaultZone);};Info.months=function months(length,_temp){if(length===void 0){length="long";}
var _ref=_temp===void 0?{}:_temp,_ref$locale=_ref.locale,locale=_ref$locale===void 0?null:_ref$locale,_ref$numberingSystem=_ref.numberingSystem,numberingSystem=_ref$numberingSystem===void 0?null:_ref$numberingSystem,_ref$locObj=_ref.locObj,locObj=_ref$locObj===void 0?null:_ref$locObj,_ref$outputCalendar=_ref.outputCalendar,outputCalendar=_ref$outputCalendar===void 0?"gregory":_ref$outputCalendar;return(locObj||Locale.create(locale,numberingSystem,outputCalendar)).months(length);};Info.monthsFormat=function monthsFormat(length,_temp2){if(length===void 0){length="long";}
var _ref2=_temp2===void 0?{}:_temp2,_ref2$locale=_ref2.locale,locale=_ref2$locale===void 0?null:_ref2$locale,_ref2$numberingSystem=_ref2.numberingSystem,numberingSystem=_ref2$numberingSystem===void 0?null:_ref2$numberingSystem,_ref2$locObj=_ref2.locObj,locObj=_ref2$locObj===void 0?null:_ref2$locObj,_ref2$outputCalendar=_ref2.outputCalendar,outputCalendar=_ref2$outputCalendar===void 0?"gregory":_ref2$outputCalendar;return(locObj||Locale.create(locale,numberingSystem,outputCalendar)).months(length,true);};Info.weekdays=function weekdays(length,_temp3){if(length===void 0){length="long";}
var _ref3=_temp3===void 0?{}:_temp3,_ref3$locale=_ref3.locale,locale=_ref3$locale===void 0?null:_ref3$locale,_ref3$numberingSystem=_ref3.numberingSystem,numberingSystem=_ref3$numberingSystem===void 0?null:_ref3$numberingSystem,_ref3$locObj=_ref3.locObj,locObj=_ref3$locObj===void 0?null:_ref3$locObj;return(locObj||Locale.create(locale,numberingSystem,null)).weekdays(length);};Info.weekdaysFormat=function weekdaysFormat(length,_temp4){if(length===void 0){length="long";}
var _ref4=_temp4===void 0?{}:_temp4,_ref4$locale=_ref4.locale,locale=_ref4$locale===void 0?null:_ref4$locale,_ref4$numberingSystem=_ref4.numberingSystem,numberingSystem=_ref4$numberingSystem===void 0?null:_ref4$numberingSystem,_ref4$locObj=_ref4.locObj,locObj=_ref4$locObj===void 0?null:_ref4$locObj;return(locObj||Locale.create(locale,numberingSystem,null)).weekdays(length,true);};Info.meridiems=function meridiems(_temp5){var _ref5=_temp5===void 0?{}:_temp5,_ref5$locale=_ref5.locale,locale=_ref5$locale===void 0?null:_ref5$locale;return Locale.create(locale).meridiems();};Info.eras=function eras(length,_temp6){if(length===void 0){length="short";}
var _ref6=_temp6===void 0?{}:_temp6,_ref6$locale=_ref6.locale,locale=_ref6$locale===void 0?null:_ref6$locale;return Locale.create(locale,null,"gregory").eras(length);};Info.features=function features(){return{relative:hasRelative()};};return Info;}();function dayDiff(earlier,later){var utcDayStart=function utcDayStart(dt){return dt.toUTC(0,{keepLocalTime:true}).startOf("day").valueOf();},ms=utcDayStart(later)-utcDayStart(earlier);return Math.floor(Duration.fromMillis(ms).as("days"));}
function highOrderDiffs(cursor,later,units){var differs=[["years",function(a,b){return b.year-a.year;}],["quarters",function(a,b){return b.quarter-a.quarter;}],["months",function(a,b){return b.month-a.month+(b.year-a.year)*12;}],["weeks",function(a,b){var days=dayDiff(a,b);return(days-days%7)/7;}],["days",dayDiff]];var results={};var lowestOrder,highWater;for(var _i=0,_differs=differs;_i<_differs.length;_i++){var _differs$_i=_differs[_i],unit=_differs$_i[0],differ=_differs$_i[1];if(units.indexOf(unit)>=0){var _cursor$plus;lowestOrder=unit;var delta=differ(cursor,later);highWater=cursor.plus((_cursor$plus={},_cursor$plus[unit]=delta,_cursor$plus));if(highWater>later){var _cursor$plus2;cursor=cursor.plus((_cursor$plus2={},_cursor$plus2[unit]=delta-1,_cursor$plus2));delta-=1;}else{cursor=highWater;}
results[unit]=delta;}}
return[cursor,results,highWater,lowestOrder];}
function _diff(earlier,later,units,opts){var _highOrderDiffs=highOrderDiffs(earlier,later,units),cursor=_highOrderDiffs[0],results=_highOrderDiffs[1],highWater=_highOrderDiffs[2],lowestOrder=_highOrderDiffs[3];var remainingMillis=later-cursor;var lowerOrderUnits=units.filter(function(u){return["hours","minutes","seconds","milliseconds"].indexOf(u)>=0;});if(lowerOrderUnits.length===0){if(highWater<later){var _cursor$plus3;highWater=cursor.plus((_cursor$plus3={},_cursor$plus3[lowestOrder]=1,_cursor$plus3));}
if(highWater!==cursor){results[lowestOrder]=(results[lowestOrder]||0)+remainingMillis/(highWater-cursor);}}
var duration=Duration.fromObject(results,opts);if(lowerOrderUnits.length>0){var _Duration$fromMillis;return(_Duration$fromMillis=Duration.fromMillis(remainingMillis,opts)).shiftTo.apply(_Duration$fromMillis,lowerOrderUnits).plus(duration);}else{return duration;}}
var numberingSystems={arab:"[\u0660-\u0669]",arabext:"[\u06F0-\u06F9]",bali:"[\u1B50-\u1B59]",beng:"[\u09E6-\u09EF]",deva:"[\u0966-\u096F]",fullwide:"[\uFF10-\uFF19]",gujr:"[\u0AE6-\u0AEF]",hanidec:"[〇|一|二|三|四|五|六|七|八|九]",khmr:"[\u17E0-\u17E9]",knda:"[\u0CE6-\u0CEF]",laoo:"[\u0ED0-\u0ED9]",limb:"[\u1946-\u194F]",mlym:"[\u0D66-\u0D6F]",mong:"[\u1810-\u1819]",mymr:"[\u1040-\u1049]",orya:"[\u0B66-\u0B6F]",tamldec:"[\u0BE6-\u0BEF]",telu:"[\u0C66-\u0C6F]",thai:"[\u0E50-\u0E59]",tibt:"[\u0F20-\u0F29]",latn:"\\d"};var numberingSystemsUTF16={arab:[1632,1641],arabext:[1776,1785],bali:[6992,7001],beng:[2534,2543],deva:[2406,2415],fullwide:[65296,65303],gujr:[2790,2799],khmr:[6112,6121],knda:[3302,3311],laoo:[3792,3801],limb:[6470,6479],mlym:[3430,3439],mong:[6160,6169],mymr:[4160,4169],orya:[2918,2927],tamldec:[3046,3055],telu:[3174,3183],thai:[3664,3673],tibt:[3872,3881]};var hanidecChars=numberingSystems.hanidec.replace(/[\[|\]]/g,"").split("");function parseDigits(str){var value=parseInt(str,10);if(isNaN(value)){value="";for(var i=0;i<str.length;i++){var code=str.charCodeAt(i);if(str[i].search(numberingSystems.hanidec)!==-1){value+=hanidecChars.indexOf(str[i]);}else{for(var key in numberingSystemsUTF16){var _numberingSystemsUTF=numberingSystemsUTF16[key],min=_numberingSystemsUTF[0],max=_numberingSystemsUTF[1];if(code>=min&&code<=max){value+=code-min;}}}}
return parseInt(value,10);}else{return value;}}
function digitRegex(_ref,append){var numberingSystem=_ref.numberingSystem;if(append===void 0){append="";}
return new RegExp(""+numberingSystems[numberingSystem||"latn"]+append);}
var MISSING_FTP="missing Intl.DateTimeFormat.formatToParts support";function intUnit(regex,post){if(post===void 0){post=function post(i){return i;};}
return{regex:regex,deser:function deser(_ref){var s=_ref[0];return post(parseDigits(s));}};}
var NBSP=String.fromCharCode(160);var spaceOrNBSP="[ "+NBSP+"]";var spaceOrNBSPRegExp=new RegExp(spaceOrNBSP,"g");function fixListRegex(s){return s.replace(/\./g,"\\.?").replace(spaceOrNBSPRegExp,spaceOrNBSP);}
function stripInsensitivities(s){return s.replace(/\./g,"").replace(spaceOrNBSPRegExp," ").toLowerCase();}
function oneOf(strings,startIndex){if(strings===null){return null;}else{return{regex:RegExp(strings.map(fixListRegex).join("|")),deser:function deser(_ref2){var s=_ref2[0];return strings.findIndex(function(i){return stripInsensitivities(s)===stripInsensitivities(i);})+startIndex;}};}}
function offset(regex,groups){return{regex:regex,deser:function deser(_ref3){var h=_ref3[1],m=_ref3[2];return signedOffset(h,m);},groups:groups};}
function simple(regex){return{regex:regex,deser:function deser(_ref4){var s=_ref4[0];return s;}};}
function escapeToken(value){return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");}
function unitForToken(token,loc){var one=digitRegex(loc),two=digitRegex(loc,"{2}"),three=digitRegex(loc,"{3}"),four=digitRegex(loc,"{4}"),six=digitRegex(loc,"{6}"),oneOrTwo=digitRegex(loc,"{1,2}"),oneToThree=digitRegex(loc,"{1,3}"),oneToSix=digitRegex(loc,"{1,6}"),oneToNine=digitRegex(loc,"{1,9}"),twoToFour=digitRegex(loc,"{2,4}"),fourToSix=digitRegex(loc,"{4,6}"),literal=function literal(t){return{regex:RegExp(escapeToken(t.val)),deser:function deser(_ref5){var s=_ref5[0];return s;},literal:true};},unitate=function unitate(t){if(token.literal){return literal(t);}
switch(t.val){case"G":return oneOf(loc.eras("short",false),0);case"GG":return oneOf(loc.eras("long",false),0);case"y":return intUnit(oneToSix);case"yy":return intUnit(twoToFour,untruncateYear);case"yyyy":return intUnit(four);case"yyyyy":return intUnit(fourToSix);case"yyyyyy":return intUnit(six);case"M":return intUnit(oneOrTwo);case"MM":return intUnit(two);case"MMM":return oneOf(loc.months("short",true,false),1);case"MMMM":return oneOf(loc.months("long",true,false),1);case"L":return intUnit(oneOrTwo);case"LL":return intUnit(two);case"LLL":return oneOf(loc.months("short",false,false),1);case"LLLL":return oneOf(loc.months("long",false,false),1);case"d":return intUnit(oneOrTwo);case"dd":return intUnit(two);case"o":return intUnit(oneToThree);case"ooo":return intUnit(three);case"HH":return intUnit(two);case"H":return intUnit(oneOrTwo);case"hh":return intUnit(two);case"h":return intUnit(oneOrTwo);case"mm":return intUnit(two);case"m":return intUnit(oneOrTwo);case"q":return intUnit(oneOrTwo);case"qq":return intUnit(two);case"s":return intUnit(oneOrTwo);case"ss":return intUnit(two);case"S":return intUnit(oneToThree);case"SSS":return intUnit(three);case"u":return simple(oneToNine);case"uu":return simple(oneOrTwo);case"uuu":return intUnit(one);case"a":return oneOf(loc.meridiems(),0);case"kkkk":return intUnit(four);case"kk":return intUnit(twoToFour,untruncateYear);case"W":return intUnit(oneOrTwo);case"WW":return intUnit(two);case"E":case"c":return intUnit(one);case"EEE":return oneOf(loc.weekdays("short",false,false),1);case"EEEE":return oneOf(loc.weekdays("long",false,false),1);case"ccc":return oneOf(loc.weekdays("short",true,false),1);case"cccc":return oneOf(loc.weekdays("long",true,false),1);case"Z":case"ZZ":return offset(new RegExp("([+-]"+oneOrTwo.source+")(?::("+two.source+"))?"),2);case"ZZZ":return offset(new RegExp("([+-]"+oneOrTwo.source+")("+two.source+")?"),2);case"z":return simple(/[a-z_+-/]{1,256}?/i);default:return literal(t);}};var unit=unitate(token)||{invalidReason:MISSING_FTP};unit.token=token;return unit;}
var partTypeStyleToTokenVal={year:{"2-digit":"yy",numeric:"yyyyy"},month:{numeric:"M","2-digit":"MM",short:"MMM",long:"MMMM"},day:{numeric:"d","2-digit":"dd"},weekday:{short:"EEE",long:"EEEE"},dayperiod:"a",dayPeriod:"a",hour:{numeric:"h","2-digit":"hh"},minute:{numeric:"m","2-digit":"mm"},second:{numeric:"s","2-digit":"ss"},timeZoneName:{long:"ZZZZZ",short:"ZZZ"}};function tokenForPart(part,locale,formatOpts){var type=part.type,value=part.value;if(type==="literal"){return{literal:true,val:value};}
var style=formatOpts[type];var val=partTypeStyleToTokenVal[type];if(typeof val==="object"){val=val[style];}
if(val){return{literal:false,val:val};}
return undefined;}
function buildRegex(units){var re=units.map(function(u){return u.regex;}).reduce(function(f,r){return f+"("+r.source+")";},"");return["^"+re+"$",units];}
function match(input,regex,handlers){var matches=input.match(regex);if(matches){var all={};var matchIndex=1;for(var i in handlers){if(hasOwnProperty(handlers,i)){var h=handlers[i],groups=h.groups?h.groups+1:1;if(!h.literal&&h.token){all[h.token.val[0]]=h.deser(matches.slice(matchIndex,matchIndex+groups));}
matchIndex+=groups;}}
return[matches,all];}else{return[matches,{}];}}
function dateTimeFromMatches(matches){var toField=function toField(token){switch(token){case"S":return"millisecond";case"s":return"second";case"m":return"minute";case"h":case"H":return"hour";case"d":return"day";case"o":return"ordinal";case"L":case"M":return"month";case"y":return"year";case"E":case"c":return"weekday";case"W":return"weekNumber";case"k":return"weekYear";case"q":return"quarter";default:return null;}};var zone=null;var specificOffset;if(!isUndefined(matches.z)){zone=IANAZone.create(matches.z);}
if(!isUndefined(matches.Z)){if(!zone){zone=new FixedOffsetZone(matches.Z);}
specificOffset=matches.Z;}
if(!isUndefined(matches.q)){matches.M=(matches.q-1)*3+1;}
if(!isUndefined(matches.h)){if(matches.h<12&&matches.a===1){matches.h+=12;}else if(matches.h===12&&matches.a===0){matches.h=0;}}
if(matches.G===0&&matches.y){matches.y=-matches.y;}
if(!isUndefined(matches.u)){matches.S=parseMillis(matches.u);}
var vals=Object.keys(matches).reduce(function(r,k){var f=toField(k);if(f){r[f]=matches[k];}
return r;},{});return[vals,zone,specificOffset];}
var dummyDateTimeCache=null;function getDummyDateTime(){if(!dummyDateTimeCache){dummyDateTimeCache=DateTime.fromMillis(1555555555555);}
return dummyDateTimeCache;}
function maybeExpandMacroToken(token,locale){if(token.literal){return token;}
var formatOpts=Formatter.macroTokenToFormatOpts(token.val);var tokens=formatOptsToTokens(formatOpts,locale);if(tokens==null||tokens.includes(undefined)){return token;}
return tokens;}
function expandMacroTokens(tokens,locale){var _Array$prototype;return(_Array$prototype=Array.prototype).concat.apply(_Array$prototype,tokens.map(function(t){return maybeExpandMacroToken(t,locale);}));}
function explainFromTokens(locale,input,format){var tokens=expandMacroTokens(Formatter.parseFormat(format),locale),units=tokens.map(function(t){return unitForToken(t,locale);}),disqualifyingUnit=units.find(function(t){return t.invalidReason;});if(disqualifyingUnit){return{input:input,tokens:tokens,invalidReason:disqualifyingUnit.invalidReason};}else{var _buildRegex=buildRegex(units),regexString=_buildRegex[0],handlers=_buildRegex[1],regex=RegExp(regexString,"i"),_match=match(input,regex,handlers),rawMatches=_match[0],matches=_match[1],_ref6=matches?dateTimeFromMatches(matches):[null,null,undefined],result=_ref6[0],zone=_ref6[1],specificOffset=_ref6[2];if(hasOwnProperty(matches,"a")&&hasOwnProperty(matches,"H")){throw new ConflictingSpecificationError("Can't include meridiem when specifying 24-hour format");}
return{input:input,tokens:tokens,regex:regex,rawMatches:rawMatches,matches:matches,result:result,zone:zone,specificOffset:specificOffset};}}
function parseFromTokens(locale,input,format){var _explainFromTokens=explainFromTokens(locale,input,format),result=_explainFromTokens.result,zone=_explainFromTokens.zone,specificOffset=_explainFromTokens.specificOffset,invalidReason=_explainFromTokens.invalidReason;return[result,zone,specificOffset,invalidReason];}
function formatOptsToTokens(formatOpts,locale){if(!formatOpts){return null;}
var formatter=Formatter.create(locale,formatOpts);var parts=formatter.formatDateTimeParts(getDummyDateTime());return parts.map(function(p){return tokenForPart(p,locale,formatOpts);});}
var nonLeapLadder=[0,31,59,90,120,151,181,212,243,273,304,334],leapLadder=[0,31,60,91,121,152,182,213,244,274,305,335];function unitOutOfRange(unit,value){return new Invalid("unit out of range","you specified "+value+" (of type "+typeof value+") as a "+unit+", which is invalid");}
function dayOfWeek(year,month,day){var d=new Date(Date.UTC(year,month-1,day));if(year<100&&year>=0){d.setUTCFullYear(d.getUTCFullYear()-1900);}
var js=d.getUTCDay();return js===0?7:js;}
function computeOrdinal(year,month,day){return day+(isLeapYear(year)?leapLadder:nonLeapLadder)[month-1];}
function uncomputeOrdinal(year,ordinal){var table=isLeapYear(year)?leapLadder:nonLeapLadder,month0=table.findIndex(function(i){return i<ordinal;}),day=ordinal-table[month0];return{month:month0+1,day:day};}
function gregorianToWeek(gregObj){var year=gregObj.year,month=gregObj.month,day=gregObj.day,ordinal=computeOrdinal(year,month,day),weekday=dayOfWeek(year,month,day);var weekNumber=Math.floor((ordinal-weekday+10)/7),weekYear;if(weekNumber<1){weekYear=year-1;weekNumber=weeksInWeekYear(weekYear);}else if(weekNumber>weeksInWeekYear(year)){weekYear=year+1;weekNumber=1;}else{weekYear=year;}
return _extends({weekYear:weekYear,weekNumber:weekNumber,weekday:weekday},timeObject(gregObj));}
function weekToGregorian(weekData){var weekYear=weekData.weekYear,weekNumber=weekData.weekNumber,weekday=weekData.weekday,weekdayOfJan4=dayOfWeek(weekYear,1,4),yearInDays=daysInYear(weekYear);var ordinal=weekNumber*7+weekday-weekdayOfJan4-3,year;if(ordinal<1){year=weekYear-1;ordinal+=daysInYear(year);}else if(ordinal>yearInDays){year=weekYear+1;ordinal-=daysInYear(weekYear);}else{year=weekYear;}
var _uncomputeOrdinal=uncomputeOrdinal(year,ordinal),month=_uncomputeOrdinal.month,day=_uncomputeOrdinal.day;return _extends({year:year,month:month,day:day},timeObject(weekData));}
function gregorianToOrdinal(gregData){var year=gregData.year,month=gregData.month,day=gregData.day;var ordinal=computeOrdinal(year,month,day);return _extends({year:year,ordinal:ordinal},timeObject(gregData));}
function ordinalToGregorian(ordinalData){var year=ordinalData.year,ordinal=ordinalData.ordinal;var _uncomputeOrdinal2=uncomputeOrdinal(year,ordinal),month=_uncomputeOrdinal2.month,day=_uncomputeOrdinal2.day;return _extends({year:year,month:month,day:day},timeObject(ordinalData));}
function hasInvalidWeekData(obj){var validYear=isInteger(obj.weekYear),validWeek=integerBetween(obj.weekNumber,1,weeksInWeekYear(obj.weekYear)),validWeekday=integerBetween(obj.weekday,1,7);if(!validYear){return unitOutOfRange("weekYear",obj.weekYear);}else if(!validWeek){return unitOutOfRange("week",obj.week);}else if(!validWeekday){return unitOutOfRange("weekday",obj.weekday);}else return false;}
function hasInvalidOrdinalData(obj){var validYear=isInteger(obj.year),validOrdinal=integerBetween(obj.ordinal,1,daysInYear(obj.year));if(!validYear){return unitOutOfRange("year",obj.year);}else if(!validOrdinal){return unitOutOfRange("ordinal",obj.ordinal);}else return false;}
function hasInvalidGregorianData(obj){var validYear=isInteger(obj.year),validMonth=integerBetween(obj.month,1,12),validDay=integerBetween(obj.day,1,daysInMonth(obj.year,obj.month));if(!validYear){return unitOutOfRange("year",obj.year);}else if(!validMonth){return unitOutOfRange("month",obj.month);}else if(!validDay){return unitOutOfRange("day",obj.day);}else return false;}
function hasInvalidTimeData(obj){var hour=obj.hour,minute=obj.minute,second=obj.second,millisecond=obj.millisecond;var validHour=integerBetween(hour,0,23)||hour===24&&minute===0&&second===0&&millisecond===0,validMinute=integerBetween(minute,0,59),validSecond=integerBetween(second,0,59),validMillisecond=integerBetween(millisecond,0,999);if(!validHour){return unitOutOfRange("hour",hour);}else if(!validMinute){return unitOutOfRange("minute",minute);}else if(!validSecond){return unitOutOfRange("second",second);}else if(!validMillisecond){return unitOutOfRange("millisecond",millisecond);}else return false;}
var INVALID="Invalid DateTime";var MAX_DATE=8.64e15;function unsupportedZone(zone){return new Invalid("unsupported zone","the zone \""+zone.name+"\" is not supported");}
function possiblyCachedWeekData(dt){if(dt.weekData===null){dt.weekData=gregorianToWeek(dt.c);}
return dt.weekData;}
function clone(inst,alts){var current={ts:inst.ts,zone:inst.zone,c:inst.c,o:inst.o,loc:inst.loc,invalid:inst.invalid};return new DateTime(_extends({},current,alts,{old:current}));}
function fixOffset(localTS,o,tz){var utcGuess=localTS-o*60*1000;var o2=tz.offset(utcGuess);if(o===o2){return[utcGuess,o];}
utcGuess-=(o2-o)*60*1000;var o3=tz.offset(utcGuess);if(o2===o3){return[utcGuess,o2];}
return[localTS-Math.min(o2,o3)*60*1000,Math.max(o2,o3)];}
function tsToObj(ts,offset){ts+=offset*60*1000;var d=new Date(ts);return{year:d.getUTCFullYear(),month:d.getUTCMonth()+1,day:d.getUTCDate(),hour:d.getUTCHours(),minute:d.getUTCMinutes(),second:d.getUTCSeconds(),millisecond:d.getUTCMilliseconds()};}
function objToTS(obj,offset,zone){return fixOffset(objToLocalTS(obj),offset,zone);}
function adjustTime(inst,dur){var oPre=inst.o,year=inst.c.year+Math.trunc(dur.years),month=inst.c.month+Math.trunc(dur.months)+Math.trunc(dur.quarters)*3,c=_extends({},inst.c,{year:year,month:month,day:Math.min(inst.c.day,daysInMonth(year,month))+Math.trunc(dur.days)+Math.trunc(dur.weeks)*7}),millisToAdd=Duration.fromObject({years:dur.years-Math.trunc(dur.years),quarters:dur.quarters-Math.trunc(dur.quarters),months:dur.months-Math.trunc(dur.months),weeks:dur.weeks-Math.trunc(dur.weeks),days:dur.days-Math.trunc(dur.days),hours:dur.hours,minutes:dur.minutes,seconds:dur.seconds,milliseconds:dur.milliseconds}).as("milliseconds"),localTS=objToLocalTS(c);var _fixOffset=fixOffset(localTS,oPre,inst.zone),ts=_fixOffset[0],o=_fixOffset[1];if(millisToAdd!==0){ts+=millisToAdd;o=inst.zone.offset(ts);}
return{ts:ts,o:o};}
function parseDataToDateTime(parsed,parsedZone,opts,format,text,specificOffset){var setZone=opts.setZone,zone=opts.zone;if(parsed&&Object.keys(parsed).length!==0){var interpretationZone=parsedZone||zone,inst=DateTime.fromObject(parsed,_extends({},opts,{zone:interpretationZone,specificOffset:specificOffset}));return setZone?inst:inst.setZone(zone);}else{return DateTime.invalid(new Invalid("unparsable","the input \""+text+"\" can't be parsed as "+format));}}
function toTechFormat(dt,format,allowZ){if(allowZ===void 0){allowZ=true;}
return dt.isValid?Formatter.create(Locale.create("en-US"),{allowZ:allowZ,forceSimple:true}).formatDateTimeFromString(dt,format):null;}
function _toISODate(o,extended){var longFormat=o.c.year>9999||o.c.year<0;var c="";if(longFormat&&o.c.year>=0)c+="+";c+=padStart(o.c.year,longFormat?6:4);if(extended){c+="-";c+=padStart(o.c.month);c+="-";c+=padStart(o.c.day);}else{c+=padStart(o.c.month);c+=padStart(o.c.day);}
return c;}
function _toISOTime(o,extended,suppressSeconds,suppressMilliseconds,includeOffset,extendedZone){var c=padStart(o.c.hour);if(extended){c+=":";c+=padStart(o.c.minute);if(o.c.second!==0||!suppressSeconds){c+=":";}}else{c+=padStart(o.c.minute);}
if(o.c.second!==0||!suppressSeconds){c+=padStart(o.c.second);if(o.c.millisecond!==0||!suppressMilliseconds){c+=".";c+=padStart(o.c.millisecond,3);}}
if(includeOffset){if(o.isOffsetFixed&&o.offset===0&&!extendedZone){c+="Z";}else if(o.o<0){c+="-";c+=padStart(Math.trunc(-o.o/60));c+=":";c+=padStart(Math.trunc(-o.o%60));}else{c+="+";c+=padStart(Math.trunc(o.o/60));c+=":";c+=padStart(Math.trunc(o.o%60));}}
if(extendedZone){c+="["+o.zone.ianaName+"]";}
return c;}
var defaultUnitValues={month:1,day:1,hour:0,minute:0,second:0,millisecond:0},defaultWeekUnitValues={weekNumber:1,weekday:1,hour:0,minute:0,second:0,millisecond:0},defaultOrdinalUnitValues={ordinal:1,hour:0,minute:0,second:0,millisecond:0};var orderedUnits=["year","month","day","hour","minute","second","millisecond"],orderedWeekUnits=["weekYear","weekNumber","weekday","hour","minute","second","millisecond"],orderedOrdinalUnits=["year","ordinal","hour","minute","second","millisecond"];function normalizeUnit(unit){var normalized={year:"year",years:"year",month:"month",months:"month",day:"day",days:"day",hour:"hour",hours:"hour",minute:"minute",minutes:"minute",quarter:"quarter",quarters:"quarter",second:"second",seconds:"second",millisecond:"millisecond",milliseconds:"millisecond",weekday:"weekday",weekdays:"weekday",weeknumber:"weekNumber",weeksnumber:"weekNumber",weeknumbers:"weekNumber",weekyear:"weekYear",weekyears:"weekYear",ordinal:"ordinal"}[unit.toLowerCase()];if(!normalized)throw new InvalidUnitError(unit);return normalized;}
function quickDT(obj,opts){var zone=normalizeZone(opts.zone,Settings.defaultZone),loc=Locale.fromObject(opts),tsNow=Settings.now();var ts,o;if(!isUndefined(obj.year)){for(var _iterator=_createForOfIteratorHelperLoose(orderedUnits),_step;!(_step=_iterator()).done;){var u=_step.value;if(isUndefined(obj[u])){obj[u]=defaultUnitValues[u];}}
var invalid=hasInvalidGregorianData(obj)||hasInvalidTimeData(obj);if(invalid){return DateTime.invalid(invalid);}
var offsetProvis=zone.offset(tsNow);var _objToTS=objToTS(obj,offsetProvis,zone);ts=_objToTS[0];o=_objToTS[1];}else{ts=tsNow;}
return new DateTime({ts:ts,zone:zone,loc:loc,o:o});}
function diffRelative(start,end,opts){var round=isUndefined(opts.round)?true:opts.round,format=function format(c,unit){c=roundTo(c,round||opts.calendary?0:2,true);var formatter=end.loc.clone(opts).relFormatter(opts);return formatter.format(c,unit);},differ=function differ(unit){if(opts.calendary){if(!end.hasSame(start,unit)){return end.startOf(unit).diff(start.startOf(unit),unit).get(unit);}else return 0;}else{return end.diff(start,unit).get(unit);}};if(opts.unit){return format(differ(opts.unit),opts.unit);}
for(var _iterator2=_createForOfIteratorHelperLoose(opts.units),_step2;!(_step2=_iterator2()).done;){var unit=_step2.value;var count=differ(unit);if(Math.abs(count)>=1){return format(count,unit);}}
return format(start>end?-0:0,opts.units[opts.units.length-1]);}
function lastOpts(argList){var opts={},args;if(argList.length>0&&typeof argList[argList.length-1]==="object"){opts=argList[argList.length-1];args=Array.from(argList).slice(0,argList.length-1);}else{args=Array.from(argList);}
return[opts,args];}
var DateTime=function(){function DateTime(config){var zone=config.zone||Settings.defaultZone;var invalid=config.invalid||(Number.isNaN(config.ts)?new Invalid("invalid input"):null)||(!zone.isValid?unsupportedZone(zone):null);this.ts=isUndefined(config.ts)?Settings.now():config.ts;var c=null,o=null;if(!invalid){var unchanged=config.old&&config.old.ts===this.ts&&config.old.zone.equals(zone);if(unchanged){var _ref=[config.old.c,config.old.o];c=_ref[0];o=_ref[1];}else{var ot=zone.offset(this.ts);c=tsToObj(this.ts,ot);invalid=Number.isNaN(c.year)?new Invalid("invalid input"):null;c=invalid?null:c;o=invalid?null:ot;}}
this._zone=zone;this.loc=config.loc||Locale.create();this.invalid=invalid;this.weekData=null;this.c=c;this.o=o;this.isLuxonDateTime=true;}
DateTime.now=function now(){return new DateTime({});};DateTime.local=function local(){var _lastOpts=lastOpts(arguments),opts=_lastOpts[0],args=_lastOpts[1],year=args[0],month=args[1],day=args[2],hour=args[3],minute=args[4],second=args[5],millisecond=args[6];return quickDT({year:year,month:month,day:day,hour:hour,minute:minute,second:second,millisecond:millisecond},opts);};DateTime.utc=function utc(){var _lastOpts2=lastOpts(arguments),opts=_lastOpts2[0],args=_lastOpts2[1],year=args[0],month=args[1],day=args[2],hour=args[3],minute=args[4],second=args[5],millisecond=args[6];opts.zone=FixedOffsetZone.utcInstance;return quickDT({year:year,month:month,day:day,hour:hour,minute:minute,second:second,millisecond:millisecond},opts);};DateTime.fromJSDate=function fromJSDate(date,options){if(options===void 0){options={};}
var ts=isDate(date)?date.valueOf():NaN;if(Number.isNaN(ts)){return DateTime.invalid("invalid input");}
var zoneToUse=normalizeZone(options.zone,Settings.defaultZone);if(!zoneToUse.isValid){return DateTime.invalid(unsupportedZone(zoneToUse));}
return new DateTime({ts:ts,zone:zoneToUse,loc:Locale.fromObject(options)});};DateTime.fromMillis=function fromMillis(milliseconds,options){if(options===void 0){options={};}
if(!isNumber(milliseconds)){throw new InvalidArgumentError("fromMillis requires a numerical input, but received a "+typeof milliseconds+" with value "+milliseconds);}else if(milliseconds<-MAX_DATE||milliseconds>MAX_DATE){return DateTime.invalid("Timestamp out of range");}else{return new DateTime({ts:milliseconds,zone:normalizeZone(options.zone,Settings.defaultZone),loc:Locale.fromObject(options)});}};DateTime.fromSeconds=function fromSeconds(seconds,options){if(options===void 0){options={};}
if(!isNumber(seconds)){throw new InvalidArgumentError("fromSeconds requires a numerical input");}else{return new DateTime({ts:seconds*1000,zone:normalizeZone(options.zone,Settings.defaultZone),loc:Locale.fromObject(options)});}};DateTime.fromObject=function fromObject(obj,opts){if(opts===void 0){opts={};}
obj=obj||{};var zoneToUse=normalizeZone(opts.zone,Settings.defaultZone);if(!zoneToUse.isValid){return DateTime.invalid(unsupportedZone(zoneToUse));}
var tsNow=Settings.now(),offsetProvis=!isUndefined(opts.specificOffset)?opts.specificOffset:zoneToUse.offset(tsNow),normalized=normalizeObject(obj,normalizeUnit),containsOrdinal=!isUndefined(normalized.ordinal),containsGregorYear=!isUndefined(normalized.year),containsGregorMD=!isUndefined(normalized.month)||!isUndefined(normalized.day),containsGregor=containsGregorYear||containsGregorMD,definiteWeekDef=normalized.weekYear||normalized.weekNumber,loc=Locale.fromObject(opts);if((containsGregor||containsOrdinal)&&definiteWeekDef){throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");}
if(containsGregorMD&&containsOrdinal){throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");}
var useWeekData=definiteWeekDef||normalized.weekday&&!containsGregor;var units,defaultValues,objNow=tsToObj(tsNow,offsetProvis);if(useWeekData){units=orderedWeekUnits;defaultValues=defaultWeekUnitValues;objNow=gregorianToWeek(objNow);}else if(containsOrdinal){units=orderedOrdinalUnits;defaultValues=defaultOrdinalUnitValues;objNow=gregorianToOrdinal(objNow);}else{units=orderedUnits;defaultValues=defaultUnitValues;}
var foundFirst=false;for(var _iterator3=_createForOfIteratorHelperLoose(units),_step3;!(_step3=_iterator3()).done;){var u=_step3.value;var v=normalized[u];if(!isUndefined(v)){foundFirst=true;}else if(foundFirst){normalized[u]=defaultValues[u];}else{normalized[u]=objNow[u];}}
var higherOrderInvalid=useWeekData?hasInvalidWeekData(normalized):containsOrdinal?hasInvalidOrdinalData(normalized):hasInvalidGregorianData(normalized),invalid=higherOrderInvalid||hasInvalidTimeData(normalized);if(invalid){return DateTime.invalid(invalid);}
var gregorian=useWeekData?weekToGregorian(normalized):containsOrdinal?ordinalToGregorian(normalized):normalized,_objToTS2=objToTS(gregorian,offsetProvis,zoneToUse),tsFinal=_objToTS2[0],offsetFinal=_objToTS2[1],inst=new DateTime({ts:tsFinal,zone:zoneToUse,o:offsetFinal,loc:loc});if(normalized.weekday&&containsGregor&&obj.weekday!==inst.weekday){return DateTime.invalid("mismatched weekday","you can't specify both a weekday of "+normalized.weekday+" and a date of "+inst.toISO());}
return inst;};DateTime.fromISO=function fromISO(text,opts){if(opts===void 0){opts={};}
var _parseISODate=parseISODate(text),vals=_parseISODate[0],parsedZone=_parseISODate[1];return parseDataToDateTime(vals,parsedZone,opts,"ISO 8601",text);};DateTime.fromRFC2822=function fromRFC2822(text,opts){if(opts===void 0){opts={};}
var _parseRFC2822Date=parseRFC2822Date(text),vals=_parseRFC2822Date[0],parsedZone=_parseRFC2822Date[1];return parseDataToDateTime(vals,parsedZone,opts,"RFC 2822",text);};DateTime.fromHTTP=function fromHTTP(text,opts){if(opts===void 0){opts={};}
var _parseHTTPDate=parseHTTPDate(text),vals=_parseHTTPDate[0],parsedZone=_parseHTTPDate[1];return parseDataToDateTime(vals,parsedZone,opts,"HTTP",opts);};DateTime.fromFormat=function fromFormat(text,fmt,opts){if(opts===void 0){opts={};}
if(isUndefined(text)||isUndefined(fmt)){throw new InvalidArgumentError("fromFormat requires an input string and a format");}
var _opts=opts,_opts$locale=_opts.locale,locale=_opts$locale===void 0?null:_opts$locale,_opts$numberingSystem=_opts.numberingSystem,numberingSystem=_opts$numberingSystem===void 0?null:_opts$numberingSystem,localeToUse=Locale.fromOpts({locale:locale,numberingSystem:numberingSystem,defaultToEN:true}),_parseFromTokens=parseFromTokens(localeToUse,text,fmt),vals=_parseFromTokens[0],parsedZone=_parseFromTokens[1],specificOffset=_parseFromTokens[2],invalid=_parseFromTokens[3];if(invalid){return DateTime.invalid(invalid);}else{return parseDataToDateTime(vals,parsedZone,opts,"format "+fmt,text,specificOffset);}};DateTime.fromString=function fromString(text,fmt,opts){if(opts===void 0){opts={};}
return DateTime.fromFormat(text,fmt,opts);};DateTime.fromSQL=function fromSQL(text,opts){if(opts===void 0){opts={};}
var _parseSQL=parseSQL(text),vals=_parseSQL[0],parsedZone=_parseSQL[1];return parseDataToDateTime(vals,parsedZone,opts,"SQL",text);};DateTime.invalid=function invalid(reason,explanation){if(explanation===void 0){explanation=null;}
if(!reason){throw new InvalidArgumentError("need to specify a reason the DateTime is invalid");}
var invalid=reason instanceof Invalid?reason:new Invalid(reason,explanation);if(Settings.throwOnInvalid){throw new InvalidDateTimeError(invalid);}else{return new DateTime({invalid:invalid});}};DateTime.isDateTime=function isDateTime(o){return o&&o.isLuxonDateTime||false;};DateTime.parseFormatForOpts=function parseFormatForOpts(formatOpts,localeOpts){if(localeOpts===void 0){localeOpts={};}
var tokenList=formatOptsToTokens(formatOpts,Locale.fromObject(localeOpts));return!tokenList?null:tokenList.map(function(t){return t?t.val:null;}).join("");};var _proto=DateTime.prototype;_proto.get=function get(unit){return this[unit];};_proto.resolvedLocaleOptions=function resolvedLocaleOptions(opts){if(opts===void 0){opts={};}
var _Formatter$create$res=Formatter.create(this.loc.clone(opts),opts).resolvedOptions(this),locale=_Formatter$create$res.locale,numberingSystem=_Formatter$create$res.numberingSystem,calendar=_Formatter$create$res.calendar;return{locale:locale,numberingSystem:numberingSystem,outputCalendar:calendar};};_proto.toUTC=function toUTC(offset,opts){if(offset===void 0){offset=0;}
if(opts===void 0){opts={};}
return this.setZone(FixedOffsetZone.instance(offset),opts);};_proto.toLocal=function toLocal(){return this.setZone(Settings.defaultZone);};_proto.setZone=function setZone(zone,_temp){var _ref2=_temp===void 0?{}:_temp,_ref2$keepLocalTime=_ref2.keepLocalTime,keepLocalTime=_ref2$keepLocalTime===void 0?false:_ref2$keepLocalTime,_ref2$keepCalendarTim=_ref2.keepCalendarTime,keepCalendarTime=_ref2$keepCalendarTim===void 0?false:_ref2$keepCalendarTim;zone=normalizeZone(zone,Settings.defaultZone);if(zone.equals(this.zone)){return this;}else if(!zone.isValid){return DateTime.invalid(unsupportedZone(zone));}else{var newTS=this.ts;if(keepLocalTime||keepCalendarTime){var offsetGuess=zone.offset(this.ts);var asObj=this.toObject();var _objToTS3=objToTS(asObj,offsetGuess,zone);newTS=_objToTS3[0];}
return clone(this,{ts:newTS,zone:zone});}};_proto.reconfigure=function reconfigure(_temp2){var _ref3=_temp2===void 0?{}:_temp2,locale=_ref3.locale,numberingSystem=_ref3.numberingSystem,outputCalendar=_ref3.outputCalendar;var loc=this.loc.clone({locale:locale,numberingSystem:numberingSystem,outputCalendar:outputCalendar});return clone(this,{loc:loc});};_proto.setLocale=function setLocale(locale){return this.reconfigure({locale:locale});};_proto.set=function set(values){if(!this.isValid)return this;var normalized=normalizeObject(values,normalizeUnit),settingWeekStuff=!isUndefined(normalized.weekYear)||!isUndefined(normalized.weekNumber)||!isUndefined(normalized.weekday),containsOrdinal=!isUndefined(normalized.ordinal),containsGregorYear=!isUndefined(normalized.year),containsGregorMD=!isUndefined(normalized.month)||!isUndefined(normalized.day),containsGregor=containsGregorYear||containsGregorMD,definiteWeekDef=normalized.weekYear||normalized.weekNumber;if((containsGregor||containsOrdinal)&&definiteWeekDef){throw new ConflictingSpecificationError("Can't mix weekYear/weekNumber units with year/month/day or ordinals");}
if(containsGregorMD&&containsOrdinal){throw new ConflictingSpecificationError("Can't mix ordinal dates with month/day");}
var mixed;if(settingWeekStuff){mixed=weekToGregorian(_extends({},gregorianToWeek(this.c),normalized));}else if(!isUndefined(normalized.ordinal)){mixed=ordinalToGregorian(_extends({},gregorianToOrdinal(this.c),normalized));}else{mixed=_extends({},this.toObject(),normalized);if(isUndefined(normalized.day)){mixed.day=Math.min(daysInMonth(mixed.year,mixed.month),mixed.day);}}
var _objToTS4=objToTS(mixed,this.o,this.zone),ts=_objToTS4[0],o=_objToTS4[1];return clone(this,{ts:ts,o:o});};_proto.plus=function plus(duration){if(!this.isValid)return this;var dur=Duration.fromDurationLike(duration);return clone(this,adjustTime(this,dur));};_proto.minus=function minus(duration){if(!this.isValid)return this;var dur=Duration.fromDurationLike(duration).negate();return clone(this,adjustTime(this,dur));};_proto.startOf=function startOf(unit){if(!this.isValid)return this;var o={},normalizedUnit=Duration.normalizeUnit(unit);switch(normalizedUnit){case"years":o.month=1;case"quarters":case"months":o.day=1;case"weeks":case"days":o.hour=0;case"hours":o.minute=0;case"minutes":o.second=0;case"seconds":o.millisecond=0;break;}
if(normalizedUnit==="weeks"){o.weekday=1;}
if(normalizedUnit==="quarters"){var q=Math.ceil(this.month/3);o.month=(q-1)*3+1;}
return this.set(o);};_proto.endOf=function endOf(unit){var _this$plus;return this.isValid?this.plus((_this$plus={},_this$plus[unit]=1,_this$plus)).startOf(unit).minus(1):this;};_proto.toFormat=function toFormat(fmt,opts){if(opts===void 0){opts={};}
return this.isValid?Formatter.create(this.loc.redefaultToEN(opts)).formatDateTimeFromString(this,fmt):INVALID;};_proto.toLocaleString=function toLocaleString(formatOpts,opts){if(formatOpts===void 0){formatOpts=DATE_SHORT;}
if(opts===void 0){opts={};}
return this.isValid?Formatter.create(this.loc.clone(opts),formatOpts).formatDateTime(this):INVALID;};_proto.toLocaleParts=function toLocaleParts(opts){if(opts===void 0){opts={};}
return this.isValid?Formatter.create(this.loc.clone(opts),opts).formatDateTimeParts(this):[];};_proto.toISO=function toISO(_temp3){var _ref4=_temp3===void 0?{}:_temp3,_ref4$format=_ref4.format,format=_ref4$format===void 0?"extended":_ref4$format,_ref4$suppressSeconds=_ref4.suppressSeconds,suppressSeconds=_ref4$suppressSeconds===void 0?false:_ref4$suppressSeconds,_ref4$suppressMillise=_ref4.suppressMilliseconds,suppressMilliseconds=_ref4$suppressMillise===void 0?false:_ref4$suppressMillise,_ref4$includeOffset=_ref4.includeOffset,includeOffset=_ref4$includeOffset===void 0?true:_ref4$includeOffset,_ref4$extendedZone=_ref4.extendedZone,extendedZone=_ref4$extendedZone===void 0?false:_ref4$extendedZone;if(!this.isValid){return null;}
var ext=format==="extended";var c=_toISODate(this,ext);c+="T";c+=_toISOTime(this,ext,suppressSeconds,suppressMilliseconds,includeOffset,extendedZone);return c;};_proto.toISODate=function toISODate(_temp4){var _ref5=_temp4===void 0?{}:_temp4,_ref5$format=_ref5.format,format=_ref5$format===void 0?"extended":_ref5$format;if(!this.isValid){return null;}
return _toISODate(this,format==="extended");};_proto.toISOWeekDate=function toISOWeekDate(){return toTechFormat(this,"kkkk-'W'WW-c");};_proto.toISOTime=function toISOTime(_temp5){var _ref6=_temp5===void 0?{}:_temp5,_ref6$suppressMillise=_ref6.suppressMilliseconds,suppressMilliseconds=_ref6$suppressMillise===void 0?false:_ref6$suppressMillise,_ref6$suppressSeconds=_ref6.suppressSeconds,suppressSeconds=_ref6$suppressSeconds===void 0?false:_ref6$suppressSeconds,_ref6$includeOffset=_ref6.includeOffset,includeOffset=_ref6$includeOffset===void 0?true:_ref6$includeOffset,_ref6$includePrefix=_ref6.includePrefix,includePrefix=_ref6$includePrefix===void 0?false:_ref6$includePrefix,_ref6$extendedZone=_ref6.extendedZone,extendedZone=_ref6$extendedZone===void 0?false:_ref6$extendedZone,_ref6$format=_ref6.format,format=_ref6$format===void 0?"extended":_ref6$format;if(!this.isValid){return null;}
var c=includePrefix?"T":"";return c+_toISOTime(this,format==="extended",suppressSeconds,suppressMilliseconds,includeOffset,extendedZone);};_proto.toRFC2822=function toRFC2822(){return toTechFormat(this,"EEE, dd LLL yyyy HH:mm:ss ZZZ",false);};_proto.toHTTP=function toHTTP(){return toTechFormat(this.toUTC(),"EEE, dd LLL yyyy HH:mm:ss 'GMT'");};_proto.toSQLDate=function toSQLDate(){if(!this.isValid){return null;}
return _toISODate(this,true);};_proto.toSQLTime=function toSQLTime(_temp6){var _ref7=_temp6===void 0?{}:_temp6,_ref7$includeOffset=_ref7.includeOffset,includeOffset=_ref7$includeOffset===void 0?true:_ref7$includeOffset,_ref7$includeZone=_ref7.includeZone,includeZone=_ref7$includeZone===void 0?false:_ref7$includeZone,_ref7$includeOffsetSp=_ref7.includeOffsetSpace,includeOffsetSpace=_ref7$includeOffsetSp===void 0?true:_ref7$includeOffsetSp;var fmt="HH:mm:ss.SSS";if(includeZone||includeOffset){if(includeOffsetSpace){fmt+=" ";}
if(includeZone){fmt+="z";}else if(includeOffset){fmt+="ZZ";}}
return toTechFormat(this,fmt,true);};_proto.toSQL=function toSQL(opts){if(opts===void 0){opts={};}
if(!this.isValid){return null;}
return this.toSQLDate()+" "+this.toSQLTime(opts);};_proto.toString=function toString(){return this.isValid?this.toISO():INVALID;};_proto.valueOf=function valueOf(){return this.toMillis();};_proto.toMillis=function toMillis(){return this.isValid?this.ts:NaN;};_proto.toSeconds=function toSeconds(){return this.isValid?this.ts/1000:NaN;};_proto.toUnixInteger=function toUnixInteger(){return this.isValid?Math.floor(this.ts/1000):NaN;};_proto.toJSON=function toJSON(){return this.toISO();};_proto.toBSON=function toBSON(){return this.toJSDate();};_proto.toObject=function toObject(opts){if(opts===void 0){opts={};}
if(!this.isValid)return{};var base=_extends({},this.c);if(opts.includeConfig){base.outputCalendar=this.outputCalendar;base.numberingSystem=this.loc.numberingSystem;base.locale=this.loc.locale;}
return base;};_proto.toJSDate=function toJSDate(){return new Date(this.isValid?this.ts:NaN);};_proto.diff=function diff(otherDateTime,unit,opts){if(unit===void 0){unit="milliseconds";}
if(opts===void 0){opts={};}
if(!this.isValid||!otherDateTime.isValid){return Duration.invalid("created by diffing an invalid DateTime");}
var durOpts=_extends({locale:this.locale,numberingSystem:this.numberingSystem},opts);var units=maybeArray(unit).map(Duration.normalizeUnit),otherIsLater=otherDateTime.valueOf()>this.valueOf(),earlier=otherIsLater?this:otherDateTime,later=otherIsLater?otherDateTime:this,diffed=_diff(earlier,later,units,durOpts);return otherIsLater?diffed.negate():diffed;};_proto.diffNow=function diffNow(unit,opts){if(unit===void 0){unit="milliseconds";}
if(opts===void 0){opts={};}
return this.diff(DateTime.now(),unit,opts);};_proto.until=function until(otherDateTime){return this.isValid?Interval.fromDateTimes(this,otherDateTime):this;};_proto.hasSame=function hasSame(otherDateTime,unit){if(!this.isValid)return false;var inputMs=otherDateTime.valueOf();var adjustedToZone=this.setZone(otherDateTime.zone,{keepLocalTime:true});return adjustedToZone.startOf(unit)<=inputMs&&inputMs<=adjustedToZone.endOf(unit);};_proto.equals=function equals(other){return this.isValid&&other.isValid&&this.valueOf()===other.valueOf()&&this.zone.equals(other.zone)&&this.loc.equals(other.loc);};_proto.toRelative=function toRelative(options){if(options===void 0){options={};}
if(!this.isValid)return null;var base=options.base||DateTime.fromObject({},{zone:this.zone}),padding=options.padding?this<base?-options.padding:options.padding:0;var units=["years","months","days","hours","minutes","seconds"];var unit=options.unit;if(Array.isArray(options.unit)){units=options.unit;unit=undefined;}
return diffRelative(base,this.plus(padding),_extends({},options,{numeric:"always",units:units,unit:unit}));};_proto.toRelativeCalendar=function toRelativeCalendar(options){if(options===void 0){options={};}
if(!this.isValid)return null;return diffRelative(options.base||DateTime.fromObject({},{zone:this.zone}),this,_extends({},options,{numeric:"auto",units:["years","months","days"],calendary:true}));};DateTime.min=function min(){for(var _len=arguments.length,dateTimes=new Array(_len),_key=0;_key<_len;_key++){dateTimes[_key]=arguments[_key];}
if(!dateTimes.every(DateTime.isDateTime)){throw new InvalidArgumentError("min requires all arguments be DateTimes");}
return bestBy(dateTimes,function(i){return i.valueOf();},Math.min);};DateTime.max=function max(){for(var _len2=arguments.length,dateTimes=new Array(_len2),_key2=0;_key2<_len2;_key2++){dateTimes[_key2]=arguments[_key2];}
if(!dateTimes.every(DateTime.isDateTime)){throw new InvalidArgumentError("max requires all arguments be DateTimes");}
return bestBy(dateTimes,function(i){return i.valueOf();},Math.max);};DateTime.fromFormatExplain=function fromFormatExplain(text,fmt,options){if(options===void 0){options={};}
var _options=options,_options$locale=_options.locale,locale=_options$locale===void 0?null:_options$locale,_options$numberingSys=_options.numberingSystem,numberingSystem=_options$numberingSys===void 0?null:_options$numberingSys,localeToUse=Locale.fromOpts({locale:locale,numberingSystem:numberingSystem,defaultToEN:true});return explainFromTokens(localeToUse,text,fmt);};DateTime.fromStringExplain=function fromStringExplain(text,fmt,options){if(options===void 0){options={};}
return DateTime.fromFormatExplain(text,fmt,options);};_createClass(DateTime,[{key:"isValid",get:function get(){return this.invalid===null;}},{key:"invalidReason",get:function get(){return this.invalid?this.invalid.reason:null;}},{key:"invalidExplanation",get:function get(){return this.invalid?this.invalid.explanation:null;}},{key:"locale",get:function get(){return this.isValid?this.loc.locale:null;}},{key:"numberingSystem",get:function get(){return this.isValid?this.loc.numberingSystem:null;}},{key:"outputCalendar",get:function get(){return this.isValid?this.loc.outputCalendar:null;}},{key:"zone",get:function get(){return this._zone;}},{key:"zoneName",get:function get(){return this.isValid?this.zone.name:null;}},{key:"year",get:function get(){return this.isValid?this.c.year:NaN;}},{key:"quarter",get:function get(){return this.isValid?Math.ceil(this.c.month/3):NaN;}},{key:"month",get:function get(){return this.isValid?this.c.month:NaN;}},{key:"day",get:function get(){return this.isValid?this.c.day:NaN;}},{key:"hour",get:function get(){return this.isValid?this.c.hour:NaN;}},{key:"minute",get:function get(){return this.isValid?this.c.minute:NaN;}},{key:"second",get:function get(){return this.isValid?this.c.second:NaN;}},{key:"millisecond",get:function get(){return this.isValid?this.c.millisecond:NaN;}},{key:"weekYear",get:function get(){return this.isValid?possiblyCachedWeekData(this).weekYear:NaN;}},{key:"weekNumber",get:function get(){return this.isValid?possiblyCachedWeekData(this).weekNumber:NaN;}},{key:"weekday",get:function get(){return this.isValid?possiblyCachedWeekData(this).weekday:NaN;}},{key:"ordinal",get:function get(){return this.isValid?gregorianToOrdinal(this.c).ordinal:NaN;}},{key:"monthShort",get:function get(){return this.isValid?Info.months("short",{locObj:this.loc})[this.month-1]:null;}},{key:"monthLong",get:function get(){return this.isValid?Info.months("long",{locObj:this.loc})[this.month-1]:null;}},{key:"weekdayShort",get:function get(){return this.isValid?Info.weekdays("short",{locObj:this.loc})[this.weekday-1]:null;}},{key:"weekdayLong",get:function get(){return this.isValid?Info.weekdays("long",{locObj:this.loc})[this.weekday-1]:null;}},{key:"offset",get:function get(){return this.isValid?+this.o:NaN;}},{key:"offsetNameShort",get:function get(){if(this.isValid){return this.zone.offsetName(this.ts,{format:"short",locale:this.locale});}else{return null;}}},{key:"offsetNameLong",get:function get(){if(this.isValid){return this.zone.offsetName(this.ts,{format:"long",locale:this.locale});}else{return null;}}},{key:"isOffsetFixed",get:function get(){return this.isValid?this.zone.isUniversal:null;}},{key:"isInDST",get:function get(){if(this.isOffsetFixed){return false;}else{return this.offset>this.set({month:1,day:1}).offset||this.offset>this.set({month:5}).offset;}}},{key:"isInLeapYear",get:function get(){return isLeapYear(this.year);}},{key:"daysInMonth",get:function get(){return daysInMonth(this.year,this.month);}},{key:"daysInYear",get:function get(){return this.isValid?daysInYear(this.year):NaN;}},{key:"weeksInWeekYear",get:function get(){return this.isValid?weeksInWeekYear(this.weekYear):NaN;}}],[{key:"DATE_SHORT",get:function get(){return DATE_SHORT;}},{key:"DATE_MED",get:function get(){return DATE_MED;}},{key:"DATE_MED_WITH_WEEKDAY",get:function get(){return DATE_MED_WITH_WEEKDAY;}},{key:"DATE_FULL",get:function get(){return DATE_FULL;}},{key:"DATE_HUGE",get:function get(){return DATE_HUGE;}},{key:"TIME_SIMPLE",get:function get(){return TIME_SIMPLE;}},{key:"TIME_WITH_SECONDS",get:function get(){return TIME_WITH_SECONDS;}},{key:"TIME_WITH_SHORT_OFFSET",get:function get(){return TIME_WITH_SHORT_OFFSET;}},{key:"TIME_WITH_LONG_OFFSET",get:function get(){return TIME_WITH_LONG_OFFSET;}},{key:"TIME_24_SIMPLE",get:function get(){return TIME_24_SIMPLE;}},{key:"TIME_24_WITH_SECONDS",get:function get(){return TIME_24_WITH_SECONDS;}},{key:"TIME_24_WITH_SHORT_OFFSET",get:function get(){return TIME_24_WITH_SHORT_OFFSET;}},{key:"TIME_24_WITH_LONG_OFFSET",get:function get(){return TIME_24_WITH_LONG_OFFSET;}},{key:"DATETIME_SHORT",get:function get(){return DATETIME_SHORT;}},{key:"DATETIME_SHORT_WITH_SECONDS",get:function get(){return DATETIME_SHORT_WITH_SECONDS;}},{key:"DATETIME_MED",get:function get(){return DATETIME_MED;}},{key:"DATETIME_MED_WITH_SECONDS",get:function get(){return DATETIME_MED_WITH_SECONDS;}},{key:"DATETIME_MED_WITH_WEEKDAY",get:function get(){return DATETIME_MED_WITH_WEEKDAY;}},{key:"DATETIME_FULL",get:function get(){return DATETIME_FULL;}},{key:"DATETIME_FULL_WITH_SECONDS",get:function get(){return DATETIME_FULL_WITH_SECONDS;}},{key:"DATETIME_HUGE",get:function get(){return DATETIME_HUGE;}},{key:"DATETIME_HUGE_WITH_SECONDS",get:function get(){return DATETIME_HUGE_WITH_SECONDS;}}]);return DateTime;}();function friendlyDateTime(dateTimeish){if(DateTime.isDateTime(dateTimeish)){return dateTimeish;}else if(dateTimeish&&dateTimeish.valueOf&&isNumber(dateTimeish.valueOf())){return DateTime.fromJSDate(dateTimeish);}else if(dateTimeish&&typeof dateTimeish==="object"){return DateTime.fromObject(dateTimeish);}else{throw new InvalidArgumentError("Unknown datetime argument: "+dateTimeish+", of type "+typeof dateTimeish);}}
var VERSION="3.0.1";exports.DateTime=DateTime;exports.Duration=Duration;exports.FixedOffsetZone=FixedOffsetZone;exports.IANAZone=IANAZone;exports.Info=Info;exports.Interval=Interval;exports.InvalidZone=InvalidZone;exports.Settings=Settings;exports.SystemZone=SystemZone;exports.VERSION=VERSION;exports.Zone=Zone;Object.defineProperty(exports,'__esModule',{value:true});return exports;})({});;

/* /web/static/src/core/action_swiper/action_swiper.js */
odoo.define('@web/core/action_swiper/action_swiper',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{localization}=require("@web/core/l10n/localization");const{clamp}=require("@web/core/utils/numbers");const{Component,onMounted,onWillUnmount,useRef,useState}=require("@odoo/owl");const isScrollSwipable=(scrollables)=>{return{left:!scrollables.filter((e)=>e.scrollLeft!==0).length,right:!scrollables.filter((e)=>e.scrollLeft+Math.round(e.getBoundingClientRect().width)!==e.scrollWidth).length,};};const ActionSwiper=__exports.ActionSwiper=class ActionSwiper extends Component{setup(){this.actionTimeoutId=null;this.resetTimeoutId=null;this.defaultState={containerStyle:"",isSwiping:false,width:undefined,};this.root=useRef("root");this.targetContainer=useRef("targetContainer");this.state=useState({...this.defaultState});this.scrollables=undefined;this.startX=undefined;this.swipedDistance=0;this.isScrollValidated=false;onMounted(()=>{if(this.targetContainer.el){this.state.width=this.targetContainer.el.getBoundingClientRect().width;}
if(this.props.onLeftSwipe||this.props.onRightSwipe){const classes=new Set(this.root.el.classList);classes.delete("o_actionswiper");for(const className of classes){this.targetContainer.el.firstChild.classList.add(className);this.root.el.classList.remove(className);}}});onWillUnmount(()=>{browser.clearTimeout(this.actionTimeoutId);browser.clearTimeout(this.resetTimeoutId);});}
get localizedProps(){return{onLeftSwipe:localization.direction==="rtl"?this.props.onRightSwipe:this.props.onLeftSwipe,onRightSwipe:localization.direction==="rtl"?this.props.onLeftSwipe:this.props.onRightSwipe,};}
_onTouchEndSwipe(){if(this.state.isSwiping){this.state.isSwiping=false;if(this.localizedProps.onRightSwipe&&this.swipedDistance>this.state.width/this.props.swipeDistanceRatio){this.swipedDistance=this.state.width;this.handleSwipe(this.localizedProps.onRightSwipe.action);}else if(this.localizedProps.onLeftSwipe&&this.swipedDistance<-this.state.width/this.props.swipeDistanceRatio){this.swipedDistance=-this.state.width;this.handleSwipe(this.localizedProps.onLeftSwipe.action);}else{this.state.containerStyle="";}}}
_onTouchMoveSwipe(ev){if(this.state.isSwiping){const{onLeftSwipe,onRightSwipe}=this.localizedProps;this.swipedDistance=clamp(ev.touches[0].clientX-this.startX,onLeftSwipe?-this.state.width:0,onRightSwipe?this.state.width:0);if(Math.abs(this.swipedDistance)>40){ev.preventDefault();}
if(!this.isScrollValidated&&this.scrollables&&!isScrollSwipable(this.scrollables)[this.swipedDistance>0?"left":"right"]){return this._reset();}
this.isScrollValidated=true;if(this.props.animationOnMove){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;}}}
_onTouchStartSwipe(ev){this.scrollables=ev.composedPath().filter((e)=>e.nodeType===1&&this.targetContainer.el.contains(e)&&e.scrollWidth>e.getBoundingClientRect().width&&["auto","scroll"].includes(window.getComputedStyle(e)["overflow-x"]));if(!this.state.width){this.state.width=this.targetContainer&&this.targetContainer.el.getBoundingClientRect().width;}
this.state.isSwiping=true;this.isScrollValidated=false;this.startX=ev.touches[0].clientX;}
_reset(){Object.assign(this.state,{...this.defaultState});this.scrollables=undefined;this.startX=undefined;this.swipedDistance=0;this.isScrollValidated=false;}
handleSwipe(action){if(this.props.animationType==="bounce"){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;this.actionTimeoutId=browser.setTimeout(()=>{action();this._reset();},500);}else if(this.props.animationType==="forwards"){this.state.containerStyle=`transform: translateX(${this.swipedDistance}px)`;this.actionTimeoutId=browser.setTimeout(()=>{action();this.state.isSwiping=true;this.state.containerStyle=`transform: translateX(${-this.swipedDistance}px)`;this.resetTimeoutId=browser.setTimeout(()=>{this._reset();},100);},100);}else{return action();}}}
ActionSwiper.props={onLeftSwipe:{type:Object,args:{action:Function,icon:String,bgColor:String,},optional:true,},onRightSwipe:{type:Object,args:{action:Function,icon:String,bgColor:String,},optional:true,},slots:Object,animationOnMove:{type:Boolean,optional:true},animationType:{type:String,optional:true},swipeDistanceRatio:{type:Number,optional:true},};ActionSwiper.defaultProps={onLeftSwipe:undefined,onRightSwipe:undefined,animationOnMove:true,animationType:"bounce",swipeDistanceRatio:2,};ActionSwiper.template="web.ActionSwiper";return __exports;});;

/* /web/static/src/core/assets.js */
odoo.define('@web/core/assets',async function(require){'use strict';let __exports={};const{memoize}=require("@web/core/utils/functions");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{session}=require("@web/session");const assets=__exports.assets={retries:{count:3,delay:5000,extraDelay:2500,},};class AssetsLoadingError extends Error{}
const _loadJS=__exports._loadJS=(assets.loadJS=memoize(function loadJS(url){if(document.querySelector(`script[src="${url}"]`)){return Promise.resolve();}
const scriptEl=document.createElement("script");scriptEl.type="text/javascript";scriptEl.src=url;document.head.appendChild(scriptEl);return new Promise((resolve,reject)=>{scriptEl.addEventListener("load",()=>resolve(true));scriptEl.addEventListener("error",()=>{reject(new AssetsLoadingError(`The loading of ${url} failed`));});});}));const _loadCSS=__exports._loadCSS=(assets.loadCSS=memoize(function loadCSS(url,retryCount=0){if(document.querySelector(`link[href="${url}"]`)){return Promise.resolve();}
const linkEl=document.createElement("link");linkEl.type="text/css";linkEl.rel="stylesheet";linkEl.href=url;const promise=new Promise((resolve,reject)=>{linkEl.addEventListener("load",()=>resolve(true));linkEl.addEventListener("error",async()=>{if(retryCount<assets.retries.count){await new Promise(resolve=>setTimeout(resolve,assets.retries.delay+assets.retries.extraDelay*retryCount));linkEl.remove();loadCSS(url,retryCount+1).then(resolve).catch(reject);}else{reject(new AssetsLoadingError(`The loading of ${url} failed`));}});});document.head.appendChild(linkEl);return promise;}));const templates=__exports.templates=new DOMParser().parseFromString("<odoo/>","text/xml");let defaultApp;const _loadXML=__exports._loadXML=(assets.loadXML=function loadXML(xml,app=defaultApp){const doc=new DOMParser().parseFromString(xml,"text/xml");if(doc.querySelector("parsererror")){throw doc.querySelector("parsererror div").textContent.split(":")[0];}
for(const element of doc.querySelectorAll("templates > [t-name][owl]")){element.removeAttribute("owl");const name=element.getAttribute("t-name");const previous=templates.querySelector(`[t-name="${name}"]`);if(previous){console.debug("Override template: "+name);previous.replaceWith(element);}else{templates.documentElement.appendChild(element);}}
if(app||defaultApp){console.debug("Add templates in Owl app.");app.addTemplates(templates,app||defaultApp);}else{console.debug("Add templates on window Owl container.");}});__exports.setLoadXmlDefaultApp=setLoadXmlDefaultApp;function setLoadXmlDefaultApp(app){defaultApp=app;}
const _getBundle=__exports._getBundle=(assets.getBundle=memoize(async function getBundle(bundleName){const url=new URL(`/web/bundle/${bundleName}`,location.origin);for(const[key,value]of Object.entries(session.bundle_params||{})){url.searchParams.set(key,value);}
const response=await browser.fetch(url.href);const json=await response.json();const assets={cssLibs:[],cssContents:[],jsLibs:[],jsContents:[],};for(const key in json){const file=json[key];if(file.type==="link"){assets.cssLibs.push(file.src);}else if(file.type==="style"){assets.cssContents.push(file.content);}else{if(file.src){assets.jsLibs.push(file.src);}else{assets.jsContents.push(file.content);}}}
return assets;}));const _loadBundle=__exports._loadBundle=(assets.loadBundle=async function loadBundle(desc){const promiseCSS=Promise.all((desc.cssLibs||[]).map(assets.loadCSS)).then(()=>{if(desc.cssContents&&desc.cssContents.length){const style=document.createElement("style");style.textContent=desc.cssContents.join("\n");document.head.appendChild(style);}});for(const urlData of desc.jsLibs||[]){if(typeof urlData==="string"){await assets.loadJS(urlData);const bundle=urlData.match(/\/web\/assets\/.*\/([^/]+?)(\.min)?\.js/);if(bundle){await odoo.ready(bundle[1]+".bundle.xml");}}else{await Promise.all(urlData.map(loadJS));}}
if(desc.jsContents&&desc.jsContents.length){const script=document.createElement("script");script.type="text/javascript";script.textContent=desc.jsContents.join("\n");document.head.appendChild(script);}
await promiseCSS;for(const bundleName of desc.assetLibs||[]){if(typeof bundleName==="string"){const desc=await assets.getBundle(bundleName);await assets.loadBundle(desc);}else{await Promise.all(bundleName.map(async(bundleName)=>{const desc=await assets.getBundle(bundleName);return assets.loadBundle(desc);}));}}});const loadJS=__exports.loadJS=function(url){return assets.loadJS(url);};const loadCSS=__exports.loadCSS=function(url){return assets.loadCSS(url);};const loadXML=__exports.loadXML=function(xml,app=defaultApp){return assets.loadXML(xml,app);};const getBundle=__exports.getBundle=function(bundleName){return assets.getBundle(bundleName);};const loadBundle=__exports.loadBundle=function(desc){return assets.loadBundle(desc);};const{Component,xml,onWillStart}=require("@odoo/owl");const LazyComponent=__exports.LazyComponent=class LazyComponent extends Component{setup(){onWillStart(async()=>{const bundle=await getBundle(this.props.bundle);await loadBundle(bundle);this.Component=registry.category("lazy_components").get(this.props.Component);});}}
LazyComponent.template=xml`<t t-component="Component" t-props="props.props"/>`;LazyComponent.props={Component:String,bundle:String,props:{type:Object,optional:true},};return __exports;});;

/* /web/static/src/core/autocomplete/autocomplete.js */
odoo.define('@web/core/autocomplete/autocomplete',async function(require){'use strict';let __exports={};const{useForwardRefToParent,useService}=require("@web/core/utils/hooks");const{useDebounced}=require("@web/core/utils/timing");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{usePosition}=require("@web/core/position_hook");const{Component,useExternalListener,useRef,useState}=require("@odoo/owl");const AutoComplete=__exports.AutoComplete=class AutoComplete extends Component{setup(){this.nextSourceId=0;this.nextOptionId=0;this.sources=[];this.state=useState({navigationRev:0,optionsRev:0,open:false,activeSourceOption:null,value:this.props.value,});this.inputRef=useForwardRefToParent("input");this.root=useRef("root");this.debouncedOnInput=useDebounced(this.onInput,this.constructor.timeout);useExternalListener(window,"scroll",this.onWindowScroll,true);this.hotkey=useService("hotkey");this.hotkeysToRemove=[];owl.onWillUpdateProps((nextProps)=>{if(this.props.value!==nextProps.value||this.forceValFromProp){this.forceValFromProp=false;this.state.value=nextProps.value;this.inputRef.el.value=nextProps.value;this.close();}});usePosition(()=>this.inputRef.el,{popper:"sourcesList",position:"bottom-start",});}
get isOpened(){return this.state.open;}
get hasOptions(){for(const source of this.sources){if(source.isLoading||source.options.length){return true;}}
return false;}
open(useInput=false){this.state.open=true;this.loadSources(useInput);}
close(){this.state.open=false;this.state.activeSourceOption=null;}
loadSources(useInput){this.sources=[];this.state.activeSourceOption=null;const proms=[];for(const pSource of this.props.sources){const source=this.makeSource(pSource);this.sources.push(source);const options=this.loadOptions(pSource.options,useInput?this.inputRef.el.value.trim():"");if(options instanceof Promise){source.isLoading=true;const prom=options.then((options)=>{source.options=options.map((option)=>this.makeOption(option));source.isLoading=false;this.state.optionsRev++;});proms.push(prom);}else{source.options=options.map((option)=>this.makeOption(option));}}
Promise.all(proms).then(()=>{this.navigate(0);});}
loadOptions(options,request){if(typeof options==="function"){return options(request);}else{return options;}}
makeOption(option){return Object.assign(Object.create(option),{id:++this.nextOptionId,});}
makeSource(source){return{id:++this.nextSourceId,options:[],isLoading:false,placeholder:source.placeholder,optionTemplate:source.optionTemplate,};}
isActiveSourceOption([sourceIndex,optionIndex]){return(this.state.activeSourceOption&&this.state.activeSourceOption[0]===sourceIndex&&this.state.activeSourceOption[1]===optionIndex);}
selectOption(indices,params={}){const option=this.sources[indices[0]].options[indices[1]];if(option.unselectable){this.inputRef.el.value="";this.close();return;}
if(this.props.resetOnSelect){this.inputRef.el.value="";}
this.forceValFromProp=true;this.props.onSelect(option,{...params,input:this.inputRef.el,});const customEvent=new CustomEvent("AutoComplete:OPTION_SELECTED",{bubbles:true});this.root.el.dispatchEvent(customEvent);this.close();}
navigate(direction){let step=Math.sign(direction);if(!step){this.state.activeSourceOption=null;step=1;}else{this.state.navigationRev++;}
if(this.state.activeSourceOption){let[sourceIndex,optionIndex]=this.state.activeSourceOption;let source=this.sources[sourceIndex];optionIndex+=step;if(0>optionIndex||optionIndex>=source.options.length){sourceIndex+=step;source=this.sources[sourceIndex];while(source&&source.isLoading){sourceIndex+=step;source=this.sources[sourceIndex];}
if(source){optionIndex=step<0?source.options.length-1:0;}}
this.state.activeSourceOption=source?[sourceIndex,optionIndex]:null;}else{let sourceIndex=step<0?this.sources.length-1:0;let source=this.sources[sourceIndex];while(source&&source.isLoading){sourceIndex+=step;source=this.sources[sourceIndex];}
if(source){const optionIndex=step<0?source.options.length-1:0;if(optionIndex<source.options.length){this.state.activeSourceOption=[sourceIndex,optionIndex];}}}}
onInputBlur(){const value=this.inputRef.el.value;if(this.props.autoSelect&&this.state.activeSourceOption&&value.length>0&&value!==this.props.value){this.selectOption(this.state.activeSourceOption,{triggeredOnBlur:true});}else{this.props.onBlur({inputValue:value,});this.close();}}
onInputClick(){if(!this.isOpened){this.open(this.inputRef.el.value.trim()!==this.props.value);}else{this.close();}}
onInputChange(){this.props.onChange({inputValue:this.inputRef.el.value,});}
onInput(){this.props.onInput({inputValue:this.inputRef.el.value,});this.open(true);}
onInputKeydown(ev){const hotkey=getActiveHotkey(ev);switch(hotkey){case"enter":if(!this.isOpened||!this.state.activeSourceOption){return;}
this.selectOption(this.state.activeSourceOption);break;case"escape":if(!this.isOpened){return;}
this.close();break;case"tab":if(!this.isOpened){return;}
if(this.props.autoSelect&&this.state.activeSourceOption&&(this.state.navigationRev>0||this.inputRef.el.value.length>0)){this.selectOption(this.state.activeSourceOption);}
this.close();return;case"arrowup":this.navigate(-1);if(!this.isOpened){this.open(true);}
break;case"arrowdown":this.navigate(+1);if(!this.isOpened){this.open(true);}
break;default:return;}
ev.stopPropagation();ev.preventDefault();}
onOptionMouseEnter(indices){this.state.activeSourceOption=indices;}
onOptionMouseLeave(){this.state.activeSourceOption=null;}
onOptionClick(indices){this.selectOption(indices);}
onWindowScroll(ev){if(this.isOpened&&!this.root.el.contains(ev.target)){this.close();}}}
Object.assign(AutoComplete,{template:"web.AutoComplete",props:{value:{type:String},id:{type:String,optional:true},onSelect:{type:Function},sources:{type:Array,element:{type:Object,shape:{placeholder:{type:String,optional:true},optionTemplate:{type:String,optional:true},options:[Array,Function],},},},placeholder:{type:String,optional:true},autoSelect:{type:Boolean,optional:true},resetOnSelect:{type:Boolean,optional:true},onInput:{type:Function,optional:true},onChange:{type:Function,optional:true},onBlur:{type:Function,optional:true},input:{type:Function,optional:true},},defaultProps:{placeholder:"",autoSelect:false,onInput:()=>{},onChange:()=>{},onBlur:()=>{},},timeout:250,});return __exports;});;

/* /web/static/src/core/browser/browser.js */
odoo.define('@web/core/browser/browser',async function(require){'use strict';let __exports={};let sessionStorage=window.sessionStorage;let localStorage=window.localStorage;try{localStorage.setItem("__localStorage__","true");localStorage.removeItem("__localStorage__");}catch(_e){localStorage=makeRAMLocalStorage();sessionStorage=makeRAMLocalStorage();}
const browser=__exports.browser={addEventListener:window.addEventListener.bind(window),removeEventListener:window.removeEventListener.bind(window),setTimeout:window.setTimeout.bind(window),clearTimeout:window.clearTimeout.bind(window),setInterval:window.setInterval.bind(window),clearInterval:window.clearInterval.bind(window),performance:window.performance,requestAnimationFrame:window.requestAnimationFrame.bind(window),cancelAnimationFrame:window.cancelAnimationFrame.bind(window),console:window.console,history:window.history,navigator,Notification:window.Notification,open:window.open.bind(window),SharedWorker:window.SharedWorker,Worker:window.Worker,XMLHttpRequest:window.XMLHttpRequest,localStorage,sessionStorage,fetch:window.fetch.bind(window),innerHeight:window.innerHeight,innerWidth:window.innerWidth,ontouchstart:window.ontouchstart,};Object.defineProperty(browser,"location",{set(val){window.location=val;},get(){return window.location;},configurable:true,});Object.defineProperty(browser,"innerHeight",{get:()=>window.innerHeight,configurable:true,});Object.defineProperty(browser,"innerWidth",{get:()=>window.innerWidth,configurable:true,});__exports.makeRAMLocalStorage=makeRAMLocalStorage;function makeRAMLocalStorage(){let store={};return{setItem(key,value){store[key]=value;window.dispatchEvent(new StorageEvent("storage",{key,newValue:value}));},getItem(key){return store[key];},clear(){store={};},removeItem(key){delete store[key];window.dispatchEvent(new StorageEvent("storage",{key,newValue:null}));},get length(){return Object.keys(store).length;},key(){return"";},};}
return __exports;});;

/* /web/static/src/core/browser/cookie_service.js */
odoo.define('@web/core/browser/cookie_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const COOKIE_TTL=24*60*60*365;function parseCookieString(str){const cookie={};const parts=str.split("; ");for(const part of parts){const[key,value]=part.split("=");cookie[key]=value||"";}
return cookie;}
function cookieToString(key,value,ttl=COOKIE_TTL){let fullCookie=[];if(value!==undefined){fullCookie.push(`${key}=${value}`);}
fullCookie=fullCookie.concat(["path=/",`max-age=${ttl}`]);return fullCookie.join(";");}
function makeCookieService(){function getCurrent(){return parseCookieString(document.cookie);}
let cookie=getCurrent();function setCookie(key,value,ttl){document.cookie=cookieToString(key,value,ttl);cookie=getCurrent();}
return{get current(){return cookie;},setCookie,deleteCookie(key){setCookie(key,"kill",0);},};}
const cookieService=__exports.cookieService={start(){return makeCookieService();},};registry.category("services").add("cookie",cookieService);return __exports;});;

/* /web/static/src/core/browser/feature_detection.js */
odoo.define('@web/core/browser/feature_detection',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");__exports.isBrowserChrome=isBrowserChrome;function isBrowserChrome(){return browser.navigator.userAgent.includes("Chrome");}
__exports.isAndroid=isAndroid;function isAndroid(){return/Android/i.test(browser.navigator.userAgent);}
__exports.isIOS=isIOS;function isIOS(){return(/(iPad|iPhone|iPod)/i.test(browser.navigator.userAgent)||(browser.navigator.platform==="MacIntel"&&maxTouchPoints()>1));}
__exports.isOtherMobileOS=isOtherMobileOS;function isOtherMobileOS(){return/(webOS|BlackBerry|Windows Phone)/i.test(browser.navigator.userAgent);}
__exports.isMacOS=isMacOS;function isMacOS(){return Boolean(browser.navigator.userAgent.match(/Mac/i));}
__exports.isMobileOS=isMobileOS;function isMobileOS(){return isAndroid()||isIOS()||isOtherMobileOS();}
__exports.isIosApp=isIosApp;function isIosApp(){return/OdooMobile \(iOS\)/i.test(browser.navigator.userAgent);}
__exports.hasTouch=hasTouch;function hasTouch(){return browser.ontouchstart!==undefined;}
__exports.maxTouchPoints=maxTouchPoints;function maxTouchPoints(){return browser.navigator.maxTouchPoints||1;}
return __exports;});;

/* /web/static/src/core/browser/router_service.js */
odoo.define('@web/core/browser/router_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{shallowEqual}=require("@web/core/utils/objects");const{objectToUrlEncodedString}=require("@web/core/utils/urls");const{browser}=require("@web/core/browser/browser");function cast(value){return!value||isNaN(value)?value:Number(value);}
function parseString(str){const parts=str.split("&");const result={};for(const part of parts){const[key,value]=part.split("=");const decoded=decodeURIComponent(value||"");result[key]=cast(decoded);}
return result;}
function applyLocking(lockedKeys,hash,currentHash,options={}){const newHash={};for(const key in hash){if("lock"in options){options.lock?lockedKeys.add(key):lockedKeys.delete(key);}else if(lockedKeys.has(key)){continue;}
newHash[key]=hash[key];}
for(const key in currentHash){if(lockedKeys.has(key)&&!(key in newHash)){newHash[key]=currentHash[key];}}
return newHash;}
function computeNewRoute(hash,replace,currentRoute){if(!replace){hash=Object.assign({},currentRoute.hash,hash);}
hash=sanitizeHash(hash);if(!shallowEqual(currentRoute.hash,hash)){return Object.assign({},currentRoute,{hash});}
return false;}
function sanitizeHash(hash){return Object.fromEntries(Object.entries(hash).filter(([,v])=>v!==undefined).map(([k,v])=>[k,cast(v)]));}
__exports.parseHash=parseHash;function parseHash(hash){return hash&&hash!=="#"?parseString(hash.slice(1)):{};}
__exports.parseSearchQuery=parseSearchQuery;function parseSearchQuery(search){return search?parseString(search.slice(1)):{};}
__exports.routeToUrl=routeToUrl;function routeToUrl(route){const search=objectToUrlEncodedString(route.search);const hash=objectToUrlEncodedString(route.hash);return route.pathname+(search?"?"+search:"")+(hash?"#"+hash:"");}
async function redirect(env,url,wait=false){if(wait){await new Promise((resolve)=>{const waitForServer=(delay)=>{browser.setTimeout(async()=>{env.services.rpc("/web/webclient/version_info",{}).then(resolve).catch(()=>waitForServer(250));},delay);};waitForServer(1000);});}
browser.location.assign(url);}
function getRoute(urlObj){const{pathname,search,hash}=urlObj;const searchQuery=parseSearchQuery(search);const hashQuery=parseHash(hash);return{pathname,search:searchQuery,hash:hashQuery};}
function makeRouter(env){const bus=env.bus;const lockedKeys=new Set();let current=getRoute(browser.location);let pushTimeout;browser.addEventListener("hashchange",(ev)=>{browser.clearTimeout(pushTimeout);const loc=new URL(ev.newURL);current=getRoute(loc);bus.trigger("ROUTE_CHANGE");});function makeDebouncedPush(mode){let allPushArgs=[];function doPush(){const replace=allPushArgs.some(([,options])=>options&&options.replace);const newHash=allPushArgs.reduce((finalHash,[hash,options])=>{hash=applyLocking(lockedKeys,hash,current.hash,options);if(finalHash){hash=applyLocking(lockedKeys,hash,finalHash,options);}
return Object.assign(finalHash||{},hash);},null);const newRoute=computeNewRoute(newHash,replace,current);if(!newRoute){return;}
const url=browser.location.origin+routeToUrl(newRoute);if(mode==="push"){browser.history.pushState({},"",url);}else{browser.history.replaceState({},"",url);}
current=getRoute(browser.location);}
return function pushOrReplaceState(hash,options){allPushArgs.push([hash,options]);browser.clearTimeout(pushTimeout);pushTimeout=browser.setTimeout(()=>{doPush();pushTimeout=null;allPushArgs=[];});};}
return{get current(){return current;},pushState:makeDebouncedPush("push"),replaceState:makeDebouncedPush("replace"),redirect:(url,wait)=>redirect(env,url,wait),cancelPushes:()=>browser.clearTimeout(pushTimeout),};}
const routerService=__exports.routerService={start(env){return makeRouter(env);},};__exports.objectToQuery=objectToQuery;function objectToQuery(obj){const query={};Object.entries(obj).forEach(([k,v])=>{query[k]=v?String(v):v;});return query;}
registry.category("services").add("router",routerService);return __exports;});;

/* /web/static/src/core/browser/title_service.js */
odoo.define('@web/core/browser/title_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const titleService=__exports.titleService={start(){const titleParts={};function getParts(){return Object.assign({},titleParts);}
function setParts(parts){for(const key in parts){const val=parts[key];if(!val){delete titleParts[key];}else{titleParts[key]=val;}}
document.title=Object.values(titleParts).join(" - ");}
return{get current(){return document.title;},getParts,setParts,};},};registry.category("services").add("title",titleService);return __exports;});;

/* /web/static/src/core/checkbox/checkbox.js */
odoo.define('@web/core/checkbox/checkbox',async function(require){'use strict';let __exports={};const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{Component,useRef}=require("@odoo/owl");const CheckBox=__exports.CheckBox=class CheckBox extends Component{setup(){this.id=`checkbox-comp-${CheckBox.nextId++}`;this.rootRef=useRef("root");useHotkey("Enter",({area})=>{const oldValue=area.querySelector("input").checked;this.props.onChange(!oldValue);},{area:()=>this.rootRef.el,bypassEditableProtection:true});}
onClick(ev){if(ev.composedPath().find((el)=>["INPUT","LABEL"].includes(el.tagName))){ev.stopPropagation();return;}
const input=this.rootRef.el.querySelector("input");input.focus();if(!this.props.disabled){ev.stopPropagation();input.checked=!input.checked;this.props.onChange(input.checked);}}
onChange(ev){if(!this.props.disabled){this.props.onChange(ev.target.checked);}}}
CheckBox.template="web.CheckBox";CheckBox.nextId=1;CheckBox.defaultProps={onChange:()=>{},};CheckBox.props={id:{type:true,optional:true,},disabled:{type:Boolean,optional:true,},value:{type:Boolean,optional:true,},slots:{type:Object,optional:true,},onChange:{type:Function,optional:true,},className:{type:String,optional:true,},name:{type:String,optional:true,},};return __exports;});;

/* /web/static/src/core/colorlist/colorlist.js */
odoo.define('@web/core/colorlist/colorlist',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{Component,useRef,useState,useExternalListener}=require("@odoo/owl");const ColorList=__exports.ColorList=class ColorList extends Component{setup(){this.colorlistRef=useRef("colorlist");this.state=useState({isExpanded:this.props.isExpanded});useExternalListener(window,"click",this.onOutsideClick);}
get colors(){return this.constructor.COLORS;}
onColorSelected(id){this.props.onColorSelected(id);if(!this.props.forceExpanded){this.state.isExpanded=false;}}
onOutsideClick(ev){if(this.colorlistRef.el.contains(ev.target)||this.props.forceExpanded){return;}
this.state.isExpanded=false;}
onToggle(ev){if(this.props.canToggle){ev.preventDefault();ev.stopPropagation();this.state.isExpanded=!this.state.isExpanded;this.colorlistRef.el.firstElementChild.focus();}}}
ColorList.COLORS=[_lt("No color"),_lt("Red"),_lt("Orange"),_lt("Yellow"),_lt("Light blue"),_lt("Dark purple"),_lt("Salmon pink"),_lt("Medium blue"),_lt("Dark blue"),_lt("Fuchsia"),_lt("Green"),_lt("Purple"),];ColorList.template="web.ColorList";ColorList.defaultProps={forceExpanded:false,isExpanded:false,};ColorList.props={canToggle:{type:Boolean,optional:true},colors:Array,forceExpanded:{type:Boolean,optional:true},isExpanded:{type:Boolean,optional:true},onColorSelected:Function,selectedColor:{type:Number,optional:true},};return __exports;});;

/* /web/static/src/core/commands/command_category.js */
odoo.define('@web/core/commands/command_category',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const commandCategoryRegistry=registry.category("command_categories");commandCategoryRegistry.add("app",{},{sequence:10}).add("smart_action",{},{sequence:15}).add("actions",{},{sequence:30}).add("navbar",{},{sequence:40}).add("default",{},{sequence:100}).add("debug",{},{sequence:110});return __exports;});;

/* /web/static/src/core/commands/command_hook.js */
odoo.define('@web/core/commands/command_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect}=require("@odoo/owl");__exports.useCommand=useCommand;function useCommand(name,action,options={}){const commandService=useService("command");useEffect(()=>commandService.add(name,action,options),()=>[]);}
return __exports;});;

/* /web/static/src/core/commands/command_palette.js */
odoo.define('@web/core/commands/command_palette',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{_lt}=require("@web/core/l10n/translation");const{KeepLast}=require("@web/core/utils/concurrency");const{useAutofocus,useService}=require("@web/core/utils/hooks");const{scrollTo}=require("@web/core/utils/scrolling");const{fuzzyLookup}=require("@web/core/utils/search");const{debounce}=require("@web/core/utils/timing");const{isMacOS,isMobileOS}=require("@web/core/browser/feature_detection");const{escapeRegExp}=require("@web/core/utils/strings");const{Component,onWillStart,onWillDestroy,useRef,useState,markRaw,useExternalListener,}=require("@odoo/owl");const DEFAULT_PLACEHOLDER=_lt("Search...");const DEFAULT_EMPTY_MESSAGE=_lt("No result found");const FUZZY_NAMESPACES=["default"];function commandsWithinCategory(categoryName,categories){return(cmd)=>{const inCurrentCategory=categoryName===cmd.category;const fallbackCategory=categoryName==="default"&&!categories.includes(cmd.category);return inCurrentCategory||fallbackCategory;};}
__exports.splitCommandName=splitCommandName;function splitCommandName(name,searchValue){if(name){const splitName=name.split(new RegExp(`(${escapeRegExp(searchValue)})`,"ig"));return searchValue.length&&splitName.length>1?splitName:[name];}
return[];}
const DefaultCommandItem=__exports.DefaultCommandItem=class DefaultCommandItem extends Component{}
DefaultCommandItem.template="web.DefaultCommandItem";const CommandPalette=__exports.CommandPalette=class CommandPalette extends Component{setup(){if(this.props.bus){const setConfig=({detail})=>this.setCommandPaletteConfig(detail);this.props.bus.addEventListener(`SET-CONFIG`,setConfig);onWillDestroy(()=>this.props.bus.removeEventListener(`SET-CONFIG`,setConfig));}
this.keyId=1;this.keepLast=new KeepLast();this._sessionId=CommandPalette.lastSessionId++;this.DefaultCommandItem=DefaultCommandItem;this.activeElement=useService("ui").activeElement;this.inputRef=useAutofocus();useHotkey("Enter",()=>this.executeSelectedCommand(),{bypassEditableProtection:true});useHotkey("Control+Enter",()=>this.executeSelectedCommand(true),{bypassEditableProtection:true,});useHotkey("ArrowUp",()=>this.selectCommandAndScrollTo("PREV"),{bypassEditableProtection:true,allowRepeat:true,});useHotkey("ArrowDown",()=>this.selectCommandAndScrollTo("NEXT"),{bypassEditableProtection:true,allowRepeat:true,});useExternalListener(window,"mousedown",this.onWindowMouseDown);this.state=useState({});this.root=useRef("root");this.listboxRef=useRef("listbox");onWillStart(()=>this.setCommandPaletteConfig(this.props.config));}
get commandsByCategory(){const categories=[];for(const category of this.categoryKeys){const commands=this.state.commands.filter(commandsWithinCategory(category,this.categoryKeys));if(commands.length){categories.push({commands,keyId:category,});}}
return categories;}
async setCommandPaletteConfig(config){this.configByNamespace=config.configByNamespace||{};this.state.FooterComponent=config.FooterComponent;this.providersByNamespace={default:[]};for(const provider of config.providers){const namespace=provider.namespace||"default";if(namespace in this.providersByNamespace){this.providersByNamespace[namespace].push(provider);}else{this.providersByNamespace[namespace]=[provider];}}
const{namespace,searchValue}=this.processSearchValue(config.searchValue||"");this.switchNamespace(namespace);await this.search(searchValue);}
async setCommands(namespace,options={}){this.categoryKeys=["default"];const proms=this.providersByNamespace[namespace].map((provider)=>{const{provide}=provider;const result=provide(this.env,options);return result;});let commands=(await this.keepLast.add(Promise.all(proms))).flat();const namespaceConfig=this.configByNamespace[namespace]||{};if(options.searchValue&&FUZZY_NAMESPACES.includes(namespace)){commands=fuzzyLookup(options.searchValue,commands,(c)=>c.name);}else{if(namespaceConfig.categories){let commandsSorted=[];this.categoryKeys=namespaceConfig.categories;if(!this.categoryKeys.includes("default")){this.categoryKeys.push("default");}
for(const category of this.categoryKeys){commandsSorted=commandsSorted.concat(commands.filter(commandsWithinCategory(category,this.categoryKeys)));}
commands=commandsSorted;}}
this.state.commands=markRaw(commands.slice(0,100).map((command)=>({...command,keyId:this.keyId++,splitName:splitCommandName(command.name,options.searchValue),})));this.selectCommand(this.state.commands.length?0:-1);this.mouseSelectionActive=false;this.state.emptyMessage=(namespaceConfig.emptyMessage||DEFAULT_EMPTY_MESSAGE).toString();}
selectCommand(index){if(index===-1||index>=this.state.commands.length){this.state.selectedCommand=null;return;}
this.state.selectedCommand=markRaw(this.state.commands[index]);}
selectCommandAndScrollTo(type){this.mouseSelectionActive=false;const index=this.state.commands.indexOf(this.state.selectedCommand);if(index===-1){return;}
let nextIndex;if(type==="NEXT"){nextIndex=index<this.state.commands.length-1?index+1:0;}else if(type==="PREV"){nextIndex=index>0?index-1:this.state.commands.length-1;}
this.selectCommand(nextIndex);const command=this.listboxRef.el.querySelector(`#o_command_${nextIndex}`);scrollTo(command,{scrollable:this.listboxRef.el});}
onCommandClicked(event,index){event.preventDefault();this.selectCommand(index);const ctrlKey=isMacOS()?event.metaKey:event.ctrlKey;this.executeSelectedCommand(ctrlKey);}
async executeCommand(command){const config=await command.action();if(config){this.setCommandPaletteConfig(config);}else{this.props.close();}}
async executeSelectedCommand(ctrlKey){await this.searchValuePromise;const selectedCommand=this.state.selectedCommand;if(selectedCommand){if(!ctrlKey){this.executeCommand(selectedCommand);}else if(selectedCommand.href){window.open(selectedCommand.href,"_blank");}}}
onCommandMouseEnter(index){if(this.mouseSelectionActive){this.selectCommand(index);}else{this.mouseSelectionActive=true;}}
async search(searchValue){this.state.searchValue=searchValue;await this.setCommands(this.state.namespace,{searchValue,activeElement:this.activeElement,sessionId:this._sessionId,});if(this.inputRef.el){this.inputRef.el.focus();}}
debounceSearch(value){const{namespace,searchValue}=this.processSearchValue(value);if(namespace!=="default"&&this.state.namespace!==namespace){this.switchNamespace(namespace);}
this.inputRef.el.value=searchValue;this.searchValuePromise=this.lastDebounceSearch(searchValue).catch(()=>{this.searchValuePromise=null;});}
onSearchInput(ev){this.debounceSearch(ev.target.value);}
onKeyDown(ev){if(ev.key.toLowerCase()==="backspace"&&!ev.target.value.length&&!ev.repeat){this.switchNamespace("default");this.searchValuePromise=this.lastDebounceSearch("").catch(()=>{this.searchValuePromise=null;});}}
onWindowMouseDown(ev){if(!this.root.el.contains(ev.target)){this.props.close();}}
switchNamespace(namespace){if(this.lastDebounceSearch){this.lastDebounceSearch.cancel();}
const namespaceConfig=this.configByNamespace[namespace]||{};this.lastDebounceSearch=debounce((value)=>this.search(value),namespaceConfig.debounceDelay||0);this.state.namespace=namespace;this.state.placeholder=namespaceConfig.placeholder||DEFAULT_PLACEHOLDER.toString();}
processSearchValue(searchValue){let namespace="default";if(searchValue.length&&this.providersByNamespace[searchValue[0]]){namespace=searchValue[0];searchValue=searchValue.slice(1);}
return{namespace,searchValue};}
get isMacOS(){return isMacOS();}
get isMobileOS(){return isMobileOS();}}
CommandPalette.lastSessionId=0;CommandPalette.template="web.CommandPalette";CommandPalette.components={Dialog};return __exports;});;

/* /web/static/src/core/commands/command_service.js */
odoo.define('@web/core/commands/command_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{CommandPalette}=require("@web/core/commands/command_palette");const{Component,xml,EventBus}=require("@odoo/owl");const commandCategoryRegistry=registry.category("command_categories");const commandProviderRegistry=registry.category("command_provider");const commandSetupRegistry=registry.category("command_setup");class DefaultFooter extends Component{setup(){this.elements=commandSetupRegistry.getEntries().map((el)=>({namespace:el[0],name:el[1].name})).filter((el)=>el.name);}
onClick(namespace){this.props.switchNamespace(namespace);}}
DefaultFooter.template=xml`
<span>
    <span class="fw-bolder text-primary">TIP</span> — search for
    <t t-foreach="elements" t-as="element" t-key="element.namespace">
        <t t-if="!(element_first || element_last)">, </t>
        <t t-if="element_last and !element_first"> and </t>
        <span class="o_namespace btn-link text-primary cursor-pointer" t-on-click="() => this.onClick(element.namespace)">
            <span t-out="element.namespace" class="fw-bolder text-primary"/><t t-out="element.name"/>
        </span>
    </t>
</span>
`;const commandService=__exports.commandService={dependencies:["dialog","hotkey","ui"],start(env,{dialog,hotkey:hotkeyService,ui}){const registeredCommands=new Map();let nextToken=0;let isPaletteOpened=false;const bus=new EventBus();hotkeyService.add("control+k",openMainPalette,{bypassEditableProtection:true,global:true,});function openMainPalette(config={},onClose){const configByNamespace={};for(const provider of commandProviderRegistry.getAll()){const namespace=provider.namespace||"default";if(!configByNamespace[namespace]){configByNamespace[namespace]={categories:[],};}}
for(const[category,el]of commandCategoryRegistry.getEntries()){const namespace=el.namespace||"default";if(namespace in configByNamespace){configByNamespace[namespace].categories.push(category);}}
for(const[namespace,{emptyMessage,debounceDelay,placeholder},]of commandSetupRegistry.getEntries()){if(namespace in configByNamespace){if(emptyMessage){configByNamespace[namespace].emptyMessage=emptyMessage;}
if(debounceDelay!==undefined){configByNamespace[namespace].debounceDelay=debounceDelay;}
if(placeholder){configByNamespace[namespace].placeholder=placeholder;}}}
config=Object.assign({configByNamespace,FooterComponent:DefaultFooter,providers:commandProviderRegistry.getAll(),},config);return openPalette(config,onClose);}
function openPalette(config,onClose){if(isPaletteOpened){bus.trigger("SET-CONFIG",config);return;}
isPaletteOpened=true;dialog.add(CommandPalette,{config,bus,},{onClose:()=>{isPaletteOpened=false;if(onClose){onClose();}},});}
function registerCommand(command,options){if(!command.name||!command.action||typeof command.action!=="function"){throw new Error("A Command must have a name and an action function.");}
const registration=Object.assign({},command,options);if(registration.hotkey){const action=async()=>{const commandService=env.services.command;const config=await command.action();if(!isPaletteOpened&&config){commandService.openPalette(config);}};registration.removeHotkey=hotkeyService.add(registration.hotkey,action,{activeElement:registration.activeElement,global:registration.global,validate:registration.isAvailable,});}
const token=nextToken++;registeredCommands.set(token,registration);if(!options.activeElement){Promise.resolve().then(()=>{registration.activeElement=ui.activeElement;});}
return token;}
function unregisterCommand(token){const cmd=registeredCommands.get(token);if(cmd&&cmd.removeHotkey){cmd.removeHotkey();}
registeredCommands.delete(token);}
return{add(name,action,options={}){const token=registerCommand({name,action},options);return()=>{unregisterCommand(token);};},getCommands(activeElement){return[...registeredCommands.values()].filter((command)=>command.activeElement===activeElement||command.global);},openMainPalette,openPalette,};},};registry.category("services").add("command",commandService);return __exports;});;

/* /web/static/src/core/commands/default_providers.js */
odoo.define('@web/core/commands/default_providers',async function(require){'use strict';let __exports={};const{isMacOS}=require("@web/core/browser/feature_detection");const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{capitalize}=require("@web/core/utils/strings");const{getVisibleElements}=require("@web/core/utils/ui");const{DefaultCommandItem}=require("@web/core/commands/command_palette");const{Component}=require("@odoo/owl");const commandSetupRegistry=registry.category("command_setup");commandSetupRegistry.add("default",{emptyMessage:_lt("No command found"),placeholder:_lt("Search for a command..."),});const HotkeyCommandItem=__exports.HotkeyCommandItem=class HotkeyCommandItem extends Component{setup(){useHotkey(this.props.hotkey,this.props.executeCommand);}
getKeysToPress(command){const{hotkey}=command;let result=hotkey.split("+");if(isMacOS()){result=result.map((x)=>x.replace("control","command")).map((x)=>x.replace("alt","control"));}
return result.map((key)=>key.toUpperCase());}}
HotkeyCommandItem.template="web.HotkeyCommandItem";const commandCategoryRegistry=registry.category("command_categories");const commandProviderRegistry=registry.category("command_provider");commandProviderRegistry.add("command",{provide:(env,options={})=>{const commands=env.services.command.getCommands(options.activeElement).map((cmd)=>{cmd.category=commandCategoryRegistry.contains(cmd.category)?cmd.category:"default";return cmd;}).filter((command)=>command.isAvailable===undefined||command.isAvailable());return commands.map((command)=>({Component:command.hotkey?HotkeyCommandItem:DefaultCommandItem,action:command.action,category:command.category,name:command.name,props:{hotkey:command.hotkey,hotkeyOptions:command.hotkeyOptions,},}));},});commandProviderRegistry.add("data-hotkeys",{provide:(env,options={})=>{const commands=[];const overlayModifier=registry.category("services").get("hotkey").overlayModifier;for(const el of getVisibleElements(options.activeElement,"[data-hotkey]:not(:disabled)")){const closest=el.closest("[data-command-category]");const category=closest?closest.dataset.commandCategory:"default";const description=el.title||el.dataset.bsOriginalTitle||el.dataset.tooltip||el.placeholder||(el.innerText&&`${el.innerText.slice(0, 50)}${el.innerText.length > 50 ? "..." : ""}`)||env._t("no description provided");commands.push({Component:HotkeyCommandItem,action:()=>{el.focus();el.click();},category,name:capitalize(description.trim().toLowerCase()),props:{hotkey:`${overlayModifier}+${el.dataset.hotkey}`,},});}
return commands;},});return __exports;});;

/* /web/static/src/core/confirmation_dialog/confirmation_dialog.js */
odoo.define('@web/core/confirmation_dialog/confirmation_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{_lt}=require("@web/core/l10n/translation");const{useChildRef}=require("@web/core/utils/hooks");const{Component}=require("@odoo/owl");const ConfirmationDialog=__exports.ConfirmationDialog=class ConfirmationDialog extends Component{setup(){this.env.dialogData.close=()=>this._cancel();this.modalRef=useChildRef();this.isConfirmedOrCancelled=false;}
async _cancel(){if(this.isConfirmedOrCancelled){return;}
this.isConfirmedOrCancelled=true;this.disableButtons();if(this.props.cancel){try{await this.props.cancel();}catch(e){this.props.close();throw e;}}
this.props.close();}
async _confirm(){if(this.isConfirmedOrCancelled){return;}
this.isConfirmedOrCancelled=true;this.disableButtons();if(this.props.confirm){try{await this.props.confirm();}catch(e){this.props.close();throw e;}}
this.props.close();}
disableButtons(){if(!this.modalRef.el){return;}
for(const button of[...this.modalRef.el.querySelectorAll(".modal-footer button")]){button.disabled=true;}}}
ConfirmationDialog.template="web.ConfirmationDialog";ConfirmationDialog.components={Dialog};ConfirmationDialog.props={close:Function,title:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},optional:true,},body:String,confirm:{type:Function,optional:true},confirmLabel:{type:String,optional:true},cancel:{type:Function,optional:true},cancelLabel:{type:String,optional:true},};ConfirmationDialog.defaultProps={confirmLabel:_lt("Ok"),cancelLabel:_lt("Cancel"),title:_lt("Confirmation"),};const AlertDialog=__exports.AlertDialog=class AlertDialog extends ConfirmationDialog{}
AlertDialog.template="web.AlertDialog";AlertDialog.props={...ConfirmationDialog.props,contentClass:{type:String,optional:true},};AlertDialog.defaultProps={...ConfirmationDialog.defaultProps,title:_lt("Alert"),};return __exports;});;

/* /web/static/src/core/context.js */
odoo.define('@web/core/context',async function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");__exports.makeContext=makeContext;function makeContext(contexts,initialEvaluationContext){const evaluationContext=Object.assign({},initialEvaluationContext);const context={};for(let ctx of contexts){if(ctx!==""){ctx=typeof ctx==="string"?evaluateExpr(ctx,evaluationContext):ctx;Object.assign(context,ctx);Object.assign(evaluationContext,context);}}
return context;}
return __exports;});;

/* /web/static/src/core/datepicker/datepicker.js */
odoo.define('@web/core/datepicker/datepicker',async function(require){'use strict';let __exports={};const{areDateEquals,formatDate,formatDateTime,luxonToMoment,luxonToMomentFormat,momentToLuxon,parseDate,parseDateTime,}=require("@web/core/l10n/dates");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{localization}=require("@web/core/l10n/localization");const{useAutofocus}=require("@web/core/utils/hooks");const{isMobileOS}=require("@web/core/browser/feature_detection");const{Component,onMounted,onWillUpdateProps,onWillUnmount,useExternalListener,useRef,useState,}=require("@odoo/owl");const{DateTime}=luxon;let datePickerId=0;function wrapError(fn){return(...args)=>{const result=[null,null];try{result[0]=fn(...args);}catch(_err){result[1]=_err;}
return result;};}
const DatePicker=__exports.DatePicker=class DatePicker extends Component{setup(){this.rootRef=useRef("root");this.inputRef=useRef("input");this.state=useState({warning:false});this.datePickerId=`o_datepicker_${datePickerId++}`;this.datePickerShown=false;this.initFormat();this.setDateAndFormat(this.props);useAutofocus();useExternalListener(window,"scroll",this.onWindowScroll,{capture:true});onMounted(this.onMounted);onWillUpdateProps(this.onWillUpdateProps);onWillUnmount(this.onWillUnmount);}
onMounted(){this.bootstrapDateTimePicker(this.props);this.updateInput();window.$(this.rootRef.el).on("show.datetimepicker",()=>{this.datePickerShown=true;this.inputRef.el.select();});window.$(this.rootRef.el).on("hide.datetimepicker",({date})=>{this.datePickerShown=false;this.onDateChange({eventDate:date,useStatic:true});});window.$(this.rootRef.el).on("error.datetimepicker",()=>false);}
onWillUpdateProps(nextProps){const pickerParams={};for(const prop in nextProps){if(!areDateEquals(this.props[prop],nextProps[prop])){pickerParams[prop]=nextProps[prop];}}
this.setDateAndFormat(nextProps);if("date"in pickerParams||"format"in pickerParams){this.updateInput();}
this.bootstrapDateTimePicker(pickerParams);}
onWillUnmount(){window.$(this.rootRef.el).off();this.bootstrapDateTimePicker("destroy");}
isValidStaticFormat(format){return/^[\d\s\/.,:-]+$/.test(DateTime.local().toFormat(format));}
getOptions(useStatic=false){return{format:!useStatic||this.isValidStaticFormat(this.format)?this.format:this.staticFormat,locale:this.props.locale||(this.date&&this.date.locale),};}
initFormat(){this.defaultFormat=localization.dateFormat;this.staticFormat="yyyy/MM/dd";this.formatValue=wrapError(formatDate);this.parseValue=wrapError(parseDate);this.isLocal=false;}
setDateAndFormat({date,locale,format}){this.date=date&&locale?date.setLocale(locale):date;this.format=format||this.defaultFormat;}
updateInput({useStatic}={}){const[formattedDate]=this.formatValue(this.date,this.getOptions(useStatic));if(formattedDate!==null){this.inputRef.el.value=formattedDate;this.props.onUpdateInput(formattedDate);}}
bootstrapDateTimePicker(commandOrParams){if(typeof commandOrParams==="object"){const format=this.isValidStaticFormat(this.format)?this.format:this.staticFormat;const params={...commandOrParams,date:this.date||null,format:luxonToMomentFormat(format),locale:commandOrParams.locale||(this.date&&this.date.locale),};for(const prop in params){if(params[prop]instanceof DateTime){params[prop]=luxonToMoment(params[prop]);}}
commandOrParams=params;}
return window.$(this.rootRef.el).datetimepicker(commandOrParams);}
onInputClick(){if(!this.datePickerShown){this.updateInput({useStatic:true});}
this.bootstrapDateTimePicker("toggle");}
onDateChange({eventDate,useStatic}={}){const{value}=this.inputRef.el;let parsedDate=value&&eventDate?momentToLuxon(eventDate).setLocale(this.getOptions().locale):null;if(!parsedDate){const options=this.getOptions(useStatic);parsedDate=this.parseValue(value,options)[0];}
this.state.warning=parsedDate&&parsedDate>DateTime.local();this.updateInput();if(parsedDate!==null&&!areDateEquals(this.date,parsedDate)){this.props.onDateTimeChanged(parsedDate);}}
onInputKeydown(ev){const hotkey=getActiveHotkey(ev);if(this.datePickerShown&&hotkey==="escape"){this.bootstrapDateTimePicker("hide");this.inputRef.el.select();ev.preventDefault();ev.stopPropagation();}}
onWindowScroll(ev){if(!isMobileOS()&&ev.target!==this.inputRef.el){this.bootstrapDateTimePicker("hide");}}}
DatePicker.defaultProps={calendarWeeks:true,icons:{clear:"fa fa-delete",close:"fa fa-check primary",date:"fa fa-calendar",down:"fa fa-chevron-down",next:"fa fa-chevron-right",previous:"fa fa-chevron-left",time:"fa fa-clock-o",today:"fa fa-calendar-check-o",up:"fa fa-chevron-up",},inputId:"",maxDate:DateTime.fromObject({year:9999,month:12,day:31}),minDate:DateTime.fromObject({year:1000}),useCurrent:false,widgetParent:"body",onInput:()=>{},onUpdateInput:()=>{},};DatePicker.props={onDateTimeChanged:Function,date:{type:[DateTime,{value:false}],optional:true},warn_future:{type:Boolean,optional:true},buttons:{type:Object,shape:{showClear:Boolean,showClose:Boolean,showToday:Boolean,},optional:true,},calendarWeeks:{type:Boolean,optional:true},format:{type:String,optional:true},icons:{type:Object,shape:{clear:String,close:String,date:String,down:String,next:String,previous:String,time:String,today:String,up:String,},optional:true,},inputId:{type:String,optional:true},keyBinds:{validate:(kb)=>typeof kb==="object"||kb===null,optional:true},locale:{type:String,optional:true},maxDate:{type:DateTime,optional:true},minDate:{type:DateTime,optional:true},readonly:{type:Boolean,optional:true},useCurrent:{type:Boolean,optional:true},widgetParent:{type:String,optional:true},daysOfWeekDisabled:{type:Array,optional:true},placeholder:{type:String,optional:true},onInput:{type:Function,optional:true},onUpdateInput:{type:Function,optional:true},};DatePicker.template="web.DatePicker";const DateTimePicker=__exports.DateTimePicker=class DateTimePicker extends DatePicker{initFormat(){this.defaultFormat=localization.dateTimeFormat;this.staticFormat="yyyy/MM/dd HH:mm:ss";this.formatValue=wrapError(formatDateTime);this.parseValue=wrapError(parseDateTime);this.isLocal=true;}}
DateTimePicker.defaultProps={...DatePicker.defaultProps,buttons:{showClear:false,showClose:true,showToday:false,},};return __exports;});;

/* /web/static/src/core/dialog/dialog.js */
odoo.define('@web/core/dialog/dialog',async function(require){'use strict';let __exports={};const{useHotkey}=require("@web/core/hotkeys/hotkey_hook");const{useActiveElement}=require("@web/core/ui/ui_service");const{useForwardRefToParent}=require("@web/core/utils/hooks");const{Component,useChildSubEnv,useState}=require("@odoo/owl");const Dialog=__exports.Dialog=class Dialog extends Component{setup(){this.modalRef=useForwardRefToParent("modalRef");useActiveElement("modalRef");this.data=useState(this.env.dialogData);useHotkey("escape",()=>{this.data.close();});this.id=`dialog_${this.data.id}`;useChildSubEnv({inDialog:true,dialogId:this.id,closeDialog:this.data.close});owl.onWillDestroy(()=>{if(this.env.isSmall){this.data.scrollToOrigin();}});}
get isFullscreen(){return this.props.fullscreen||this.env.isSmall;}}
Dialog.template="web.Dialog";Dialog.props={contentClass:{type:String,optional:true},bodyClass:{type:String,optional:true},fullscreen:{type:Boolean,optional:true},footer:{type:Boolean,optional:true},header:{type:Boolean,optional:true},size:{type:String,optional:true,validate:(s)=>["sm","md","lg","xl"].includes(s)},technical:{type:Boolean,optional:true},title:{type:String,optional:true},modalRef:{type:Function,optional:true},slots:{type:Object,shape:{default:Object,header:{type:Object,optional:true},footer:{type:Object,optional:true},},},withBodyPadding:{type:Boolean,optional:true},};Dialog.defaultProps={contentClass:"",bodyClass:"",fullscreen:false,footer:true,header:true,size:"lg",technical:true,title:"Odoo",withBodyPadding:true,};return __exports;});;

/* /web/static/src/core/dialog/dialog_container.js */
odoo.define('@web/core/dialog/dialog_container',async function(require){'use strict';let __exports={};const{ErrorHandler,WithEnv}=require("@web/core/utils/components");const{Component,xml}=require("@odoo/owl");const DialogContainer=__exports.DialogContainer=class DialogContainer extends Component{handleError(error,dialog){dialog.props.close();Promise.resolve().then(()=>{throw error;});}}
DialogContainer.components={ErrorHandler,WithEnv};DialogContainer.template=xml`
    <div class="o_dialog_container" t-att-class="{'modal-open': Object.keys(props.dialogs).length > 0}">
        <div>
            <t t-foreach="Object.values(props.dialogs)" t-as="dialog" t-key="dialog.id">
                <ErrorHandler onError="(error) => this.handleError(error, dialog)">
                    <WithEnv env="{ dialogData: dialog.dialogData }">
                        <t t-component="dialog.class" t-props="dialog.props"/>
                    </WithEnv>
                </ErrorHandler>
            </t>
        </div>
    </div>
`;return __exports;});;

/* /web/static/src/core/dialog/dialog_service.js */
odoo.define('@web/core/dialog/dialog_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DialogContainer}=require("@web/core/dialog/dialog_container");const{markRaw,reactive}=require("@odoo/owl");const dialogService=__exports.dialogService={start(env){const dialogs=reactive({});let dialogId=0;registry.category("main_components").add("DialogContainer",{Component:DialogContainer,props:{dialogs},});function add(dialogClass,props,options={}){for(const dialog of Object.values(dialogs)){dialog.dialogData.isActive=false;}
const id=++dialogId;function close(){if(dialogs[id]){delete dialogs[id];Object.values(dialogs).forEach((dialog,i,dialogArr)=>{dialog.dialogData.isActive=i===dialogArr.length-1;});if(options.onClose){options.onClose();}}}
const dialog={id,class:dialogClass,props:markRaw({...props,close}),dialogData:{isActive:true,close,id,},};if(env.isSmall){const scrollOrigin={top:window.scrollY,left:window.scrollX};dialog.dialogData.scrollToOrigin=()=>{if(!Object.keys(dialogs).length){window.scrollTo(scrollOrigin);}};}
dialogs[id]=dialog;return close;}
return{add};},};registry.category("services").add("dialog",dialogService);return __exports;});;

/* /web/static/src/core/domain.js */
odoo.define('@web/core/domain',async function(require){'use strict';let __exports={};const{shallowEqual}=require("@web/core/utils/arrays");const{evaluate,formatAST,parseExpr}=require("@web/core/py_js/py");const{toPyValue}=require("@web/core/py_js/py_utils");const InvalidDomainError=__exports.InvalidDomainError=class InvalidDomainError extends Error{}
const Domain=__exports.Domain=class Domain{static combine(domains,operator){if(domains.length===0){return new Domain([]);}
const domain1=domains[0]instanceof Domain?domains[0]:new Domain(domains[0]);if(domains.length===1){return domain1;}
const domain2=Domain.combine(domains.slice(1),operator);const result=new Domain([]);const astValues1=domain1.ast.value;const astValues2=domain2.ast.value;const op=operator==="AND"?"&":"|";const combinedAST={type:4,value:astValues1.concat(astValues2)};result.ast=normalizeDomainAST(combinedAST,op);return result;}
static and(domains){return Domain.combine(domains,"AND");}
static or(domains){return Domain.combine(domains,"OR");}
static not(domain){const result=new Domain(domain);result.ast.value.unshift({type:1,value:"!"});return result;}
constructor(descr=[]){if(descr instanceof Domain){return new Domain(descr.toString());}else{const rawAST=typeof descr==="string"?parseExpr(descr):toAST(descr);this.ast=normalizeDomainAST(rawAST);}}
contains(record){const expr=evaluate(this.ast,record);return matchDomain(record,expr);}
toString(){return formatAST(this.ast);}
toList(context){return evaluate(this.ast,context);}}
const TRUE_LEAF=[1,"=",1];const FALSE_LEAF=[0,"=",1];const TRUE_DOMAIN=new Domain([TRUE_LEAF]);const FALSE_DOMAIN=new Domain([FALSE_LEAF]);Domain.TRUE=TRUE_DOMAIN;Domain.FALSE=FALSE_DOMAIN;function toAST(domain){const elems=domain.map((elem)=>{switch(elem){case"!":case"&":case"|":return{type:1,value:elem};default:return{type:10,value:elem.map(toPyValue),};}});return{type:4,value:elems};}
function normalizeDomainAST(domain,op="&"){if(domain.type!==4){if(domain.type===10){const value=domain.value;if(value.findIndex((e)=>e.type===10)===-1||!value.every((e)=>e.type===10||e.type===1)){throw new InvalidDomainError("Invalid domain AST");}}else{throw new InvalidDomainError("Invalid domain AST");}}
if(domain.value.length===0){return domain;}
let expected=1;for(const child of domain.value){if(child.type===1&&(child.value==="&"||child.value==="|")){expected++;}else if(child.type!==1||child.value!=="!"){expected--;}}
const values=domain.value.slice();while(expected<0){expected++;values.unshift({type:1,value:op});}
if(expected>0){throw new InvalidDomainError(`invalid domain ${formatAST(domain)} (missing ${expected} segment(s))`);}
return{type:4,value:values};}
function matchCondition(record,condition){if(typeof condition==="boolean"){return condition;}
const[field,operator,value]=condition;if(typeof field==="string"){const names=field.split(".");if(names.length>=2){return matchCondition(record[names[0]],[names.slice(1).join("."),operator,value]);}}
const fieldValue=typeof field==="number"?field:record[field];switch(operator){case"=?":if([false,null].includes(value)){return true;}
case"=":case"==":if(Array.isArray(fieldValue)&&Array.isArray(value)){return shallowEqual(fieldValue,value);}
return fieldValue===value;case"!=":case"<>":return!matchCondition(record,[field,"==",value]);case"<":return fieldValue<value;case"<=":return fieldValue<=value;case">":return fieldValue>value;case">=":return fieldValue>=value;case"in":{const val=Array.isArray(value)?value:[value];const fieldVal=Array.isArray(fieldValue)?fieldValue:[fieldValue];return fieldVal.some((fv)=>val.includes(fv));}
case"not in":{const val=Array.isArray(value)?value:[value];const fieldVal=Array.isArray(fieldValue)?fieldValue:[fieldValue];return!fieldVal.some((fv)=>val.includes(fv));}
case"like":if(fieldValue===false){return false;}
return fieldValue.indexOf(value)>=0;case"=like":if(fieldValue===false){return false;}
return new RegExp(value.replace(/%/g,".*")).test(fieldValue);case"ilike":if(fieldValue===false){return false;}
return fieldValue.toLowerCase().indexOf(value.toLowerCase())>=0;case"=ilike":if(fieldValue===false){return false;}
return new RegExp(value.replace(/%/g,".*"),"i").test(fieldValue);}
throw new InvalidDomainError("could not match domain");}
function makeOperators(record){const match=matchCondition.bind(null,record);return{"!":(x)=>!match(x),"&":(a,b)=>match(a)&&match(b),"|":(a,b)=>match(a)||match(b),};}
function matchDomain(record,domain){if(domain.length===0){return true;}
const operators=makeOperators(record);const reversedDomain=Array.from(domain).reverse();const condStack=[];for(const item of reversedDomain){if(item in operators){const operator=operators[item];const operands=condStack.splice(-operator.length);condStack.push(operator(...operands));}else{condStack.push(item);}}
return matchCondition(record,condStack.pop());}
return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector.js */
odoo.define('@web/core/domain_selector/domain_selector',async function(require){'use strict';let __exports={};const{Domain}=require("@web/core/domain");const{DomainSelectorRootNode}=require("@web/core/domain_selector/domain_selector_root_node");const{Component}=require("@odoo/owl");const DomainSelector=__exports.DomainSelector=class DomainSelector extends Component{setup(){this.nextNodeId=0;}
buildTree(){try{const domain=new Domain(this.props.value);const ctx={parent:null,index:0,domain:domain.toList(),get currentElement(){return ctx.domain[ctx.index];},next(){ctx.index++;},getFullDomain(){return rootNode.computeDomain().toString();},};const rootNode=this.makeRootNode(ctx);ctx.parent=rootNode;this.traverseNode(ctx);return ctx.parent;}catch(_e){return false;}}
traverseNode(ctx,negate=false){if(ctx.index<ctx.domain.length){if(ctx.currentElement==="!"){ctx.next();this.traverseNode(ctx,!negate);}else if(typeof ctx.currentElement==="string"&&["&","|"].includes(ctx.currentElement)){this.traverseBranchNode(ctx,negate);}else{this.traverseLeafNode(ctx,negate);}}}
traverseBranchNode(ctx,negate){if(ctx.parent.type!=="branch"||ctx.parent.operator!==ctx.currentElement){const node=this.makeBranchNode(ctx,ctx.currentElement,[],negate);ctx.parent.operands.push(node);ctx=Object.assign(Object.create(ctx),{parent:node});}
ctx.next();this.traverseNode(ctx);ctx.next();this.traverseNode(ctx);}
traverseLeafNode(ctx,negate){const condition=ctx.currentElement;const[leftOperand,operator,rightOperand]=condition;const node=this.makeLeafNode(ctx,operator,[leftOperand,rightOperand],negate);ctx.parent.operands.push(node);}
makeBranchNode(ctx,operator,operands,negate){const updateDomain=()=>this.props.update(ctx.getFullDomain());const makeFakeNode=this.makeFakeNode.bind(this);return{type:"branch",id:this.nextNodeId++,operator,operands,computeDomain(){let domain=Domain.combine(this.operands.map((operand)=>operand.computeDomain()),this.operator==="&"?"AND":"OR");if(negate){domain=Domain.not(domain);}
return domain;},update(operator){this.operator=operator;updateDomain();},insert(newNodeType){const newNode=makeFakeNode(ctx,newNodeType);const operands=ctx.parent.operands;operands.splice(operands.indexOf(this)+1,0,newNode);updateDomain();},delete(){const operands=ctx.parent.operands;operands.splice(operands.indexOf(this),1);updateDomain();},};}
makeLeafNode(ctx,operator,operands,negate){const updateDomain=()=>this.props.update(ctx.getFullDomain());const makeFakeNode=this.makeFakeNode.bind(this);return{type:"leaf",id:this.nextNodeId++,operator,operands,computeDomain(){let domain=new Domain([[this.operands[0],this.operator,this.operands[1]]]);if(negate){domain=Domain.not(domain);}
return domain;},update(changes){if("fieldName"in changes){this.operands[0]=changes.fieldName;}
if("operator"in changes){this.operator=changes.operator;}
if("value"in changes){this.operands[1]=changes.value;}
updateDomain();},insert(newNodeType){const newNode=makeFakeNode(ctx,newNodeType);const operands=ctx.parent.operands;operands.splice(operands.indexOf(this)+1,0,newNode);updateDomain();},delete(){const operands=ctx.parent.operands;operands.splice(operands.indexOf(this),1);updateDomain();},};}
makeRootNode(ctx){const updateDomain=(...args)=>this.props.update(...args);const makeFakeNode=this.makeFakeNode.bind(this);return{type:"root",id:this.nextNodeId++,operator:"&",operands:[],computeDomain(){return Domain.combine(this.operands.map((operand)=>operand.computeDomain()),"AND");},update(newValue,fromDebug){if(typeof newValue==="string"){updateDomain(newValue,fromDebug);}else if(this.operands.length){this.operands[0].update(newValue);}},insert(newNodeType){const newNode=makeFakeNode(ctx,newNodeType);if(ctx.parent){const operands=ctx.parent.operands;operands.splice(operands.indexOf(this)+1,0,newNode);}else{this.operands.push(newNode);}
updateDomain(ctx.getFullDomain());},delete(){},};}
makeFakeNode(ctx,type){const[field,op,value]=this.props.defaultLeafValue;if(type==="branch"){return this.makeBranchNode(ctx,ctx.parent.operator==="&"?"|":"&",[this.makeLeafNode(ctx,op,[field,value]),this.makeLeafNode(ctx,op,[field,value]),]);}else{return this.makeLeafNode(ctx,op,[field,value]);}}}
Object.assign(DomainSelector,{template:"web._DomainSelector",components:{DomainSelectorRootNode,},props:{className:{type:String,optional:true},resModel:String,value:String,debugValue:{type:String,optional:true},readonly:{type:Boolean,optional:true},update:{type:Function,optional:true},isDebugMode:{type:Boolean,optional:true},defaultLeafValue:{type:Array,optional:true},},defaultProps:{readonly:true,update:()=>{},isDebugMode:false,defaultLeafValue:["id","=",1],},});return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_branch_node.js */
odoo.define('@web/core/domain_selector/domain_selector_branch_node',async function(require){'use strict';let __exports={};const{DomainSelectorBranchOperator}=require("@web/core/domain_selector/domain_selector_branch_operator");const{DomainSelectorControlPanel}=require("@web/core/domain_selector/domain_selector_control_panel");const{DomainSelectorLeafNode}=require("@web/core/domain_selector/domain_selector_leaf_node");const{Component,useRef}=require("@odoo/owl");const DomainSelectorBranchNode=__exports.DomainSelectorBranchNode=class DomainSelectorBranchNode extends Component{setup(){this.root=useRef("root");}
onHoverDeleteNodeBtn(hovering){this.root.el.classList.toggle("o_hover_btns",hovering);}
onHoverInsertLeafNodeBtn(hovering){this.root.el.classList.toggle("o_hover_add_node",hovering);}
onHoverInsertBranchNodeBtn(hovering){this.root.el.classList.toggle("o_hover_add_node",hovering);this.root.el.classList.toggle("o_hover_add_inset_node",hovering);}}
DomainSelectorBranchNode.template="web.DomainSelectorBranchNode";DomainSelectorBranchNode.components={DomainSelectorBranchNode,DomainSelectorBranchOperator,DomainSelectorControlPanel,DomainSelectorLeafNode,};return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_branch_operator.js */
odoo.define('@web/core/domain_selector/domain_selector_branch_operator',async function(require){'use strict';let __exports={};const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{Component}=require("@odoo/owl");const DomainSelectorBranchOperator=__exports.DomainSelectorBranchOperator=class DomainSelectorBranchOperator extends Component{onOperatorSelected(operator){this.props.node.update(operator);}}
DomainSelectorBranchOperator.components={Dropdown,DropdownItem,};DomainSelectorBranchOperator.template="web.DomainSelectorBranchOperator";DomainSelectorBranchOperator.props={node:Object,readonly:Boolean,showCaret:{type:Boolean,optional:true,},};return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_control_panel.js */
odoo.define('@web/core/domain_selector/domain_selector_control_panel',async function(require){'use strict';let __exports={};const{Component,toRaw}=require("@odoo/owl");const DomainSelectorControlPanel=__exports.DomainSelectorControlPanel=class DomainSelectorControlPanel extends Component{deleteNode(){this.props.node.delete();}
insertNode(newNodeType){toRaw(this.props.node).insert(newNodeType);}
onEnterDeleteNodeBtn(){this.props.onHoverDeleteNodeBtn(true);}
onLeaveDeleteNodeBtn(){this.props.onHoverDeleteNodeBtn(false);}
onEnterInsertLeafNodeBtn(){this.props.onHoverInsertLeafNodeBtn(true);}
onLeaveInsertLeafNodeBtn(){this.props.onHoverInsertLeafNodeBtn(false);}
onEnterInsertBranchNodeBtn(){this.props.onHoverInsertBranchNodeBtn(true);}
onLeaveInsertBranchNodeBtn(){this.props.onHoverInsertBranchNodeBtn(false);}}
DomainSelectorControlPanel.template="web.DomainSelectorControlPanel";DomainSelectorControlPanel.props={node:Object,onHoverDeleteNodeBtn:Function,onHoverInsertLeafNodeBtn:Function,onHoverInsertBranchNodeBtn:Function,};return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_leaf_node.js */
odoo.define('@web/core/domain_selector/domain_selector_leaf_node',async function(require){'use strict';let __exports={};const{useModelField}=require("@web/core/model_field_selector/model_field_hook");const{ModelFieldSelector}=require("@web/core/model_field_selector/model_field_selector");const{registry}=require("@web/core/registry");const{DomainSelectorControlPanel}=require("@web/core/domain_selector/domain_selector_control_panel");const{DomainSelectorDefaultField}=require("@web/core/domain_selector/fields/domain_selector_default_field");const{Component,onWillStart,onWillUpdateProps,useRef}=require("@odoo/owl");const DomainSelectorLeafNode=__exports.DomainSelectorLeafNode=class DomainSelectorLeafNode extends Component{setup(){this.root=useRef("root");this.modelField=useModelField();this.fieldInfo={type:"integer",string:"ID",};onWillStart(async()=>{this.fieldInfo=await this.loadField(this.props.resModel,this.props.node.operands[0]);});onWillUpdateProps(async(nextProps)=>{this.fieldInfo=await this.loadField(nextProps.resModel,nextProps.node.operands[0]);});}
get displayedOperator(){const op=this.getOperatorInfo(this.props.node.operator);return op?op.label:"?";}
get isValueHidden(){const op=this.getOperatorInfo(this.props.node.operator);return op?op.hideValue:false;}
async loadField(resModel,fieldName){const chain=await this.modelField.loadChain(resModel,fieldName);if(!chain[chain.length-1].field&&chain.length>1){return chain[chain.length-2].field;}
return(chain[chain.length-1].field||{type:"integer",string:"ID",});}
findOperator(operatorList,opToFind){return operatorList.find((o)=>o.matches({field:this.fieldInfo,value:this.props.node.operands[1],operator:opToFind,}));}
getOperators(field){const operators=field.getOperators();if(this.findOperator(operators,this.props.node.operator)){return operators;}
return operators.concat(this.findOperator(registry.category("domain_selector/operator").getAll(),this.props.node.operator));}
getFieldComponent(type){return registry.category("domain_selector/fields").get(type,DomainSelectorDefaultField);}
getOperatorInfo(operator){const op=this.findOperator(this.getFieldComponent(this.fieldInfo.type).getOperators(),operator);if(op){return op;}
return this.findOperator(registry.category("domain_selector/operator").getAll(),this.props.node.operator);}
async onFieldChange(fieldName){const changes={fieldName};const fieldInfo=await this.loadField(this.props.resModel,fieldName);const component=this.getFieldComponent(fieldInfo.type);Object.assign(changes,component.onDidTypeChange(fieldInfo));if(!this.findOperator(component.getOperators(),this.props.node.operator)){const operatorInfo=component.getOperators()[0];changes.operator=operatorInfo.value;Object.assign(changes,operatorInfo.onDidChange(this.getOperatorInfo(this.props.node.operator),()=>component.onDidTypeChange(this.fieldInfo)));}
this.props.node.update(changes);}
onOperatorChange(ev){const component=this.getFieldComponent(this.fieldInfo.type);const operatorInfo=component.getOperators()[parseInt(ev.target.value,10)];const changes={operator:operatorInfo.value};Object.assign(changes,operatorInfo.onDidChange(this.getOperatorInfo(this.props.node.operator),()=>component.onDidTypeChange(this.fieldInfo)));this.props.node.update(changes);}
onHoverDeleteNodeBtn(hovering){this.root.el.classList.toggle("o_hover_btns",hovering);}
onHoverInsertLeafNodeBtn(hovering){this.root.el.classList.toggle("o_hover_add_node",hovering);}
onHoverInsertBranchNodeBtn(hovering){this.root.el.classList.toggle("o_hover_add_node",hovering);this.root.el.classList.toggle("o_hover_add_inset_node",hovering);}}
Object.assign(DomainSelectorLeafNode,{template:"web.DomainSelectorLeafNode",components:{DomainSelectorControlPanel,ModelFieldSelector,},});return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_operators.js */
odoo.define('@web/core/domain_selector/domain_selector_operators',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");function onDidChange(action){return function(oldOperator,fieldChange){if(this.category!==oldOperator.category){return action(fieldChange);}
return{};};}
function matchValue(){return function({operator}){return operator===this.value;};}
const dso=registry.category("domain_selector/operator");dso.add("=",{category:"equality",label:"=",value:"=",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches({operator,value}){return operator===this.value&&typeof value!=="boolean";},});dso.add("!=",{category:"equality",label:_lt("is not ="),value:"!=",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches({operator,value}){return operator===this.value&&typeof value!=="boolean";},});dso.add(">",{category:"comparison",label:">",value:">",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches:matchValue(),});dso.add(">=",{category:"comparison",label:">=",value:">=",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches:matchValue(),});dso.add("<",{category:"comparison",label:"<",value:"<",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches:matchValue(),});dso.add("<=",{category:"comparison",label:"<=",value:"<=",onDidChange:onDidChange((fieldChange)=>fieldChange()),matches:matchValue(),});dso.add("ilike",{category:"like",label:_lt("contains"),value:"ilike",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("not ilike",{category:"like",label:_lt("does not contain"),value:"not ilike",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("like",{category:"like",label:_lt("like"),value:"like",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("not like",{category:"like",label:_lt("not like"),value:"not like",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("=like",{category:"like",label:_lt("=like"),value:"=like",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("=ilike",{category:"like",label:_lt("=ilike"),value:"=ilike",onDidChange:onDidChange(()=>({value:""})),matches:matchValue(),});dso.add("child_of",{category:"relation",label:_lt("child of"),value:"child_of",onDidChange:onDidChange(()=>({value:1})),matches:matchValue(),});dso.add("parent_of",{category:"relation",label:_lt("parent of"),value:"parent_of",onDidChange:onDidChange(()=>({value:1})),matches:matchValue(),});dso.add("in",{category:"in",label:_lt("in"),value:"in",onDidChange:onDidChange(()=>({value:[]})),matches:matchValue(),});dso.add("not in",{category:"in",label:_lt("not in"),value:"not in",onDidChange:onDidChange(()=>({value:[]})),matches:matchValue(),});dso.add("set",{category:"set",label:_lt("is set"),value:"set",hideValue:true,onDidChange(){return{operator:"!=",value:false,};},matches({operator,value}){return operator==="!="&&typeof value==="boolean";},});dso.add("not set",{category:"set",label:_lt("is not set"),value:"not set",hideValue:true,onDidChange(){return{operator:"=",value:false,};},matches({operator,value}){return operator==="="&&typeof value==="boolean";},});return __exports;});;

/* /web/static/src/core/domain_selector/domain_selector_root_node.js */
odoo.define('@web/core/domain_selector/domain_selector_root_node',async function(require){'use strict';let __exports={};const{DomainSelectorBranchNode}=require("@web/core/domain_selector/domain_selector_branch_node");const{DomainSelectorBranchOperator}=require("@web/core/domain_selector/domain_selector_branch_operator");const{DomainSelectorLeafNode}=require("@web/core/domain_selector/domain_selector_leaf_node");const{Component}=require("@odoo/owl");const DomainSelectorRootNode=__exports.DomainSelectorRootNode=class DomainSelectorRootNode extends Component{get hasNode(){return this.props.node.operands.length>0;}
get node(){return this.props.node.operands[0];}
insertNode(newNodeType){this.props.node.insert(newNodeType);}
onOperatorSelected(ev){this.props.node.update(ev.detail.payload.operator);}
onChange(ev){this.props.node.update(ev.target.value,true);}}
DomainSelectorRootNode.template="web.DomainSelectorRootNode";DomainSelectorRootNode.components={DomainSelectorBranchNode,DomainSelectorBranchOperator,DomainSelectorLeafNode,};return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_boolean_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_boolean_field',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const DomainSelectorBooleanField=__exports.DomainSelectorBooleanField=class DomainSelectorBooleanField extends Component{onChange(ev){this.props.update({value:ev.target.value==="1",});}}
Object.assign(DomainSelectorBooleanField,{template:"web.DomainSelectorBooleanField",onDidTypeChange(){return{value:true};},getOperators(){return[{category:"equality",label:_lt("is"),value:"=",onDidChange(){},matches({operator}){return operator===this.value;},},{category:"equality",label:_lt("is not"),value:"!=",onDidChange(){},matches({operator}){return operator===this.value;},},];},});dsf.add("boolean",DomainSelectorBooleanField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_datetime_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_datetime_field',async function(require){'use strict';let __exports={};const{DatePicker,DateTimePicker}=require("@web/core/datepicker/datepicker");const{deserializeDate,deserializeDateTime,serializeDate,serializeDateTime,}=require("@web/core/l10n/dates");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const dso=registry.category("domain_selector/operator");const DomainSelectorDateTimeField=__exports.DomainSelectorDateTimeField=class DomainSelectorDateTimeField extends Component{get component(){const{DatePicker,DateTimePicker}=this.constructor.components;return this.props.field.type==="date"?DatePicker:DateTimePicker;}
get deserializedValue(){const deserialize=this.props.field.type==="date"?deserializeDate:deserializeDateTime;return this.props.value?deserialize(this.props.value):luxon.DateTime.local();}
onChange(value){if(!this.deserializedValue.isValid&&!value){return;}
const serialize=this.props.field.type==="date"?serializeDate:serializeDateTime;this.props.update({value:serialize(value||luxon.DateTime.local())});}}
Object.assign(DomainSelectorDateTimeField,{template:"web.DomainSelectorDateTimeField",components:{DatePicker,DateTimePicker,},onDidTypeChange(field){const serialize=field.type==="date"?serializeDate:serializeDateTime;return{value:serialize(luxon.DateTime.local())};},getOperators(){return["=","!=",">","<",">=","<=","set","not set"].map((key)=>dso.get(key));},});dsf.add("date",DomainSelectorDateTimeField);dsf.add("datetime",DomainSelectorDateTimeField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_default_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_default_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DomainSelectorFieldInput}=require("@web/core/domain_selector/fields/domain_selector_field_input");const{Component}=require("@odoo/owl");const dso=registry.category("domain_selector/operator");const DomainSelectorDefaultField=__exports.DomainSelectorDefaultField=class DomainSelectorDefaultField extends Component{}
Object.assign(DomainSelectorDefaultField,{template:"web.DomainSelectorDefaultField",components:{DomainSelectorFieldInput,},onDidTypeChange(){return{value:""};},getOperators(){return dso.getAll();},});return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_field_input.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_field_input',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const parsers=registry.category("parsers");const DomainSelectorFieldInput=__exports.DomainSelectorFieldInput=class DomainSelectorFieldInput extends Component{parseValue(value){const parser=parsers.get(this.props.field.type,(value)=>value);try{return parser(value);}catch(_){return value;}}
onChange(ev){this.props.update({value:this.parseValue(ev.target.value)});}}
DomainSelectorFieldInput.template="web.DomainSelectorFieldInput";return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_field_input_with_tags.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_field_input_with_tags',async function(require){'use strict';let __exports={};const{Component,useRef}=require("@odoo/owl");const DomainSelectorFieldInputWithTags=__exports.DomainSelectorFieldInputWithTags=class DomainSelectorFieldInputWithTags extends Component{setup(){this.inputRef=useRef("input");}
removeTag(tagIndex){const value=[...this.props.value];value.splice(tagIndex,1);this.props.update({value});}
addTag(value){this.props.update({value:this.props.value.concat(value)});}
onBtnClick(){const value=this.inputRef.el.value;this.inputRef.el.value="";this.addTag(value);}}
DomainSelectorFieldInputWithTags.template="web.DomainSelectorFieldInputWithTags";return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_number_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_number_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DomainSelectorFieldInput}=require("@web/core/domain_selector/fields/domain_selector_field_input");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const dso=registry.category("domain_selector/operator");const DomainSelectorNumberField=__exports.DomainSelectorNumberField=class DomainSelectorNumberField extends Component{}
Object.assign(DomainSelectorNumberField,{template:"web.DomainSelectorNumberField",components:{DomainSelectorFieldInput,},onDidTypeChange(){return{value:0};},getOperators(){return["=","!=",">","<",">=","<=","ilike","not ilike","set","not set",].map((key)=>dso.get(key));},});dsf.add("integer",DomainSelectorNumberField);dsf.add("float",DomainSelectorNumberField);dsf.add("monetary",DomainSelectorNumberField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_relation_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_relation_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DomainSelectorFieldInput}=require("@web/core/domain_selector/fields/domain_selector_field_input");const{Component}=require("@odoo/owl");const dso=registry.category("domain_selector/operator");const DomainSelectorRelationField=__exports.DomainSelectorRelationField=class DomainSelectorRelationField extends Component{}
Object.assign(DomainSelectorRelationField,{template:"web.DomainSelectorRelationField",components:{DomainSelectorFieldInput,},onDidTypeChange(){return{value:"0"};},getOperators(){return["=","!=","ilike","not ilike","set","not set"].map((key)=>dso.get(key));},});registry.category("domain_selector/fields").add("one2many",DomainSelectorRelationField).add("many2one",DomainSelectorRelationField).add("many2many",DomainSelectorRelationField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_selection_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_selection_field',async function(require){'use strict';let __exports={};const{evaluateExpr}=require("@web/core/py_js/py");const{formatAST,toPyValue}=require("@web/core/py_js/py_utils");const{registry}=require("@web/core/registry");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const dso=registry.category("domain_selector/operator");const DomainSelectorSelectionField=__exports.DomainSelectorSelectionField=class DomainSelectorSelectionField extends Component{get options(){return[[false,""],...this.props.field.selection.filter((option)=>!this.props.value.includes(option[0])),];}
get formattedValue(){const ast=toPyValue(this.props.value);return formatAST(ast);}
onChange(ev){this.props.update({value:ev.target.value});}
onChangeMulti(ev){this.props.update({value:evaluateExpr(ev.target.value)});}}
Object.assign(DomainSelectorSelectionField,{template:"web.DomainSelectorSelectionField",onDidTypeChange(field){return{value:field.selection[0][0]};},getOperators(){return["=","!=","set","not set"].map((key)=>dso.get(key));},});dsf.add("selection",DomainSelectorSelectionField);return __exports;});;

/* /web/static/src/core/domain_selector/fields/domain_selector_text_field.js */
odoo.define('@web/core/domain_selector/fields/domain_selector_text_field',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{DomainSelectorFieldInput}=require("@web/core/domain_selector/fields/domain_selector_field_input");const{DomainSelectorFieldInputWithTags}=require("@web/core/domain_selector/fields/domain_selector_field_input_with_tags");const{Component}=require("@odoo/owl");const dsf=registry.category("domain_selector/fields");const dso=registry.category("domain_selector/operator");const DomainSelectorTextField=__exports.DomainSelectorTextField=class DomainSelectorTextField extends Component{}
Object.assign(DomainSelectorTextField,{template:"web.DomainSelectorTextField",components:{DomainSelectorFieldInput,DomainSelectorFieldInputWithTags,},onDidTypeChange(){return{value:""};},getOperators(){return["=","!=","ilike","not ilike","set","not set","in","not in"].map((key)=>dso.get(key));},});dsf.add("char",DomainSelectorTextField);dsf.add("html",DomainSelectorTextField);dsf.add("text",DomainSelectorTextField);return __exports;});;

/* /web/static/src/core/domain_selector_dialog/domain_selector_dialog.js */
odoo.define('@web/core/domain_selector_dialog/domain_selector_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{DomainSelector}=require("@web/core/domain_selector/domain_selector");const{_t}=require("@web/core/l10n/translation");const{Component,useState}=require("@odoo/owl");const DomainSelectorDialog=__exports.DomainSelectorDialog=class DomainSelectorDialog extends Component{setup(){this.state=useState({value:this.props.initialValue,});}
get dialogTitle(){return _t("Domain");}
get domainSelectorProps(){return{className:this.props.className,resModel:this.props.resModel,readonly:this.props.readonly,isDebugMode:this.props.isDebugMode,defaultLeafValue:this.props.defaultLeafValue,value:this.state.value,update:(value)=>{this.state.value=value;},};}
async onSave(){await this.props.onSelected(this.state.value);this.props.close();}
onDiscard(){this.props.close();}}
DomainSelectorDialog.template="web.DomainSelectorDialog";DomainSelectorDialog.components={Dialog,DomainSelector,};DomainSelectorDialog.props={close:Function,className:{type:String,optional:true},resModel:String,readonly:{type:Boolean,optional:true},isDebugMode:{type:Boolean,optional:true},defaultLeafValue:{type:Array,optional:true},initialValue:{type:String,optional:true},onSelected:{type:Function,optional:true},};DomainSelectorDialog.defaultProps={initialValue:"",onSelected:()=>{},readonly:true,isDebugMode:false,};return __exports;});;

/* /web/static/src/core/dropdown/dropdown.js */
odoo.define('@web/core/dropdown/dropdown',async function(require){'use strict';let __exports={};const{useBus,useService}=require("@web/core/utils/hooks");const{usePosition}=require("@web/core/position_hook");const{useDropdownNavigation}=require("@web/core/dropdown/dropdown_navigation_hook");const{localization}=require("@web/core/l10n/localization");const{Component,EventBus,onWillStart,status,useEffect,useExternalListener,useRef,useState,useChildSubEnv,}=require("@odoo/owl");const DIRECTION_CARET_CLASS={bottom:"dropdown",top:"dropup",left:"dropstart",right:"dropend",};const DROPDOWN=__exports.DROPDOWN=Symbol("Dropdown");const Dropdown=__exports.Dropdown=class Dropdown extends Component{setup(){this.state=useState({open:this.props.startOpen,groupIsOpen:this.props.startOpen,});this.rootRef=useRef("root");onWillStart(()=>{if(this.state.open&&this.props.beforeOpen){return this.props.beforeOpen();}});if(!this.props.manualOnly){useExternalListener(window,"click",this.onWindowClicked,{capture:true});useBus(Dropdown.bus,"state-changed",({detail})=>this.onDropdownStateChanged(detail));}
this.ui=useService("ui");useEffect(()=>{Promise.resolve().then(()=>{this.myActiveEl=this.ui.activeElement;});},()=>[]);this.parentDropdown=this.env[DROPDOWN];useChildSubEnv({[DROPDOWN]:{close:this.close.bind(this),closeAllParents:()=>{this.close();if(this.parentDropdown){this.parentDropdown.closeAllParents();}},},});useDropdownNavigation();const position=this.props.position||(this.parentDropdown?"right-start":"bottom-start");let[direction]=position.split("-");if(["left","right"].includes(direction)&&localization.direction==="rtl"){direction=direction==="left"?"right":"left";}
const positioningOptions={popper:"menuRef",position,onPositioned:(el,{direction,variant})=>{if(this.parentDropdown&&["right","left"].includes(direction)){if(variant==="start"){el.style.marginTop="calc(-.5rem - 1px)";}else if(variant==="end"){el.style.marginTop="calc(.5rem - 2px)";}}},};this.directionCaretClass=DIRECTION_CARET_CLASS[direction];this.togglerRef=useRef("togglerRef");if(this.props.toggler==="parent"){useEffect(()=>{const onClick=(ev)=>{if(this.rootRef.el.contains(ev.target)){return;}
this.toggle();};if(this.rootRef.el.parentElement.tabIndex===-1){this.rootRef.el.parentElement.tabIndex=-1;}
this.rootRef.el.parentElement.addEventListener("click",onClick);return()=>{this.rootRef.el.parentElement.removeEventListener("click",onClick);};},()=>[]);useEffect((open)=>{this.rootRef.el.parentElement.ariaExpanded=open?"true":"false";},()=>[this.state.open]);usePosition(()=>this.rootRef.el.parentElement,positioningOptions);}else{const togglerRef=useRef("togglerRef");usePosition(()=>togglerRef.el,positioningOptions);}}
async changeStateAndNotify(stateSlice){if(stateSlice.open&&this.props.beforeOpen){await this.props.beforeOpen();if(status(this)==="destroyed"){return;}}
Object.assign(this.state,stateSlice);const stateChangedPayload={emitter:this,newState:{...this.state},};Dropdown.bus.trigger("state-changed",stateChangedPayload);}
close(){return this.changeStateAndNotify({open:false,groupIsOpen:false});}
open(){return this.changeStateAndNotify({open:true,groupIsOpen:true});}
toggle(){const toggled=!this.state.open;return this.changeStateAndNotify({open:toggled,groupIsOpen:toggled});}
get showCaret(){return this.props.showCaret===undefined?this.parentDropdown:this.props.showCaret;}
onDropdownStateChanged(args){if(!this.rootRef.el||this.rootRef.el.contains(args.emitter.rootRef.el)){return;}
if(args.emitter.rootRef.el.parentElement===this.rootRef.el.parentElement){this.state.groupIsOpen=args.newState.groupIsOpen;if(this.state.open&&args.newState.open){this.state.open=false;}}else{if(this.state.open&&args.newState.open){this.close();}}}
onTogglerClick(){this.toggle();}
onTogglerMouseEnter(){if(this.state.groupIsOpen&&!this.state.open){this.togglerRef.el.focus();this.open();}}
onWindowClicked(ev){if(!this.state.open){return;}
if(this.ui.activeElement!==this.myActiveEl){return;}
if(ev.target.closest(".bootstrap-datetimepicker-widget")){return;}
const rootEl=this.props.toggler==="parent"?this.rootRef.el.parentElement:this.rootRef.el;const gotClickedInside=rootEl.contains(ev.target);if(!gotClickedInside){this.close();}}}
Dropdown.bus=new EventBus();Dropdown.props={class:{type:String,optional:true,},toggler:{type:String,optional:true,validate:(prop)=>["parent"].includes(prop),},skipTogglerTabbing:{type:Boolean,optional:true,},startOpen:{type:Boolean,optional:true,},manualOnly:{type:Boolean,optional:true,},menuClass:{type:String,optional:true,},beforeOpen:{type:Function,optional:true,},togglerClass:{type:String,optional:true,},hotkey:{type:String,optional:true,},tooltip:{type:String,optional:true,},title:{type:String,optional:true,},position:{type:String,optional:true,},slots:{type:Object,optional:true,},showCaret:{type:Boolean,optional:true,},};Dropdown.template="web.Dropdown";return __exports;});;

/* /web/static/src/core/dropdown/dropdown_item.js */
odoo.define('@web/core/dropdown/dropdown_item',async function(require){'use strict';let __exports={};const{DROPDOWN}=require("@web/core/dropdown/dropdown");const{Component}=require("@odoo/owl");const ParentClosingMode={None:"none",ClosestParent:"closest",AllParents:"all",};const DropdownItem=__exports.DropdownItem=class DropdownItem extends Component{onClick(ev){const{href,onSelected,parentClosingMode}=this.props;if(href){ev.preventDefault();}
if(onSelected){onSelected();}
const dropdown=this.env[DROPDOWN];if(!dropdown){return;}
const{ClosestParent,AllParents}=ParentClosingMode;switch(parentClosingMode){case ClosestParent:dropdown.close();break;case AllParents:dropdown.closeAllParents();break;}}
get dataAttributes(){const{dataset}=this.props;if(this.props.dataset){const attributes=Object.entries(dataset).map(([key,value])=>{return[`data-${key.replace(/[A-Z]/g, (char) => `-${char.toLowerCase()}`)}`,value];});return Object.fromEntries(attributes);}
return{};}}
DropdownItem.template="web.DropdownItem";DropdownItem.props={onSelected:{type:Function,optional:true,},class:{type:[String,Object],optional:true,},parentClosingMode:{type:ParentClosingMode,optional:true,},hotkey:{type:String,optional:true,},href:{type:String,optional:true,},slots:{type:Object,optional:true,},title:{type:String,optional:true,},dataset:{type:Object,optional:true,},};DropdownItem.defaultProps={parentClosingMode:ParentClosingMode.AllParents,};return __exports;});;

/* /web/static/src/core/dropdown/dropdown_navigation_hook.js */
odoo.define('@web/core/dropdown/dropdown_navigation_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{browser}=require("@web/core/browser/browser");const{localization}=require("@web/core/l10n/localization");const{scrollTo}=require("@web/core/utils/scrolling");const{useComponent,useEffect,useRef}=require("@odoo/owl");const ACTIVE_MENU_ELEMENT_CLASS="focus";const MENU_ELEMENTS_SELECTORS=[":scope > .dropdown-item",":scope > .dropdown"];const NEXT_ACTIVE_INDEX_FNS={FIRST:()=>0,LAST:(list)=>list.length-1,NEXT:(list,prevActiveIndex)=>(prevActiveIndex+1)%list.length,PREV:(list,prevActiveIndex)=>(prevActiveIndex<=0?list.length:prevActiveIndex)-1,};__exports.useDropdownNavigation=useDropdownNavigation;function useDropdownNavigation(){const comp=useComponent();if(comp.parentDropdown&&comp.props.toggler==="parent"){throw new Error("A nested Dropdown must use its standard toggler");}
const originalOnTogglerClick=comp.onTogglerClick.bind(comp);comp.onTogglerClick=(ev)=>{if(comp.parentDropdown&&!ev.__fromDropdownNavigation){return;}
originalOnTogglerClick();};const originalOnTogglerMouseEnter=comp.onTogglerMouseEnter.bind(comp);comp.onTogglerMouseEnter=()=>{if(comp.parentDropdown){return;}
originalOnTogglerMouseEnter();};let mouseSelectionActive=true;const menuRef=useRef("menuRef");let menuElements=[];useEffect(()=>{if(!comp.state.open){return;}
const addedListeners=[];const queryResult=menuRef.el.querySelectorAll(MENU_ELEMENTS_SELECTORS.join());for(const el of queryResult){const isSubDropdown=el.classList.contains("dropdown");const isSubDropdownOpen=()=>el.classList.contains("show");const navTarget=isSubDropdown?el.querySelector(":scope > .dropdown-toggle"):el;let subDropdownTimeout;const closeSubDropdown=()=>{browser.clearTimeout(subDropdownTimeout);subDropdownTimeout=browser.setTimeout(()=>{if(isSubDropdownOpen()){const ev=new MouseEvent("click",{bubbles:false});ev.__fromDropdownNavigation=true;navTarget.dispatchEvent(ev);}},200);};const openSubDropdown=(immediate=false)=>{browser.clearTimeout(subDropdownTimeout);subDropdownTimeout=browser.setTimeout(()=>{if(!isSubDropdownOpen()){const ev=new MouseEvent("click",{bubbles:false});ev.__fromDropdownNavigation=true;navTarget.dispatchEvent(ev);}},immediate?0:200);};const makeOnlyActive=()=>{for(const menuElement of menuElements){if(menuElement.el===el){continue;}
menuElement.navTarget.classList.remove(ACTIVE_MENU_ELEMENT_CLASS);if(menuElement.isSubDropdown){menuElement.closeSubDropdown();}}
navTarget.classList.add(ACTIVE_MENU_ELEMENT_CLASS);navTarget.focus();};const menuElement={el,get isActive(){return navTarget.classList.contains(ACTIVE_MENU_ELEMENT_CLASS);},makeOnlyActive,navTarget,get isSubDropdownOpen(){return isSubDropdownOpen();},isSubDropdown,closeSubDropdown,openSubDropdown,};menuElements.push(menuElement);const elementListeners={mouseenter:()=>{if(!mouseSelectionActive){mouseSelectionActive=true;}else{makeOnlyActive();if(isSubDropdown){openSubDropdown();}}},};for(const[eventType,listener]of Object.entries(elementListeners)){navTarget.addEventListener(eventType,listener);}
addedListeners.push([navTarget,elementListeners]);}
return()=>{menuElements=[];mouseSelectionActive=true;for(const[navTarget,listeners]of addedListeners){for(const[eventType,listener]of Object.entries(listeners)){navTarget.removeEventListener(eventType,listener);}}};});const getActiveMenuElement=()=>{return menuElements.find((menuElement)=>menuElement.isActive);};const setActiveMenuElement=(menuElement)=>{if(menuElements.length){if(typeof menuElement==="string"){const prevIndex=menuElements.indexOf(getActiveMenuElement());const nextIndex=NEXT_ACTIVE_INDEX_FNS[menuElement](menuElements,prevIndex);menuElement=menuElements[nextIndex];}
menuElement.makeOnlyActive();scrollTo(menuElement.el,{scrollable:menuElement.el.parentElement});}};useEffect((open)=>{if(open&&comp.parentDropdown){setActiveMenuElement("FIRST");}},()=>[comp.state.open]);const hotkeyService=useService("hotkey");const closeAndRefocus=()=>{const toFocus=comp.props.toggler==="parent"?comp.rootRef.el.parentElement:comp.rootRef.el.querySelector(":scope > .dropdown-toggle");comp.close().then(()=>{toFocus.focus();});};const closeSubDropdown=comp.parentDropdown?closeAndRefocus:()=>{};const openSubDropdown=()=>{const menuElement=getActiveMenuElement();if(menuElement&&menuElement.isSubDropdown){menuElement.openSubDropdown(true);}};const selectActiveMenuElement=()=>{const menuElement=getActiveMenuElement();if(menuElement){if(menuElement.isSubDropdown){menuElement.openSubDropdown(true);}else{menuElement.navTarget.click();}}};let hotkeyRemoves=[];const hotkeyCallbacks={home:()=>setActiveMenuElement("FIRST"),end:()=>setActiveMenuElement("LAST"),tab:()=>setActiveMenuElement("NEXT"),"shift+tab":()=>setActiveMenuElement("PREV"),arrowdown:()=>setActiveMenuElement("NEXT"),arrowup:()=>setActiveMenuElement("PREV"),arrowleft:localization.direction==="rtl"?openSubDropdown:closeSubDropdown,arrowright:localization.direction==="rtl"?closeSubDropdown:openSubDropdown,enter:selectActiveMenuElement,escape:closeAndRefocus,};useEffect((open)=>{if(!open){return;}
for(const[hotkey,callback]of Object.entries(hotkeyCallbacks)){const callbackWrapper=()=>{const hasOpenedSubDropdown=menuElements.some((m)=>m.isSubDropdownOpen);if(!hasOpenedSubDropdown){mouseSelectionActive=false;callback.call(comp);}};hotkeyRemoves.push(hotkeyService.add(hotkey,callbackWrapper,{allowRepeat:true}));}
return()=>{for(const removeHotkey of hotkeyRemoves){removeHotkey();}
hotkeyRemoves=[];};},()=>[comp.state.open]);}
return __exports;});;

/* /web/static/src/core/effects/effect_container.js */
odoo.define('@web/core/effects/effect_container',async function(require){'use strict';let __exports={};const{Component,xml,onWillDestroy}=require("@odoo/owl");const EffectContainer=__exports.EffectContainer=class EffectContainer extends Component{setup(){this.effect=null;const listenerRef=this.props.bus.addEventListener("UPDATE",(ev)=>{this.effect=ev.detail;this.render();});onWillDestroy(()=>{this.props.bus.removeEventListener("UPDATE",listenerRef);});}
removeEffect(){this.effect=null;this.render();}}
EffectContainer.template=xml`
  <div class="o_effects_manager">
    <t t-if="effect">
        <t t-component="effect.Component" t-props="effect.props" t-key="effect.id" close="() => this.removeEffect()"/>
    </t>
  </div>`;return __exports;});;

/* /web/static/src/core/effects/effect_service.js */
odoo.define('@web/core/effects/effect_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{EffectContainer}=require("@web/core/effects/effect_container");const{RainbowMan}=require("@web/core/effects/rainbow_man");const{EventBus}=require("@odoo/owl");const effectRegistry=registry.category("effects");function rainbowMan(env,params={}){let message=params.message;if(message instanceof jQuery){console.log("Providing a jQuery element to an effect is deprecated. Note that all event handlers will be lost.");message=message.html();}else if(message instanceof Element){console.log("Providing an HTML element to an effect is deprecated. Note that all event handlers will be lost.");message=message.outerHTML;}else if(!message){message=env._t("Well Done!");}
if(env.services.user.showEffect){const props={imgUrl:params.img_url||"/web/static/img/smile.svg",fadeout:params.fadeout||"medium",message,Component:params.Component,props:params.props,};return{Component:RainbowMan,props};}
env.services.notification.add(message);}
effectRegistry.add("rainbow_man",rainbowMan);const effectService=__exports.effectService={start(env){const bus=new EventBus();registry.category("main_components").add("EffectContainer",{Component:EffectContainer,props:{bus},});let effectId=0;function add(params={}){const type=params.type||"rainbow_man";const effect=effectRegistry.get(type);const{Component,props}=effect(env,params)||{};if(Component){bus.trigger("UPDATE",{Component,props,id:effectId++});}}
return{add};},};registry.category("services").add("effect",effectService);return __exports;});;

/* /web/static/src/core/effects/rainbow_man.js */
odoo.define('@web/core/effects/rainbow_man',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,useEffect,useExternalListener,useState}=require("@odoo/owl");const RainbowMan=__exports.RainbowMan=class RainbowMan extends Component{setup(){useExternalListener(document.body,"click",this.closeRainbowMan);this.state=useState({isFading:false});this.delay=RainbowMan.rainbowFadeouts[this.props.fadeout];if(this.delay){useEffect(()=>{const timeout=browser.setTimeout(()=>{this.state.isFading=true;},this.delay);return()=>browser.clearTimeout(timeout);},()=>[]);}}
onAnimationEnd(ev){if(this.delay&&ev.animationName==="reward-fading-reverse"){ev.stopPropagation();this.closeRainbowMan();}}
closeRainbowMan(){this.props.close();}}
RainbowMan.template="web.RainbowMan";RainbowMan.rainbowFadeouts={slow:4500,medium:3500,fast:2000,no:false};return __exports;});;

/* /web/static/src/core/errors/error_dialogs.js */
odoo.define('@web/core/errors/error_dialogs',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Dialog}=require("@web/core/dialog/dialog");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{useService}=require("@web/core/utils/hooks");const{capitalize}=require("@web/core/utils/strings");const{Component,useState}=require("@odoo/owl");const odooExceptionTitleMap=__exports.odooExceptionTitleMap=new Map(Object.entries({"odoo.addons.base.models.ir_mail_server.MailDeliveryException":_lt("MailDeliveryException"),"odoo.exceptions.AccessDenied":_lt("Access Denied"),"odoo.exceptions.MissingError":_lt("Missing Record"),"odoo.exceptions.UserError":_lt("User Error"),"odoo.exceptions.ValidationError":_lt("Validation Error"),"odoo.exceptions.AccessError":_lt("Access Error"),"odoo.exceptions.Warning":_lt("Warning"),}));const ErrorDialog=__exports.ErrorDialog=class ErrorDialog extends Component{setup(){this.state=useState({showTraceback:false,});}
onClickClipboard(){browser.navigator.clipboard.writeText(`${this.props.name}\n${this.props.message}\n${this.props.traceback}`);}}
ErrorDialog.template="web.ErrorDialog";ErrorDialog.components={Dialog};ErrorDialog.title=_lt("Odoo Error");const ClientErrorDialog=__exports.ClientErrorDialog=class ClientErrorDialog extends ErrorDialog{}
ClientErrorDialog.title=_lt("Odoo Client Error");const NetworkErrorDialog=__exports.NetworkErrorDialog=class NetworkErrorDialog extends ErrorDialog{}
NetworkErrorDialog.title=_lt("Odoo Network Error");const RPCErrorDialog=__exports.RPCErrorDialog=class RPCErrorDialog extends ErrorDialog{setup(){super.setup();this.inferTitle();this.traceback=this.props.traceback;if(this.props.data&&this.props.data.debug){this.traceback=`${this.props.data.debug}\nThe above server error caused the following client error:\n${this.traceback}`;}}
inferTitle(){if(this.props.exceptionName&&odooExceptionTitleMap.has(this.props.exceptionName)){this.title=odooExceptionTitleMap.get(this.props.exceptionName).toString();return;}
if(!this.props.type){return;}
switch(this.props.type){case"server":this.title=this.env._t("Odoo Server Error");break;case"script":this.title=this.env._t("Odoo Client Error");break;case"network":this.title=this.env._t("Odoo Network Error");break;}}
onClickClipboard(){browser.navigator.clipboard.writeText(`${this.props.name}\n${this.props.message}\n${this.traceback}`);}}
const WarningDialog=__exports.WarningDialog=class WarningDialog extends Component{setup(){this.title=this.inferTitle();const{data,message}=this.props;if(data&&data.arguments&&data.arguments.length>0){this.message=data.arguments[0];}else{this.message=message;}}
inferTitle(){if(this.props.exceptionName&&odooExceptionTitleMap.has(this.props.exceptionName)){return odooExceptionTitleMap.get(this.props.exceptionName).toString();}
return this.props.title||this.env._t("Odoo Warning");}}
WarningDialog.template="web.WarningDialog";WarningDialog.components={Dialog};const RedirectWarningDialog=__exports.RedirectWarningDialog=class RedirectWarningDialog extends Component{setup(){this.actionService=useService("action");const{data,subType}=this.props;const[message,actionId,buttonText,additionalContext]=data.arguments;this.title=capitalize(subType)||this.env._t("Odoo Warning");this.message=message;this.actionId=actionId;this.buttonText=buttonText;this.additionalContext=additionalContext;}
async onClick(){const options={};if(this.additionalContext){options.additionalContext=this.additionalContext;}
await this.actionService.doAction(this.actionId,options);this.props.close();}}
RedirectWarningDialog.template="web.RedirectWarningDialog";RedirectWarningDialog.components={Dialog};const Error504Dialog=__exports.Error504Dialog=class Error504Dialog extends Component{}
Error504Dialog.template="web.Error504Dialog";Error504Dialog.components={Dialog};Error504Dialog.title=_lt("Request timeout");const SessionExpiredDialog=__exports.SessionExpiredDialog=class SessionExpiredDialog extends Component{onClick(){browser.location.reload();}}
SessionExpiredDialog.template="web.SessionExpiredDialog";SessionExpiredDialog.components={Dialog};SessionExpiredDialog.title=_lt("Odoo Session Expired");registry.category("error_dialogs").add("odoo.exceptions.AccessDenied",WarningDialog).add("odoo.exceptions.AccessError",WarningDialog).add("odoo.exceptions.MissingError",WarningDialog).add("odoo.exceptions.UserError",WarningDialog).add("odoo.exceptions.ValidationError",WarningDialog).add("odoo.exceptions.RedirectWarning",RedirectWarningDialog).add("odoo.http.SessionExpiredException",SessionExpiredDialog).add("werkzeug.exceptions.Forbidden",SessionExpiredDialog).add("504",Error504Dialog);return __exports;});;

/* /web/static/src/core/errors/error_handlers.js */
odoo.define('@web/core/errors/error_handlers',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{ConnectionLostError,RPCError}=require("@web/core/network/rpc_service");const{registry}=require("@web/core/registry");const{ClientErrorDialog,ErrorDialog,NetworkErrorDialog,RPCErrorDialog,}=require("@web/core/errors/error_dialogs");const{UncaughtClientError,UncaughtCorsError,UncaughtPromiseError}=require("@web/core/errors/error_service");const errorHandlerRegistry=registry.category("error_handlers");const errorDialogRegistry=registry.category("error_dialogs");const errorNotificationRegistry=registry.category("error_notifications");__exports.rpcErrorHandler=rpcErrorHandler;function rpcErrorHandler(env,error,originalError){if(!(error instanceof UncaughtPromiseError)){return false;}
if(originalError instanceof RPCError){error.unhandledRejectionEvent.preventDefault();const exceptionName=originalError.exceptionName;let ErrorComponent=originalError.Component;if(!ErrorComponent&&exceptionName){if(errorNotificationRegistry.contains(exceptionName)){const notif=errorNotificationRegistry.get(exceptionName);env.services.notification.add(notif.message||originalError.data.message,notif);return true;}
if(errorDialogRegistry.contains(exceptionName)){ErrorComponent=errorDialogRegistry.get(exceptionName);}}
if(!ErrorComponent&&originalError.data.context){const exceptionClass=originalError.data.context.exception_class;if(errorDialogRegistry.contains(exceptionClass)){ErrorComponent=errorDialogRegistry.get(exceptionClass);}}
env.services.dialog.add(ErrorComponent||RPCErrorDialog,{traceback:error.traceback,message:originalError.message,name:originalError.name,exceptionName:originalError.exceptionName,data:originalError.data,subType:originalError.subType,code:originalError.code,type:originalError.type,});return true;}}
errorHandlerRegistry.add("rpcErrorHandler",rpcErrorHandler,{sequence:97});let connectionLostNotifRemove=null;__exports.lostConnectionHandler=lostConnectionHandler;function lostConnectionHandler(env,error,originalError){if(!(error instanceof UncaughtPromiseError)){return false;}
if(originalError instanceof ConnectionLostError){if(connectionLostNotifRemove){return true;}
connectionLostNotifRemove=env.services.notification.add(env._t("Connection lost. Trying to reconnect..."),{sticky:true});let delay=2000;browser.setTimeout(function checkConnection(){env.services.rpc("/web/webclient/version_info",{}).then(function(){if(connectionLostNotifRemove){connectionLostNotifRemove();connectionLostNotifRemove=null;}
env.services.notification.add(env._t("Connection restored. You are back online."),{type:"info",});}).catch(()=>{delay=delay*1.5+500*Math.random();browser.setTimeout(checkConnection,delay);});},delay);return true;}}
errorHandlerRegistry.add("lostConnectionHandler",lostConnectionHandler,{sequence:98});const defaultDialogs=new Map([[UncaughtClientError,ClientErrorDialog],[UncaughtPromiseError,ClientErrorDialog],[UncaughtCorsError,NetworkErrorDialog],]);function defaultHandler(env,error){const DialogComponent=defaultDialogs.get(error.constructor)||ErrorDialog;env.services.dialog.add(DialogComponent,{traceback:error.traceback,message:error.message,name:error.name,});return true;}
errorHandlerRegistry.add("defaultHandler",defaultHandler,{sequence:100});return __exports;});;

/* /web/static/src/core/errors/error_service.js */
odoo.define('@web/core/errors/error_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{_lt}=require("@web/core/l10n/translation");const{registry}=require("@web/core/registry");const{completeUncaughtError,getErrorTechnicalName}=require("@web/core/errors/error_utils");const UncaughtError=__exports.UncaughtError=class UncaughtError extends Error{constructor(message){super(message);this.name=getErrorTechnicalName(this);this.traceback=null;}}
const UncaughtClientError=__exports.UncaughtClientError=class UncaughtClientError extends UncaughtError{constructor(message=_lt("Uncaught Javascript Error")){super(message);}}
const UncaughtPromiseError=__exports.UncaughtPromiseError=class UncaughtPromiseError extends UncaughtError{constructor(message=_lt("Uncaught Promise")){super(message);this.unhandledRejectionEvent=null;}}
const UncaughtCorsError=__exports.UncaughtCorsError=class UncaughtCorsError extends UncaughtError{constructor(message=_lt("Uncaught CORS Error")){super(message);}}
const errorService=__exports.errorService={start(env){function handleError(uncaughtError,retry=true){let originalError=uncaughtError;while(originalError instanceof Error&&"cause"in originalError){originalError=originalError.cause;}
const services=env.services;if(!services.dialog||!services.notification||!services.rpc){if(retry){browser.setTimeout(()=>{handleError(uncaughtError,false);},1000);}
return;}
for(const handler of registry.category("error_handlers").getAll()){if(handler(env,uncaughtError,originalError)){break;}}
if(uncaughtError.event&&!uncaughtError.event.defaultPrevented){uncaughtError.event.preventDefault();console.error(uncaughtError.traceback);}}
browser.addEventListener("error",async(ev)=>{const{colno,error,filename,lineno,message}=ev;const errorsToIgnore=["ResizeObserver loop completed with undelivered notifications.","ResizeObserver loop limit exceeded",];if(!error&&errorsToIgnore.includes(message)){return;}
let uncaughtError;if(!filename&&!lineno&&!colno){uncaughtError=new UncaughtCorsError();uncaughtError.traceback=env._t(`Unknown CORS error\n\n`+`An unknown CORS error occured.\n`+`The error probably originates from a JavaScript file served from a different origin.\n`+`(Opening your browser console might give you a hint on the error.)`);}else{uncaughtError=new UncaughtClientError();uncaughtError.event=ev;if(error instanceof Error){error.errorEvent=ev;const annotated=env.debug&&env.debug.includes("assets");await completeUncaughtError(uncaughtError,error,annotated);}}
uncaughtError.cause=error;handleError(uncaughtError);});browser.addEventListener("unhandledrejection",async(ev)=>{const error=ev.reason;const uncaughtError=new UncaughtPromiseError();uncaughtError.unhandledRejectionEvent=ev;uncaughtError.event=ev;if(error instanceof Error){error.errorEvent=ev;const annotated=env.debug&&env.debug.includes("assets");await completeUncaughtError(uncaughtError,error,annotated);}
uncaughtError.cause=error;handleError(uncaughtError);});},};registry.category("services").add("error",errorService,{sequence:1});return __exports;});;

/* /web/static/src/core/errors/error_utils.js */
odoo.define('@web/core/errors/error_utils',async function(require){'use strict';let __exports={};const{_loadJS}=require("@web/core/assets");const{isBrowserChrome}=require("@web/core/browser/feature_detection");function combineErrorNames(uncaughtError,originalError){const originalErrorName=getErrorTechnicalName(originalError);const uncaughtErrorName=getErrorTechnicalName(uncaughtError);if(originalErrorName===Error.name){return uncaughtErrorName;}else{return`${uncaughtErrorName} > ${originalErrorName}`;}}
__exports.fullTraceback=fullTraceback;function fullTraceback(error){let traceback=formatTraceback(error);let current=error.cause;while(current){traceback+=`\n\nCaused by: ${
            current instanceof Error ? formatTraceback(current) : current
        }`;current=current.cause;}
return traceback;}
__exports.fullAnnotatedTraceback=fullAnnotatedTraceback;async function fullAnnotatedTraceback(error){if(error.annotatedTraceback){return error.annotatedTraceback;}
if(error.errorEvent){error.errorEvent.preventDefault();}
let traceback;try{traceback=await annotateTraceback(error);let current=error.cause;while(current){traceback+=`\n\nCaused by: ${
                current instanceof Error ? await annotateTraceback(current) : current
            }`;current=current.cause;}}catch(e){console.warn("Failed to annotate traceback for error:",error,"failure reason:",e);traceback=fullTraceback(error);}
error.annotatedTraceback=traceback;if(error.errorEvent){throw error;}
return traceback;}
__exports.completeUncaughtError=completeUncaughtError;async function completeUncaughtError(uncaughtError,originalError,annotated=false){uncaughtError.name=combineErrorNames(uncaughtError,originalError);if(annotated){uncaughtError.traceback=await fullAnnotatedTraceback(originalError);}else{uncaughtError.traceback=fullTraceback(originalError);}
if(originalError.message){uncaughtError.message=`${uncaughtError.message} > ${originalError.message}`;}
uncaughtError.cause=originalError;}
__exports.getErrorTechnicalName=getErrorTechnicalName;function getErrorTechnicalName(error){return error.name!==Error.name?error.name:error.constructor.name;}
__exports.formatTraceback=formatTraceback;function formatTraceback(error){let traceback=error.stack;const errorName=getErrorTechnicalName(error);if(!isBrowserChrome()){traceback=`${errorName}: ${error.message}\n${error.stack}`.replace(/\n/g,"\n    ").trim();}else if(error.stack){traceback=error.stack.replace(/^[^:]*/g,errorName);}
return traceback;}
__exports.annotateTraceback=annotateTraceback;async function annotateTraceback(error){const traceback=formatTraceback(error);try{await _loadJS("/web/static/lib/stacktracejs/stacktrace.js");}catch(_e){return traceback;}
if(error.stack){const regex=/ line (\d*) > (Function):(\d*)/gm;const subst=`:$1`;error.stack=error.stack.replace(regex,subst);}
let frames;try{frames=await StackTrace.fromError(error);}catch(e){console.warn("The following error could not be annotated:",error,e);return traceback;}
const lines=traceback.split("\n");if(lines[lines.length-1].trim()===""){lines.splice(-1);}
let lineIndex=0;let frameIndex=0;while(frameIndex<frames.length){const line=lines[lineIndex];if(!line.match(/:\d+:\d+\)?$/)){lineIndex++;continue;}
const frame=frames[frameIndex];const info=` (${frame.fileName}:${frame.lineNumber})`;lines[lineIndex]=line+info;lineIndex++;frameIndex++;}
return lines.join("\n");}
return __exports;});;

/* /web/static/src/core/file_input/file_input.js */
odoo.define('@web/core/file_input/file_input',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Component,onMounted,useRef}=require("@odoo/owl");const FileInput=__exports.FileInput=class FileInput extends Component{setup(){this.http=useService("http");this.fileInputRef=useRef("file-input");onMounted(()=>{if(this.props.autoOpen){this.onTriggerClicked();}});}
get httpParams(){const{resId,resModel}=this.props;const params={csrf_token:odoo.csrf_token,ufile:[...this.fileInputRef.el.files],};if(resModel){params.model=resModel;}
if(resId!==undefined){params.id=resId;}
return params;}
async uploadFiles(params){const fileData=await this.http.post(this.props.route,params,"text");const parsedFileData=JSON.parse(fileData);if(parsedFileData.error){throw new Error(parsedFileData.error);}
return parsedFileData;}
async onFileInputChange(){const parsedFileData=await this.uploadFiles(this.httpParams);this.props.onUpload(parsedFileData);}
async onTriggerClicked(){if(await this.props.beforeOpen()){this.fileInputRef.el.click();}}}
FileInput.defaultProps={acceptedFileExtensions:"*",hidden:false,multiUpload:false,onUpload:()=>{},route:"/web/binary/upload_attachment",beforeOpen:async()=>true,};FileInput.props={acceptedFileExtensions:{type:String,optional:true},autoOpen:{type:Boolean,optional:true},hidden:{type:Boolean,optional:true},multiUpload:{type:Boolean,optional:true},onUpload:{type:Function,optional:true},beforeOpen:{type:Function,optional:true},resId:{type:Number,optional:true},resModel:{type:String,optional:true},route:{type:String,optional:true},"*":true,};FileInput.template="web.FileInput";return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_bar.js */
odoo.define('@web/core/file_upload/file_upload_progress_bar',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{sprintf}=require("@web/core/utils/strings");const{ConfirmationDialog}=require("@web/core/confirmation_dialog/confirmation_dialog");const{Component}=require("@odoo/owl");const FileUploadProgressBar=__exports.FileUploadProgressBar=class FileUploadProgressBar extends Component{setup(){this.dialogService=useService("dialog");}
onCancel(){if(!this.props.fileUpload.xhr){return;}
this.dialogService.add(ConfirmationDialog,{body:sprintf(this.env._t("Do you really want to cancel the upload of %s?"),this.props.fileUpload.title),confirm:()=>{this.props.fileUpload.xhr.abort();},});}}
FileUploadProgressBar.props={fileUpload:{type:Object},};FileUploadProgressBar.template="web.FileUploadProgressBar";return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_container.js */
odoo.define('@web/core/file_upload/file_upload_progress_container',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const FileUploadProgressContainer=__exports.FileUploadProgressContainer=class FileUploadProgressContainer extends Component{}
FileUploadProgressContainer.template="web.FileUploadProgressContainer";FileUploadProgressContainer.props={Component:{optional:false},shouldDisplay:{type:Function,optional:true},fileUploads:{type:Object},};return __exports;});;

/* /web/static/src/core/file_upload/file_upload_progress_record.js */
odoo.define('@web/core/file_upload/file_upload_progress_record',async function(require){'use strict';let __exports={};const{sprintf}=require("@web/core/utils/strings");const{FileUploadProgressBar}=require("@web/core/file_upload/file_upload_progress_bar");const{Component}=require("@odoo/owl");const FileUploadProgressRecord=__exports.FileUploadProgressRecord=class FileUploadProgressRecord extends Component{getProgressTexts(){const fileUpload=this.props.fileUpload;const percent=Math.round(fileUpload.progress*100);if(percent===100){return{left:this.env._t("Processing..."),right:"",};}else{const mbLoaded=Math.round(fileUpload.loaded/1000000);const mbTotal=Math.round(fileUpload.total/1000000);return{left:sprintf(this.env._t("Uploading... (%s%)"),percent),right:sprintf(this.env._t("(%s/%sMB)"),mbLoaded,mbTotal),};}}}
FileUploadProgressRecord.components={FileUploadProgressBar,};const FileUploadProgressKanbanRecord=__exports.FileUploadProgressKanbanRecord=class FileUploadProgressKanbanRecord extends FileUploadProgressRecord{}
FileUploadProgressKanbanRecord.template="web.FileUploadProgressKanbanRecord";const FileUploadProgressDataRow=__exports.FileUploadProgressDataRow=class FileUploadProgressDataRow extends FileUploadProgressRecord{}
FileUploadProgressDataRow.template="web.FileUploadProgressDataRow";return __exports;});;

/* /web/static/src/core/file_upload/file_upload_service.js */
odoo.define('@web/core/file_upload/file_upload_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{sprintf}=require("@web/core/utils/strings");const{EventBus,reactive}=require("@odoo/owl");const fileUploadService=__exports.fileUploadService={dependencies:["notification"],createXhr(){return new window.XMLHttpRequest();},start(env,{notificationService}){const uploads=reactive({});let nextId=1;const bus=new EventBus();const upload=async(route,files,params={})=>{const xhr=this.createXhr();xhr.open("POST",route);const formData=new FormData();formData.append("csrf_token",odoo.csrf_token);for(const file of files){formData.append("ufile",file);}
if(params.buildFormData){params.buildFormData(formData);}
const upload=reactive({id:nextId++,xhr,data:formData,progress:0,loaded:0,total:0,state:"pending",title:files.length===1?files[0].name:sprintf(env._t("%s Files"),files.length),type:files.length===1?files[0].type:undefined,});uploads[upload.id]=upload;xhr.upload.addEventListener("progress",async(ev)=>{upload.progress=ev.loaded/ev.total;upload.loaded=ev.loaded;upload.total=ev.total;upload.state="loading";});xhr.addEventListener("load",()=>{delete uploads[upload.id];upload.state="loaded";bus.trigger("FILE_UPLOAD_LOADED",{upload});});xhr.addEventListener("error",async()=>{delete uploads[upload.id];upload.state="error";if(params.displayErrorNotification!==undefined&&params.displayErrorNotification){notificationService.add(env._t("An error occured while uploading."),{title:env._t("Error"),sticky:true,});}
bus.trigger("FILE_UPLOAD_ERROR",{upload});});xhr.addEventListener("abort",async()=>{delete uploads[upload.id];upload.state="abort";bus.trigger("FILE_UPLOAD_ERROR",{upload});});xhr.send(formData);bus.trigger("FILE_UPLOAD_ADDED",{upload});return upload;};return{bus,upload,uploads};},};registry.category("services").add("file_upload",fileUploadService);return __exports;});;

/* /web/static/src/core/hotkeys/hotkey_hook.js */
odoo.define('@web/core/hotkeys/hotkey_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect}=require("@odoo/owl");__exports.useHotkey=useHotkey;function useHotkey(hotkey,callback,options={}){const hotkeyService=useService("hotkey");useEffect(()=>hotkeyService.add(hotkey,callback,options),()=>[]);}
return __exports;});;

/* /web/static/src/core/hotkeys/hotkey_service.js */
odoo.define('@web/core/hotkeys/hotkey_service',async function(require){'use strict';let __exports={};const{isMacOS}=require("@web/core/browser/feature_detection");const{registry}=require("@web/core/registry");const{browser}=require("@web/core/browser/browser");const{getVisibleElements}=require("@web/core/utils/ui");const ALPHANUM_KEYS="abcdefghijklmnopqrstuvwxyz0123456789".split("");const NAV_KEYS=["arrowleft","arrowright","arrowup","arrowdown","pageup","pagedown","home","end","backspace","enter","tab","delete","space",];const MODIFIERS=["alt","control","shift"];const AUTHORIZED_KEYS=[...ALPHANUM_KEYS,...NAV_KEYS,"escape"];__exports.getActiveHotkey=getActiveHotkey;function getActiveHotkey(ev){if(!ev.key){return"";}
const hotkey=[];if(isMacOS()?ev.ctrlKey:ev.altKey){hotkey.push("alt");}
if(isMacOS()?ev.metaKey:ev.ctrlKey){hotkey.push("control");}
if(ev.shiftKey){hotkey.push("shift");}
let key=ev.key.toLowerCase();if(ev.code&&ev.code.indexOf("Digit")===0){key=ev.code.slice(-1);}
if(!AUTHORIZED_KEYS.includes(key)&&ev.code&&ev.code.indexOf("Key")===0){key=ev.code.slice(-1).toLowerCase();}
if(!MODIFIERS.includes(key)){hotkey.push(key);}
return hotkey.join("+");}
const hotkeyService=__exports.hotkeyService={dependencies:["ui"],overlayModifier:"alt",start(env,{ui}){const registrations=new Map();let nextToken=0;let overlaysVisible=false;addListeners(browser);function addListeners(target){target.addEventListener("keydown",onKeydown);target.addEventListener("keyup",removeHotkeyOverlays);target.addEventListener("blur",removeHotkeyOverlays);target.addEventListener("click",removeHotkeyOverlays);}
function onKeydown(event){if(event.code&&event.code.indexOf("Numpad")===0&&/^\d$/.test(event.key)){return;}
const hotkey=getActiveHotkey(event);if(!hotkey){return;}
const{activeElement,isBlocked}=ui;if(isBlocked){return;}
const elementsWithAccessKey=document.querySelectorAll("[accesskey]");for(const el of elementsWithAccessKey){if(el instanceof HTMLElement){el.dataset.hotkey=el.accessKey;el.removeAttribute("accesskey");}}
if(!overlaysVisible&&hotkey===hotkeyService.overlayModifier){addHotkeyOverlays(activeElement);event.preventDefault();return;}
const singleKey=hotkey.split("+").pop();if(!AUTHORIZED_KEYS.includes(singleKey)){return;}
const targetIsEditable=event.target instanceof HTMLElement&&(/input|textarea/i.test(event.target.tagName)||event.target.isContentEditable);const shouldProtectEditable=targetIsEditable&&!event.target.dataset.allowHotkeys&&singleKey!=="escape";const infos={activeElement,hotkey,isRepeated:event.repeat,target:event.target,shouldProtectEditable,};const dispatched=dispatch(infos);if(dispatched){event.preventDefault();event.stopImmediatePropagation();}
if(overlaysVisible){removeHotkeyOverlays();event.preventDefault();}}
function dispatch(infos){const{activeElement,hotkey,isRepeated,target,shouldProtectEditable}=infos;const reversedRegistrations=Array.from(registrations.values()).reverse();const domRegistrations=getDomRegistrations(hotkey,activeElement);const allRegistrations=reversedRegistrations.concat(domRegistrations);const candidates=allRegistrations.filter((reg)=>reg.hotkey===hotkey&&(reg.allowRepeat||!isRepeated)&&(reg.bypassEditableProtection||!shouldProtectEditable)&&(reg.global||reg.activeElement===activeElement)&&(!reg.validate||reg.validate(target))&&(!reg.area||(target instanceof Node&&reg.area()&&reg.area().contains(target))));let winner=candidates.shift();if(winner&&winner.area){for(const candidate of candidates.filter((c)=>Boolean(c.area))){if(candidate.area()&&winner.area().contains(candidate.area())){winner=candidate;}}}
if(winner){winner.callback({area:winner.area&&winner.area(),target,});return true;}
return false;}
function getDomRegistrations(hotkey,activeElement){const overlayModParts=hotkeyService.overlayModifier.split("+");if(!overlayModParts.every((el)=>hotkey.includes(el))){return[];}
const cleanHotkey=hotkey.split("+").filter((key)=>!overlayModParts.includes(key)).join("+");const elems=getVisibleElements(activeElement,`[data-hotkey='${cleanHotkey}' i]`);return elems.map((el)=>({hotkey,activeElement,bypassEditableProtection:true,callback:()=>{el.focus();el.click();},}));}
function addHotkeyOverlays(activeElement){for(const el of getVisibleElements(activeElement,"[data-hotkey]:not(:disabled)")){const hotkey=el.dataset.hotkey;const overlay=document.createElement("div");overlay.classList.add("o_web_hotkey_overlay","position-absolute","top-0","bottom-0","start-0","end-0","d-flex","justify-content-center","align-items-center","m-0","bg-black-50","h6");const overlayKbd=document.createElement("kbd");overlayKbd.className="small";overlayKbd.appendChild(document.createTextNode(hotkey.toUpperCase()));overlay.appendChild(overlayKbd);let overlayParent;if(el.tagName.toUpperCase()==="INPUT"){overlayParent=el.parentElement;}else{overlayParent=el;}
if(overlayParent.style.position!=="absolute"){overlayParent.style.position="relative";}
overlayParent.appendChild(overlay);}
overlaysVisible=true;}
function removeHotkeyOverlays(){for(const overlay of document.querySelectorAll(".o_web_hotkey_overlay")){overlay.remove();}
overlaysVisible=false;}
function registerHotkey(hotkey,callback,options={}){if(!hotkey||hotkey.length===0){throw new Error("You must specify an hotkey when registering a registration.");}
if(!callback||typeof callback!=="function"){throw new Error("You must specify a callback function when registering a registration.");}
const keys=hotkey.toLowerCase().split("+").filter((k)=>!MODIFIERS.includes(k));if(keys.some((k)=>!AUTHORIZED_KEYS.includes(k))){throw new Error(`You are trying to subscribe for an hotkey ('${hotkey}')
            that contains parts not whitelisted: ${keys.join(", ")}`);}else if(keys.length>1){throw new Error(`You are trying to subscribe for an hotkey ('${hotkey}')
            that contains more than one single key part: ${keys.join("+")}`);}
const token=nextToken++;const registration={hotkey:hotkey.toLowerCase(),callback,activeElement:null,allowRepeat:options&&options.allowRepeat,bypassEditableProtection:options&&options.bypassEditableProtection,global:options&&options.global,area:options&&options.area,validate:options&&options.validate,};Promise.resolve().then(()=>{registration.activeElement=ui.activeElement;});registrations.set(token,registration);return token;}
function unregisterHotkey(token){registrations.delete(token);}
return{add(hotkey,callback,options={}){const token=registerHotkey(hotkey,callback,options);return()=>{unregisterHotkey(token);};},registerIframe(iframe){addListeners(iframe.contentWindow);},};},};registry.category("services").add("hotkey",hotkeyService);return __exports;});;

/* /web/static/src/core/l10n/dates.js */
odoo.define('@web/core/l10n/dates',async function(require){'use strict';let __exports={};const{localization}=require("@web/core/l10n/localization");const{_t}=require("@web/core/l10n/translation");const{memoize}=require("@web/core/utils/functions");const{sprintf}=require("@web/core/utils/strings");const{DateTime,Settings}=luxon;const SERVER_DATE_FORMAT="yyyy-MM-dd";const SERVER_TIME_FORMAT="HH:mm:ss";const SERVER_DATETIME_FORMAT=`${SERVER_DATE_FORMAT} ${SERVER_TIME_FORMAT}`;const alphaRegex=/[a-zA-Z]/g;const nonAlphaRegex=/[^a-zA-Z]/g;const nonDigitsRegex=/[^0-9]/g;const normalizeFormatTable={a:"ccc",A:"cccc",b:"MMM",B:"MMMM",d:"dd",H:"HH",I:"hh",j:"o",m:"MM",M:"mm",p:"a",S:"ss",W:"WW",w:"c",y:"yy",Y:"yyyy",c:"ccc MMM d HH:mm:ss yyyy",x:"MM/dd/yy",X:"HH:mm:ss",};const luxonToMomentFormatTable={c:"d",d:"D",o:"DDDD",a:"A",y:"Y",};const smartDateUnits={d:"days",m:"months",w:"weeks",y:"years",};const smartDateRegex=new RegExp(`^([+-])(\\d+)([${Object.keys(smartDateUnits).join("")}]?)$`);__exports.areDateEquals=areDateEquals;function areDateEquals(d1,d2){return d1 instanceof DateTime&&d2 instanceof DateTime?d1.equals(d2):d1===d2;}
function parseSmartDateInput(value){const match=smartDateRegex.exec(value);if(match){let date=DateTime.local();const offset=parseInt(match[2],10);const unit=smartDateUnits[match[3]||"d"];if(match[1]==="+"){date=date.plus({[unit]:offset});}else{date=date.minus({[unit]:offset});}
return date;}
return false;}
function isValidDateTime(dt){return dt&&dt.isValid&&dt.year>=1000&&dt.year<10000;}
const stripAlphaDupes=memoize(function stripAlphaDupes(str){return str.replace(alphaRegex,(letter,index,str)=>{return letter===str[index-1]?"":letter;});});const strftimeToLuxonFormat=__exports.strftimeToLuxonFormat=memoize(function strftimeToLuxonFormat(value){const output=[];let inToken=false;for(let index=0;index<value.length;++index){let character=value[index];if(character==="%"&&!inToken){inToken=true;continue;}
if(character.match(alphaRegex)){if(inToken&&normalizeFormatTable[character]!==undefined){character=normalizeFormatTable[character];}else{character="'"+character+"'";}}
output.push(character);inToken=false;}
return output.join("");});const luxonToMomentFormat=__exports.luxonToMomentFormat=memoize(function luxonToMomentFormat(format){return format.replace(alphaRegex,(match)=>{return luxonToMomentFormatTable[match]||match;});});__exports.luxonToMoment=luxonToMoment;function luxonToMoment(dt){if(dt.isValid){const o=dt.toObject();return moment({...o,month:o.month-1});}else{return moment.invalid();}}
__exports.momentToLuxon=momentToLuxon;function momentToLuxon(dt){const o=dt.toObject();return DateTime.fromObject({year:o.years,month:o.months+1,day:o.date,hour:o.hours,minute:o.minutes,second:o.seconds,millisecond:o.milliseconds,});}
__exports.is24HourFormat=is24HourFormat;function is24HourFormat(format){return(format||localization.timeFormat).indexOf("H")!==-1;}
__exports.formatDate=formatDate;function formatDate(value,options={}){if(value===false){return"";}
const format=options.format||localization.dateFormat;const numberingSystem=options.numberingSystem||Settings.defaultNumberingSystem||"latn";return value.toFormat(format,{numberingSystem});}
__exports.formatDateTime=formatDateTime;function formatDateTime(value,options={}){if(value===false){return"";}
const format=options.format||localization.dateTimeFormat;const numberingSystem=options.numberingSystem||Settings.defaultNumberingSystem||"latn";return value.setZone("default").toFormat(format,{numberingSystem});}
__exports.parseDate=parseDate;function parseDate(value,options={}){if(!value){return false;}
return parseDateTime(value,{format:localization.dateFormat,...options}).startOf("day");}
__exports.parseDateTime=parseDateTime;function parseDateTime(value,options={}){if(!value){return false;}
const fmt=options.format||localization.dateTimeFormat;const parseOpts={setZone:true,zone:"default",locale:options.locale,numberingSystem:options.numberingSystem||Settings.defaultNumberingSystem||"latn",};let result=DateTime.fromFormat(value,fmt,parseOpts);if(!isValidDateTime(result)){result=parseSmartDateInput(value);}
if(!isValidDateTime(result)){const fmtWoZero=stripAlphaDupes(fmt);result=DateTime.fromFormat(value,fmtWoZero,parseOpts);}
if(!isValidDateTime(result)){const digitList=value.split(nonDigitsRegex).filter(Boolean);const fmtList=fmt.split(nonAlphaRegex).filter(Boolean);const valWoSeps=digitList.join("");let carry=0;const fmtWoSeps=fmtList.map((part,i)=>{const digitLength=(digitList[i]||"").length;const actualPart=part.slice(0,digitLength+carry);carry+=digitLength-actualPart.length;return actualPart;}).join("");result=DateTime.fromFormat(valWoSeps,fmtWoSeps,parseOpts);}
if(!isValidDateTime(result)){const valueDigits=value.replace(nonDigitsRegex,"");if(valueDigits.length>4){result=DateTime.fromISO(value,parseOpts);if(!isValidDateTime(result)){result=DateTime.fromSQL(value,parseOpts);}}}
if(!isValidDateTime(result)){throw new Error(sprintf(_t("'%s' is not a correct date or datetime"),value));}
return result.setZone("default");}
__exports.deserializeDate=deserializeDate;function deserializeDate(value){return DateTime.fromSQL(value,{zone:"default",numberingSystem:"latn"});}
__exports.deserializeDateTime=deserializeDateTime;function deserializeDateTime(value){return DateTime.fromSQL(value,{zone:"utc",numberingSystem:"latn"}).setZone("default");}
const dateCache=new WeakMap();__exports.serializeDate=serializeDate;function serializeDate(value){if(!dateCache.has(value)){dateCache.set(value,value.toFormat(SERVER_DATE_FORMAT,{numberingSystem:"latn"}));}
return dateCache.get(value);}
const dateTimeCache=new WeakMap();__exports.serializeDateTime=serializeDateTime;function serializeDateTime(value){if(!dateTimeCache.has(value)){dateTimeCache.set(value,value.setZone("utc").toFormat(SERVER_DATETIME_FORMAT,{numberingSystem:"latn"}));}
return dateTimeCache.get(value);}
return __exports;});;

/* /web/static/src/core/l10n/localization.js */
odoo.define('@web/core/l10n/localization',async function(require){'use strict';let __exports={};const notReadyError=new Error("Localization parameters not ready yet. Maybe add 'localization' to your dependencies?");const localization=__exports.localization={dateFormat:notReadyError,dateTimeFormat:notReadyError,timeFormat:notReadyError,decimalPoint:notReadyError,direction:notReadyError,grouping:notReadyError,multiLang:notReadyError,thousandsSep:notReadyError,weekStart:notReadyError,};return __exports;});;

/* /web/static/src/core/l10n/localization_service.js */
odoo.define('@web/core/l10n/localization_service',async function(require){'use strict';let __exports={};const{session}=require("@web/session");const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{strftimeToLuxonFormat}=require("@web/core/l10n/dates");const{localization}=require("@web/core/l10n/localization");const{translatedTerms,_t}=require("@web/core/l10n/translation");const{Settings}=luxon;const NUMBERING_SYSTEMS=[[/^ar-(sa|sy|001)$/i,"arab"],[/^bn/i,"beng"],[/^bo/i,"tibt"],[/^pa-in/i,"guru"],[/^ta/i,"tamldec"],[/.*/i,"latn"],];const localizationService=__exports.localizationService={dependencies:["user"],start:async(env,{user})=>{const cacheHashes=session.cache_hashes||{};const translationsHash=cacheHashes.translations||new Date().getTime().toString();const lang=user.lang||null;const translationURL=session.translationURL||"/web/webclient/translations";let url=`${translationURL}/${translationsHash}`;if(lang){url+=`?lang=${lang}`;}
const response=await browser.fetch(url);if(!response.ok){throw new Error("Error while fetching translations");}
const{lang_parameters:userLocalization,modules:modules,multi_lang:multiLang,}=await response.json();const terms={};for(const addon of Object.keys(modules)){for(const message of modules[addon].messages){terms[message.id]=message.string;}}
Object.setPrototypeOf(translatedTerms,terms);env._t=_t;if(lang){const locale=lang==="sr@latin"?"sr-Latn-RS":lang.replace(/_/g,"-");Settings.defaultLocale=locale;for(const[re,numberingSystem]of NUMBERING_SYSTEMS){if(re.test(locale)){Settings.defaultNumberingSystem=numberingSystem;break;}}}
const dateFormat=strftimeToLuxonFormat(userLocalization.date_format);const timeFormat=strftimeToLuxonFormat(userLocalization.time_format);const dateTimeFormat=`${dateFormat} ${timeFormat}`;const grouping=JSON.parse(userLocalization.grouping);Object.assign(localization,{dateFormat,timeFormat,dateTimeFormat,decimalPoint:userLocalization.decimal_point,direction:userLocalization.direction,grouping,multiLang,thousandsSep:userLocalization.thousands_sep,weekStart:userLocalization.week_start,});},};registry.category("services").add("localization",localizationService);return __exports;});;

/* /web/static/src/core/l10n/translation.js */
odoo.define('@web/core/l10n/translation',async function(require){'use strict';let __exports={};const translatedTerms=__exports.translatedTerms={};__exports._t=_t;function _t(term){return translatedTerms[term]||term;}
class LazyTranslatedString extends String{valueOf(){const str=super.valueOf();return _t(str);}
toString(){return this.valueOf();}}
__exports._lt=_lt;function _lt(term){return new LazyTranslatedString(term);}
_lt("less than a minute ago");_lt("about a minute ago");_lt("%d minutes ago");_lt("about an hour ago");_lt("%d hours ago");_lt("a day ago");_lt("%d days ago");_lt("about a month ago");_lt("%d months ago");_lt("about a year ago");_lt("%d years ago");__exports.loadLanguages=loadLanguages;async function loadLanguages(orm){if(!loadLanguages.installedLanguages){loadLanguages.installedLanguages=await orm.call("res.lang","get_installed");}
return loadLanguages.installedLanguages;}
return __exports;});;

/* /web/static/src/core/macro.js */
odoo.define('@web/core/macro',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{isVisible}=require("@web/core/utils/ui");const ACTION_HELPERS=__exports.ACTION_HELPERS={click(el,_step){el.dispatchEvent(new MouseEvent("mouseover"));el.dispatchEvent(new MouseEvent("mouseenter"));el.dispatchEvent(new MouseEvent("mousedown"));el.dispatchEvent(new MouseEvent("mouseup"));el.click();el.dispatchEvent(new MouseEvent("mouseout"));el.dispatchEvent(new MouseEvent("mouseleave"));},text(el,step){this.click(el,step);el.value=step.value;el.dispatchEvent(new InputEvent("input",{bubbles:true}));el.dispatchEvent(new InputEvent("change",{bubbles:true}));},};class TimeoutError extends Error{}
class Macro{constructor(descr){this.name=descr.name||"anonymous";this.timeoutDuration=descr.timeout||0;this.timeout=null;this.currentIndex=0;this.interval="interval"in descr?Math.max(16,descr.interval):500;this.isComplete=false;this.steps=descr.steps;this.onStep=descr.onStep||(()=>{});this.onError=descr.onError;this.onTimeout=descr.onTimeout;this.setTimer();}
advance(){if(this.isComplete){return;}
const step=this.steps[this.currentIndex];const trigger=step.trigger;if(trigger){let el=null;if(typeof trigger==="function"){const result=this.safeCall(trigger);if(result instanceof HTMLElement){el=result;}}
if(typeof trigger==="string"){el=document.querySelector(trigger);}
if(el&&isVisible(el)){this.advanceStep(el,step);}}else{this.advanceStep(null,step);}}
advanceStep(el,step){this.safeCall(this.onStep,el,step);const action=step.action;if(action in ACTION_HELPERS){ACTION_HELPERS[action](el,step);}else if(typeof action==="function"){this.safeCall(action,el);}
this.currentIndex++;if(this.currentIndex===this.steps.length){this.isComplete=true;browser.clearTimeout(this.timeout);}else{this.setTimer();this.advance();}}
safeCall(fn,...args){if(this.isComplete){return;}
try{return fn(...args);}catch(e){this.handleError(e);}}
setTimer(){if(this.timeoutDuration){browser.clearTimeout(this.timeout);this.timeout=browser.setTimeout(()=>{if(this.onTimeout){const index=this.currentIndex;const step=this.steps[index];this.safeCall(this.onTimeout,step,index);}else{const error=new TimeoutError("Step timeout");this.handleError(error);}},this.timeoutDuration);}}
handleError(error){this.isComplete=true;browser.clearTimeout(this.timeout);if(this.onError){const index=this.currentIndex;const step=this.steps[index];this.onError(error,step,index);}else{console.error(error);}}}
const MacroEngine=__exports.MacroEngine=class MacroEngine{constructor(target=document.body){this.isRunning=false;this.timeout=null;this.target=target;this.interval=Infinity;this.macros=new Set();this.observer=new MutationObserver(this.delayedCheck.bind(this));}
async activate(descr){await Promise.resolve();const macro=new Macro(descr);this.interval=Math.min(this.interval,macro.interval);this.macros.add(macro);this.start();}
start(){if(!this.isRunning){this.isRunning=true;this.observer.observe(this.target,{attributes:true,childList:true,subtree:true,characterData:true,});}
this.delayedCheck();}
stop(){if(this.isRunning){this.isRunning=false;browser.clearTimeout(this.timeout);this.timeout=null;this.observer.disconnect();}}
delayedCheck(){if(this.timeout){browser.clearTimeout(this.timeout);}
this.timeout=browser.setTimeout(this.advanceMacros.bind(this),this.interval);}
advanceMacros(){const toDelete=[];for(const macro of this.macros){macro.advance();if(macro.isComplete){toDelete.push(macro);}}
if(toDelete.length){for(const macro of toDelete){this.macros.delete(macro);}
this.interval=Infinity;for(const macro of this.macros){this.interval=Math.min(this.interval,macro.interval);}}
if(this.macros.size===0){this.stop();}}}
return __exports;});;

/* /web/static/src/core/main_components_container.js */
odoo.define('@web/core/main_components_container',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ErrorHandler}=require("@web/core/utils/components");const{useBus}=require("@web/core/utils/hooks");const{Component,xml}=require("@odoo/owl");const MainComponentsContainer=__exports.MainComponentsContainer=class MainComponentsContainer extends Component{setup(){const mainComponents=registry.category("main_components");this.Components=mainComponents.getEntries();useBus(mainComponents,"UPDATE",()=>{this.Components=mainComponents.getEntries();this.render();});}
handleComponentError(error,C){this.Components.splice(this.Components.indexOf(C),1);this.render();Promise.resolve().then(()=>{throw error;});}}
MainComponentsContainer.template=xml`
<div class="o-main-components-container">
    <t t-foreach="Components" t-as="C" t-key="C[0]">
        <ErrorHandler onError="error => this.handleComponentError(error, C)">
            <t t-component="C[1].Component" t-props="C[1].props"/>
        </ErrorHandler>
    </t>
</div>
`;MainComponentsContainer.components={ErrorHandler};return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_hook.js */
odoo.define('@web/core/model_field_selector/model_field_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");__exports.useModelField=useModelField;function useModelField(){const view=useService("view");const loadModelFields=(resModel)=>{return view.loadFields(resModel,{attributes:["store","searchable","type","string","relation","selection","related",],});};const loadChain=async(resModel,fieldName)=>{const fieldNameChain=fieldName.length?fieldName.split("."):[];let currentNode={resModel,field:null,};const chain=[currentNode];for(const fieldName of fieldNameChain){const fieldsInfo=await loadModelFields(currentNode.resModel);Object.assign(currentNode,{field:{...fieldsInfo[fieldName],name:fieldName},});if(fieldsInfo[fieldName].relation){currentNode={resModel:fieldsInfo[fieldName].relation,field:null,};chain.push(currentNode);}}
return chain;};return{loadModelFields,loadChain,};}
return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_selector.js */
odoo.define('@web/core/model_field_selector/model_field_selector',async function(require){'use strict';let __exports={};const{useModelField}=require("@web/core/model_field_selector/model_field_hook");const{useUniquePopover}=require("@web/core/model_field_selector/unique_popover_hook");const{ModelFieldSelectorPopover}=require("@web/core/model_field_selector/model_field_selector_popover");const{Component,onWillStart,onWillUpdateProps}=require("@odoo/owl");const ModelFieldSelector=__exports.ModelFieldSelector=class ModelFieldSelector extends Component{setup(){this.popover=useUniquePopover();this.modelField=useModelField();this.chain=[];onWillStart(async()=>{this.chain=await this.loadChain(this.props.resModel,this.props.fieldName);});onWillUpdateProps(async(nextProps)=>{this.chain=await this.loadChain(nextProps.resModel,nextProps.fieldName);});}
get fieldNameChain(){return this.getFieldNameChain(this.props.fieldName);}
getFieldNameChain(fieldName){return fieldName.length?fieldName.split("."):[];}
async loadChain(resModel,fieldName){if("01".includes(fieldName)){return[{resModel,field:{string:fieldName}}];}
const fieldNameChain=this.getFieldNameChain(fieldName);let currentNode={resModel,field:null,};const chain=[currentNode];for(const fieldName of fieldNameChain){const fieldsInfo=await this.modelField.loadModelFields(currentNode.resModel);Object.assign(currentNode,{field:{...fieldsInfo[fieldName],name:fieldName},});if(fieldsInfo[fieldName].relation){currentNode={resModel:fieldsInfo[fieldName].relation,field:null,};chain.push(currentNode);}}
return chain;}
update(chain){this.props.update(chain.join("."));}
onFieldSelectorClick(ev){if(this.props.readonly){return;}
this.popover.add(ev.currentTarget,this.constructor.components.Popover,{chain:this.chain,update:this.update.bind(this),showSearchInput:this.props.showSearchInput,isDebugMode:this.props.isDebugMode,loadChain:this.loadChain.bind(this),filter:this.props.filter,followRelations:this.props.followRelations,},{closeOnClickAway:true,popoverClass:"o_popover_field_selector",});}}
Object.assign(ModelFieldSelector,{template:"web._ModelFieldSelector",components:{Popover:ModelFieldSelectorPopover,},props:{fieldName:String,resModel:String,readonly:{type:Boolean,optional:true},showSearchInput:{type:Boolean,optional:true},isDebugMode:{type:Boolean,optional:true},update:{type:Function,optional:true},filter:{type:Function,optional:true},followRelations:{type:Boolean,optional:true},},defaultProps:{readonly:true,isDebugMode:false,showSearchInput:true,update:()=>{},filter:()=>true,followRelations:true,},});return __exports;});;

/* /web/static/src/core/model_field_selector/model_field_selector_popover.js */
odoo.define('@web/core/model_field_selector/model_field_selector_popover',async function(require){'use strict';let __exports={};const{sortBy}=require("@web/core/utils/arrays");const{useModelField}=require("@web/core/model_field_selector/model_field_hook");const{fuzzyLookup}=require("@web/core/utils/search");const{useAutofocus}=require("@web/core/utils/hooks");const{Component,onWillStart}=require("@odoo/owl");const ModelFieldSelectorPopover=__exports.ModelFieldSelectorPopover=class ModelFieldSelectorPopover extends Component{setup(){this.chain=Array.from(this.props.chain);this.modelField=useModelField();this.unfilteredFields={};this.fields={};this.fieldKeys=[];this.currentActiveFieldId=0;this.searchValue="";this.defaultValue="";this.isDefaultValueVisible=false;this.fullFieldName=this.fieldNameChain.join(".");if(!this.env.isSmall){useAutofocus();useAutofocus({refName:'autofocusDefaultValue',selectAll:true});}
onWillStart(async()=>{await this.loadFields();});}
get currentActiveField(){return this.fieldKeys[this.currentActiveFieldId];}
get currentNode(){return this.chain[this.chain.length-1];}
get currentFieldName(){const nodes=this.chain.filter((node)=>node.field);return nodes.length?nodes[nodes.length-1].field.string:"";}
get fieldNameChain(){return this.chain.filter((node)=>node.field).map((node)=>node.field.name);}
async loadFields(){this.unfilteredFields=await this.modelField.loadModelFields(this.currentNode.resModel);this.fields={...this.unfilteredFields};this.fieldKeys=this.sortedKeys(this.fields);for(let key of this.fieldKeys){const field=this.fields[key];if(!field.searchable||!this.props.filter(field)){delete this.fields[key];}}
this.fieldKeys=this.sortedKeys(this.fields);}
sortedKeys(obj){const keys=Object.keys(obj);return sortBy(keys,(key)=>obj[key].string);}
async update(){const fieldNameChain=this.fieldNameChain;this.fullFieldName=fieldNameChain.join(".");await this.props.update(fieldNameChain);await this.loadFields();this.render();}
async onInputKeydown(ev){switch(ev.key){case"ArrowUp":ev.preventDefault();ev.stopPropagation();if(this.currentActiveFieldId>0){this.currentActiveFieldId--;await this.render();}
break;case"ArrowDown":ev.preventDefault();ev.stopPropagation();if(this.currentActiveFieldId<this.fieldKeys.length-1){this.currentActiveFieldId++;await this.render();}
break;case"ArrowLeft":ev.preventDefault();ev.stopPropagation();this.onPreviousBtnClick();break;case"Escape":ev.preventDefault();ev.stopPropagation();this.props.close();break;case"Enter":case"ArrowRight":ev.preventDefault();ev.stopPropagation();if(this.isDefaultValueVisible){this.selectDefaultValue(true);}else{const field={...this.fields[this.currentActiveField],name:this.currentActiveField}
this.onFieldSelected(field);}
break;}}
onSearch(ev){this.searchValue=ev.target.value;let fieldKeys=this.sortedKeys(this.fields);if(this.searchValue){fieldKeys=fuzzyLookup(this.searchValue,fieldKeys,(key)=>this.fields[key].string);}
this.fieldKeys=fieldKeys;this.render();}
onDefaultValue(ev){this.defaultValue=ev.target.value;this.render();}
onPreviousBtnClick(){this.searchValue="";if(this.currentNode.field===null){this.chain.pop();}
this.currentNode.field=null;this.update();}
onFieldSelected(field){this.searchValue="";this.currentActiveFieldId=0;this.currentNode.field=field;if(field.relation&&this.props.followRelations){this.chain.push({resModel:field.relation,field:null,});this.update();}else if(this.props.needDefaultValue){this.isDefaultValueVisible=true;this.render();this.update();}else{this.update();this.props.close();this.props.validate(this.fieldNameChain,this.defaultValue);}}
selectDefaultValue(acceptDefaultValue){if(!acceptDefaultValue){this.defaultValue="";}
this.props.close();this.update();this.props.validate(this.fieldNameChain,this.defaultValue);}
async onFieldNameChange(ev){this.fullFieldName=ev.target.value.replace(/\s+/g,"");const{resModel}=this.props.chain[0];try{this.chain=await this.props.loadChain(resModel,this.fullFieldName);this.update();}catch(_error){this.chain=[{resModel,field:null}];await this.props.update([]);this.render();}}}
ModelFieldSelectorPopover.defaultProps={validate:()=>{},needDefaultValue:false,isDebugMode:false,followRelations:true,};ModelFieldSelectorPopover.props={chain:Array,update:Function,showSearchInput:Boolean,isDebugMode:{type:Boolean,optional:true},loadChain:Function,filter:Function,close:Function,followRelations:{type:Boolean,optional:true},needDefaultValue:{type:Boolean,optional:true},validate:{type:Function,optional:true},};ModelFieldSelectorPopover.template="web.ModelFieldSelectorPopover";return __exports;});;

/* /web/static/src/core/model_field_selector/unique_popover_hook.js */
odoo.define('@web/core/model_field_selector/unique_popover_hook',async function(require){'use strict';let __exports={};const{usePopover}=require("@web/core/popover/popover_hook");__exports.useUniquePopover=useUniquePopover;function useUniquePopover(){const popover=usePopover();let remove=null;return Object.assign(Object.create(popover),{add(target,component,props,options){if(remove){remove();}
remove=popover.add(target,component,props,options);return()=>{remove();remove=null;};},});}
return __exports;});;

/* /web/static/src/core/model_selector/model_selector.js */
odoo.define('@web/core/model_selector/model_selector',async function(require){'use strict';let __exports={};const{AutoComplete}=require("@web/core/autocomplete/autocomplete");const{useService}=require("@web/core/utils/hooks");const{fuzzyLookup}=require("@web/core/utils/search");const{_t}=require("@web/core/l10n/translation");const{Component,onWillStart}=require("@odoo/owl");const ModelSelector=__exports.ModelSelector=class ModelSelector extends Component{setup(){this.orm=useService("orm");onWillStart(async()=>{if(!this.props.models){this.models=await this._fetchAvailableModels();}else{this.models=await this.orm.call("ir.model","display_name_for",[this.props.models,]);}
this.models=this.models.map((record)=>({label:record.display_name,technical:record.model,classList:{[`o_model_selector_${record.model}`]:1,},}));});}
get placeholder(){return _t("Search a Model...");}
get sources(){return[this.optionsSource];}
get optionsSource(){return{placeholder:_t("Loading..."),options:this.loadOptionsSource.bind(this),};}
onSelect(option){this.props.onModelSelected({label:option.label,technical:option.technical,});}
filterModels(name){if(!name){return this.models.slice(0,8);}
return fuzzyLookup(name,this.models,(model)=>model.technical+model.label).slice(0,8);}
loadOptionsSource(request){const options=this.filterModels(request);if(!options.length){options.push({label:_t("No records"),classList:"o_m2o_no_result",unselectable:true,});}
return options;}
async _fetchAvailableModels(){const result=await this.orm.call("ir.model","get_available_models");return result||[];}}
ModelSelector.template="web.ModelSelector";ModelSelector.components={AutoComplete};ModelSelector.props={onModelSelected:Function,id:{type:String,optional:true},value:{type:String,optional:true},models:{type:Array,optional:true},};return __exports;});;

/* /web/static/src/core/network/download.js */
odoo.define('@web/core/network/download',async function(require){'use strict';let __exports={};const{_lt}=require("@web/core/l10n/translation");const{makeErrorFromResponse,ConnectionLostError}=require("@web/core/network/rpc_service");const{browser}=require("@web/core/browser/browser");const HEX_ESCAPE_REPLACE_REGEXP=/%([0-9A-Fa-f]{2})/g;const NON_LATIN1_REGEXP=/[^\x20-\x7e\xa0-\xff]/g;const QESC_REGEXP=/\\([\u0000-\u007f])/g;const PARAM_REGEXP=/;[\x09\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*=[\x09\x20]*("(?:[\x20!\x23-\x5b\x5d-\x7e\x80-\xff]|\\[\x20-\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*/g;const EXT_VALUE_REGEXP=/^([A-Za-z0-9!#$%&+\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/;const DISPOSITION_TYPE_REGEXP=/^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*(?:$|;)/;function decodefield(str){const match=EXT_VALUE_REGEXP.exec(str);if(!match){throw new TypeError("invalid extended field value");}
const charset=match[1].toLowerCase();const encoded=match[2];switch(charset){case"iso-8859-1":return encoded.replace(HEX_ESCAPE_REPLACE_REGEXP,pdecode).replace(NON_LATIN1_REGEXP,"?");case"utf-8":return decodeURIComponent(encoded);default:throw new TypeError("unsupported charset in extended field");}}
function parse(string){if(!string||typeof string!=="string"){throw new TypeError("argument string is required");}
let match=DISPOSITION_TYPE_REGEXP.exec(string);if(!match){throw new TypeError("invalid type format");}
let index=match[0].length;const type=match[1].toLowerCase();let key;const names=[];const params={};let value;index=PARAM_REGEXP.lastIndex=match[0].substr(-1)===";"?index-1:index;while((match=PARAM_REGEXP.exec(string))){if(match.index!==index){throw new TypeError("invalid parameter format");}
index+=match[0].length;key=match[1].toLowerCase();value=match[2];if(names.indexOf(key)!==-1){throw new TypeError("invalid duplicate parameter");}
names.push(key);if(key.indexOf("*")+1===key.length){key=key.slice(0,-1);value=decodefield(value);params[key]=value;continue;}
if(typeof params[key]==="string"){continue;}
if(value[0]==='"'){value=value.substr(1,value.length-2).replace(QESC_REGEXP,"$1");}
params[key]=value;}
if(index!==-1&&index!==string.length){throw new TypeError("invalid parameter format");}
return new ContentDisposition(type,params);}
function pdecode(str,hex){return String.fromCharCode(parseInt(hex,16));}
function ContentDisposition(type,parameters){this.type=type;this.parameters=parameters;}
function _download(data,filename,mimetype){let self=window,defaultMime="application/octet-stream",mimeType=mimetype||defaultMime,payload=data,url=!filename&&!mimetype&&payload,anchor=document.createElement("a"),toString=function(a){return String(a);},myBlob=self.Blob||self.MozBlob||self.WebKitBlob||toString,fileName=filename||"download",blob,reader;myBlob=myBlob.call?myBlob.bind(self):Blob;if(String(this)==="true"){payload=[payload,mimeType];mimeType=payload[0];payload=payload[1];}
if(url&&url.length<2048){fileName=url.split("/").pop().split("?")[0];anchor.href=url;if(anchor.href.indexOf(url)!==-1){let ajax=new XMLHttpRequest();ajax.open("GET",url,true);ajax.responseType="blob";ajax.onload=function(e){_download(e.target.response,fileName,defaultMime);};setTimeout(()=>{ajax.send();},0);return ajax;}}
if(/^data:[\w+\-]+\/[\w+\-]+[,;]/.test(payload)){if(payload.length>1024*1024*1.999&&myBlob!==toString){payload=dataUrlToBlob(payload);mimeType=payload.type||defaultMime;}else{return navigator.msSaveBlob?navigator.msSaveBlob(dataUrlToBlob(payload),fileName):saver(payload);}}
blob=payload instanceof myBlob?payload:new myBlob([payload],{type:mimeType});function dataUrlToBlob(strUrl){let parts=strUrl.split(/[:;,]/),type=parts[1],decoder=parts[2]==="base64"?atob:decodeURIComponent,binData=decoder(parts.pop()),mx=binData.length,i=0,uiArr=new Uint8Array(mx);for(i;i<mx;++i){uiArr[i]=binData.charCodeAt(i);}
return new myBlob([uiArr],{type});}
function saver(url,winMode){if("download"in anchor){anchor.href=url;anchor.setAttribute("download",fileName);anchor.className="download-js-link";anchor.innerText=_lt("downloading...");anchor.style.display="none";document.body.appendChild(anchor);setTimeout(()=>{anchor.click();document.body.removeChild(anchor);if(winMode===true){setTimeout(()=>{self.URL.revokeObjectURL(anchor.href);},250);}},66);return true;}
if(/(Version)\/(\d+)\.(\d+)(?:\.(\d+))?.*Safari\//.test(navigator.userAgent)){url=url.replace(/^data:([\w\/\-+]+)/,defaultMime);if(!window.open(url)){if(confirm("Displaying New Document\n\nUse Save As... to download, then click back to return to this page.")){location.href=url;}}
return true;}
let f=document.createElement("iframe");document.body.appendChild(f);if(!winMode){url=`data:${url.replace(/^data:([\w\/\-+]+)/, defaultMime)}`;}
f.src=url;setTimeout(()=>{document.body.removeChild(f);},333);}
if(navigator.msSaveBlob){return navigator.msSaveBlob(blob,fileName);}
if(self.URL){saver(self.URL.createObjectURL(blob),true);}else{if(typeof blob==="string"||blob.constructor===toString){try{return saver(`data:${mimeType};base64,${self.btoa(blob)}`);}catch(_y){return saver(`data:${mimeType},${encodeURIComponent(blob)}`);}}
reader=new FileReader();reader.onload=function(){saver(this.result);};reader.readAsDataURL(blob);}
return true;}
__exports.downloadFile=downloadFile;function downloadFile(data,filename,mimetype){return downloadFile._download(data,filename,mimetype)}
downloadFile._download=_download;__exports.download=download;function download(options){return download._download(options);}
download._download=(options)=>{return new Promise((resolve,reject)=>{const xhr=new browser.XMLHttpRequest();let data;if(Object.prototype.hasOwnProperty.call(options,"form")){xhr.open(options.form.method,options.form.action);data=new FormData(options.form);}else{xhr.open("POST",options.url);data=new FormData();Object.entries(options.data).forEach((entry)=>{const[key,value]=entry;data.append(key,value);});}
data.append("token","dummy-because-api-expects-one");if(odoo.csrf_token){data.append("csrf_token",odoo.csrf_token);}
xhr.responseType="blob";xhr.onload=()=>{const mimetype=xhr.response.type;const header=(xhr.getResponseHeader("Content-Disposition")||"").replace(/;$/,"");const filename=header?parse(header).parameters.filename:null;if(xhr.status===200&&(mimetype!=="text/html"||filename)){_download(xhr.response,filename,mimetype);return resolve(filename);}else if(xhr.status===502){reject(new ConnectionLostError());}else{const decoder=new FileReader();decoder.onload=()=>{const contents=decoder.result;const doc=new DOMParser().parseFromString(contents,"text/html");const nodes=doc.body.children.length===0?doc.body.childNodes:doc.body.children;let error;try{const node=nodes[1]||nodes[0];error=JSON.parse(node.textContent);}catch(_e){error={message:"Arbitrary Uncaught Python Exception",data:{debug:`${xhr.status}`+`\n`+`${nodes.length > 0 ? nodes[0].textContent : ""}
                                    ${nodes.length > 1 ? nodes[1].textContent : ""}`,},};}
error=makeErrorFromResponse(error);reject(error);};decoder.readAsText(xhr.response);}};xhr.onerror=()=>{reject(new ConnectionLostError());};xhr.send(data);});};return __exports;});;

/* /web/static/src/core/network/http_service.js */
odoo.define('@web/core/network/http_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");function checkResponseStatus(response){if(response.status===502){throw new Error("Failed to fetch");}}
const httpService=__exports.httpService={start(){return{async get(route,readMethod="json"){const response=await fetch(route,{method:"GET"});checkResponseStatus(response);return response[readMethod]();},async post(route,params={},readMethod="json"){const formData=new FormData();for(const key in params){const value=params[key];if(Array.isArray(value)&&value.length){for(const val of value){formData.append(key,val);}}else{formData.append(key,value);}}
const info={body:formData,method:"POST",};const response=await fetch(route,info);checkResponseStatus(response);return response[readMethod]();},};},};registry.category("services").add("http",httpService);return __exports;});;

/* /web/static/src/core/network/rpc_service.js */
odoo.define('@web/core/network/rpc_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const RPCError=__exports.RPCError=class RPCError extends Error{constructor(){super(...arguments);this.name="RPC_ERROR";this.type="server";this.code=null;this.data=null;this.exceptionName=null;this.subType=null;}}
const ConnectionLostError=__exports.ConnectionLostError=class ConnectionLostError extends Error{}
const ConnectionAbortedError=__exports.ConnectionAbortedError=class ConnectionAbortedError extends Error{}
const HTTPError=__exports.HTTPError=class HTTPError extends Error{}
__exports.makeErrorFromResponse=makeErrorFromResponse;function makeErrorFromResponse(reponse){const{code,data:errorData,message,type:subType}=reponse;const error=new RPCError();error.exceptionName=errorData.name;error.subType=subType;error.data=errorData;error.message=message;error.code=code;return error;}
__exports.jsonrpc=jsonrpc;function jsonrpc(env,rpcId,url,params,settings={}){const bus=env.bus;const XHR=browser.XMLHttpRequest;const data={id:rpcId,jsonrpc:"2.0",method:"call",params:params,};const request=settings.xhr||new XHR();let rejectFn;const promise=new Promise((resolve,reject)=>{rejectFn=reject;if(!settings.silent){bus.trigger("RPC:REQUEST",data.id);}
request.addEventListener("load",()=>{if(request.status===502){if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
reject(new ConnectionLostError());return;}
let params;try{params=JSON.parse(request.response);}catch(_){if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
return reject(new ConnectionLostError());}
const{error:responseError,result:responseResult}=params;if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
if(!responseError){return resolve(responseResult);}
const error=makeErrorFromResponse(responseError);reject(error);});request.addEventListener("error",()=>{if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
reject(new ConnectionLostError());});request.open("POST",url);request.setRequestHeader("Content-Type","application/json");request.send(JSON.stringify(data));});promise.abort=function(rejectError=true){if(request.abort){request.abort();}
if(!settings.silent){bus.trigger("RPC:RESPONSE",data.id);}
if(rejectError){rejectFn(new ConnectionAbortedError("XmlHttpRequestError abort"));}};return promise;}
const rpcService=__exports.rpcService={async:true,start(env){let rpcId=0;return function rpc(route,params={},settings){return jsonrpc(env,rpcId++,route,params,settings);};},};registry.category("services").add("rpc",rpcService);return __exports;});;

/* /web/static/src/core/notebook/notebook.js */
odoo.define('@web/core/notebook/notebook',async function(require){'use strict';let __exports={};const{scrollTo}=require("@web/core/utils/scrolling");const{Component,onWillDestroy,onWillUpdateProps,useEffect,useRef,useState}=require("@odoo/owl");const Notebook=__exports.Notebook=class Notebook extends Component{setup(){this.activePane=useRef("activePane");this.anchorTarget=null;this.pages=this.computePages(this.props);this.state=useState({currentPage:null});this.state.currentPage=this.computeActivePage(this.props.defaultPage,true);const onAnchorClicked=this.onAnchorClicked.bind(this);this.env.bus.addEventListener("SCROLLER:ANCHOR_LINK_CLICKED",onAnchorClicked);useEffect(()=>{this.props.onPageUpdate(this.state.currentPage);if(this.anchorTarget){const matchingEl=this.activePane.el.querySelector(`#${this.anchorTarget}`);scrollTo(matchingEl,{isAnchor:true});this.anchorTarget=null;}},()=>[this.state.currentPage]);onWillUpdateProps((nextProps)=>{const activateDefault=this.props.defaultPage!==nextProps.defaultPage||!this.defaultVisible;this.pages=this.computePages(nextProps);this.state.currentPage=this.computeActivePage(nextProps.defaultPage,activateDefault);});onWillDestroy(()=>{this.env.bus.removeEventListener("SCROLLER:ANCHOR_LINK_CLICKED",onAnchorClicked);});}
get navItems(){return this.pages.filter((e)=>e[1].isVisible);}
get page(){const page=this.pages.find((e)=>e[0]===this.state.currentPage)[1];return page.Component&&page;}
onAnchorClicked(ev){if(!this.props.anchors){return;}
const id=ev.detail.detail.id.substring(1);if(this.props.anchors[id]){if(this.state.currentPage!==this.props.anchors[id].target){ev.preventDefault();ev.detail.detail.originalEv.preventDefault();this.anchorTarget=id;this.state.currentPage=this.props.anchors[id].target;}}}
activatePage(pageIndex){this.state.currentPage=pageIndex;}
computePages(props){if(!props.slots&&!props.pages){return[];}
if(props.pages){for(const page of props.pages){page.isVisible=true;}}
const pages=[];const pagesWithIndex=[];for(const[k,v]of Object.entries({...props.slots,...props.pages})){const id=v.id||k;if(v.index){pagesWithIndex.push([id,v]);}else{pages.push([id,v]);}}
for(const page of pagesWithIndex){pages.splice(page[1].index,0,page);}
return pages;}
computeActivePage(defaultPage,activateDefault){if(!this.pages.length){return null;}
const pages=this.pages.filter((e)=>e[1].isVisible).map((e)=>e[0]);if(defaultPage){if(!pages.includes(defaultPage)){this.defaultVisible=false;}else{this.defaultVisible=true;if(activateDefault){return defaultPage;}}}
const current=this.state.currentPage;if(!current||(current&&!pages.includes(current))){return pages[0];}
return current;}}
Notebook.template="web.Notebook";Notebook.defaultProps={className:"",orientation:"horizontal",onPageUpdate:()=>{},};Notebook.props={slots:{type:Object,optional:true},pages:{type:Object,optional:true},class:{optional:true},className:{type:String,optional:true},anchors:{type:Object,optional:true},defaultPage:{type:String,optional:true},orientation:{type:String,optional:true},onPageUpdate:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/core/notifications/notification.js */
odoo.define('@web/core/notifications/notification',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const Notification=__exports.Notification=class Notification extends Component{}
Notification.template="web.NotificationWowl";Notification.props={message:{validate:(m)=>{return(typeof m==="string"||(typeof m==="object"&&typeof m.toString==="function"));},},title:{type:[String,Boolean,{toString:Function}],optional:true},type:{type:String,optional:true,validate:(t)=>["warning","danger","success","info"].includes(t),},className:{type:String,optional:true},buttons:{type:Array,element:{type:Object,shape:{name:{type:String},icon:{type:String,optional:true},primary:{type:Boolean,optional:true},onClick:Function,},},optional:true,},close:{type:Function},};Notification.defaultProps={buttons:[],className:"",type:"warning",};return __exports;});;

/* /web/static/src/core/notifications/notification_container.js */
odoo.define('@web/core/notifications/notification_container',async function(require){'use strict';let __exports={};const{Notification}=require("@web/core/notifications/notification");const{Transition}=require("@web/core/transition");const{Component,xml,useState}=require("@odoo/owl");const NotificationContainer=__exports.NotificationContainer=class NotificationContainer extends Component{setup(){this.notifications=useState(this.props.notifications);}}
NotificationContainer.template=xml`
    <div class="o_notification_manager">
        <t t-foreach="notifications" t-as="notification" t-key="notification">
            <Transition leaveDuration="0" name="'o_notification_fade'" t-slot-scope="transition">
                <Notification t-props="notification_value.props" className="(notification_value.props.className || '') + ' ' + transition.className"/>
            </Transition>
        </t>
    </div>`;NotificationContainer.components={Notification,Transition};return __exports;});;

/* /web/static/src/core/notifications/notification_service.js */
odoo.define('@web/core/notifications/notification_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{NotificationContainer}=require("@web/core/notifications/notification_container");const{reactive}=require("@odoo/owl");const AUTOCLOSE_DELAY=4000;const notificationService=__exports.notificationService={start(){let notifId=0;const notifications=reactive({});registry.category("main_components").add("NotificationContainer",{Component:NotificationContainer,props:{notifications},});function add(message,options={}){const id=++notifId;const closeFn=()=>close(id);const props=Object.assign({},options,{message,close:closeFn});const sticky=props.sticky;delete props.sticky;delete props.onClose;const notification={id,props,onClose:options.onClose,};notifications[id]=notification;if(!sticky){browser.setTimeout(closeFn,AUTOCLOSE_DELAY);}
return closeFn;}
function close(id){if(notifications[id]){const notification=notifications[id];if(notification.onClose){notification.onClose();}
delete notifications[id];}}
return{add};},};registry.category("services").add("notification",notificationService);return __exports;});;

/* /web/static/src/core/orm_service.js */
odoo.define('@web/core/orm_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const x2ManyCommands=__exports.x2ManyCommands={CREATE:0,create(virtualID,values){delete values.id;return[x2ManyCommands.CREATE,virtualID||false,values];},UPDATE:1,update(id,values){delete values.id;return[x2ManyCommands.UPDATE,id,values];},DELETE:2,delete(id){return[x2ManyCommands.DELETE,id,false];},FORGET:3,forget(id){return[x2ManyCommands.FORGET,id,false];},LINK_TO:4,linkTo(id){return[x2ManyCommands.LINK_TO,id,false];},DELETE_ALL:5,deleteAll(){return[x2ManyCommands.DELETE_ALL,false,false];},REPLACE_WITH:6,replaceWith(ids){return[x2ManyCommands.REPLACE_WITH,false,ids];},};function validateModel(value){if(typeof value!=="string"||value.length===0){throw new Error(`Invalid model name: ${value}`);}}
function validatePrimitiveList(name,type,value){if(!Array.isArray(value)||value.some((val)=>typeof val!==type)){throw new Error(`Invalid ${name} list: ${value}`);}}
function validateObject(name,obj){if(typeof obj!=="object"||obj===null||Array.isArray(obj)){throw new Error(`${name} should be an object`);}}
function validateArray(name,array){if(!Array.isArray(array)){throw new Error(`${name} should be an array`);}}
const ORM=__exports.ORM=class ORM{constructor(rpc,user){this.rpc=rpc;this.user=user;this._silent=false;}
get silent(){return Object.assign(Object.create(this),{_silent:true});}
call(model,method,args=[],kwargs={}){validateModel(model);const url=`/web/dataset/call_kw/${model}/${method}`;const fullContext=Object.assign({},this.user.context,kwargs.context||{});const fullKwargs=Object.assign({},kwargs,{context:fullContext});const params={model,method,args,kwargs:fullKwargs,};return this.rpc(url,params,{silent:this._silent});}
create(model,records,kwargs={}){validateArray("records",records);for(const record of records){validateObject("record",record);}
return this.call(model,"create",records,kwargs);}
nameGet(model,ids,kwargs={}){validatePrimitiveList("ids","number",ids);if(!ids.length){return Promise.resolve([]);}
return this.call(model,"name_get",[ids],kwargs);}
read(model,ids,fields,kwargs={}){validatePrimitiveList("ids","number",ids);if(fields){validatePrimitiveList("fields","string",fields);}
if(!ids.length){return Promise.resolve([]);}
return this.call(model,"read",[ids,fields],kwargs);}
readGroup(model,domain,fields,groupby,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);validatePrimitiveList("groupby","string",groupby);return this.call(model,"read_group",[],{...kwargs,domain,fields,groupby});}
search(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"search",[domain],kwargs);}
searchRead(model,domain,fields,kwargs={}){validateArray("domain",domain);if(fields){validatePrimitiveList("fields","string",fields);}
return this.call(model,"search_read",[],{...kwargs,domain,fields});}
searchCount(model,domain,kwargs={}){validateArray("domain",domain);return this.call(model,"search_count",[domain],kwargs);}
unlink(model,ids,kwargs={}){validatePrimitiveList("ids","number",ids);if(!ids.length){return true;}
return this.call(model,"unlink",[ids],kwargs);}
webReadGroup(model,domain,fields,groupby,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);validatePrimitiveList("groupby","string",groupby);return this.call(model,"web_read_group",[],{...kwargs,groupby,domain,fields,});}
webSearchRead(model,domain,fields,kwargs={}){validateArray("domain",domain);validatePrimitiveList("fields","string",fields);return this.call(model,"web_search_read",[],{...kwargs,domain,fields});}
write(model,ids,data,kwargs={}){validatePrimitiveList("ids","number",ids);validateObject("data",data);return this.call(model,"write",[ids,data],kwargs);}}
const ormService=__exports.ormService={dependencies:["rpc","user"],async:["call","create","name_get","read","readGroup","search","searchRead","unlink","web_search_read","write",],start(env,{rpc,user}){return new ORM(rpc,user);},};registry.category("services").add("orm",ormService);return __exports;});;

/* /web/static/src/core/pager/pager.js */
odoo.define('@web/core/pager/pager',async function(require){'use strict';let __exports={};const{useAutofocus}=require("@web/core/utils/hooks");const{clamp}=require("@web/core/utils/numbers");const{Component,useExternalListener,useState}=require("@odoo/owl");const Pager=__exports.Pager=class Pager extends Component{setup(){this.state=useState({isEditing:false,isDisabled:false,});this.inputRef=useAutofocus();useExternalListener(document,"mousedown",this.onClickAway,{capture:true});}
get minimum(){return this.props.offset+1;}
get maximum(){return Math.min(this.props.offset+this.props.limit,this.props.total);}
get value(){const parts=[this.minimum];if(this.props.limit>1){parts.push(this.maximum);}
return parts.join("-");}
get isSinglePage(){return!this.props.updateTotal&&this.minimum===1&&this.maximum===this.props.total;}
async navigate(direction){let minimum=this.props.offset+this.props.limit*direction;let total=this.props.total;if(this.props.updateTotal&&minimum<0){total=await this.props.updateTotal();}
if(minimum>=total){if(!this.props.updateTotal){minimum=0;}}else if(minimum<0&&this.props.limit===1){minimum=total-1;}else if(minimum<0&&this.props.limit>1){minimum=total-(total%this.props.limit||this.props.limit);}
this.update(minimum,this.props.limit,true);}
async parse(value){let[minimum,maximum]=value.trim().split(/\s*[-\s,;]\s*/);minimum=parseInt(minimum,10);maximum=maximum?parseInt(maximum,10):minimum;if(this.props.updateTotal){return{minimum:minimum-1,maximum};}
return{minimum:clamp(minimum,1,this.props.total)-1,maximum:clamp(maximum,1,this.props.total),};}
async setValue(value){const{minimum,maximum}=await this.parse(value);if(!isNaN(minimum)&&!isNaN(maximum)&&minimum<maximum){this.update(minimum,maximum-minimum);}}
async update(offset,limit,hasNavigated){this.state.isDisabled=true;await this.props.onUpdate({offset,limit},hasNavigated);this.state.isDisabled=false;this.state.isEditing=false;}
async updateTotal(){if(!this.state.isDisabled){this.state.isDisabled=true;await this.props.updateTotal();this.state.isDisabled=false;}}
onClickAway(ev){if(ev.target!==this.inputRef.el){this.state.isEditing=false;}}
onInputBlur(){this.state.isEditing=false;}
onInputChange(ev){this.setValue(ev.target.value);if(!this.state.isDisabled){ev.preventDefault();}}
onInputKeydown(ev){switch(ev.key){case"Enter":ev.preventDefault();ev.stopPropagation();this.setValue(ev.currentTarget.value);break;case"Escape":ev.preventDefault();ev.stopPropagation();this.state.isEditing=false;break;}}
onValueClick(){if(this.props.isEditable&&!this.state.isEditing&&!this.state.isDisabled){if(this.inputRef.el){this.inputRef.el.focus();}
this.state.isEditing=true;}}}
Pager.template="web.Pager";Pager.defaultProps={isEditable:true,withAccessKey:true,};Pager.props={offset:Number,limit:Number,total:Number,onUpdate:Function,isEditable:{type:Boolean,optional:true},withAccessKey:{type:Boolean,optional:true},updateTotal:{type:Function,optional:true},};return __exports;});;

/* /web/static/src/core/popover/popover.js */
odoo.define('@web/core/popover/popover',async function(require){'use strict';let __exports={};const{usePosition}=require("@web/core/position_hook");const{Component}=require("@odoo/owl");const Popover=__exports.Popover=class Popover extends Component{setup(){usePosition(this.props.target,{onPositioned:this.props.onPositioned||this.onPositioned.bind(this),position:this.props.position,});}
onPositioned(el,{direction,variant}){const position=`${direction[0]}${variant[0]}`;const directionMap={top:"top",bottom:"bottom",left:"start",right:"end",};el.classList=["o_popover popover mw-100 shadow-sm",`bs-popover-${directionMap[direction]}`,`o-popover-${direction}`,`o-popover--${position}`,].join(" ");if(this.props.popoverClass){el.classList.add(...this.props.popoverClass.split(" "));}
const arrowEl=el.firstElementChild;arrowEl.className="popover-arrow";switch(position){case"tm":case"bm":arrowEl.classList.add("start-0","end-0","mx-auto");break;case"lm":case"rm":arrowEl.classList.add("top-0","bottom-0","my-auto");break;case"ts":case"bs":arrowEl.classList.add("end-auto");break;case"te":case"be":arrowEl.classList.add("start-auto");break;case"ls":case"rs":arrowEl.classList.add("bottom-auto");break;case"le":case"re":arrowEl.classList.add("top-auto");break;}}}
Popover.template="web.PopoverWowl";Popover.defaultProps={position:"bottom",};Popover.props={id:{optional:true,type:Number,},popoverClass:{optional:true,type:String,},position:{type:String,validate:(p)=>["top","bottom","left","right"].includes(p),optional:true,},onPositioned:{type:Function,optional:true,},target:HTMLElement,slots:{type:Object,optional:true,shape:{default:{optional:true},},},};return __exports;});;

/* /web/static/src/core/popover/popover_container.js */
odoo.define('@web/core/popover/popover_container',async function(require){'use strict';let __exports={};const{Popover}=require("@web/core/popover/popover");const{Component,onWillDestroy,useExternalListener,useState,xml}=require("@odoo/owl");class PopoverController extends Component{setup(){this.state=useState({displayed:false});if(this.target.isConnected){useExternalListener(window,"click",this.onClickAway,{capture:true});const targetObserver=new MutationObserver(this.onTargetMutate.bind(this));targetObserver.observe(this.target.parentElement,{childList:true});onWillDestroy(()=>{targetObserver.disconnect();});}else{this.onTargetMutate();}}
get popoverProps(){return{id:this.props.id,target:this.target,position:this.props.position,popoverClass:this.props.popoverClass,onPositioned:this.props.onPositioned,};}
get popoverComponentProps(){return{close:this.props.close,...this.props.props,};}
get target(){if(typeof this.props.target==="string"){return document.querySelector(this.props.target);}else{return this.props.target;}}
onClickAway(ev){if(this.target.contains(ev.target)||ev.target.closest(`.o_popover[popover-id="${this.props.id}"]`)){return;}
if(this.props.preventClose&&this.props.preventClose(ev)){return;}
if(this.props.closeOnClickAway){this.props.close();}}
onTargetMutate(){const target=this.target;if(!target||!target.parentElement){this.props.close();}}}
PopoverController.components={Popover};PopoverController.defaultProps={alwaysDisplayed:false,closeOnClickAway:true,};PopoverController.template=xml`
    <Popover t-props="popoverProps">
        <t t-component="props.Component" t-props="popoverComponentProps"/>
    </Popover>
`;const PopoverContainer=__exports.PopoverContainer=class PopoverContainer extends Component{setup(){this.props.bus.addEventListener("UPDATE",this.render.bind(this));}}
PopoverContainer.components={PopoverController};PopoverContainer.template=xml`
    <div class="o_popover_container">
        <t t-foreach="Object.values(props.popovers)" t-as="popover" t-key="popover.id">
            <PopoverController t-props="popover" />
        </t>
    </div>
`;return __exports;});;

/* /web/static/src/core/popover/popover_hook.js */
odoo.define('@web/core/popover/popover_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{onWillUnmount,status,useComponent}=require("@odoo/owl");__exports.usePopover=usePopover;function usePopover(){const removeFns=new Set();const service=useService("popover");const component=useComponent();onWillUnmount(function(){for(const removeFn of removeFns){removeFn();}
removeFns.clear();});return{add(target,Component,props,options={}){const newOptions=Object.create(options);newOptions.onClose=function(){removeFns.delete(removeFn);if(options.onClose&&status(component)!=="destroyed"){options.onClose();}};const removeFn=service.add(target,Component,props,newOptions);removeFns.add(removeFn);return removeFn;},};}
return __exports;});;

/* /web/static/src/core/popover/popover_service.js */
odoo.define('@web/core/popover/popover_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{PopoverContainer}=require("@web/core/popover/popover_container");const{EventBus}=require("@odoo/owl");const popoverService=__exports.popoverService={start(){let nextId=0;const popovers={};const bus=new EventBus();registry.category("main_components").add("PopoverContainer",{Component:PopoverContainer,props:{bus,popovers}});function add(target,Component,props,options={}){const id=++nextId;const closeFn=()=>close(id);const popover={id,target,Component,props,close:closeFn,onClose:options.onClose,position:options.position,onPositioned:options.onPositioned,popoverClass:options.popoverClass,closeOnClickAway:options.closeOnClickAway,preventClose:options.preventClose,};popovers[id]=popover;bus.trigger("UPDATE");return closeFn;}
function close(id){if(id in popovers){const popover=popovers[id];if(popover.onClose){popover.onClose();}
delete popovers[id];bus.trigger("UPDATE");}}
return{add};},};registry.category("services").add("popover",popoverService);return __exports;});;

/* /web/static/src/core/position_hook.js */
odoo.define('@web/core/position_hook',async function(require){'use strict';let __exports={};const{throttleForAnimation}=require("@web/core/utils/timing");const{onWillUnmount,useEffect,useExternalListener,useRef}=require("@odoo/owl");const{localization}=require("@web/core/l10n/localization");const DIRECTIONS={t:"top",r:"right",b:"bottom",l:"left"};const VARIANTS={s:"start",m:"middle",e:"end"};const DIRECTION_FLIP_ORDER={top:"tbrl",right:"rltb",bottom:"btrl",left:"lrbt"};const VARIANT_FLIP_ORDER={start:"sme",middle:"mse",end:"ems"};const DEFAULTS={popper:"popper",margin:0,position:"bottom",};function getBestPosition(reference,popper,{container,margin,position}){const[directionKey,variantKey="middle"]=position.split("-");const directions=DIRECTION_FLIP_ORDER[directionKey];const variants=VARIANT_FLIP_ORDER[variantKey];const popBox=popper.getBoundingClientRect();const refBox=reference.getBoundingClientRect();const contBox=container.getBoundingClientRect();const containerIsHTMLNode=container===document.firstElementChild;const directionsData={t:refBox.top-popBox.height-margin,b:refBox.bottom+margin,r:refBox.right+margin,l:refBox.left-popBox.width-margin,};const variantsData={vs:refBox.left,vm:refBox.left+refBox.width/2+-popBox.width/2,ve:refBox.right-popBox.width,hs:refBox.top,hm:refBox.top+refBox.height/2+-popBox.height/2,he:refBox.bottom-popBox.height,};function getPositioningData(d=directions[0],v=variants[0],containerRestricted=false){const vertical=["t","b"].includes(d);const variantPrefix=vertical?"v":"h";const directionValue=directionsData[d];const variantValue=variantsData[variantPrefix+v];if(containerRestricted){const[directionSize,variantSize]=vertical?[popBox.height+margin,popBox.width]:[popBox.width,popBox.height+margin];let[directionMin,directionMax]=vertical?[contBox.top,contBox.bottom]:[contBox.left,contBox.right];let[variantMin,variantMax]=vertical?[contBox.left,contBox.right]:[contBox.top,contBox.bottom];if(containerIsHTMLNode){if(vertical){directionMin+=container.scrollTop;directionMax+=container.scrollTop;}else{variantMin+=container.scrollTop;variantMax+=container.scrollTop;}}
const directionOverflow=Math.ceil(directionValue)<Math.floor(directionMin)||Math.floor(directionValue+directionSize)>Math.ceil(directionMax);const variantOverflow=Math.ceil(variantValue)<Math.floor(variantMin)||Math.floor(variantValue+variantSize)>Math.ceil(variantMax);if(directionOverflow||variantOverflow){return null;}}
const positioning=vertical?{top:directionValue,left:variantValue,}:{top:variantValue,left:directionValue,};return{...positioning,direction:DIRECTIONS[d],variant:VARIANTS[v],};}
for(const d of directions){for(const v of variants){const match=getPositioningData(d,v,true);if(match){return match;}}}
return getPositioningData();}
__exports.reposition=reposition;function reposition(reference,popper,options){options={container:document.documentElement,...options,};popper.style.position="fixed";popper.style.top="0px";popper.style.left="0px";const position=getBestPosition(reference,popper,options);const{top,left}=position;popper.style.top=`${top}px`;popper.style.left=`${left}px`;if(options.onPositioned){options.onPositioned(popper,position);}}
__exports.usePosition=usePosition;function usePosition(reference,options){options={...DEFAULTS,...options};const{popper,position}=options;let[directionKey,variantKey="middle"]=position.split("-");if(localization.direction==="rtl"){if(["bottom","top"].includes(directionKey)){if(variantKey!=="middle"){variantKey=variantKey==="start"?"end":"start";}}else{directionKey=directionKey==="left"?"right":"left";}
options.position=[directionKey,variantKey].join("-");}
const popperRef=useRef(popper);const getReference=reference instanceof HTMLElement?()=>reference:reference;const update=()=>{const ref=getReference();if(popperRef.el&&ref){reposition(ref,popperRef.el,options);}};useEffect(update);const throttledUpdate=throttleForAnimation(update);useExternalListener(document,"scroll",throttledUpdate,{capture:true});useExternalListener(window,"resize",throttledUpdate);onWillUnmount(throttledUpdate.cancel);}
return __exports;});;

/* /web/static/src/core/py_js/py.js */
odoo.define('@web/core/py_js/py',async function(require){'use strict';let __exports={};const{evaluate}=require("@web/core/py_js/py_interpreter");const{parse}=require("@web/core/py_js/py_parser");const{tokenize}=require("@web/core/py_js/py_tokenizer");{const{evaluate}=require("@web/core/py_js/py_interpreter");Object.assign(__exports,{evaluate})};{const{parse}=require("@web/core/py_js/py_parser");Object.assign(__exports,{parse})};{const{tokenize}=require("@web/core/py_js/py_tokenizer");Object.assign(__exports,{tokenize})};{const{formatAST}=require("@web/core/py_js/py_utils");Object.assign(__exports,{formatAST})};__exports.parseExpr=parseExpr;function parseExpr(expr){const tokens=tokenize(expr);return parse(tokens);}
__exports.evaluateExpr=evaluateExpr;function evaluateExpr(expr,context={}){const ast=parseExpr(expr);return evaluate(ast,context);}
return __exports;});;

/* /web/static/src/core/py_js/py_builtin.js */
odoo.define('@web/core/py_js/py_builtin',async function(require){'use strict';let __exports={};const{PyDate,PyDateTime,PyRelativeDelta,PyTime,PyTimeDelta}=require("@web/core/py_js/py_date");const BUILTINS=__exports.BUILTINS={bool(value){switch(typeof value){case"number":return value!==0;case"string":return value!=="";case"boolean":return value;case"object":if(value===null){return false;}
if(value.isTrue){return value.isTrue();}
return true;}
return true;},time:{strftime(format){return PyDateTime.now().strftime(format);},},context_today(){return PyDate.today();},get current_date(){return this.today;},get today(){return PyDate.today().strftime("%Y-%m-%d");},get now(){return PyDateTime.now().strftime("%Y-%m-%d %H:%M:%S");},datetime:{time:PyTime,timedelta:PyTimeDelta,datetime:PyDateTime,date:PyDate,},relativedelta:PyRelativeDelta,true:true,false:false,};return __exports;});;

/* /web/static/src/core/py_js/py_date.js */
odoo.define('@web/core/py_js/py_date',async function(require){'use strict';let __exports={};const{parseArgs}=require("@web/core/py_js/py_parser");const AssertionError=__exports.AssertionError=class AssertionError extends Error{}
const ValueError=__exports.ValueError=class ValueError extends Error{}
const NotSupportedError=__exports.NotSupportedError=class NotSupportedError extends Error{}
function fmt2(n){return String(n).padStart(2,"0");}
function fmt4(n){return String(n).padStart(4,"0");}
function divmod(a,b,fn){let mod=a%b;if((mod>0&&b<0)||(mod<0&&b>0)){mod+=b;}
return fn(Math.floor(a/b),mod);}
function assert(bool,message="AssertionError"){if(!bool){throw new AssertionError(message);}}
const DAYS_IN_MONTH=[null,31,28,31,30,31,30,31,31,30,31,30,31];const DAYS_BEFORE_MONTH=[null];for(let dbm=0,i=1;i<DAYS_IN_MONTH.length;++i){DAYS_BEFORE_MONTH.push(dbm);dbm+=DAYS_IN_MONTH[i];}
function daysInMonth(year,month){if(month===2&&isLeap(year)){return 29;}
return DAYS_IN_MONTH[month];}
function isLeap(year){return year%4===0&&(year%100!==0||year%400===0);}
function daysBeforeYear(year){const y=year-1;return y*365+Math.floor(y/4)-Math.floor(y/100)+Math.floor(y/400);}
function daysBeforeMonth(year,month){const postLeapFeb=month>2&&isLeap(year);return DAYS_BEFORE_MONTH[month]+(postLeapFeb?1:0);}
function ymd2ord(year,month,day){const dim=daysInMonth(year,month);if(!(1<=day&&day<=dim)){throw new ValueError(`day must be in 1..${dim}`);}
return daysBeforeYear(year)+daysBeforeMonth(year,month)+day;}
const DI400Y=daysBeforeYear(401);const DI100Y=daysBeforeYear(101);const DI4Y=daysBeforeYear(5);function ord2ymd(n){--n;let n400,n100,n4,n1,n0;divmod(n,DI400Y,function(_n400,n){n400=_n400;divmod(n,DI100Y,function(_n100,n){n100=_n100;divmod(n,DI4Y,function(_n4,n){n4=_n4;divmod(n,365,function(_n1,n){n1=_n1;n0=n;});});});});n=n0;const year=n400*400+1+n100*100+n4*4+n1;if(n1==4||n100==100){assert(n0===0);return{year:year-1,month:12,day:31,};}
const leapyear=n1===3&&(n4!==24||n100==3);assert(leapyear==isLeap(year));let month=(n+50)>>5;let preceding=DAYS_BEFORE_MONTH[month]+(month>2&&leapyear?1:0);if(preceding>n){--month;preceding-=DAYS_IN_MONTH[month]+(month===2&&leapyear?1:0);}
n-=preceding;return{year:year,month:month,day:n+1,};}
function tmxxx(year,month,day,hour,minute,second,microsecond){hour=hour||0;minute=minute||0;second=second||0;microsecond=microsecond||0;if(microsecond<0||microsecond>999999){divmod(microsecond,1000000,function(carry,ms){microsecond=ms;second+=carry;});}
if(second<0||second>59){divmod(second,60,function(carry,s){second=s;minute+=carry;});}
if(minute<0||minute>59){divmod(minute,60,function(carry,m){minute=m;hour+=carry;});}
if(hour<0||hour>23){divmod(hour,24,function(carry,h){hour=h;day+=carry;});}
if(month<1||month>12){divmod(month-1,12,function(carry,m){month=m+1;year+=carry;});}
const dim=daysInMonth(year,month);if(day<1||day>dim){if(day===0){--month;if(month>0){day=daysInMonth(year,month);}else{--year;month=12;day=31;}}else if(day==dim+1){++month;day=1;if(month>12){month=1;++year;}}else{const r=ord2ymd(ymd2ord(year,month,1)+(day-1));year=r.year;month=r.month;day=r.day;}}
return{year:year,month:month,day:day,hour:hour,minute:minute,second:second,microsecond:microsecond,};}
const PyDate=__exports.PyDate=class PyDate{static today(){return this.convertDate(new Date());}
static convertDate(date){const year=date.getUTCFullYear();const month=date.getUTCMonth()+1;const day=date.getUTCDate();return new PyDate(year,month,day);}
constructor(year,month,day){this.year=year;this.month=month;this.day=day;}
static create(...args){const{year,month,day}=parseArgs(args,["year","month","day"]);return new PyDate(year,month,day);}
add(timedelta){const s=tmxxx(this.year,this.month,this.day+timedelta.days);return new PyDate(s.year,s.month,s.day);}
isEqual(other){if(!(other instanceof PyDate)){return false;}
return this.year===other.year&&this.month===other.month&&this.day===other.day;}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month);case"d":return fmt2(this.day);}
throw new ValueError(`No known conversion for ${m}`);});}
substract(other){if(other instanceof PyTimeDelta){return this.add(other.negate());}
if(other instanceof PyDate){return PyTimeDelta.create(this.toordinal()-other.toordinal());}
throw NotSupportedError();}
toJSON(){return this.strftime("%Y-%m-%d");}
toordinal(){return ymd2ord(this.year,this.month,this.day);}}
const PyDateTime=__exports.PyDateTime=class PyDateTime{static now(){return this.convertDate(new Date());}
static convertDate(date){const year=date.getUTCFullYear();const month=date.getUTCMonth()+1;const day=date.getUTCDate();const hour=date.getUTCHours();const minute=date.getUTCMinutes();const second=date.getUTCSeconds();return new PyDateTime(year,month,day,hour,minute,second,0);}
static create(...args){const namedArgs=parseArgs(args,["year","month","day","hour","minute","second","microsecond",]);const year=namedArgs.year;const month=namedArgs.month;const day=namedArgs.day;const hour=namedArgs.hour||0;const minute=namedArgs.minute||0;const second=namedArgs.second||0;const ms=namedArgs.micro/1000||0;return new PyDateTime(year,month,day,hour,minute,second,ms);}
static combine(...args){const{date,time}=parseArgs(args,["date","time"]);return PyDateTime.create(date.year,date.month,date.day,time.hour,time.minute,time.second);}
constructor(year,month,day,hour,minute,second,microsecond){this.year=year;this.month=month;this.day=day;this.hour=hour;this.minute=minute;this.second=second;this.microsecond=microsecond;}
add(timedelta){const s=tmxxx(this.year,this.month,this.day+timedelta.days,this.hour,this.minute,this.second+timedelta.seconds,this.microsecond+timedelta.microseconds);return new PyDateTime(s.year,s.month,s.day,s.hour,s.minute,s.second,s.microsecond);}
isEqual(other){if(!(other instanceof PyDateTime)){return false;}
return(this.year===other.year&&this.month===other.month&&this.day===other.day&&this.hour===other.hour&&this.minute===other.minute&&this.second===other.second&&this.microsecond===other.microsecond);}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month);case"d":return fmt2(this.day);case"H":return fmt2(this.hour);case"M":return fmt2(this.minute);case"S":return fmt2(this.second);}
throw new ValueError(`No known conversion for ${m}`);});}
substract(timedelta){return this.add(timedelta.negate());}
toJSON(){return this.strftime("%Y-%m-%d %H:%M:%S");}
to_utc(){const d=new Date(this.year,this.month-1,this.day,this.hour,this.minute,this.second);const timedelta=PyTimeDelta.create({minutes:d.getTimezoneOffset()});return this.add(timedelta);}}
const PyTime=__exports.PyTime=class PyTime extends PyDate{static create(...args){const namedArgs=parseArgs(args,["hour","minute","second"]);const hour=namedArgs.hour||0;const minute=namedArgs.minute||0;const second=namedArgs.second||0;return new PyTime(hour,minute,second);}
constructor(hour,minute,second){const now=new Date();const year=now.getFullYear();const month=now.getUTCMonth();const day=now.getUTCDate();super(year,month,day);this.hour=hour;this.minute=minute;this.second=second;}
strftime(format){return format.replace(/%([A-Za-z])/g,(m,c)=>{switch(c){case"Y":return fmt4(this.year);case"m":return fmt2(this.month+1);case"d":return fmt2(this.day);case"H":return fmt2(this.hour);case"M":return fmt2(this.minute);case"S":return fmt2(this.second);}
throw new ValueError(`No known conversion for ${m}`);});}
toJSON(){return this.strftime("%H:%M:%S");}}
const DAYS_IN_YEAR=[31,59,90,120,151,181,212,243,273,304,334,366];const TIME_PERIODS=["hour","minute","second"];const PERIODS=["year","month","day",...TIME_PERIODS];const RELATIVE_KEYS="years months weeks days hours minutes seconds microseconds leapdays".split(" ");const ABSOLUTE_KEYS="year month day hour minute second microsecond weekday nlyearday yearday".split(" ");const argsSpec=["dt1","dt2"];const PyRelativeDelta=__exports.PyRelativeDelta=class PyRelativeDelta{static create(...args){const params=parseArgs(args,argsSpec);if("dt1"in params){throw new Error("relativedelta(dt1, dt2) is not supported for now");}
for(const period of PERIODS){if(period in params){const val=params[period];assert(val>=0,`${period} ${val} is out of range`);}}
for(const key of RELATIVE_KEYS){params[key]=params[key]||0;}
for(const key of ABSOLUTE_KEYS){params[key]=key in params?params[key]:null;}
params.days+=7*params.weeks;let yearDay=0;if(params.nlyearday){yearDay=params.nlyearday;}else if(params.yearday){yearDay=params.yearday;if(yearDay>59){params.leapDays=-1;}}
if(yearDay){for(let monthIndex=0;monthIndex<DAYS_IN_YEAR.length;monthIndex++){if(yearDay<=DAYS_IN_YEAR[monthIndex]){params.month=monthIndex+1;if(monthIndex===0){params.day=yearDay;}else{params.day=yearDay-DAYS_IN_YEAR[monthIndex-1];}
break;}}}
return new PyRelativeDelta(params);}
static add(date,delta){if(!(date instanceof PyDate||date instanceof PyDateTime)){throw NotSupportedError();}
const s=tmxxx((delta.year||date.year)+delta.years,(delta.month||date.month)+delta.months,delta.day||date.day,delta.hour||date.hour||0,delta.minute||date.minute||0,delta.second||date.seconds||0,delta.microseconds||date.microseconds||0);const newDateTime=new PyDateTime(s.year,s.month,s.day,s.hour,s.minute,s.second,s.microsecond);let leapDays=0;if(delta.leapDays&&newDateTime.month>2&&isLeap(newDateTime.year)){leapDays=delta.leapDays;}
const temp=newDateTime.add(PyTimeDelta.create({days:delta.days+leapDays,hours:delta.hours,minutes:delta.minutes,seconds:delta.seconds,microseconds:delta.microseconds,}));const hasTime=Boolean(temp.hour||temp.minute||temp.second||temp.microsecond);const returnDate=!hasTime&&date instanceof PyDate?new PyDate(temp.year,temp.month,temp.day):temp;if(delta.weekday!==null){const wantedDow=delta.weekday+1;const _date=new Date(returnDate.year,returnDate.month-1,returnDate.day);const days=(7-_date.getDay()+wantedDow)%7;return returnDate.add(new PyTimeDelta(days,0,0));}
return returnDate;}
static substract(date,delta){return PyRelativeDelta.add(date,delta.negate());}
constructor(params={},sign=+1){this.years=sign*params.years;this.months=sign*params.months;this.days=sign*params.days;this.hours=sign*params.hours;this.minutes=sign*params.minutes;this.seconds=sign*params.seconds;this.microseconds=sign*params.microseconds;this.leapDays=params.leapDays;this.year=params.year;this.month=params.month;this.day=params.day;this.hour=params.hour;this.minute=params.minute;this.second=params.second;this.microsecond=params.microsecond;this.weekday=params.weekday;}
negate(){return new PyRelativeDelta(this,-1);}
isEqual(other){throw new NotSupportedError();}}
const TIME_DELTA_KEYS="weeks days hours minutes seconds milliseconds microseconds".split(" ");function modf(x){const mod=x%1;return[mod<0?mod+1:mod,Math.floor(x)];}
const PyTimeDelta=__exports.PyTimeDelta=class PyTimeDelta{static create(...args){const namedArgs=parseArgs(args,["days","seconds","microseconds"]);for(const key of TIME_DELTA_KEYS){namedArgs[key]=namedArgs[key]||0;}
let d=0;let s=0;let us=0;const days=namedArgs.days+namedArgs.weeks*7;let seconds=namedArgs.seconds+60*namedArgs.minutes+3600*namedArgs.hours;let microseconds=namedArgs.microseconds+1000*namedArgs.milliseconds;const[dFrac,dInt]=modf(days);d=dInt;let daysecondsfrac=0;if(dFrac){const[dsFrac,dsInt]=modf(dFrac*24*3600);s=dsInt;daysecondsfrac=dsFrac;}
const[sFrac,sInt]=modf(seconds);seconds=sInt;const secondsfrac=sFrac+daysecondsfrac;divmod(seconds,24*3600,(days,seconds)=>{d+=days;s+=seconds;});microseconds+=secondsfrac*1e6;divmod(microseconds,1000000,(seconds,microseconds)=>{divmod(seconds,24*3600,(days,seconds)=>{d+=days;s+=seconds;us+=Math.round(microseconds);});});return new PyTimeDelta(d,s,us);}
constructor(days,seconds,microseconds){this.days=days;this.seconds=seconds;this.microseconds=microseconds;}
add(other){return PyTimeDelta.create({days:this.days+other.days,seconds:this.seconds+other.seconds,microseconds:this.microseconds+other.microseconds,});}
divide(n){const us=(this.days*24*3600+this.seconds)*1e6+this.microseconds;return PyTimeDelta.create({microseconds:Math.floor(us/n)});}
isEqual(other){if(!(other instanceof PyTimeDelta)){return false;}
return(this.days===other.days&&this.seconds===other.seconds&&this.microseconds===other.microseconds);}
isTrue(){return this.days!==0||this.seconds!==0||this.microseconds!==0;}
multiply(n){return PyTimeDelta.create({days:n*this.days,seconds:n*this.seconds,microseconds:n*this.microseconds,});}
negate(){return PyTimeDelta.create({days:-this.days,seconds:-this.seconds,microseconds:-this.microseconds,});}
substract(other){return PyTimeDelta.create({days:this.days-other.days,seconds:this.seconds-other.seconds,microseconds:this.microseconds-other.microseconds,});}
total_seconds(){return this.days*86400+this.seconds+this.microseconds/1000000;}}
return __exports;});;

/* /web/static/src/core/py_js/py_interpreter.js */
odoo.define('@web/core/py_js/py_interpreter',async function(require){'use strict';let __exports={};const{BUILTINS}=require("@web/core/py_js/py_builtin");const{NotSupportedError,PyDate,PyDateTime,PyRelativeDelta,PyTime,PyTimeDelta,}=require("@web/core/py_js/py_date");const{PY_DICT,toPyDict}=require("@web/core/py_js/py_utils");const{parseArgs}=require("@web/core/py_js/py_parser");const EvaluationError=__exports.EvaluationError=class EvaluationError extends Error{}
const isTrue=BUILTINS.bool;function applyUnaryOp(ast,context){const value=evaluate(ast.right,context);switch(ast.op){case"-":if(value instanceof Object&&value.negate){return value.negate();}
return-value;case"+":return value;case"not":return!isTrue(value);}
throw new EvaluationError(`Unknown unary operator: ${ast.op}`);}
function pytypeIndex(val){switch(typeof val){case"object":return val===null?1:Array.isArray(val)?5:3;case"number":return 2;case"string":return 4;}
throw new EvaluationError(`Unknown type: ${typeof val}`);}
function isConstructor(obj){return!!obj.prototype&&!!obj.prototype.constructor.name;}
function isLess(left,right){if(typeof left==="number"&&typeof right==="number"){return left<right;}
if(typeof left==="boolean"){left=left?1:0;}
if(typeof right==="boolean"){right=right?1:0;}
const leftIndex=pytypeIndex(left);const rightIndex=pytypeIndex(right);if(leftIndex===rightIndex){return left<right;}
return leftIndex<rightIndex;}
function isEqual(left,right){if(typeof left!==typeof right){if(typeof left==="boolean"&&typeof right==="number"){return right===(left?1:0);}
if(typeof left==="number"&&typeof right==="boolean"){return left===(right?1:0);}
return false;}
if(left instanceof Object&&left.isEqual){return left.isEqual(right);}
return left===right;}
function isIn(left,right){if(Array.isArray(right)){return right.includes(left);}
if(typeof right==="string"&&typeof left==="string"){return right.includes(left);}
return false;}
function applyBinaryOp(ast,context){const left=evaluate(ast.left,context);const right=evaluate(ast.right,context);switch(ast.op){case"+":{const relativeDeltaOnLeft=left instanceof PyRelativeDelta;const relativeDeltaOnRight=right instanceof PyRelativeDelta;if(relativeDeltaOnLeft||relativeDeltaOnRight){const date=relativeDeltaOnLeft?right:left;const delta=relativeDeltaOnLeft?left:right;return PyRelativeDelta.add(date,delta);}
const timeDeltaOnLeft=left instanceof PyTimeDelta;const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnLeft&&timeDeltaOnRight){return left.add(right);}
if(timeDeltaOnLeft){if(right instanceof PyDate||right instanceof PyDateTime){return right.add(left);}else{throw NotSupportedError();}}
if(timeDeltaOnRight){if(left instanceof PyDate||left instanceof PyDateTime){return left.add(right);}else{throw NotSupportedError();}}
return left+right;}
case"-":{const isRightDelta=right instanceof PyRelativeDelta;if(isRightDelta){return PyRelativeDelta.substract(left,right);}
const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnRight){if(left instanceof PyTimeDelta){return left.substract(right);}else if(left instanceof PyDate||left instanceof PyDateTime){return left.substract(right);}else{throw NotSupportedError();}}
if(left instanceof PyDate){return left.substract(right);}
return left-right;}
case"*":{const timeDeltaOnLeft=left instanceof PyTimeDelta;const timeDeltaOnRight=right instanceof PyTimeDelta;if(timeDeltaOnLeft||timeDeltaOnRight){const number=timeDeltaOnLeft?right:left;const delta=timeDeltaOnLeft?left:right;return delta.multiply(number);}
return left*right;}
case"/":return left/right;case"%":return left%right;case"//":if(left instanceof PyTimeDelta){return left.divide(right);}
return Math.floor(left/right);case"**":return left**right;case"==":return isEqual(left,right);case"<>":case"!=":return!isEqual(left,right);case"<":return isLess(left,right);case">":return isLess(right,left);case">=":return isEqual(left,right)||isLess(right,left);case"<=":return isEqual(left,right)||isLess(left,right);case"in":return isIn(left,right);case"not in":return!isIn(left,right);}
throw new EvaluationError(`Unknown binary operator: ${ast.op}`);}
const DICT={get(dict){return(...args)=>{const{key,defValue}=parseArgs(args,["key","defValue"]);if(key in dict){return dict[key];}else if(defValue){return defValue;}
return null;};},};__exports.evaluate=evaluate;function evaluate(ast,context={}){const dicts=new Set();let pyContext;const evalContext=Object.create(context);Object.defineProperty(evalContext,"context",{get(){if(!pyContext){pyContext=toPyDict(context);}
return pyContext;},});function _evaluate(ast){switch(ast.type){case 0:case 1:return ast.value;case 5:if(ast.value in evalContext){return evalContext[ast.value];}else if(ast.value in BUILTINS){return BUILTINS[ast.value];}else{throw new EvaluationError(`Name '${ast.value}' is not defined`);}
case 3:return null;case 2:return ast.value;case 6:return applyUnaryOp(ast,evalContext);case 7:return applyBinaryOp(ast,evalContext);case 14:{const left=_evaluate(ast.left);if(ast.op==="and"){return isTrue(left)?_evaluate(ast.right):left;}else{return isTrue(left)?left:_evaluate(ast.right);}}
case 4:case 10:return ast.value.map(_evaluate);case 11:{const dict={};for(const key in ast.value){dict[key]=_evaluate(ast.value[key]);}
dicts.add(dict);return dict;}
case 8:{const fnValue=_evaluate(ast.fn);const args=ast.args.map(_evaluate);const kwargs={};for(const kwarg in ast.kwargs){kwargs[kwarg]=_evaluate(ast.kwargs[kwarg]);}
if(fnValue===PyDate||fnValue===PyDateTime||fnValue===PyTime||fnValue===PyRelativeDelta||fnValue===PyTimeDelta){return fnValue.create(...args,kwargs);}
return fnValue(...args,kwargs);}
case 12:{const dict=_evaluate(ast.target);const key=_evaluate(ast.key);return dict[key];}
case 13:{if(isTrue(_evaluate(ast.condition))){return _evaluate(ast.ifTrue);}else{return _evaluate(ast.ifFalse);}}
case 15:{const left=_evaluate(ast.obj);if(dicts.has(left)||Object.isPrototypeOf.call(PY_DICT,left)){return DICT[ast.key](left);}
const result=left[ast.key];if(typeof result==="function"&&!isConstructor(result)){return result.bind(left);}
return result;}}
throw new EvaluationError(`AST of type ${ast.type} cannot be evaluated`);}
return _evaluate(ast);}
return __exports;});;

/* /web/static/src/core/py_js/py_parser.js */
odoo.define('@web/core/py_js/py_parser',async function(require){'use strict';let __exports={};const{binaryOperators,comparators}=require("@web/core/py_js/py_tokenizer");const ParserError=__exports.ParserError=class ParserError extends Error{}
const chainedOperators=new Set(comparators);const infixOperators=new Set(binaryOperators.concat(comparators));__exports.bp=bp;function bp(symbol){switch(symbol){case"=":return 10;case"if":return 20;case"in":case"not in":case"is":case"is not":case"<":case"<=":case">":case">=":case"<>":case"==":case"!=":return 60;case"or":return 30;case"and":return 40;case"not":return 50;case"|":return 70;case"^":return 80;case"&":return 90;case"<<":case">>":return 100;case"+":case"-":return 110;case"*":case"/":case"//":case"%":return 120;case"**":return 140;case".":case"(":case"[":return 150;}
return 0;}
function bindingPower(token){return token.type===2?bp(token.value):0;}
function isSymbol(token,value){return token.type===2&&token.value===value;}
function parsePrefix(current,tokens){switch(current.type){case 0:return{type:0,value:current.value};case 1:return{type:1,value:current.value};case 4:if(current.value==="None"){return{type:3};}else{return{type:2,value:current.value==="True"};}
case 3:return{type:5,value:current.value};case 2:switch(current.value){case"-":case"+":case"~":return{type:6,op:current.value,right:_parse(tokens,130),};case"not":return{type:6,op:current.value,right:_parse(tokens,50),};case"(":{const content=[];let isTuple=false;while(tokens[0]&&!isSymbol(tokens[0],")")){content.push(_parse(tokens,0));if(tokens[0]){if(tokens[0]&&isSymbol(tokens[0],",")){isTuple=true;tokens.shift();}else if(!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}}else{throw new ParserError("parsing error");}}
if(!tokens[0]||!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}
tokens.shift();isTuple=isTuple||content.length===0;return isTuple?{type:10,value:content}:content[0];}
case"[":{const value=[];while(tokens[0]&&!isSymbol(tokens[0],"]")){value.push(_parse(tokens,0));if(tokens[0]){if(isSymbol(tokens[0],",")){tokens.shift();}else if(!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}}}
if(!tokens[0]||!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}
tokens.shift();return{type:4,value};}
case"{":{const dict={};while(tokens[0]&&!isSymbol(tokens[0],"}")){const key=_parse(tokens,0);if((key.type!==1&&key.type!==0)||!tokens[0]||!isSymbol(tokens[0],":")){throw new ParserError("parsing error");}
tokens.shift();const value=_parse(tokens,0);dict[key.value]=value;if(isSymbol(tokens[0],",")){tokens.shift();}}
if(!tokens.shift()){throw new ParserError("parsing error");}
return{type:11,value:dict};}}}
throw new ParserError("Token cannot be parsed");}
function parseInfix(left,current,tokens){switch(current.type){case 2:if(infixOperators.has(current.value)){let right=_parse(tokens,bindingPower(current));if(current.value==="and"||current.value==="or"){return{type:14,op:current.value,left,right,};}else if(current.value==="."){if(right.type===5){return{type:15,obj:left,key:right.value,};}else{throw new ParserError("invalid obj lookup");}}
let op={type:7,op:current.value,left,right,};while(chainedOperators.has(current.value)&&tokens[0]&&tokens[0].type===2&&chainedOperators.has(tokens[0].value)){const nextToken=tokens.shift();op={type:14,op:"and",left:op,right:{type:7,op:nextToken.value,left:right,right:_parse(tokens,bindingPower(nextToken)),},};right=op.right.right;}
return op;}
switch(current.value){case"(":{const args=[];const kwargs={};while(tokens[0]&&!isSymbol(tokens[0],")")){const arg=_parse(tokens,0);if(arg.type===9){kwargs[arg.name.value]=arg.value;}else{args.push(arg);}
if(tokens[0]&&isSymbol(tokens[0],",")){tokens.shift();}}
if(!tokens[0]||!isSymbol(tokens[0],")")){throw new ParserError("parsing error");}
tokens.shift();return{type:8,fn:left,args,kwargs};}
case"=":if(left.type===5){return{type:9,name:left,value:_parse(tokens,10),};}
break;case"[":{const key=_parse(tokens);if(!tokens[0]||!isSymbol(tokens[0],"]")){throw new ParserError("parsing error");}
tokens.shift();return{type:12,target:left,key:key,};}
case"if":{const condition=_parse(tokens);if(!tokens[0]||!isSymbol(tokens[0],"else")){throw new ParserError("parsing error");}
tokens.shift();const ifFalse=_parse(tokens);return{type:13,condition,ifTrue:left,ifFalse,};}}}
throw new ParserError("Token cannot be parsed");}
function _parse(tokens,bp=0){const token=tokens.shift();let expr=parsePrefix(token,tokens);while(tokens[0]&&bindingPower(tokens[0])>bp){expr=parseInfix(expr,tokens.shift(),tokens);}
return expr;}
__exports.parse=parse;function parse(tokens){if(tokens.length){return _parse(tokens,0);}
throw new ParserError("Missing token");}
__exports.parseArgs=parseArgs;function parseArgs(args,spec){const last=args[args.length-1];const unnamedArgs=typeof last==="object"?args.slice(0,-1):args;const kwargs=typeof last==="object"?last:{};for(const[index,val]of unnamedArgs.entries()){kwargs[spec[index]]=val;}
return kwargs;}
return __exports;});;

/* /web/static/src/core/py_js/py_tokenizer.js */
odoo.define('@web/core/py_js/py_tokenizer',async function(require){'use strict';let __exports={};const TokenizerError=__exports.TokenizerError=class TokenizerError extends Error{}
const directMap={"\\":"\\",'"':'"',"'":"'",a:"\x07",b:"\x08",f:"\x0c",n:"\n",r:"\r",t:"\t",v:"\v",};function decodeStringLiteral(str,unicode){const out=[];let code;for(var i=0;i<str.length;++i){if(str[i]!=="\\"){out.push(str[i]);continue;}
var escape=str[i+1];if(escape in directMap){out.push(directMap[escape]);++i;continue;}
switch(escape){case"\n":++i;continue;case"N":if(!unicode){break;}
throw new TokenizerError("SyntaxError: \\N{} escape not implemented");case"u":if(!unicode){break;}
var uni=str.slice(i+2,i+6);if(!/[0-9a-f]{4}/i.test(uni)){throw new TokenizerError(["SyntaxError: (unicode error) 'unicodeescape' codec"," can't decode bytes in position ",i,"-",i+4,": truncated \\uXXXX escape",].join(""));}
code=parseInt(uni,16);out.push(String.fromCharCode(code));i+=5;continue;case"U":if(!unicode){break;}
throw new TokenizerError("SyntaxError: \\U escape not implemented");case"x":var hex=str.slice(i+2,i+4);if(!/[0-9a-f]{2}/i.test(hex)){if(!unicode){throw new TokenizerError("ValueError: invalid \\x escape");}
throw new TokenizerError(["SyntaxError: (unicode error) 'unicodeescape'"," codec can't decode bytes in position ",i,"-",i+2,": truncated \\xXX escape",].join(""));}
code=parseInt(hex,16);out.push(String.fromCharCode(code));i+=3;continue;default:if(!/[0-8]/.test(escape)){break;}
var r=/[0-8]{1,3}/g;r.lastIndex=i+1;var m=r.exec(str);var oct=m[0];code=parseInt(oct,8);out.push(String.fromCharCode(code));i+=oct.length;continue;}
out.push("\\");}
return out.join("");}
const constants=new Set(["None","False","True"]);const comparators=__exports.comparators=["in","not","not in","is","is not","<","<=",">",">=","<>","!=","==",];const binaryOperators=__exports.binaryOperators=["or","and","|","^","&","<<",">>","+","-","*","/","//","%","~","**",".",];const unaryOperators=__exports.unaryOperators=["-"];const symbols=new Set([...["(",")","[","]","{","}",":",","],...["if","else","lambda","="],...comparators,...binaryOperators,...unaryOperators,]);function group(...args){return"("+args.join("|")+")";}
const Name="[a-zA-Z_]\\w*";const Whitespace="[ \\f\\t]*";const DecNumber="\\d+(L|l)?";const IntNumber=DecNumber;const Exponent="[eE][+-]?\\d+";const PointFloat=group(`\\d+\\.\\d*(${Exponent})?`,`\\.\\d+(${Exponent})?`);const FloatNumber=group(PointFloat,`\\d+${Exponent}`);const Number=group(FloatNumber,IntNumber);const Operator=group("\\*\\*=?",">>=?","<<=?","<>","!=","//=?","[+\\-*/%&|^=<>]=?","~");const Bracket="[\\[\\]\\(\\)\\{\\}]";const Special="[:;.,`@]";const Funny=group(Operator,Bracket,Special);const ContStr=group("([uU])?'([^\n'\\\\]*(?:\\\\.[^\n'\\\\]*)*)'",'([uU])?"([^\n"\\\\]*(?:\\\\.[^\n"\\\\]*)*)"');const PseudoToken=Whitespace+group(Number,Funny,ContStr,Name);const NumberPattern=new RegExp("^"+Number+"$");const StringPattern=new RegExp("^"+ContStr+"$");const NamePattern=new RegExp("^"+Name+"$");const strip=new RegExp("^"+Whitespace);__exports.tokenize=tokenize;function tokenize(str){const tokens=[];const max=str.length;let start=0;let end=0;const pseudoprog=new RegExp(PseudoToken,"g");while(pseudoprog.lastIndex<max){const pseudomatch=pseudoprog.exec(str);if(!pseudomatch){if(/^\s+$/.test(str.slice(end))){break;}
throw new TokenizerError("Failed to tokenize <<"+
str+">> at index "+
(end||0)+"; parsed so far: "+
tokens);}
if(pseudomatch.index>end){if(str.slice(end,pseudomatch.index).trim()){throw new TokenizerError("Invalid expression");}}
start=pseudomatch.index;end=pseudoprog.lastIndex;let token=str.slice(start,end).replace(strip,"");if(NumberPattern.test(token)){tokens.push({type:0,value:parseFloat(token),});}else if(StringPattern.test(token)){var m=StringPattern.exec(token);tokens.push({type:1,value:decodeStringLiteral(m[3]!==undefined?m[3]:m[5],!!(m[2]||m[4])),});}else if(symbols.has(token)){if(token==="in"&&tokens.length>0&&tokens[tokens.length-1].value==="not"){token="not in";tokens.pop();}else if(token==="not"&&tokens.length>0&&tokens[tokens.length-1].value==="is"){token="is not";tokens.pop();}
tokens.push({type:2,value:token,});}else if(constants.has(token)){tokens.push({type:4,value:token,});}else if(NamePattern.test(token)){tokens.push({type:3,value:token,});}else{throw new TokenizerError("Invalid expression");}}
return tokens;}
return __exports;});;

/* /web/static/src/core/py_js/py_utils.js */
odoo.define('@web/core/py_js/py_utils',async function(require){'use strict';let __exports={};const{bp}=require("@web/core/py_js/py_parser");const{PyDate,PyDateTime}=require("@web/core/py_js/py_date");__exports.toPyValue=toPyValue;function toPyValue(value){switch(typeof value){case"string":return{type:1,value};case"number":return{type:0,value};case"boolean":return{type:2,value};case"object":if(Array.isArray(value)){return{type:4,value:value.map(toPyValue)};}else if(value===null){return{type:3};}else if(value instanceof Date){return{type:1,value:PyDateTime.convertDate(value)};}else if(value instanceof PyDate||value instanceof PyDateTime){return{type:1,value};}else{const content={};for(const key in value){content[key]=toPyValue(value[key]);}
return{type:11,value:content};}
default:throw new Error("Invalid type");}}
__exports.formatAST=formatAST;function formatAST(ast,lbp=0){switch(ast.type){case 3:return"None";case 1:return JSON.stringify(ast.value);case 0:return String(ast.value);case 2:return ast.value?"True":"False";case 4:return`[${ast.value.map(formatAST).join(", ")}]`;case 6:if(ast.op==="not"){return`not `+formatAST(ast.right,50);}
return ast.op+formatAST(ast.right,130);case 7:{const abp=bp(ast.op);const str=`${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;return abp<lbp?`(${str})`:str;}
case 11:{const pairs=[];for(const k in ast.value){pairs.push(`"${k}": ${formatAST(ast.value[k])}`);}
return`{`+pairs.join(", ")+`}`;}
case 10:return`(${ast.value.map(formatAST).join(", ")})`;case 5:return ast.value;case 12:{return`${formatAST(ast.target)}[${formatAST(ast.key)}]`;}
case 13:{const{ifTrue,condition,ifFalse}=ast;return`${formatAST(ifTrue)} if ${formatAST(condition)} else ${formatAST(ifFalse)}`;}
case 14:{const abp=bp(ast.op);const str=`${formatAST(ast.left, abp)} ${ast.op} ${formatAST(ast.right, abp)}`;return abp<lbp?`(${str})`:str;}
case 15:return`${formatAST(ast.obj, 150)}.${ast.key}`;case 8:{const args=ast.args.map(formatAST);const kwargs=[];for(const kwarg in ast.kwargs){kwargs.push(`${kwarg} = ${formatAST(ast.kwargs[kwarg])}`);}
const argStr=args.concat(kwargs).join(", ");return`${formatAST(ast.fn)}(${argStr})`;}}
throw new Error("invalid expression: "+ast);}
const PY_DICT=__exports.PY_DICT=Object.create(null);__exports.toPyDict=toPyDict;function toPyDict(obj){return new Proxy(obj,{getPrototypeOf(){return PY_DICT;},});}
return __exports;});;

/* /web/static/src/core/registry.js */
odoo.define('@web/core/registry',async function(require){'use strict';let __exports={};const{EventBus}=require("@odoo/owl");const KeyNotFoundError=__exports.KeyNotFoundError=class KeyNotFoundError extends Error{}
const DuplicatedKeyError=__exports.DuplicatedKeyError=class DuplicatedKeyError extends Error{}
const Registry=__exports.Registry=class Registry extends EventBus{constructor(){super();this.content={};this.subRegistries={};this.elements=null;this.entries=null;this.addEventListener("UPDATE",()=>{this.elements=null;this.entries=null;});}
add(key,value,{force,sequence}={}){if(!force&&key in this.content){throw new DuplicatedKeyError(`Cannot add '${key}' in this registry: it already exists`);}
let previousSequence;if(force){const elem=this.content[key];previousSequence=elem&&elem[0];}
sequence=sequence===undefined?previousSequence||50:sequence;this.content[key]=[sequence,value];const payload={operation:"add",key,value};this.trigger("UPDATE",payload);return this;}
get(key,defaultValue){if(arguments.length<2&&!(key in this.content)){throw new KeyNotFoundError(`Cannot find ${key} in this registry!`);}
const info=this.content[key];return info?info[1]:defaultValue;}
contains(key){return key in this.content;}
getAll(){if(!this.elements){const content=Object.values(this.content).sort((el1,el2)=>el1[0]-el2[0]);this.elements=content.map((elem)=>elem[1]);}
return this.elements.slice();}
getEntries(){if(!this.entries){const entries=Object.entries(this.content).sort((el1,el2)=>el1[1][0]-el2[1][0]);this.entries=entries.map(([str,elem])=>[str,elem[1]]);}
return this.entries.slice();}
remove(key){const value=this.content[key];delete this.content[key];const payload={operation:"delete",key,value};this.trigger("UPDATE",payload);}
category(subcategory){if(!(subcategory in this.subRegistries)){this.subRegistries[subcategory]=new Registry();}
return this.subRegistries[subcategory];}}
const registry=__exports.registry=new Registry();return __exports;});;

/* /web/static/src/core/scroller_service.js */
odoo.define('@web/core/scroller_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{scrollTo}=require("@web/core/utils/scrolling");const scrollerService=__exports.scrollerService={start(env){browser.addEventListener("click",(ev)=>{const link=ev.target.closest("a");if(!link){return;}
const disableAnchor=link.attributes.getNamedItem("disable_anchor");if(disableAnchor&&disableAnchor.value==="true"){return;}
const href=link.attributes.getNamedItem("href");if(href){if(href.value[0]==="#"){if(href.value.length===1){ev.preventDefault();return;}
let matchingEl=null;try{matchingEl=document.querySelector(`.o_content #${href.value.substr(1)}`);}catch(_e){}
const triggerEv=new CustomEvent("anchor-link-clicked",{detail:{element:matchingEl,id:href.value,originalEv:ev,},});env.bus.trigger("SCROLLER:ANCHOR_LINK_CLICKED",triggerEv);if(matchingEl&&!triggerEv.defaultPrevented){ev.preventDefault();scrollTo(matchingEl,{isAnchor:true});}}}});},};registry.category("services").add("scroller",scrollerService);return __exports;});;

/* /web/static/src/core/signature/name_and_signature.js */
odoo.define('@web/core/signature/name_and_signature',async function(require){'use strict';let __exports={};const{isMobileOS}=require("@web/core/browser/feature_detection");const{Dropdown}=require("@web/core/dropdown/dropdown");const{DropdownItem}=require("@web/core/dropdown/dropdown_item");const{useService}=require("@web/core/utils/hooks");const{pick}=require("@web/core/utils/objects");const{renderToString}=require("@web/core/utils/render");const{getDataURLFromFile}=require("@web/core/utils/urls");const{Component,useState,onWillStart,useRef,useEffect}=require("@odoo/owl");let htmlId=0;const NameAndSignature=__exports.NameAndSignature=class NameAndSignature extends Component{setup(){this.rpc=useService("rpc");this.htmlId=htmlId++;this.defaultName=this.props.signature.name||"";this.currentFont=0;this.drawTimeout=null;this.state=useState({signMode:this.props.mode||(this.props.noInputName&&!this.defaultName?"draw":"auto"),showSignatureArea:!!(this.props.noInputName||this.defaultName),showFontList:false,});this.signNameInputRef=useRef("signNameInput");const signInputLoad=useRef("signInputLoad");useEffect((el)=>{if(el){el.click();}},()=>[signInputLoad.el]);onWillStart(async()=>{this.fonts=await this.rpc(`/web/sign/get_fonts/${this.props.defaultFont}`);});this.signatureRef=useRef("signature");useEffect((el)=>{if(el){this.$signatureField=$(".o_web_sign_signature");this.$signatureField.on("change",()=>{this.props.signature.isSignatureEmpty=this.isSignatureEmpty;});this.jSignature();this.resetSignature();this.props.signature.getSignatureImage=()=>this.jSignature("getData","image");if(this.state.signMode==="auto"){this.drawCurrentName();}}},()=>[this.signatureRef.el]);}
drawCurrentName(){const font=this.fonts[this.currentFont];const text=this.getCleanedName();const canvas=this.signatureRef.el.querySelector("canvas");const img=this.getSVGText(font,text,canvas.width,canvas.height);this.printImage(img);}
focusName(){if(!isMobileOS()&&this.signNameInputRef.el){this.signNameInputRef.el.focus();}}
getCleanedName(){const text=this.props.signature.name;if(this.props.signatureType==="initial"&&text){return(text.split(" ").map(function(w){return w[0];}).join(".")+".");}
return text;}
getSVGText(font,text,width,height){const svg=renderToString("web.sign_svg_text",{width:width,height:height,font:font,text:text,type:this.props.signatureType,color:this.props.fontColor,});return"data:image/svg+xml,"+encodeURI(svg);}
getSVGTextFont(font){const height=100;const width=parseInt(height*this.props.displaySignatureRatio);return this.getSVGText(font,this.getCleanedName(),width,height);}
jSignature(){return this.$signatureField.jSignature(...arguments);}
async onChangeSignLoadInput(ev){var file=ev.target.files[0];if(file===undefined){return false;}
if(file.type.substr(0,5)!=="image"){this.jSignature("reset");this.state.loadIsInvalid=true;return false;}
this.state.loadIsInvalid=false;const result=await getDataURLFromFile(file);this.printImage(result);}
onClickSignAutoSelectStyle(){this.state.showFontList=true;}
onClickSignDrawClear(){this.jSignature("reset");}
onInputSignName(ev){this.props.signature.name=ev.target.value;if(!this.state.showSignatureArea&&this.getCleanedName()){this.state.showSignatureArea=true;return;}
if(this.state.signMode==="auto"){this.drawCurrentName();}}
onSelectFont(index){this.currentFont=this.fonts[index];this.drawCurrentName();}
printImage(imgSrc){const image=new Image();image.onload=()=>{clearTimeout(this.drawTimeout);this.drawTimeout=setTimeout(()=>{let width=0;let height=0;const ratio=image.width/image.height;const signatureEl=this.signatureRef.el;if(!signatureEl){return;}
const canvas=signatureEl.querySelector("canvas");const context=canvas.getContext("2d");if(image.width/canvas.width>image.height/canvas.height){width=canvas.width;height=parseInt(width/ratio);}else{height=canvas.height;width=parseInt(height*ratio);}
this.jSignature("reset");const ignoredContext=pick(context,"shadowOffsetX","shadowOffsetY");Object.assign(context,{shadowOffsetX:0,shadowOffsetY:0});context.drawImage(image,0,0,image.width,image.height,(canvas.width-width)/2,(canvas.height-height)/2,width,height);Object.assign(context,ignoredContext);this.props.signature.isSignatureEmpty=this.isSignatureEmpty;return this.isSignatureEmpty;},0);};image.src=imgSrc;}
resetSignature(){const{width,height}=this.resizeSignature();this.$signatureField.empty().jSignature({"decor-color":"#D1D0CE","background-color":"rgba(255,255,255,0)","show-stroke":false,color:this.props.fontColor,lineWidth:2,width:width,height:height,});this.emptySignature=this.jSignature("getData");this.setMode(this.state.signMode,true);this.focusName();}
resizeSignature(){this.signatureRef.el.style.width="unset";const width=this.signatureRef.el.clientWidth;const height=parseInt(width/this.props.displaySignatureRatio);this.state.signature={width,height,};Object.assign(this.signatureRef.el.querySelector("canvas").style,{width,height});return{width,height};}
async setMode(mode,reset){if(reset!==true&&mode===this.signMode){return;}
this.state.signMode=mode;this.jSignature(this.state.signMode==="draw"?"enable":"disable");this.jSignature("reset");if(this.state.signMode==="auto"){this.drawCurrentName();}}
get isSignatureEmpty(){const signature=this.jSignature("getData");return signature&&this.emptySignature?this.emptySignature===signature:true;}
get loadIsInvalid(){return this.state.signMode==="load"&&this.state.loadIsInvalid;}
get signatureStyle(){const{signature}=this.state;return signature?`width: ${signature.width}px; height: ${signature.height}px`:"";}}
NameAndSignature.template="web.NameAndSignature";NameAndSignature.components={Dropdown,DropdownItem};NameAndSignature.props={signature:{type:Object},defaultFont:{type:String,optional:true},displaySignatureRatio:{type:Number,optional:true},fontColor:{type:String,optional:true},signatureType:{type:String,optional:true},noInputName:{type:Boolean,optional:true},mode:{type:String,optional:true},};NameAndSignature.defaultProps={defaultFont:"",displaySignatureRatio:3.0,fontColor:"DarkBlue",signatureType:"signature",noInputName:false,};return __exports;});;

/* /web/static/src/core/signature/signature_dialog.js */
odoo.define('@web/core/signature/signature_dialog',async function(require){'use strict';let __exports={};const{Dialog}=require("@web/core/dialog/dialog");const{NameAndSignature}=require("@web/core/signature/name_and_signature");const{Component,useState}=require("@odoo/owl");const SignatureDialog=__exports.SignatureDialog=class SignatureDialog extends Component{setup(){this.title=this.env._t("Adopt Your Signature");this.signature=useState({name:this.props.defaultName,isSignatureEmpty:true,});}
onClickConfirm(){this.props.uploadSignature({name:this.signature.name,signatureImage:this.signature.getSignatureImage(),});this.props.close();}
get nameAndSignatureProps(){return{...this.props.nameAndSignatureProps,signature:this.signature,};}}
SignatureDialog.template="web.SignatureDialog";SignatureDialog.components={Dialog,NameAndSignature};SignatureDialog.defaultProps={defaultName:"",};return __exports;});;

/* /web/static/src/core/tooltip/tooltip.js */
odoo.define('@web/core/tooltip/tooltip',async function(require){'use strict';let __exports={};const{Component}=require("@odoo/owl");const Tooltip=__exports.Tooltip=class Tooltip extends Component{}
Tooltip.template="web.Tooltip";Tooltip.props={close:Function,tooltip:{type:String,optional:true},template:{type:String,optional:true},info:{optional:true},};return __exports;});;

/* /web/static/src/core/tooltip/tooltip_hook.js */
odoo.define('@web/core/tooltip/tooltip_hook',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{useEffect,useRef}=require("@odoo/owl");__exports.useTooltip=useTooltip;function useTooltip(refName,params){const tooltip=useService("tooltip");const ref=useRef(refName);useEffect((el)=>tooltip.add(el,params),()=>[ref.el]);}
return __exports;});;

/* /web/static/src/core/tooltip/tooltip_service.js */
odoo.define('@web/core/tooltip/tooltip_service',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{registry}=require("@web/core/registry");const{Tooltip}=require("@web/core/tooltip/tooltip");const{hasTouch}=require("@web/core/browser/feature_detection");const{whenReady}=require("@odoo/owl");const OPEN_DELAY=400;const CLOSE_DELAY=200;const tooltipService=__exports.tooltipService={dependencies:["popover"],start(env,{popover}){let openTooltipTimeout;let closeTooltip;let target=null;let touchPressed;const elementsWithTooltips=new Map();function cleanup(){browser.clearTimeout(openTooltipTimeout);if(closeTooltip){closeTooltip();}}
function shouldCleanup(){if(!target){return false;}
if(!document.body.contains(target)){return true;}
if(hasTouch()){return!touchPressed;}
return false;}
function openTooltip(el,{tooltip="",template,info,position,delay=OPEN_DELAY}){target=el;cleanup();if(!tooltip&&!template){return;}
openTooltipTimeout=browser.setTimeout(()=>{if(target.isConnected){closeTooltip=popover.add(target,Tooltip,{tooltip,template,info},{position});target.title="";}},delay);}
function openElementsTooltip(el){if(elementsWithTooltips.has(el)){openTooltip(el,elementsWithTooltips.get(el));}else if(el.matches("[data-tooltip], [data-tooltip-template]")){const dataset=el.dataset;const params={tooltip:dataset.tooltip,template:dataset.tooltipTemplate,position:dataset.tooltipPosition,};if(dataset.tooltipInfo){params.info=JSON.parse(dataset.tooltipInfo);}
if(dataset.tooltipDelay){params.delay=parseInt(dataset.tooltipDelay,10);}
openTooltip(el,params);}}
function onMouseenter(ev){openElementsTooltip(ev.target);}
function onMouseleave(ev){if(target===ev.target){cleanup();}}
function onTouchStart(ev){touchPressed=true;openElementsTooltip(ev.target);}
whenReady(()=>{browser.setInterval(()=>{if(shouldCleanup()){cleanup();}},CLOSE_DELAY);if(hasTouch()){document.body.addEventListener("touchstart",onTouchStart);document.body.addEventListener("touchend",(ev)=>{if(ev.target.matches("[data-tooltip], [data-tooltip-template]")){if(!ev.target.dataset.tooltipTouchTapToShow){touchPressed=false;}}});document.body.addEventListener("touchcancel",(ev)=>{if(ev.target.matches("[data-tooltip], [data-tooltip-template]")){if(!ev.target.dataset.tooltipTouchTapToShow){touchPressed=false;}}});return;}
document.body.addEventListener("mouseenter",onMouseenter,{capture:true});document.body.addEventListener("mouseleave",onMouseleave,{capture:true});});return{add(el,params){elementsWithTooltips.set(el,params);return()=>{elementsWithTooltips.delete(el);if(target===el){cleanup();}};},};},};registry.category("services").add("tooltip",tooltipService);return __exports;});;

/* /web/static/src/core/transition.js */
odoo.define('@web/core/transition',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,useState,useEffect,xml,onWillUpdateProps,useComponent}=require("@odoo/owl");const config=__exports.config={disabled:false,};__exports.useTransition=useTransition;function useTransition({name,initialVisibility=true,leaveDuration=500,onLeave=()=>{},}){const component=useComponent();const state=useState({shouldMount:initialVisibility,stage:initialVisibility?"enter":"leave",});if(config.disabled){return{get shouldMount(){return state.shouldMount;},set shouldMount(val){state.shouldMount=val;},get className(){return`${name} ${name}-enter-active`;},get stage(){return"enter-active";},};}
let onNextPatch=null;useEffect(()=>{if(onNextPatch){onNextPatch();onNextPatch=null;}});let prevState,timer;const transition={get shouldMount(){return state.shouldMount;},set shouldMount(newState){if(newState===prevState){return;}
browser.clearTimeout(timer);prevState=newState;if(newState){state.stage="enter";state.shouldMount=true;component.render();onNextPatch=()=>{state.stage="enter-active";};}else{state.stage="leave";timer=browser.setTimeout(()=>{state.shouldMount=false;onLeave();},leaveDuration);}},get className(){return`${name} ${name}-${state.stage}`;},get stage(){return state.stage;},};transition.shouldMount=initialVisibility;return transition;}
const Transition=__exports.Transition=class Transition extends Component{setup(){const{visible,leaveDuration,name,onLeave}=this.props;this.transition=useTransition({initialVisibility:visible,leaveDuration,name,onLeave,});onWillUpdateProps(({visible=true})=>{this.transition.shouldMount=visible;});}}
Transition.template=xml`<t t-slot="default" t-if="transition.shouldMount" className="transition.className"/>`;Transition.props={name:String,visible:{type:Boolean,optional:true},leaveDuration:{type:Number,optional:true},onLeave:{type:Function,optional:true},slots:Object,};return __exports;});;

/* /web/static/src/core/ui/block_ui.js */
odoo.define('@web/core/ui/block_ui',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{Component,useState,xml}=require("@odoo/owl");const BlockUI=__exports.BlockUI=class BlockUI extends Component{setup(){this.messagesByDuration=[{time:20,l1:this.env._t("Loading...")},{time:40,l1:this.env._t("Still loading...")},{time:60,l1:this.env._t("Still loading..."),l2:this.env._t("Please be patient."),},{time:180,l1:this.env._t("Don't leave yet,"),l2:this.env._t("it's still loading..."),},{time:120,l1:this.env._t("You may not believe it,"),l2:this.env._t("but the application is actually loading..."),},{time:3180,l1:this.env._t("Take a minute to get a coffee,"),l2:this.env._t("because it's loading..."),},{time:null,l1:this.env._t("Maybe you should consider reloading the application by pressing F5..."),},];this.state=useState({blockUI:false,line1:"",line2:"",});this.props.bus.addEventListener("BLOCK",this.block.bind(this));this.props.bus.addEventListener("UNBLOCK",this.unblock.bind(this));}
replaceMessage(index){const message=this.messagesByDuration[index];this.state.line1=message.l1;this.state.line2=message.l2||"";if(message.time!==null){this.msgTimer=browser.setTimeout(()=>{this.replaceMessage(index+1);},message.time*1000);}}
block(){this.state.blockUI=true;this.replaceMessage(0);}
unblock(){this.state.blockUI=false;clearTimeout(this.msgTimer);this.state.line1="";this.state.line2="";}}
BlockUI.template=xml`
    <div t-att-class="state.blockUI ? 'o_blockUI fixed-top d-flex justify-content-center align-items-center flex-column vh-100 bg-black-50' : ''">
      <t t-if="state.blockUI">
        <div class="o_spinner mb-4">
            <img src="/web/static/img/spin.svg" alt="Loading..."/>
        </div>
        <div class="o_message text-center px-4">
            <t t-esc="state.line1"/> <br/>
            <t t-esc="state.line2"/>
        </div>
      </t>
    </div>`;return __exports;});;

/* /web/static/src/core/ui/ui_service.js */
odoo.define('@web/core/ui/ui_service',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{registry}=require("@web/core/registry");const{debounce}=require("@web/core/utils/timing");const{BlockUI}=require("@web/core/ui/block_ui");const{browser}=require("@web/core/browser/browser");const{getTabableElements}=require("@web/core/utils/ui");const{getActiveHotkey}=require("@web/core/hotkeys/hotkey_service");const{EventBus,useEffect,useRef}=require("@odoo/owl");const SIZES=__exports.SIZES={XS:0,VSM:1,SM:2,MD:3,LG:4,XL:5,XXL:6};__exports.useActiveElement=useActiveElement;function useActiveElement(refName){if(!refName){throw new Error("refName not given to useActiveElement");}
const uiService=useService("ui");const owner=useRef(refName);let lastTabableEl,firstTabableEl;function trapFocus(e){switch(getActiveHotkey(e)){case"tab":if(document.activeElement===lastTabableEl){firstTabableEl.focus();e.preventDefault();e.stopPropagation();}
break;case"shift+tab":if(document.activeElement===firstTabableEl){lastTabableEl.focus();e.preventDefault();e.stopPropagation();}
break;}}
useEffect((el)=>{if(el){const oldActiveElement=document.activeElement;uiService.activateElement(el);const tabableEls=getTabableElements(el);if(tabableEls.length===0&&el.tabIndex<0){el.tabIndex=-1;}
firstTabableEl=tabableEls[0]||el;lastTabableEl=tabableEls[tabableEls.length-1]||el;el.addEventListener("keydown",trapFocus);if(!el.contains(document.activeElement)){firstTabableEl.focus();}
return()=>{uiService.deactivateElement(el);el.removeEventListener("keydown",trapFocus);if(el.contains(document.activeElement)){oldActiveElement.focus();}};}},()=>[owner.el]);}
const MEDIAS_BREAKPOINTS=__exports.MEDIAS_BREAKPOINTS=[{maxWidth:474},{minWidth:475,maxWidth:575},{minWidth:576,maxWidth:767},{minWidth:768,maxWidth:991},{minWidth:992,maxWidth:1199},{minWidth:1200,maxWidth:1533},{minWidth:1534},];__exports.getMediaQueryLists=getMediaQueryLists;function getMediaQueryLists(){return MEDIAS_BREAKPOINTS.map(({minWidth,maxWidth})=>{if(!maxWidth){return window.matchMedia(`(min-width: ${minWidth}px)`);}
if(!minWidth){return window.matchMedia(`(max-width: ${maxWidth}px)`);}
return window.matchMedia(`(min-width: ${minWidth}px) and (max-width: ${maxWidth}px)`);});}
const MEDIAS=getMediaQueryLists();const uiService=__exports.uiService={getSize(){return MEDIAS.findIndex((media)=>media.matches);},start(env){const bus=new EventBus();registry.category("main_components").add("BlockUI",{Component:BlockUI,props:{bus}});let blockCount=0;function block(){blockCount++;if(blockCount===1){bus.trigger("BLOCK");}}
function unblock(){blockCount--;if(blockCount<0){console.warn("Unblock ui was called more times than block, you should only unblock the UI if you have previously blocked it.");blockCount=0;}
if(blockCount===0){bus.trigger("UNBLOCK");}}
let activeElems=[document];function activateElement(el){activeElems.push(el);bus.trigger("active-element-changed",el);}
function deactivateElement(el){activeElems=activeElems.filter((x)=>x!==el);bus.trigger("active-element-changed",ui.activeElement);}
function getActiveElementOf(el){for(const activeElement of[...activeElems].reverse()){if(activeElement.contains(el)){return activeElement;}}}
const ui={bus,size:this.getSize(),get activeElement(){return activeElems[activeElems.length-1];},get isBlocked(){return blockCount>0;},get isSmall(){return ui.size<=SIZES.SM;},block,unblock,activateElement,deactivateElement,getActiveElementOf,};const updateSize=()=>{const prevSize=ui.size;ui.size=this.getSize();if(ui.size!==prevSize){bus.trigger("resize");}};browser.addEventListener("resize",debounce(updateSize,100));Object.defineProperty(env,"isSmall",{get(){return ui.isSmall;},});return ui;},};registry.category("services").add("ui",uiService);return __exports;});;

/* /web/static/src/core/user_service.js */
odoo.define('@web/core/user_service',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{session}=require("@web/session");const userService=__exports.userService={dependencies:["rpc"],async:["hasGroup"],start(env,{rpc}){const groupProms={};const context={...session.user_context,uid:session.uid,};return{get context(){return Object.assign({},context);},removeFromContext(key){delete context[key];},updateContext(update){Object.assign(context,update);},hasGroup(group){if(!context.uid){return Promise.resolve(false);}
if(!groupProms[group]){groupProms[group]=rpc("/web/dataset/call_kw/res.users/has_group",{model:"res.users",method:"has_group",args:[group],kwargs:{context},});}
return groupProms[group];},name:session.name,userName:session.username,isAdmin:session.is_admin,isSystem:session.is_system,partnerId:session.partner_id,home_action_id:session.home_action_id,showEffect:session.show_effect,get userId(){return context.uid;},get lang(){return context.lang;},get tz(){return context.tz;},get db(){const res={name:session.db,};if("dbuuid"in session){res.uuid=session.dbuuid;}
return res;},};},};registry.category("services").add("user",userService);return __exports;});;

/* /web/static/src/core/utils/arrays.js */
odoo.define('@web/core/utils/arrays',async function(require){'use strict';let __exports={};function _cartesian(){const args=Array.prototype.slice.call(arguments);if(args.length===0){return[undefined];}
const firstArray=args[0].map(function(elem){return[elem];});if(args.length===1){return firstArray;}
const productOfOtherArrays=_cartesian.apply(null,args.slice(1));return firstArray.reduce(function(acc,elem){return acc.concat(productOfOtherArrays.map(function(tuple){return elem.concat(tuple);}));},[]);}
function _getExtractorFrom(criterion){if(criterion){switch(typeof criterion){case"string":return(element)=>element[criterion];case"function":return criterion;default:throw new Error(`Expected criterion of type 'string' or 'function' and got '${typeof criterion}'`);}}else{return(element)=>element;}}
__exports.intersection=intersection;function intersection(array1,array2){return array1.filter((v)=>array2.includes(v));}
__exports.groupBy=groupBy;function groupBy(array,criterion){const extract=_getExtractorFrom(criterion);const groups={};for(const element of array){const group=String(extract(element));if(!(group in groups)){groups[group]=[];}
groups[group].push(element);}
return groups;}
__exports.sortBy=sortBy;function sortBy(array,criterion,order="asc"){const extract=_getExtractorFrom(criterion);return array.slice().sort((elA,elB)=>{const a=extract(elA);const b=extract(elB);let result;if(isNaN(a)&&isNaN(b)){result=a>b?1:a<b?-1:0;}else{result=a-b;}
return order==="asc"?result:-result;});}
__exports.symmetricalDifference=symmetricalDifference;function symmetricalDifference(arrayA,arrayB){return arrayA.filter((id)=>!arrayB.includes(id)).concat(arrayB.filter((id)=>!arrayA.includes(id)));}
__exports.cartesian=cartesian;function cartesian(){const args=Array.prototype.slice.call(arguments);if(args.length===0){return[undefined];}else if(args.length===1){return args[0];}else{return _cartesian.apply(null,args);}}
__exports.shallowEqual=shallowEqual;function shallowEqual(arrayA,arrayB){if(arrayA.length!==arrayB.length){return false;}
for(let i=0;i<arrayA.length;i++){if(arrayA[i]!==arrayB[i]){return false;}}
return true;}
__exports.sections=sections;function sections(array){const sections=[];for(let i=0;i<array.length+1;i++){sections.push(array.slice(0,i));}
return sections;}
__exports.unique=unique;function unique(array){return Array.from(new Set(array));}
return __exports;});;

/* /web/static/src/core/utils/binary.js */
odoo.define('@web/core/utils/binary',async function(require){'use strict';let __exports={};__exports.isBinarySize=isBinarySize;function isBinarySize(value){return/^\d+(\.\d*)? [^0-9]+$/.test(value);}
return __exports;});;

/* /web/static/src/core/utils/components.js */
odoo.define('@web/core/utils/components',async function(require){'use strict';let __exports={};const{Component,onError,xml,useSubEnv}=require("@odoo/owl");const ErrorHandler=__exports.ErrorHandler=class ErrorHandler extends Component{setup(){onError((error)=>{this.props.onError(error);});}}
ErrorHandler.template=xml`<t t-slot="default" />`;ErrorEvent.props=["onError"];const WithEnv=__exports.WithEnv=class WithEnv extends Component{setup(){useSubEnv(this.props.env);}}
WithEnv.template=xml`<t t-slot="default"/>`;return __exports;});;

/* /web/static/src/core/utils/concurrency.js */
odoo.define('@web/core/utils/concurrency',async function(require){'use strict';let __exports={};const KeepLast=__exports.KeepLast=class KeepLast{constructor(){this._id=0;}
add(promise){this._id++;const currentId=this._id;return new Promise((resolve,reject)=>{promise.then((value)=>{if(this._id===currentId){resolve(value);}}).catch((reason)=>{if(this._id===currentId){reject(reason);}});});}}
const Mutex=__exports.Mutex=class Mutex{constructor(){this._lock=Promise.resolve();this._queueSize=0;this._unlockedProm=undefined;this._unlock=undefined;}
async exec(action){this._queueSize++;if(!this._unlockedProm){this._unlockedProm=new Promise((resolve)=>{this._unlock=()=>{resolve();this._unlockedProm=undefined;};});}
const always=()=>{return Promise.resolve(action()).finally(()=>{if(--this._queueSize===0){this._unlock();}});};this._lock=this._lock.then(always,always);return this._lock;}
getUnlockedDef(){return this._unlockedProm||Promise.resolve();}}
const Race=__exports.Race=class Race{constructor(){this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;}
add(promise){if(!this.currentProm){this.currentProm=new Promise((resolve,reject)=>{this.currentPromResolver=(value)=>{this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;resolve(value);};this.currentPromRejecter=(error)=>{this.currentProm=null;this.currentPromResolver=null;this.currentPromRejecter=null;reject(error);};});}
promise.then(this.currentPromResolver).catch(this.currentPromRejecter);return this.currentProm;}
getCurrentProm(){return this.currentProm;}}
const Deferred=__exports.Deferred=class Deferred{constructor(){let resolve;let reject;const prom=new Promise((res,rej)=>{resolve=res;reject=rej;});return Object.assign(prom,{resolve,reject});}}
return __exports;});;

/* /web/static/src/core/utils/draggable.js */
odoo.define('@web/core/utils/draggable',async function(require){'use strict';let __exports={};const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder");const useDraggable=__exports.useDraggable=makeDraggableHook({name:"useDraggable",onDragStart({ctx,helpers}){helpers.execHandler("onDragStart",{element:ctx.currentElement});},onDrag({ctx,helpers}){helpers.execHandler("onDrag",{element:ctx.currentElement});},onDragEnd({ctx,helpers}){helpers.execHandler("onDragEnd",{element:ctx.currentElement});},onDrop({ctx,helpers}){helpers.execHandler("onDrop",{element:ctx.currentElement});},});return __exports;});;

/* /web/static/src/core/utils/draggable_hook_builder.js */
odoo.define('@web/core/utils/draggable_hook_builder',async function(require){'use strict';let __exports={};const{clamp}=require("@web/core/utils/numbers");const{debounce,setRecurringAnimationFrame}=require("@web/core/utils/timing");const{useEffect,useEnv,useExternalListener,onWillUnmount,reactive}=require("@odoo/owl");const DEFAULT_ACCEPTED_PARAMS={enable:["boolean","function"],ref:["object"],elements:["string"],handle:["string","function"],ignore:["string","function"],cursor:["string"],edgeScrolling:["object","function"],};const DEFAULT_DEFAULT_PARAMS={enable:true,edgeScrolling:{speed:10,threshold:30,},};const LEFT_CLICK=0;const MANDATORY_PARAMS=["ref","elements"];function cancelEvent(ev){ev.stopPropagation();ev.stopImmediatePropagation();ev.preventDefault();}
function getRect(el,options={}){const rect=el.getBoundingClientRect();if(options.adjust){const style=getComputedStyle(el);const[pl,pr,pt,pb]=["padding-left","padding-right","padding-top","padding-bottom",].map((prop)=>pixelValueToNumber(style.getPropertyValue(prop)));rect.x+=pl;rect.y+=pt;rect.width-=pl+pr;rect.height-=pt+pb;}
return rect;}
function getScrollParents(el){return[getScrollParentX(el),getScrollParentY(el)];}
function getScrollParentX(el){if(!el){return null;}
if(el.scrollWidth>el.clientWidth){const overflow=getComputedStyle(el).getPropertyValue("overflow");if(/\bauto\b|\bscroll\b/.test(overflow)){return el;}}
return getScrollParentX(el.parentElement);}
function getScrollParentY(el){if(!el){return null;}
if(el.scrollHeight>el.clientHeight){const overflow=getComputedStyle(el).getPropertyValue("overflow");if(/\bauto\b|\bscroll\b/.test(overflow)){return el;}}
return getScrollParentY(el.parentElement);}
function pixelValueToNumber(val){return Number(val.endsWith("px")?val.slice(0,-2):val);}
__exports.makeDraggableHook=makeDraggableHook;function makeDraggableHook(hookParams={}){const hookName=hookParams.name||"useAnonymousDraggable";const allAcceptedParams={...DEFAULT_ACCEPTED_PARAMS,...hookParams.acceptedParams};const defaultParams={...DEFAULT_DEFAULT_PARAMS,...hookParams.defaultParams};const computeParams=(params)=>{const computedParams={enable:true};for(const prop in allAcceptedParams){if(prop in params){computedParams[prop]=params[prop];if(typeof params[prop]==="function"){computedParams[prop]=computedParams[prop]();}}}
return Object.entries(computedParams);};const makeError=(reason)=>new Error(`Error in hook ${hookName}: ${reason}.`);return{[hookName](params){const addListener=(el,event,callback,options)=>{el.addEventListener(event,callback,options);cleanups.push(()=>el.removeEventListener(event,callback,options));};const addStyle=(el,style)=>{const originalStyle=el.getAttribute("style");cleanups.push(()=>originalStyle?el.setAttribute("style",originalStyle):el.removeAttribute("style"));for(const key in style){el.style[key]=style[key];}};const canDrag=(ev)=>{return(ctx.origin&&Math.hypot(ev.clientX-ctx.origin.x,ev.clientY-ctx.origin.y)>=ctx.pixelsTolerance);};const dragStart=()=>{state.dragging=true;[ctx.currentScrollParentX,ctx.currentScrollParentY]=getScrollParents(ctx.currentContainer);const[eRect]=updateRects();for(const siblingEl of ctx.ref.el.querySelectorAll(ctx.elementSelector)){if(siblingEl!==ctx.currentElement){addStyle(siblingEl,{"pointer-events":"auto"});}}
ctx.offset.x-=eRect.x;ctx.offset.y-=eRect.y;addStyle(ctx.currentElement,{position:"fixed","pointer-events":"none","z-index":1000,width:`${eRect.width}px`,height:`${eRect.height}px`,left:`${eRect.x}px`,top:`${eRect.y}px`,});const bodyStyle={"pointer-events":"none","user-select":"none",};if(ctx.cursor){bodyStyle.cursor=ctx.cursor;}
addStyle(document.body,bodyStyle);if((ctx.currentScrollParentX||ctx.currentScrollParentY)&&ctx.edgeScrolling.enabled){const cleanupFn=setRecurringAnimationFrame(handleEdgeScrolling);cleanups.push(cleanupFn);}
execBuildHandler("onDragStart");};const dragEnd=(cancelled,inErrorState)=>{if(state.dragging){if(!inErrorState){execBuildHandler("onDragEnd");if(!cancelled){execBuildHandler("onDrop");}}}
execBuildHandler("onCleanup");while(cleanups.length){cleanups.pop()();}
ctx.currentContainer=null;ctx.currentElement=null;ctx.currentElementRect=null;ctx.origin=null;ctx.currentScrollParentX=null;ctx.currentScrollParentY=null;state.dragging=false;};const execBuildHandler=(fnName,arg)=>{if(typeof hookParams[fnName]==="function"){hookParams[fnName]({ctx,helpers:buildHelpers,...arg});}};const execHandler=(callbackName,arg)=>{if(typeof params[callbackName]==="function"){try{params[callbackName]({...ctx.mouse,...arg});}catch(err){dragEnd(true,true);throw err;}}};const handleEdgeScrolling=(deltaTime)=>{const[eRect,,xRect,yRect]=updateRects();const{speed,threshold}=ctx.edgeScrolling;const correctedSpeed=(speed/16)*deltaTime;const diff={};if(xRect){const maxWidth=xRect.x+xRect.width;if(eRect.x-xRect.x<threshold){diff.x=[eRect.x-xRect.x,-1];}else if(maxWidth-eRect.x-eRect.width<threshold){diff.x=[maxWidth-eRect.x-eRect.width,1];}}
if(yRect){const maxHeight=yRect.y+yRect.height;if(eRect.y-yRect.y<threshold){diff.y=[eRect.y-yRect.y,-1];}else if(maxHeight-eRect.y-eRect.height<threshold){diff.y=[maxHeight-eRect.y-eRect.height,1];}}
const diffToScroll=([delta,sign])=>(1-clamp(delta,0,threshold)/threshold)*correctedSpeed*sign;if(diff.y){ctx.currentScrollParentY.scrollBy({top:diffToScroll(diff.y)});}
if(diff.x){ctx.currentScrollParentX.scrollBy({left:diffToScroll(diff.x)});}};const onKeydown=(ev)=>{if(!ctx.enabled||!state.dragging){return;}
switch(ev.key){case"Escape":case"Tab":{cancelEvent(ev);dragEnd(true);}}};const onMousedown=(ev)=>{updateMousePosition(ev);dragEnd(true);if(ev.button!==LEFT_CLICK||!ctx.enabled||!ev.target.closest(ctx.fullSelector)||(ctx.ignoreSelector&&ev.target.closest(ctx.ignoreSelector))){return;}
ev.preventDefault();ctx.currentContainer=ctx.ref.el;ctx.currentElement=ev.target.closest(ctx.elementSelector);ctx.origin={x:ev.clientX,y:ev.clientY,};Object.assign(ctx.offset,ctx.mouse);execBuildHandler("onWillStartDrag");};const onMousemove=(ev)=>{if(!ctx.enabled||!ctx.currentElement){return;}
if(!state.dragging){if(canDrag(ev)){dragStart();}}
updateMousePosition(ev);if(state.dragging){const[eRect,cRect]=updateRects();ctx.currentElement.style.left=`${clamp(
                        ctx.mouse.x - ctx.offset.x,
                        cRect.x,
                        cRect.x + cRect.width - eRect.width
                    )}px`;ctx.currentElement.style.top=`${clamp(
                        ctx.mouse.y - ctx.offset.y,
                        cRect.y,
                        cRect.y + cRect.height - eRect.height
                    )}px`;execBuildHandler("onDrag");}};const onMouseup=(ev)=>{updateMousePosition(ev);dragEnd(false);};const updateMousePosition=(ev)=>{ctx.mouse.x=ev.clientX;ctx.mouse.y=ev.clientY;};const updateRects=()=>{const containerRect=getRect(ctx.currentContainer,{adjust:true});containerRect.width=ctx.currentContainer.scrollWidth;containerRect.height=ctx.currentContainer.scrollHeight;let scrollParentXRect=null;let scrollParentYRect=null;if(ctx.edgeScrolling.enabled){if(ctx.currentScrollParentX){scrollParentXRect=getRect(ctx.currentScrollParentX,{adjust:true});const right=Math.min(containerRect.left+ctx.currentContainer.scrollWidth,scrollParentXRect.right);containerRect.x=Math.max(containerRect.x,scrollParentXRect.x);containerRect.width=right-containerRect.x;}
if(ctx.currentScrollParentY){scrollParentYRect=getRect(ctx.currentScrollParentY,{adjust:true});const bottom=Math.min(containerRect.top+ctx.currentContainer.scrollHeight,scrollParentYRect.bottom);containerRect.y=Math.max(containerRect.y,scrollParentYRect.y);containerRect.height=bottom-containerRect.y;}}
ctx.currentElementRect=getRect(ctx.currentElement);return[ctx.currentElementRect,containerRect,scrollParentXRect,scrollParentYRect];};const env=useEnv();const state=reactive({dragging:false});for(const prop in allAcceptedParams){if(params[prop]&&!allAcceptedParams[prop].includes(typeof params[prop])){throw makeError(`invalid type for property "${prop}" in parameters`);}else if(!params[prop]&&MANDATORY_PARAMS.includes(prop)){throw makeError(`missing required property "${prop}" in parameters`);}}
const buildHelpers={addListener,addStyle,execHandler};const cleanups=[];const ctx={ref:params.ref,ignoreSelector:null,fullSelector:null,cursor:null,currentContainer:null,currentElement:null,currentElementRect:null,scrollParent:null,enabled:false,mouse:{x:0,y:0},offset:{x:0,y:0},edgeScrolling:{enabled:true},pixelsTolerance:10,};useEffect((...deps)=>{const actualParams={...defaultParams,...Object.fromEntries(deps)};ctx.enabled=Boolean(ctx.ref.el&&!env.isSmall&&actualParams.enable);if(!ctx.enabled){return;}
ctx.elementSelector=actualParams.elements;if(!ctx.elementSelector){throw makeError(`no value found by "elements" selector: ${ctx.elementSelector}`);}
const allSelectors=[ctx.elementSelector];ctx.cursor=actualParams.cursor||null;if(actualParams.handle){allSelectors.push(actualParams.handle);}
if(actualParams.ignore){ctx.ignoreSelector=actualParams.ignore;}
ctx.fullSelector=allSelectors.join(" ");Object.assign(ctx.edgeScrolling,actualParams.edgeScrolling);execBuildHandler("onComputeParams",{params:actualParams});},()=>computeParams(params));useEffect((el)=>{if(el){el.addEventListener("mousedown",onMousedown);return()=>el.removeEventListener("mousedown",onMousedown);}},()=>[ctx.ref.el]);const debouncedOnMouseMove=debounce(onMousemove,"animationFrame",true);useExternalListener(window,"mousemove",debouncedOnMouseMove);useExternalListener(window,"mouseup",onMouseup);useExternalListener(window,"keydown",onKeydown,true);onWillUnmount(()=>dragEnd(true));return state;},}[hookName];}
return __exports;});;

/* /web/static/src/core/utils/functions.js */
odoo.define('@web/core/utils/functions',async function(require){'use strict';let __exports={};__exports.memoize=memoize;function memoize(func){const cache=new Map();const funcName=func.name?func.name+" (memoized)":"memoized";return{[funcName](...args){if(!cache.has(args[0])){cache.set(args[0],func(...args));}
return cache.get(...args);},}[funcName];}
return __exports;});;

/* /web/static/src/core/utils/hooks.js */
odoo.define('@web/core/utils/hooks',async function(require){'use strict';let __exports={};const{SERVICES_METADATA}=require("@web/env");const{status,useComponent,useEffect,useRef,onWillUnmount}=require("@odoo/owl");__exports.useAutofocus=useAutofocus;function useAutofocus({refName,selectAll}={}){const comp=useComponent();const ref=useRef(refName||"autofocus");if(comp.env.isSmall){return ref;}
if(comp.env.device&&comp.env.device.isMobileDevice){return ref;}
useEffect((el)=>{if(el){el.focus();if(["INPUT","TEXTAREA"].includes(el.tagName)&&el.type!=="number"){el.selectionEnd=el.value.length;el.selectionStart=selectAll?0:el.value.length;}}},()=>[ref.el]);return ref;}
__exports.useBus=useBus;function useBus(bus,eventName,callback){const component=useComponent();useEffect(()=>{const listener=callback.bind(component);bus.addEventListener(eventName,listener);return()=>bus.removeEventListener(eventName,listener);},()=>[]);}
__exports.useListener=useListener;function useListener(eventName,querySelector,handler,options={}){if(typeof arguments[1]!=="string"){querySelector=null;handler=arguments[1];options=arguments[2]||{};}
if(typeof handler!=="function"){throw new Error("The handler must be a function");}
const comp=useComponent();let boundHandler;if(querySelector){boundHandler=function(ev){let el=ev.target;let target;while(el&&!target){if(el.matches(querySelector)){target=el;}else if(el===comp.el){el=null;}else{el=el.parentElement;}}
if(el){handler.call(comp,ev);}};}else{boundHandler=handler.bind(comp);}
useEffect(()=>{comp.el.addEventListener(eventName,boundHandler,options);return()=>{comp.el.removeEventListener(eventName,boundHandler,options);};},()=>[]);}
function _protectMethod(component,fn){return function(...args){if(status(component)==="destroyed"){return Promise.reject(new Error("Component is destroyed"));}
const prom=Promise.resolve(fn.call(this,...args));const protectedProm=prom.then((result)=>status(component)==="destroyed"?new Promise(()=>{}):result);return Object.assign(protectedProm,{abort:prom.abort,cancel:prom.cancel,});};}
__exports.useService=useService;function useService(serviceName){const component=useComponent();const{services}=component.env;if(!(serviceName in services)){throw new Error(`Service ${serviceName} is not available`);}
const service=services[serviceName];if(serviceName in SERVICES_METADATA){if(service instanceof Function){return _protectMethod(component,service);}else{const methods=SERVICES_METADATA[serviceName];const result=Object.create(service);for(const method of methods){result[method]=_protectMethod(component,service[method]);}
return result;}}
return service;}
__exports.useChildRef=useChildRef;function useChildRef(){let defined=false;let value;return function ref(v){value=v;if(defined){return;}
Object.defineProperty(ref,"el",{get(){return value.el;},});defined=true;};}
__exports.useForwardRefToParent=useForwardRefToParent;function useForwardRefToParent(refName){const component=useComponent();const ref=useRef(refName);if(component.props[refName]){component.props[refName](ref);}
return ref;}
__exports.useOwnedDialogs=useOwnedDialogs;function useOwnedDialogs(){const dialogService=useService("dialog");const cbs=[];onWillUnmount(()=>{cbs.forEach((cb)=>cb());});const addDialog=(...args)=>{const close=dialogService.add(...args);cbs.push(close);return close;};return addDialog;}
return __exports;});;

/* /web/static/src/core/utils/numbers.js */
odoo.define('@web/core/utils/numbers',async function(require){'use strict';let __exports={};__exports.computeVariation=computeVariation;function computeVariation(value,comparisonValue){if(isNaN(value)||isNaN(comparisonValue)){return NaN;}
if(comparisonValue===0){if(value===0){return 0;}else if(value>0){return 1;}else{return-1;}}
return(value-comparisonValue)/Math.abs(comparisonValue);}
__exports.clamp=clamp;function clamp(num,min,max){return Math.max(Math.min(num,max),min);}
return __exports;});;

/* /web/static/src/core/utils/objects.js */
odoo.define('@web/core/utils/objects',async function(require){'use strict';let __exports={};__exports.shallowEqual=shallowEqual;function shallowEqual(obj1,obj2){const obj1Keys=Object.keys(obj1);return(obj1Keys.length===Object.keys(obj2).length&&obj1Keys.every((key)=>obj1[key]===obj2[key]));}
__exports.deepCopy=deepCopy;function deepCopy(obj){return JSON.parse(JSON.stringify(obj));}
__exports.omit=omit;function omit(object,...properties){const result={};const propertiesSet=new Set(properties);for(const key in object){if(!propertiesSet.has(key)){result[key]=object[key];}}
return result;}
__exports.pick=pick;function pick(object,...properties){return Object.fromEntries(properties.filter((prop)=>prop in object).map((prop)=>[prop,object[prop]]));}
return __exports;});;

/* /web/static/src/core/utils/patch.js */
odoo.define('@web/core/utils/patch',async function(require){'use strict';let __exports={};const patchMap=new WeakMap();__exports.patch=patch;function patch(obj,patchName,patchValue,options={}){if(typeof patchName!=="string"){throw new Error("Incorrect use of patch: second argument should be the patchName");}
const pure=Boolean(options.pure);if(!patchMap.has(obj)){patchMap.set(obj,{original:{},patches:[],});}
const objDesc=patchMap.get(obj);if(objDesc.patches.some((p)=>p.name===patchName)){throw new Error(`Class ${obj.name} already has a patch ${patchName}`);}
objDesc.patches.push({name:patchName,patch:patchValue,pure,});for(const k in patchValue){let prevDesc=null;let proto=obj;do{prevDesc=Object.getOwnPropertyDescriptor(proto,k);proto=Object.getPrototypeOf(proto);}while(!prevDesc&&proto);let newDesc=Object.getOwnPropertyDescriptor(patchValue,k);if(!Object.hasOwnProperty.call(objDesc.original,k)){objDesc.original[k]=Object.getOwnPropertyDescriptor(obj,k);}
if(prevDesc){const patchedFnName=`${k} (patch ${patchName})`;if(prevDesc.value&&typeof newDesc.value==="function"){newDesc={...prevDesc,value:newDesc.value};makeIntermediateFunction("value",prevDesc,newDesc,patchedFnName);}
if((newDesc.get||newDesc.set)&&(prevDesc.get||prevDesc.set)){newDesc={...prevDesc,get:newDesc.get||prevDesc.get,set:newDesc.set||prevDesc.set,};if(prevDesc.get&&typeof newDesc.get==="function"){makeIntermediateFunction("get",prevDesc,newDesc,patchedFnName);}
if(prevDesc.set&&typeof newDesc.set==="function"){makeIntermediateFunction("set",prevDesc,newDesc,patchedFnName);}}}
Object.defineProperty(obj,k,newDesc);}
function makeIntermediateFunction(key,prevDesc,newDesc,patchedFnName){const _superFn=prevDesc[key];const patchFn=newDesc[key];if(pure){newDesc[key]=patchFn;}else{newDesc[key]={[patchedFnName](...args){let prevSuper;if(this){prevSuper=this._super;Object.defineProperty(this,"_super",{value:_superFn.bind(this),configurable:true,writable:true,});}
const result=patchFn.call(this,...args);if(this){Object.defineProperty(this,"_super",{value:prevSuper,configurable:true,writable:true,});}
return result;},}[patchedFnName];}}}
__exports.unpatch=unpatch;function unpatch(obj,patchName){const objDesc=patchMap.get(obj);if(!objDesc.patches.some((p)=>p.name===patchName)){throw new Error(`Class ${obj.name} does not have any patch ${patchName}`);}
patchMap.delete(obj);for(const k in objDesc.original){if(objDesc.original[k]===undefined){delete obj[k];}else{Object.defineProperty(obj,k,objDesc.original[k]);}}
for(const patchDesc of objDesc.patches){if(patchDesc.name!==patchName){patch(obj,patchDesc.name,patchDesc.patch,{pure:patchDesc.pure});}}}
return __exports;});;

/* /web/static/src/core/utils/render.js */
odoo.define('@web/core/utils/render',async function(require){'use strict';let __exports={};const{blockDom,markup}=require("@odoo/owl");__exports.renderToString=renderToString;function renderToString(template,context={}){const app=renderToString.app;if(!app){throw new Error("an app must be configured before using renderToString");}
const templateFn=app.getTemplate(template);const bdom=templateFn(context,{});const div=document.createElement("div");blockDom.mount(bdom,div);return div.innerHTML;}
__exports.renderToMarkup=renderToMarkup;function renderToMarkup(template,context={}){return markup(renderToString(template,context));}
return __exports;});;

/* /web/static/src/core/utils/scrolling.js */
odoo.define('@web/core/utils/scrolling',async function(require){'use strict';let __exports={};__exports.scrollTo=scrollTo;function scrollTo(element,options={scrollable:null,isAnchor:false}){function _getScrollParent(node){if(node==null){return null;}
if(node.scrollHeight>node.clientHeight&&node.clientHeight>0){return node;}else{return _getScrollParent(node.parentNode);}}
const scrollable=options.scrollable?options.scrollable:_getScrollParent(element.parentNode);if(scrollable){const scrollBottom=scrollable.getBoundingClientRect().bottom;const scrollTop=scrollable.getBoundingClientRect().top;const elementBottom=element.getBoundingClientRect().bottom;const elementTop=element.getBoundingClientRect().top;if(elementBottom>scrollBottom&&!options.isAnchor){scrollable.scrollTop+=elementTop-scrollBottom+Math.ceil(element.getBoundingClientRect().height);}else if(elementTop<scrollTop||options.isAnchor){scrollable.scrollTop-=scrollTop-elementTop;if(options.isAnchor){const parentScrollable=_getScrollParent(scrollable.parentNode);if(parentScrollable){scrollTo(scrollable,{isAnchor:true,scrollable:parentScrollable});}}}}}
return __exports;});;

/* /web/static/src/core/utils/search.js */
odoo.define('@web/core/utils/search',async function(require){'use strict';let __exports={};const{unaccent}=require("@web/core/utils/strings");function match(pattern,str){let totalScore=0;let currentScore=0;const len=str.length;let patternIndex=0;pattern=unaccent(pattern,false);str=unaccent(str,false);for(let i=0;i<len;i++){if(str[i]===pattern[patternIndex]){patternIndex++;currentScore+=100+currentScore-i/200;}else{currentScore=0;}
totalScore=totalScore+currentScore;}
return patternIndex===pattern.length?totalScore:0;}
__exports.fuzzyLookup=fuzzyLookup;function fuzzyLookup(pattern,list,fn){const results=[];list.forEach((data)=>{const score=match(pattern,fn(data));if(score>0){results.push({score,elem:data});}});results.sort((a,b)=>b.score-a.score);return results.map((r)=>r.elem);}
__exports.fuzzyTest=fuzzyTest;function fuzzyTest(pattern,string){return match(pattern,string)!==0;}
return __exports;});;

/* /web/static/src/core/utils/sortable.js */
odoo.define('@web/core/utils/sortable',async function(require){'use strict';let __exports={};const{makeDraggableHook}=require("@web/core/utils/draggable_hook_builder");const useSortable=__exports.useSortable=makeDraggableHook({name:"useSortable",acceptedParams:{groups:["string","function"],connectGroups:["boolean","function"],},defaultParams:{connectGroups:false,currentGroup:null,edgeScrolling:{speed:20,threshold:60},ghostElement:null,groupSelector:null,},onComputeParams({ctx,params}){ctx.groupSelector=params.groups||null;if(ctx.groupSelector){ctx.fullSelector=[ctx.groupSelector,ctx.fullSelector].join(" ");}
ctx.connectGroups=params.connectGroups;},onDragStart({ctx,helpers}){const onElementMouseenter=(ev)=>{const element=ev.currentTarget;if(ctx.connectGroups||!ctx.groupSelector||ctx.currentGroup===element.closest(ctx.groupSelector)){const pos=ctx.ghostElement.compareDocumentPosition(element);if(pos===2){element.before(ctx.ghostElement);}else if(pos===4){element.after(ctx.ghostElement);}}
helpers.execHandler("onElementEnter",{element});};const onElementMouseleave=(ev)=>{const element=ev.currentTarget;helpers.execHandler("onElementLeave",{element});};const onGroupMouseenter=(ev)=>{const group=ev.currentTarget;group.appendChild(ctx.ghostElement);helpers.execHandler("onGroupEnter",{group});};const onGroupMouseleave=(ev)=>{const group=ev.currentTarget;helpers.execHandler("onGroupLeave",{group});};const{width,height}=ctx.currentElementRect;ctx.ghostElement=ctx.currentElement.cloneNode(false);ctx.ghostElement.style=`visibility: hidden; display: block; width: ${width}px; height:${height}px;`;if(ctx.connectGroups&&ctx.groupSelector){for(const siblingGroup of ctx.ref.el.querySelectorAll(ctx.groupSelector)){helpers.addListener(siblingGroup,"mouseenter",onGroupMouseenter);helpers.addListener(siblingGroup,"mouseleave",onGroupMouseleave);helpers.addStyle(siblingGroup,{"pointer-events":"auto"});}}
for(const siblingEl of ctx.ref.el.querySelectorAll(ctx.elementSelector)){if(siblingEl!==ctx.currentElement&&siblingEl!==ctx.ghostElement){helpers.addListener(siblingEl,"mouseenter",onElementMouseenter);helpers.addListener(siblingEl,"mouseleave",onElementMouseleave);}}
ctx.currentElement.after(ctx.ghostElement);helpers.execHandler("onDragStart",{element:ctx.currentElement,group:ctx.currentGroup,});},onDragEnd({ctx,helpers}){helpers.execHandler("onDragEnd",{element:ctx.currentElement,group:ctx.currentGroup});},onDrop({ctx,helpers}){const previous=ctx.ghostElement.previousElementSibling;const next=ctx.ghostElement.nextElementSibling;if(previous!==ctx.currentElement&&next!==ctx.currentElement){helpers.execHandler("onDrop",{element:ctx.currentElement,group:ctx.currentGroup,previous,next,parent:ctx.groupSelector&&ctx.ghostElement.closest(ctx.groupSelector),});}},onWillStartDrag({ctx}){if(ctx.groupSelector){ctx.currentGroup=ctx.currentElement.closest(ctx.groupSelector);if(!ctx.connectGroups){ctx.currentContainer=ctx.currentGroup;}}},onCleanup({ctx}){if(ctx.ghostElement){ctx.ghostElement.remove();}
ctx.currentGroup=null;ctx.ghostElement=null;},});return __exports;});;

/* /web/static/src/core/utils/strings.js */
odoo.define('@web/core/utils/strings',async function(require){'use strict';let __exports={};const nbsp=__exports.nbsp="\u00a0";__exports.escape=escape;function escape(str){if(str===undefined){return"";}
if(typeof str==="number"){return String(str);}
const p=document.createElement("p");p.textContent=str;return p.innerHTML;}
__exports.escapeRegExp=escapeRegExp;function escapeRegExp(str){return str.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");}
__exports.intersperse=intersperse;function intersperse(str,indices,separator=""){separator=separator||"";const result=[];let last=str.length;for(let i=0;i<indices.length;++i){let section=indices[i];if(section===-1||last<=0){break;}else if(section===0&&i===0){break;}else if(section===0){section=indices[--i];}
result.push(str.substring(last-section,last));last-=section;}
const s=str.substring(0,last);if(s){result.push(s);}
return result.reverse().join(separator);}
__exports.sprintf=sprintf;function sprintf(s,...values){if(values.length===1&&Object.prototype.toString.call(values[0])==="[object Object]"){const valuesDict=values[0];s=s.replace(/%\(?([^)]+)\)s/g,(match,value)=>valuesDict[value]);}else if(values.length>0){s=s.replace(/%s/g,()=>values.shift());}
return s;}
__exports.capitalize=capitalize;function capitalize(s){return s?s[0].toUpperCase()+s.slice(1):"";}
const diacriticsMap={'\u0041':'A','\u24B6':'A','\uFF21':'A','\u00C0':'A','\u00C1':'A','\u00C2':'A','\u1EA6':'A','\u1EA4':'A','\u1EAA':'A','\u1EA8':'A','\u00C3':'A','\u0100':'A','\u0102':'A','\u1EB0':'A','\u1EAE':'A','\u1EB4':'A','\u1EB2':'A','\u0226':'A','\u01E0':'A','\u00C4':'A','\u01DE':'A','\u1EA2':'A','\u00C5':'A','\u01FA':'A','\u01CD':'A','\u0200':'A','\u0202':'A','\u1EA0':'A','\u1EAC':'A','\u1EB6':'A','\u1E00':'A','\u0104':'A','\u023A':'A','\u2C6F':'A','\uA732':'AA','\u00C6':'AE','\u01FC':'AE','\u01E2':'AE','\uA734':'AO','\uA736':'AU','\uA738':'AV','\uA73A':'AV','\uA73C':'AY','\u0042':'B','\u24B7':'B','\uFF22':'B','\u1E02':'B','\u1E04':'B','\u1E06':'B','\u0243':'B','\u0182':'B','\u0181':'B','\u0043':'C','\u24B8':'C','\uFF23':'C','\u0106':'C','\u0108':'C','\u010A':'C','\u010C':'C','\u00C7':'C','\u1E08':'C','\u0187':'C','\u023B':'C','\uA73E':'C','\u0044':'D','\u24B9':'D','\uFF24':'D','\u1E0A':'D','\u010E':'D','\u1E0C':'D','\u1E10':'D','\u1E12':'D','\u1E0E':'D','\u0110':'D','\u018B':'D','\u018A':'D','\u0189':'D','\uA779':'D','\u01F1':'DZ','\u01C4':'DZ','\u01F2':'Dz','\u01C5':'Dz','\u0045':'E','\u24BA':'E','\uFF25':'E','\u00C8':'E','\u00C9':'E','\u00CA':'E','\u1EC0':'E','\u1EBE':'E','\u1EC4':'E','\u1EC2':'E','\u1EBC':'E','\u0112':'E','\u1E14':'E','\u1E16':'E','\u0114':'E','\u0116':'E','\u00CB':'E','\u1EBA':'E','\u011A':'E','\u0204':'E','\u0206':'E','\u1EB8':'E','\u1EC6':'E','\u0228':'E','\u1E1C':'E','\u0118':'E','\u1E18':'E','\u1E1A':'E','\u0190':'E','\u018E':'E','\u0046':'F','\u24BB':'F','\uFF26':'F','\u1E1E':'F','\u0191':'F','\uA77B':'F','\u0047':'G','\u24BC':'G','\uFF27':'G','\u01F4':'G','\u011C':'G','\u1E20':'G','\u011E':'G','\u0120':'G','\u01E6':'G','\u0122':'G','\u01E4':'G','\u0193':'G','\uA7A0':'G','\uA77D':'G','\uA77E':'G','\u0048':'H','\u24BD':'H','\uFF28':'H','\u0124':'H','\u1E22':'H','\u1E26':'H','\u021E':'H','\u1E24':'H','\u1E28':'H','\u1E2A':'H','\u0126':'H','\u2C67':'H','\u2C75':'H','\uA78D':'H','\u0049':'I','\u24BE':'I','\uFF29':'I','\u00CC':'I','\u00CD':'I','\u00CE':'I','\u0128':'I','\u012A':'I','\u012C':'I','\u0130':'I','\u00CF':'I','\u1E2E':'I','\u1EC8':'I','\u01CF':'I','\u0208':'I','\u020A':'I','\u1ECA':'I','\u012E':'I','\u1E2C':'I','\u0197':'I','\u004A':'J','\u24BF':'J','\uFF2A':'J','\u0134':'J','\u0248':'J','\u004B':'K','\u24C0':'K','\uFF2B':'K','\u1E30':'K','\u01E8':'K','\u1E32':'K','\u0136':'K','\u1E34':'K','\u0198':'K','\u2C69':'K','\uA740':'K','\uA742':'K','\uA744':'K','\uA7A2':'K','\u004C':'L','\u24C1':'L','\uFF2C':'L','\u013F':'L','\u0139':'L','\u013D':'L','\u1E36':'L','\u1E38':'L','\u013B':'L','\u1E3C':'L','\u1E3A':'L','\u0141':'L','\u023D':'L','\u2C62':'L','\u2C60':'L','\uA748':'L','\uA746':'L','\uA780':'L','\u01C7':'LJ','\u01C8':'Lj','\u004D':'M','\u24C2':'M','\uFF2D':'M','\u1E3E':'M','\u1E40':'M','\u1E42':'M','\u2C6E':'M','\u019C':'M','\u004E':'N','\u24C3':'N','\uFF2E':'N','\u01F8':'N','\u0143':'N','\u00D1':'N','\u1E44':'N','\u0147':'N','\u1E46':'N','\u0145':'N','\u1E4A':'N','\u1E48':'N','\u0220':'N','\u019D':'N','\uA790':'N','\uA7A4':'N','\u01CA':'NJ','\u01CB':'Nj','\u004F':'O','\u24C4':'O','\uFF2F':'O','\u00D2':'O','\u00D3':'O','\u00D4':'O','\u1ED2':'O','\u1ED0':'O','\u1ED6':'O','\u1ED4':'O','\u00D5':'O','\u1E4C':'O','\u022C':'O','\u1E4E':'O','\u014C':'O','\u1E50':'O','\u1E52':'O','\u014E':'O','\u022E':'O','\u0230':'O','\u00D6':'O','\u022A':'O','\u1ECE':'O','\u0150':'O','\u01D1':'O','\u020C':'O','\u020E':'O','\u01A0':'O','\u1EDC':'O','\u1EDA':'O','\u1EE0':'O','\u1EDE':'O','\u1EE2':'O','\u1ECC':'O','\u1ED8':'O','\u01EA':'O','\u01EC':'O','\u00D8':'O','\u01FE':'O','\u0186':'O','\u019F':'O','\uA74A':'O','\uA74C':'O','\u01A2':'OI','\uA74E':'OO','\u0222':'OU','\u0050':'P','\u24C5':'P','\uFF30':'P','\u1E54':'P','\u1E56':'P','\u01A4':'P','\u2C63':'P','\uA750':'P','\uA752':'P','\uA754':'P','\u0051':'Q','\u24C6':'Q','\uFF31':'Q','\uA756':'Q','\uA758':'Q','\u024A':'Q','\u0052':'R','\u24C7':'R','\uFF32':'R','\u0154':'R','\u1E58':'R','\u0158':'R','\u0210':'R','\u0212':'R','\u1E5A':'R','\u1E5C':'R','\u0156':'R','\u1E5E':'R','\u024C':'R','\u2C64':'R','\uA75A':'R','\uA7A6':'R','\uA782':'R','\u0053':'S','\u24C8':'S','\uFF33':'S','\u1E9E':'S','\u015A':'S','\u1E64':'S','\u015C':'S','\u1E60':'S','\u0160':'S','\u1E66':'S','\u1E62':'S','\u1E68':'S','\u0218':'S','\u015E':'S','\u2C7E':'S','\uA7A8':'S','\uA784':'S','\u0054':'T','\u24C9':'T','\uFF34':'T','\u1E6A':'T','\u0164':'T','\u1E6C':'T','\u021A':'T','\u0162':'T','\u1E70':'T','\u1E6E':'T','\u0166':'T','\u01AC':'T','\u01AE':'T','\u023E':'T','\uA786':'T','\uA728':'TZ','\u0055':'U','\u24CA':'U','\uFF35':'U','\u00D9':'U','\u00DA':'U','\u00DB':'U','\u0168':'U','\u1E78':'U','\u016A':'U','\u1E7A':'U','\u016C':'U','\u00DC':'U','\u01DB':'U','\u01D7':'U','\u01D5':'U','\u01D9':'U','\u1EE6':'U','\u016E':'U','\u0170':'U','\u01D3':'U','\u0214':'U','\u0216':'U','\u01AF':'U','\u1EEA':'U','\u1EE8':'U','\u1EEE':'U','\u1EEC':'U','\u1EF0':'U','\u1EE4':'U','\u1E72':'U','\u0172':'U','\u1E76':'U','\u1E74':'U','\u0244':'U','\u0056':'V','\u24CB':'V','\uFF36':'V','\u1E7C':'V','\u1E7E':'V','\u01B2':'V','\uA75E':'V','\u0245':'V','\uA760':'VY','\u0057':'W','\u24CC':'W','\uFF37':'W','\u1E80':'W','\u1E82':'W','\u0174':'W','\u1E86':'W','\u1E84':'W','\u1E88':'W','\u2C72':'W','\u0058':'X','\u24CD':'X','\uFF38':'X','\u1E8A':'X','\u1E8C':'X','\u0059':'Y','\u24CE':'Y','\uFF39':'Y','\u1EF2':'Y','\u00DD':'Y','\u0176':'Y','\u1EF8':'Y','\u0232':'Y','\u1E8E':'Y','\u0178':'Y','\u1EF6':'Y','\u1EF4':'Y','\u01B3':'Y','\u024E':'Y','\u1EFE':'Y','\u005A':'Z','\u24CF':'Z','\uFF3A':'Z','\u0179':'Z','\u1E90':'Z','\u017B':'Z','\u017D':'Z','\u1E92':'Z','\u1E94':'Z','\u01B5':'Z','\u0224':'Z','\u2C7F':'Z','\u2C6B':'Z','\uA762':'Z','\u0061':'a','\u24D0':'a','\uFF41':'a','\u1E9A':'a','\u00E0':'a','\u00E1':'a','\u00E2':'a','\u1EA7':'a','\u1EA5':'a','\u1EAB':'a','\u1EA9':'a','\u00E3':'a','\u0101':'a','\u0103':'a','\u1EB1':'a','\u1EAF':'a','\u1EB5':'a','\u1EB3':'a','\u0227':'a','\u01E1':'a','\u00E4':'a','\u01DF':'a','\u1EA3':'a','\u00E5':'a','\u01FB':'a','\u01CE':'a','\u0201':'a','\u0203':'a','\u1EA1':'a','\u1EAD':'a','\u1EB7':'a','\u1E01':'a','\u0105':'a','\u2C65':'a','\u0250':'a','\uA733':'aa','\u00E6':'ae','\u01FD':'ae','\u01E3':'ae','\uA735':'ao','\uA737':'au','\uA739':'av','\uA73B':'av','\uA73D':'ay','\u0062':'b','\u24D1':'b','\uFF42':'b','\u1E03':'b','\u1E05':'b','\u1E07':'b','\u0180':'b','\u0183':'b','\u0253':'b','\u0063':'c','\u24D2':'c','\uFF43':'c','\u0107':'c','\u0109':'c','\u010B':'c','\u010D':'c','\u00E7':'c','\u1E09':'c','\u0188':'c','\u023C':'c','\uA73F':'c','\u2184':'c','\u0064':'d','\u24D3':'d','\uFF44':'d','\u1E0B':'d','\u010F':'d','\u1E0D':'d','\u1E11':'d','\u1E13':'d','\u1E0F':'d','\u0111':'d','\u018C':'d','\u0256':'d','\u0257':'d','\uA77A':'d','\u01F3':'dz','\u01C6':'dz','\u0065':'e','\u24D4':'e','\uFF45':'e','\u00E8':'e','\u00E9':'e','\u00EA':'e','\u1EC1':'e','\u1EBF':'e','\u1EC5':'e','\u1EC3':'e','\u1EBD':'e','\u0113':'e','\u1E15':'e','\u1E17':'e','\u0115':'e','\u0117':'e','\u00EB':'e','\u1EBB':'e','\u011B':'e','\u0205':'e','\u0207':'e','\u1EB9':'e','\u1EC7':'e','\u0229':'e','\u1E1D':'e','\u0119':'e','\u1E19':'e','\u1E1B':'e','\u0247':'e','\u025B':'e','\u01DD':'e','\u0066':'f','\u24D5':'f','\uFF46':'f','\u1E1F':'f','\u0192':'f','\uA77C':'f','\u0067':'g','\u24D6':'g','\uFF47':'g','\u01F5':'g','\u011D':'g','\u1E21':'g','\u011F':'g','\u0121':'g','\u01E7':'g','\u0123':'g','\u01E5':'g','\u0260':'g','\uA7A1':'g','\u1D79':'g','\uA77F':'g','\u0068':'h','\u24D7':'h','\uFF48':'h','\u0125':'h','\u1E23':'h','\u1E27':'h','\u021F':'h','\u1E25':'h','\u1E29':'h','\u1E2B':'h','\u1E96':'h','\u0127':'h','\u2C68':'h','\u2C76':'h','\u0265':'h','\u0195':'hv','\u0069':'i','\u24D8':'i','\uFF49':'i','\u00EC':'i','\u00ED':'i','\u00EE':'i','\u0129':'i','\u012B':'i','\u012D':'i','\u00EF':'i','\u1E2F':'i','\u1EC9':'i','\u01D0':'i','\u0209':'i','\u020B':'i','\u1ECB':'i','\u012F':'i','\u1E2D':'i','\u0268':'i','\u0131':'i','\u006A':'j','\u24D9':'j','\uFF4A':'j','\u0135':'j','\u01F0':'j','\u0249':'j','\u006B':'k','\u24DA':'k','\uFF4B':'k','\u1E31':'k','\u01E9':'k','\u1E33':'k','\u0137':'k','\u1E35':'k','\u0199':'k','\u2C6A':'k','\uA741':'k','\uA743':'k','\uA745':'k','\uA7A3':'k','\u006C':'l','\u24DB':'l','\uFF4C':'l','\u0140':'l','\u013A':'l','\u013E':'l','\u1E37':'l','\u1E39':'l','\u013C':'l','\u1E3D':'l','\u1E3B':'l','\u017F':'l','\u0142':'l','\u019A':'l','\u026B':'l','\u2C61':'l','\uA749':'l','\uA781':'l','\uA747':'l','\u01C9':'lj','\u006D':'m','\u24DC':'m','\uFF4D':'m','\u1E3F':'m','\u1E41':'m','\u1E43':'m','\u0271':'m','\u026F':'m','\u006E':'n','\u24DD':'n','\uFF4E':'n','\u01F9':'n','\u0144':'n','\u00F1':'n','\u1E45':'n','\u0148':'n','\u1E47':'n','\u0146':'n','\u1E4B':'n','\u1E49':'n','\u019E':'n','\u0272':'n','\u0149':'n','\uA791':'n','\uA7A5':'n','\u01CC':'nj','\u006F':'o','\u24DE':'o','\uFF4F':'o','\u00F2':'o','\u00F3':'o','\u00F4':'o','\u1ED3':'o','\u1ED1':'o','\u1ED7':'o','\u1ED5':'o','\u00F5':'o','\u1E4D':'o','\u022D':'o','\u1E4F':'o','\u014D':'o','\u1E51':'o','\u1E53':'o','\u014F':'o','\u022F':'o','\u0231':'o','\u00F6':'o','\u022B':'o','\u1ECF':'o','\u0151':'o','\u01D2':'o','\u020D':'o','\u020F':'o','\u01A1':'o','\u1EDD':'o','\u1EDB':'o','\u1EE1':'o','\u1EDF':'o','\u1EE3':'o','\u1ECD':'o','\u1ED9':'o','\u01EB':'o','\u01ED':'o','\u00F8':'o','\u01FF':'o','\u0254':'o','\uA74B':'o','\uA74D':'o','\u0275':'o','\u01A3':'oi','\u0223':'ou','\uA74F':'oo','\u0070':'p','\u24DF':'p','\uFF50':'p','\u1E55':'p','\u1E57':'p','\u01A5':'p','\u1D7D':'p','\uA751':'p','\uA753':'p','\uA755':'p','\u0071':'q','\u24E0':'q','\uFF51':'q','\u024B':'q','\uA757':'q','\uA759':'q','\u0072':'r','\u24E1':'r','\uFF52':'r','\u0155':'r','\u1E59':'r','\u0159':'r','\u0211':'r','\u0213':'r','\u1E5B':'r','\u1E5D':'r','\u0157':'r','\u1E5F':'r','\u024D':'r','\u027D':'r','\uA75B':'r','\uA7A7':'r','\uA783':'r','\u0073':'s','\u24E2':'s','\uFF53':'s','\u00DF':'s','\u015B':'s','\u1E65':'s','\u015D':'s','\u1E61':'s','\u0161':'s','\u1E67':'s','\u1E63':'s','\u1E69':'s','\u0219':'s','\u015F':'s','\u023F':'s','\uA7A9':'s','\uA785':'s','\u1E9B':'s','\u0074':'t','\u24E3':'t','\uFF54':'t','\u1E6B':'t','\u1E97':'t','\u0165':'t','\u1E6D':'t','\u021B':'t','\u0163':'t','\u1E71':'t','\u1E6F':'t','\u0167':'t','\u01AD':'t','\u0288':'t','\u2C66':'t','\uA787':'t','\uA729':'tz','\u0075':'u','\u24E4':'u','\uFF55':'u','\u00F9':'u','\u00FA':'u','\u00FB':'u','\u0169':'u','\u1E79':'u','\u016B':'u','\u1E7B':'u','\u016D':'u','\u00FC':'u','\u01DC':'u','\u01D8':'u','\u01D6':'u','\u01DA':'u','\u1EE7':'u','\u016F':'u','\u0171':'u','\u01D4':'u','\u0215':'u','\u0217':'u','\u01B0':'u','\u1EEB':'u','\u1EE9':'u','\u1EEF':'u','\u1EED':'u','\u1EF1':'u','\u1EE5':'u','\u1E73':'u','\u0173':'u','\u1E77':'u','\u1E75':'u','\u0289':'u','\u0076':'v','\u24E5':'v','\uFF56':'v','\u1E7D':'v','\u1E7F':'v','\u028B':'v','\uA75F':'v','\u028C':'v','\uA761':'vy','\u0077':'w','\u24E6':'w','\uFF57':'w','\u1E81':'w','\u1E83':'w','\u0175':'w','\u1E87':'w','\u1E85':'w','\u1E98':'w','\u1E89':'w','\u2C73':'w','\u0078':'x','\u24E7':'x','\uFF58':'x','\u1E8B':'x','\u1E8D':'x','\u0079':'y','\u24E8':'y','\uFF59':'y','\u1EF3':'y','\u00FD':'y','\u0177':'y','\u1EF9':'y','\u0233':'y','\u1E8F':'y','\u00FF':'y','\u1EF7':'y','\u1E99':'y','\u1EF5':'y','\u01B4':'y','\u024F':'y','\u1EFF':'y','\u007A':'z','\u24E9':'z','\uFF5A':'z','\u017A':'z','\u1E91':'z','\u017C':'z','\u017E':'z','\u1E93':'z','\u1E95':'z','\u01B6':'z','\u0225':'z','\u0240':'z','\u2C6C':'z','\uA763':'z',};__exports.unaccent=unaccent;function unaccent(str,caseSensitive){str=str.replace(/[^\u0000-\u007E]/g,function(accented){return diacriticsMap[accented]||accented;});return caseSensitive?str:str.toLowerCase();}
return __exports;});;

/* /web/static/src/core/utils/timing.js */
odoo.define('@web/core/utils/timing',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const{onWillUnmount,useComponent}=require("@odoo/owl");__exports.throttleForAnimation=throttleForAnimation;function throttleForAnimation(func){let handle=null;const funcName=func.name?`${func.name} (throttleForAnimation)`:"throttleForAnimation";return Object.assign({[funcName](...args){browser.cancelAnimationFrame(handle);handle=browser.requestAnimationFrame(()=>{handle=null;func.call(this,...args);});},}[funcName],{cancel(){browser.cancelAnimationFrame(handle);},});}
__exports.throttle=throttle;function throttle(func,delay){let waiting=false;const funcName=func.name?func.name+" (throttle)":"throttle";return{[funcName](...args){const context=this;if(!waiting){waiting=true;browser.setTimeout(function(){waiting=false;func.call(context,...args);},delay);}},}[funcName];}
__exports.debounce=debounce;function debounce(func,delay,immediate=false){let handle;const funcName=func.name?func.name+" (debounce)":"debounce";const useAnimationFrame=delay==="animationFrame";const setFnName=useAnimationFrame?"requestAnimationFrame":"setTimeout";const clearFnName=useAnimationFrame?"cancelAnimationFrame":"clearTimeout";return Object.assign({[funcName](...args){return new Promise((resolve)=>{const callNow=immediate&&!handle;browser[clearFnName](handle);handle=browser[setFnName](()=>{handle=null;if(!immediate){Promise.resolve(func.apply(this,args)).then(resolve);}},delay);if(callNow){Promise.resolve(func.apply(this,args)).then(resolve);}});},}[funcName],{cancel(){browser[clearFnName](handle);},});}
__exports.useDebounced=useDebounced;function useDebounced(callback,delay){const component=useComponent();const debounced=debounce(callback.bind(component),delay);onWillUnmount(()=>debounced.cancel());return debounced;}
__exports.setRecurringAnimationFrame=setRecurringAnimationFrame;function setRecurringAnimationFrame(callback){const handler=(timestamp)=>{callback(timestamp-lastTimestamp);lastTimestamp=timestamp;handle=browser.requestAnimationFrame(handler);};const stop=()=>{browser.cancelAnimationFrame(handle);};let lastTimestamp=browser.performance.now();let handle=browser.requestAnimationFrame(handler);return stop;}
return __exports;});;

/* /web/static/src/core/utils/ui.js */
odoo.define('@web/core/utils/ui',async function(require){'use strict';let __exports={};__exports.closest=closest;function closest(elements,targetPos){let closestEl=null;let closestDistance=Infinity;for(const el of elements){const rect=el.getBoundingClientRect();const distance=getQuadrance(rect,targetPos);if(!closestEl||distance<closestDistance){closestEl=el;closestDistance=distance;}}
return closestEl;}
__exports.isVisible=isVisible;function isVisible(el){if(el===document||el===window){return true;}
if(!el){return false;}
let _isVisible=false;if("offsetWidth"in el&&"offsetHeight"in el){_isVisible=el.offsetWidth>0&&el.offsetHeight>0;}else if("getBoundingClientRect"in el){const rect=el.getBoundingClientRect();_isVisible=rect.width>0&&rect.height>0;}
if(!_isVisible&&getComputedStyle(el).display==="contents"){for(const child of el.children){if(isVisible(child)){return true;}}}
return _isVisible;}
__exports._legacyIsVisible=_legacyIsVisible;function _legacyIsVisible(el){if(el===document||el===window){return true;}
if(!el){return false;}
let _isVisible=false;if("offsetWidth"in el&&"offsetHeight"in el){_isVisible=el.offsetWidth>0||el.offsetHeight>0;}else if("getBoundingClientRect"in el){const rect=el.getBoundingClientRect();_isVisible=rect.width>0||rect.height>0;}
if(!_isVisible&&getComputedStyle(el).display==="contents"){for(const child of el.children){if(isVisible(child)){return true;}}}
return _isVisible;}
__exports.getQuadrance=getQuadrance;function getQuadrance(rect,pos){let q=0;if(pos.x<rect.x){q+=(rect.x-pos.x)**2;}else if(rect.x+rect.width<pos.x){q+=(pos.x-(rect.x+rect.width))**2;}
if(pos.y<rect.y){q+=(rect.y-pos.y)**2;}else if(rect.y+rect.height<pos.y){q+=(pos.y-(rect.y+rect.height))**2;}
return q;}
__exports.getVisibleElements=getVisibleElements;function getVisibleElements(activeElement,selector){const visibleElements=[];const elements=activeElement.querySelectorAll(selector);for(const el of elements){if(isVisible(el)){visibleElements.push(el);}}
return visibleElements;}
__exports.touching=touching;function touching(elements,targetRect){const r1={x:0,y:0,width:0,height:0,...targetRect};return[...elements].filter((el)=>{const r2=el.getBoundingClientRect();return(r2.x+r2.width>=r1.x&&r2.x<=r1.x+r1.width&&r2.y+r2.height>=r1.y&&r2.y<=r1.y+r1.height);});}
let TABABLE_SELECTOR="[tabindex], a, area, button, frame, iframe, input, object, select, textarea, details > summary:nth-child(1),".split(",").join(':not([tabindex="-1"]):not(:disabled),');TABABLE_SELECTOR=TABABLE_SELECTOR.slice(0,TABABLE_SELECTOR.length-1);__exports.getTabableElements=getTabableElements;function getTabableElements(container=document.body){const elements=container.querySelectorAll(TABABLE_SELECTOR);const byTabIndex={};for(const el of[...elements]){if(!byTabIndex[el.tabIndex]){byTabIndex[el.tabIndex]=[];}
byTabIndex[el.tabIndex].push(el);}
const withTabIndexZero=byTabIndex[0]||[];delete byTabIndex[0];return[...Object.values(byTabIndex).flat(),...withTabIndexZero];}
__exports.getNextTabableElement=getNextTabableElement;function getNextTabableElement(container=document.body){const tabableElements=getTabableElements(container);const index=tabableElements.indexOf(document.activeElement);return index===-1?tabableElements[0]:tabableElements[index+1]||null;}
__exports.getPreviousTabableElement=getPreviousTabableElement;function getPreviousTabableElement(container=document.body){const tabableElements=getTabableElements(container);const index=tabableElements.indexOf(document.activeElement);return index===-1?tabableElements[tabableElements.length-1]:tabableElements[index-1]||null;}
return __exports;});;

/* /web/static/src/core/utils/urls.js */
odoo.define('@web/core/utils/urls',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");__exports.objectToUrlEncodedString=objectToUrlEncodedString;function objectToUrlEncodedString(obj){return Object.entries(obj).map(([k,v])=>`${encodeURIComponent(k)}=${encodeURIComponent(v || "")}`).join("&");}
__exports.getOrigin=getOrigin;function getOrigin(origin){if(origin){origin=origin.replace(/\/+$/,"");}else{const{host,protocol}=browser.location;origin=`${protocol}//${host}`;}
return origin;}
__exports.url=url;function url(route,queryParams,options={}){const origin=getOrigin(options.origin);if(!route){return origin;}
let queryString=objectToUrlEncodedString(queryParams||{});queryString=queryString.length>0?`?${queryString}`:queryString;let prefix=["http://","https://","//"].some((el)=>route.length>=el.length&&route.slice(0,el.length)===el);prefix=prefix?"":origin;return`${prefix}${route}${queryString}`;}
__exports.getDataURLFromFile=getDataURLFromFile;function getDataURLFromFile(file){if(!file){return Promise.reject();}
return new Promise((resolve,reject)=>{const reader=new FileReader();reader.addEventListener("load",()=>{if(reader.result==="data:"){resolve(`data:${file.type};base64,`);}else{resolve(reader.result);}});reader.addEventListener("abort",reject);reader.addEventListener("error",reject);reader.readAsDataURL(file);});}
return __exports;});;

/* /web/static/src/core/utils/xml.js */
odoo.define('@web/core/utils/xml',async function(require){'use strict';let __exports={};const{nbsp}=require("@web/core/utils/strings");const parser=new DOMParser();const xmlDocument=parser.parseFromString("<templates/>","text/xml");function hasParsingError(parsedDocument){return parsedDocument.getElementsByTagName("parsererror").length>0;}
const XMLParser=__exports.XMLParser=class XMLParser{parse(){}
visitXML(xml,callback){const visit=(el)=>{if(el){let didVisitChildren=false;const visitChildren=()=>{for(const child of el.children){visit(child);}
didVisitChildren=true;};const shouldVisitChildren=callback(el,visitChildren);if(shouldVisitChildren!==false&&!didVisitChildren){visitChildren();}}};const xmlDoc=typeof xml==="string"?this.parseXML(xml):xml;visit(xmlDoc);}
parseXML(arch){const cleanedArch=arch.replace(/&amp;nbsp;/g,nbsp);const xml=parser.parseFromString(cleanedArch,"text/xml");if(hasParsingError(xml)){throw new Error(`An error occured while parsing ${arch}: ${xml.getElementsByTagName("parsererror")}`);}
return xml.documentElement;}}
__exports.append=append;function append(parent,node){const nodes=Array.isArray(node)?node:[node];parent.append(...nodes.filter(Boolean));return parent;}
__exports.combineAttributes=combineAttributes;function combineAttributes(el,attr,parts,glue=" "){const allValues=[];if(el.hasAttribute(attr)){allValues.push(el.getAttribute(attr));}
parts=Array.isArray(parts)?parts:[parts];parts=parts.filter((part)=>!!part);allValues.push(...parts);el.setAttribute(attr,allValues.join(glue));}
__exports.createElement=createElement;function createElement(tagName,...args){const el=xmlDocument.createElement(tagName);for(const arg of args){if(!arg){continue;}
if(Symbol.iterator in arg){el.append(...arg);}else if(typeof arg==="object"){for(const name in arg){el.setAttribute(name,arg[name]);}}}
return el;}
__exports.createTextNode=createTextNode;function createTextNode(data){return xmlDocument.createTextNode(data);}
__exports.extractAttributes=extractAttributes;function extractAttributes(el,attributes){const attrs=Object.create(null);for(const attr of attributes){attrs[attr]=el.getAttribute(attr)||"";el.removeAttribute(attr);}
return attrs;}
__exports.getTag=getTag;function getTag(node,lower=false){const tag=(node&&node.nodeName)||"";return lower?tag.toLowerCase():tag;}
__exports.setAttributes=setAttributes;function setAttributes(node,attributes){for(const[name,value]of Object.entries(attributes)){node.setAttribute(name,value);}}
return __exports;});;

/* /web/static/src/env.js */
odoo.define('@web/env',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{EventBus}=require("@odoo/owl");__exports.makeEnv=makeEnv;function makeEnv(){return{bus:new EventBus(),services:{},debug:odoo.debug,_t:()=>{throw new Error("Translations are not ready yet. Maybe use _lt instead?");},get isSmall(){throw new Error("UI service not initialized!");},};}
const serviceRegistry=registry.category("services");const SERVICES_METADATA=__exports.SERVICES_METADATA={};let startServicesPromise=null;__exports.startServices=startServices;async function startServices(env){const toStart=new Set();serviceRegistry.addEventListener("UPDATE",async(ev)=>{await Promise.resolve();const{operation,key:name,value:service}=ev.detail;if(operation==="delete"){return;}
if(toStart.size){const namedService=Object.assign(Object.create(service),{name});toStart.add(namedService);}else{await _startServices(env,toStart);}});await Promise.resolve();await _startServices(env,toStart);}
async function _startServices(env,toStart){if(startServicesPromise){return startServicesPromise.then(()=>_startServices(env,toStart));}
const services=env.services;for(const[name,service]of serviceRegistry.getEntries()){if(!(name in services)){const namedService=Object.assign(Object.create(service),{name});toStart.add(namedService);}}
async function start(){let service=null;const proms=[];while((service=findNext())){const name=service.name;toStart.delete(service);const entries=(service.dependencies||[]).map((dep)=>[dep,services[dep]]);const dependencies=Object.fromEntries(entries);let value;try{value=service.start(env,dependencies);}catch(e){value=e;console.error(e);}
if("async"in service){SERVICES_METADATA[name]=service.async;}
if(value instanceof Promise){proms.push(new Promise((resolve)=>{value.then((val)=>{services[name]=val||null;}).catch((error)=>{services[name]=error;console.error("Can't load service '"+name+"' because:",error);}).finally(resolve);}));}else{services[service.name]=value||null;}}
await Promise.all(proms);if(proms.length){return start();}}
startServicesPromise=start();await startServicesPromise;startServicesPromise=null;if(toStart.size){const names=[...toStart].map((s)=>s.name);const missingDeps=new Set();[...toStart].forEach((s)=>s.dependencies.forEach((dep)=>{if(!(dep in services)&&!names.includes(dep)){missingDeps.add(dep);}}));const depNames=[...missingDeps].join(", ");throw new Error(`Some services could not be started: ${names}. Missing dependencies: ${depNames}`);}
function findNext(){for(const s of toStart){if(s.dependencies){if(s.dependencies.every((d)=>d in services)){return s;}}else{return s;}}
return null;}}
return __exports;});;

/* /web/static/src/legacy/js/core/misc.js */
odoo.define('web.framework',function(require){"use strict";var core=require('web.core');var ajax=require('web.ajax');var Widget=require('web.Widget');const{sprintf}=require('web.utils')
var _t=core._t;var messages_by_seconds=function(){return[[0,_t("Loading...")],[20,_t("Still loading...")],[60,_t("Still loading...<br />Please be patient.")],[120,_t("Don't leave yet,<br />it's still loading...")],[300,_t("You may not believe it,<br />but the application is actually loading...")],[420,_t("Take a minute to get a coffee,<br />because it's loading...")],[3600,_t("Maybe you should consider reloading the application by pressing F5...")]];};var Throbber=Widget.extend({template:"Throbber",start:function(){this.start_time=new Date().getTime();this.act_message();},act_message:function(){var self=this;setTimeout(function(){if(self.isDestroyed())
return;var seconds=(new Date().getTime()-self.start_time)/1000;var mes;_.each(messages_by_seconds(),function(el){if(seconds>=el[0])
mes=el[1];});self.$(".oe_throbber_message").html(mes);self.act_message();},1000);},});if($.blockUI){$.blockUI.defaults.baseZ=1100;$.blockUI.defaults.message='<div class="openerp oe_blockui_spin_container" style="background-color: transparent;">';$.blockUI.defaults.css.border='0';$.blockUI.defaults.css["background-color"]='';}
function blockAccessKeys(){var elementWithAccessKey=[];elementWithAccessKey=document.querySelectorAll('[accesskey]');_.each(elementWithAccessKey,function(elem){elem.setAttribute("data-accesskey",elem.getAttribute('accesskey'));elem.removeAttribute('accesskey');});}
function unblockAccessKeys(){var elementWithDataAccessKey=[];elementWithDataAccessKey=document.querySelectorAll('[data-accesskey]');_.each(elementWithDataAccessKey,function(elem){elem.setAttribute('accesskey',elem.getAttribute('data-accesskey'));elem.removeAttribute('data-accesskey');});}
var throbbers=[];function blockUI(){var tmp=$.blockUI.apply($,arguments);var throbber=new Throbber();throbbers.push(throbber);throbber.appendTo($(".oe_blockui_spin_container"));$(document.body).addClass('o_ui_blocked');blockAccessKeys();return tmp;}
function unblockUI(){_.invoke(throbbers,'destroy');throbbers=[];$(document.body).removeClass('o_ui_blocked');unblockAccessKeys();return $.unblockUI.apply($,arguments);}
function redirect(url,wait){var load=function(){var old=""+window.location;var old_no_hash=old.split("#")[0];var url_no_hash=url.split("#")[0];location.assign(url);if(old_no_hash===url_no_hash){location.reload(true);}};var wait_server=function(){ajax.rpc("/web/webclient/version_info",{}).then(load).guardedCatch(function(){setTimeout(wait_server,250);});};if(wait){setTimeout(wait_server,1000);}else{load();}}
function Reload(parent,action){var params=action.params||{};var menu_id=params.menu_id||false;var action_id=params.action_id||false;var l=window.location;var sobj=$.deparam(l.search.substr(1));if(params.url_search){sobj=_.extend(sobj,params.url_search);}
var search='?'+$.param(sobj);var hash=l.hash;if(menu_id){hash="#menu_id="+menu_id;if(action_id){hash+="&action="+action_id;}}else if(action_id){hash="#action="+action_id;}
var url=l.protocol+"//"+l.host+l.pathname+search+hash;core.bus.trigger('clear_cache');redirect(url,params.wait);}
core.action_registry.add("reload",Reload);function Home(parent,action){var url='/'+(window.location.search||'');redirect(url,action&&action.params&&action.params.wait);}
core.action_registry.add("home",Home);function login(){redirect('/web/login');}
core.action_registry.add("login",login);function logout(){redirect('/web/session/logout');}
core.action_registry.add("logout",logout);function displayNotification(parent,action){let{title='',message='',links=[],type='info',sticky=false,next}=action.params||{};links=links.map(({url,label})=>`<a href="${_.escape(url)}" target="_blank">${_.escape(label)}</a>`)
parent.displayNotification({title,message:owl.markup(sprintf(_.escape(message),...links)),type,sticky,});return next;}
core.action_registry.add("display_notification",displayNotification);function ReloadContext(parent,action){ajax.rpc("/web/session/get_session_info",{}).then(function(){Reload(parent,action);});}
core.action_registry.add("reload_context",ReloadContext);if(!document.contains){document.contains=function contains(node){if(!(0 in arguments)){throw new TypeError('1 argument is required');}
do{if(this===node){return true;}}while(node=node&&node.parentNode);return false;};}
return{blockUI:blockUI,unblockUI:unblockUI,redirect:redirect,};});;

/* /web/static/src/legacy/js/env.js */
odoo.define('@web/legacy/js/env',async function(require){'use strict';let __exports={};const commonEnv=require('web.commonEnv');const dataManager=require('web.data_manager');const{blockUI,unblockUI}=require("web.framework");const env=Object.assign(commonEnv,{dataManager});env.services=Object.assign(env.services,{blockUI,unblockUI});__exports[Symbol.for("default")]=env;return __exports;});odoo.define(`web.env`,async function(require){return require('@web/legacy/js/env')[Symbol.for("default")];});;

/* /web/static/src/legacy/js/fields/field_utils.js */
odoo.define('web.field_utils',function(require){"use strict";var core=require('web.core');var dom=require('web.dom');var session=require('web.session');var time=require('web.time');var utils=require('web.utils');var _t=core._t;const NBSP="\u00a0";function formatBinary(value,field,options){if(!value){return'';}
return utils.binaryToBinsize(value);}
function formatBoolean(value,field,options){if(options&&options.forceString){return value?_t('True'):_t('False');}
return dom.renderCheckbox({prop:{checked:value,disabled:true,},});}
function formatChar(value,field,options){value=typeof value==='string'?value:'';if(options&&options.isPassword){return _.str.repeat('*',value?value.length:0);}
if(options&&options.escape){value=_.escape(value);}
return value;}
function formatDate(value,field,options){if(value===false||isNaN(value)){return"";}
if(field&&field.type==='datetime'){if(!options||!('timezone'in options)||options.timezone){value=value.clone().add(session.getTZOffset(value),'minutes');}}
var date_format=time.getLangDateFormat();return value.format(date_format);}
function formatDateTime(value,field,options){if(value===false){return"";}
if(!options||!('timezone'in options)||options.timezone){value=value.clone().add(session.getTZOffset(value),'minutes');}
return value.format(time.getLangDatetimeFormat());}
function formatFloat(value,field,options){options=options||{};if(value===false){return"";}
if(options.humanReadable&&options.humanReadable(value)){return utils.human_number(value,options.decimals,options.minDigits,options.formatterCallback);}
var l10n=core._t.database.parameters;var precision;if(options.digits){precision=options.digits[1];}else if(field&&field.digits){precision=field.digits[1];}else{precision=2;}
var formatted=_.str.sprintf('%.'+precision+'f',value||0).split('.');formatted[0]=utils.insert_thousand_seps(formatted[0]);return formatted.join(l10n.decimal_point);}
function formatFloatFactor(value,field,options){var factor=options.factor||1;return formatFloat(value*factor,field,options);}
function formatFloatTime(value,field,options){options=options||{};var pattern=options.noLeadingZeroHour?'%1d:%02d':'%02d:%02d';if(value<0){value=Math.abs(value);pattern='-'+pattern;}
var hour=Math.floor(value);var min=Math.round((value%1)*60);if(min===60){min=0;hour=hour+1;}
return _.str.sprintf(pattern,hour,min);}
function formatInteger(value,field,options){options=options||{};if(options.isPassword){return _.str.repeat('*',String(value).length);}
if(!value&&value!==0){return"";}
if(options.humanReadable&&options.humanReadable(value)){return utils.human_number(value,options.decimals,options.minDigits,options.formatterCallback);}
return utils.insert_thousand_seps(_.str.sprintf('%d',value));}
function formatMany2one(value,field,options){if(!value){value='';}else if(_.isArray(value)){value=value[1];}else{while(value.data){value=value.data.display_name||'';}}
if(options&&options.escape){value=_.escape(value);}
return value;}
function formatX2Many(value){if(value.data.length===0){return _t('No records');}else if(value.data.length===1){return _t('1 record');}else{return value.data.length+_t(' records');}}
function formatMonetary(value,field,options){if(value===false){return"";}
options=Object.assign({forceString:false},options);var currency=options.currency;if(!currency){var currency_id=options.currency_id;if(!currency_id&&options.data){var currency_field=options.currency_field||field.currency_field||'currency_id';currency_id=options.data[currency_field]&&options.data[currency_field].res_id;}
currency=session.get_currency(currency_id);}
var digits=(currency&&currency.digits)||options.digits;if(options.field_digits===true){digits=field.digits||digits;}
var formatted_value=formatFloat(value,field,_.extend({},options,{digits:digits}));if(!currency||options.noSymbol){return formatted_value;}
const val=currency.position==='after'?[formatted_value,currency.symbol]:[currency.symbol,formatted_value];if(options.forceString){return val.join(' ');}
return utils.Markup(val.map((v)=>_.escape(v)).join(NBSP));}
function formatPercentage(value,field,options){options=options||{};let result=formatFloat(value*100,field,options)||'0';if(!options.humanReadable||!options.humanReadable(value*100)){result=parseFloat(result).toString().replace('.',_t.database.parameters.decimal_point);}
return result+(options.noSymbol?'':'%');}
function formatSelection(value,field,options){var val=_.find(field.selection,function(option){return option[0]===value;});if(!val){return'';}
value=val[1];if(options&&options.escape){value=_.escape(value);}
return value;}
function formatJson(value,field,options){if(!value){return'';}
return JSON.stringify(value);}
function parseSmartDateInput(value){const units={d:'days',m:'months',w:'weeks',y:'years',};const re=new RegExp(`^([+-])(\\d+)([${Object.keys(units).join('')}]?)$`);const match=re.exec(value);if(match){let date=moment();const offset=parseInt(match[2],10);const unit=units[match[3]||'d'];if(match[1]==='+'){date.add(offset,unit);}else{date.subtract(offset,unit);}
return date;}
return false;}
function parseDate(value,field,options){if(!value){return false;}
var datePattern=time.getLangDateFormat();var datePatternWoZero=time.getLangDateFormatWoZero();var date;const smartDate=parseSmartDateInput(value);if(smartDate){date=smartDate;}else{if(options&&options.isUTC){value=value.padStart(10,"0");date=moment.utc(value);}else{date=moment.utc(value,[datePattern,datePatternWoZero,moment.ISO_8601]);}}
if(date.isValid()){if(date.year()===0){date.year(moment.utc().year());}
if(date.year()>=1000){date.toJSON=function(){return this.clone().locale('en').format('YYYY-MM-DD');};return date;}}
throw new Error(_.str.sprintf(core._t("'%s' is not a correct date"),value));}
function parseDateTime(value,field,options){if(!value){return false;}
const datePattern=time.getLangDateFormat();const timePattern=time.getLangTimeFormat();const datePatternWoZero=time.getLangDateFormatWoZero();const timePatternWoZero=time.getLangTimeFormatWoZero();var pattern1=datePattern+' '+timePattern;var pattern2=datePatternWoZero+' '+timePatternWoZero;var datetime;const smartDate=parseSmartDateInput(value);if(smartDate){datetime=smartDate;}else{if(options&&options.isUTC){value=value.padStart(19,"0");datetime=moment.utc(value.replace(' ','T')+'Z');}else{datetime=moment.utc(value,[pattern1,pattern2,moment.ISO_8601]);if(options&&options.timezone){datetime.add(-session.getTZOffset(datetime),'minutes');}}}
if(datetime.isValid()){if(datetime.year()===0){datetime.year(moment.utc().year());}
if(datetime.year()>=1000){datetime.toJSON=function(){return this.clone().locale('en').format('YYYY-MM-DD HH:mm:ss');};return datetime;}}
throw new Error(_.str.sprintf(core._t("'%s' is not a correct datetime"),value));}
function parseNumber(value){if(core._t.database.parameters.thousands_sep){var escapedSep=_.str.escapeRegExp(core._t.database.parameters.thousands_sep);value=value.replace(new RegExp(escapedSep,'g'),'');}
if(core._t.database.parameters.decimal_point){value=value.replace(core._t.database.parameters.decimal_point,'.');}
return Number(value);}
function parseFloat(value){var parsed=parseNumber(value);if(isNaN(parsed)){throw new Error(_.str.sprintf(core._t("'%s' is not a correct float"),value));}
return parsed;}
function parseMonetary(value,field,options){if(!value.includes(NBSP)&&!value.includes('&nbsp;')){return parseFloat(value);}
options=options||{};var currency=options.currency;if(!currency){var currency_id=options.currency_id;if(!currency_id&&options.data){var currency_field=options.currency_field||field.currency_field||'currency_id';currency_id=options.data[currency_field]&&options.data[currency_field].res_id;}
currency=session.get_currency(currency_id);}
if(!currency){return parseFloat(value);}
if(!value.includes(currency.symbol)){throw new Error(_.str.sprintf(core._t("'%s' is not a correct monetary field"),value));}
if(currency.position==='before'){return parseFloat(value.replace(`${ currency.symbol }${ NBSP }`,'').replace(`${ currency.symbol }&nbsp;`,''));}else{return parseFloat(value.replace(`${ NBSP }${ currency.symbol }`,'').replace(`&nbsp;${ currency.symbol }`,''));}}
function parseFloatFactor(value,field,options){var parsed=parseFloat(value);var factor=options.factor||1.0;return parsed/factor;}
function parseFloatTime(value){var factor=1;if(value[0]==='-'){value=value.slice(1);factor=-1;}
var float_time_pair=value.split(":");if(float_time_pair.length!==2)
return factor*parseFloat(value);var hours=parseInteger(float_time_pair[0]);var minutes=parseInteger(float_time_pair[1]);return factor*(hours+(minutes/60));}
function parsePercentage(value){return parseFloat(value)/100;}
function parseInteger(value){var parsed=parseNumber(value);if(isNaN(parsed)||parsed%1||parsed<-2147483648||parsed>2147483647){throw new Error(_.str.sprintf(core._t("'%s' is not a correct integer"),value));}
return parsed;}
function parseMany2one(value){if(_.isArray(value)){return{id:value[0],display_name:value[1],};}
if(_.isNumber(value)||_.isString(value)){return{id:parseInt(value,10),};}
return value;}
return{format:{binary:formatBinary,boolean:formatBoolean,char:formatChar,date:formatDate,datetime:formatDateTime,float:formatFloat,float_factor:formatFloatFactor,float_time:formatFloatTime,html:_.identity,integer:formatInteger,many2many:formatX2Many,many2one:formatMany2one,many2one_reference:formatInteger,monetary:formatMonetary,one2many:formatX2Many,percentage:formatPercentage,reference:formatMany2one,selection:formatSelection,text:formatChar,json:formatJson,},parse:{binary:_.identity,boolean:_.identity,char:_.identity,date:parseDate,datetime:parseDateTime,float:parseFloat,float_factor:parseFloatFactor,float_time:parseFloatTime,html:_.identity,integer:parseInteger,many2many:_.identity,many2one:parseMany2one,many2one_reference:parseInteger,monetary:parseMonetary,one2many:_.identity,percentage:parsePercentage,reference:parseMany2one,selection:_.identity,text:_.identity,json:_.identity,},};});;

/* /web/static/src/legacy/js/owl_compatibility.js */
odoo.define('web.OwlCompatibility',function(require){"use strict";const{LegacyComponent}=require("@web/legacy/legacy_component");const{templates}=require("@web/core/assets");const{App,Component,onMounted,onWillStart,onWillUnmount,onPatched,onWillUpdateProps,onWillDestroy,useSubEnv,xml,status,}=owl;const widgetSymbol=odoo.widgetSymbol;const children=new WeakMap();const templateForLegacy=xml`<t/>`;const templateForOwl=xml`<t t-component="props.Component" t-props="childProps" />`;class ComponentAdapter extends LegacyComponent{constructor(props){if(!props.Component){throw Error(`ComponentAdapter: 'Component' prop is missing.`);}
let template;if(!(props.Component.prototype instanceof Component)){template=templateForLegacy;}else{template=templateForOwl;}
ComponentAdapter.template=template;super(...arguments);this.template=template;this.widget=null;}
setup(){onWillUpdateProps((nextProps)=>{if(this.widget){return this.updateWidget(nextProps);}});let widgetIsAttached=false;const insertWidget=()=>{this.removeEl();if(!this.widget||!this.widget.el){return;}
const node=this.__owl__.firstNode();node.parentNode.insertBefore(this.widget.el,node);this.widgetEl=this.widget.el;widgetIsAttached=true;};onMounted(()=>{insertWidget();if(this.widget&&this.widget.on_attach_callback){this.widget.on_attach_callback();}});onPatched(()=>{if(widgetIsAttached){this.renderWidget();}else{insertWidget();}});onWillDestroy(()=>this.__destroy(this.__owl__.parent.component));onWillStart(this.onWillStart);onWillUnmount(this.onWillUnmount);}
onWillStart(){if(!(this.props.Component.prototype instanceof Component)){this.widget=new this.props.Component(this,...this.widgetArgs);return this.widget._widgetRenderAndInsert(()=>{});}}
onWillUnmount(){if(this.widget&&this.widget.on_detach_callback){this.widget.on_detach_callback();}
this.removeEl();}
removeEl(){if(this.widgetEl){this.widgetEl.remove();this.widgetEl=null;}}
__destroy(){this.removeEl();if(this.widget){this.widget.destroy();}}
get childProps(){if(!this._childProps){this._childProps=Object.assign({},this.props);delete this._childProps.Component;}
return this._childProps;}
get widgetArgs(){if(this.props.widgetArgs){return this.props.widgetArgs;}
const args=Object.keys(this.props);args.splice(args.indexOf('Component'),1);if(args.length>1){throw new Error(`ComponentAdapter has more than 1 argument, 'widgetArgs' must be overriden.`);}
return args.map(a=>this.props[a]);}
updateWidget(){if(this.env.isDebug('assets')){console.warn(`ComponentAdapter: Widget could not be updated, maybe override 'updateWidget' function?`);}}
renderWidget(){if(this.env.isDebug('assets')){console.warn(`ComponentAdapter: Widget could not be re-rendered, maybe override 'renderWidget' function?`);}}
_trigger_up(ev){const evType=ev.name;const payload=ev.data;if(evType==='call_service'){let args=payload.args||[];if(payload.service==='ajax'&&payload.method==='rpc'){args=args.concat(ev.target);}
const service=this.env.services[payload.service];if(service){const result=service[payload.method].apply(service,args);payload.callback(result);}else{throw new Error(`The service "${payload.service}" is not present in the legacy owl environment.
                         You should probably create a mapper in @web/legacy/utils`);}}else if(evType==='get_session'){if(payload.callback){payload.callback(this.env.session);}}else if(evType==='load_views'){const params={model:payload.modelName,context:payload.context,views_descr:payload.views,};this.env.dataManager.load_views(params,payload.options||{}).then(payload.on_success);}else if(evType==='load_filters'){return this.env.dataManager.load_filters(payload).then(payload.on_success);}else{payload.__targetWidget=ev.target;this.trigger(evType.replace(/_/g,'-'),payload);}}
get el(){if(this.widget){return this.widget.el;}
return super.el;}}
const bodyRef={get el(){return document.body}};function standaloneAdapter(props={},ref=bodyRef){const env=owl.Component.env;const app=new App(null,{templates,env,dev:env.isDebug(),translatableAttributes:["data-tooltip"],translateFn:env._t,});if(!("Component"in props)){props.Component=owl.Component;}
const component=app.makeNode(ComponentAdapter,props).component;Object.defineProperty(component,"el",{get(){return ref.el;}});return component;}
const WidgetAdapterMixin={on_attach_callback(){for(const component of children.get(this)||[]){component.on_attach_callback();}},on_detach_callback(){for(const component of children.get(this)||[]){component.on_detach_callback();}},destroy(){for(const wrapper of children.get(this)||[]){wrapper.destroy();}
children.delete(this);},};function recursiveCall(node,childrenFirst=false,callback){if(!childrenFirst){callback(node);}
for(const child of Object.values(node.children)){recursiveCall(child,childrenFirst,callback);}
if(childrenFirst){callback(node);}}
function prepareForFinish(node){const fiber=node.fiber;const complete=fiber.complete;fiber.complete=function(){if(!this.target.ownerDocument.contains(this.target)){this.mounted=[this];}
complete.call(this);};}
const nodesToRemount=new WeakMap();function setToRemount(node,updateAndRender){let toRemount=true;if(!node.isPatched){node.isPatched=true;node.mounted.push(()=>{toRemount=false;});node.willUpdateProps.push(()=>{const rootMounted=node.fiber.root.mounted;if(toRemount&&!rootMounted.includes(node.fiber)){rootMounted.push(node.fiber);}});}
return()=>toRemount=true;}
function prepareForRemount(mainNode){const updateAndRender=mainNode.updateAndRender;recursiveCall(mainNode,false,(node)=>{if(mainNode===node){return;}
if(nodesToRemount.has(node)){nodesToRemount.get(node)();return;}else{nodesToRemount.set(node,setToRemount(node,updateAndRender));}});}
function registerWrapper(parent,wrapper){let parentChildren=children.get(parent);if(!parentChildren){parentChildren=[];children.set(parent,parentChildren);}
parentChildren.push(wrapper);}
class ProxyComponent extends LegacyComponent{setup(){for(const[hookName,cb]of Object.entries(this.props.hooks)){owl[hookName](cb);}
onWillUnmount(()=>{this._handledEvents=new Set();});this.parentWidget=this.props.parentWidget;this._handledEvents=new Set();useSubEnv({[widgetSymbol]:this._addListener.bind(this)});}
_addListener(evType){if(this.parentWidget&&!this._handledEvents.has(evType)&&status(this)==="mounted"){this._handledEvents.add(evType);this.el.addEventListener(evType,ev=>{if(!ev.cancelBubble){ev.stopPropagation();const detail=Object.assign({},ev.detail,{__originalComponent:ev.originalComponent,});this.parentWidget.trigger_up(ev.type.replace(/-/g,'_'),detail);}});}}}
ProxyComponent.template=xml`<t t-component="props.Component" t-props="props.props"/>`;class ComponentWrapper{constructor(parent,Component,props){if(parent instanceof Component){throw new Error("ComponentWrapper must be used with a legacy Widget as parent");}
this.setParent(parent);const _env=props.env;delete props.env;this.props=props;this.Component=Component;const env=_env||owl.Component.env;const appConfig={env,templates,dev:"isDebug"in env?env.isDebug():env.debug,translatableAttributes:["data-tooltip"],translateFn:env._t,};const app=new App(null,appConfig);this.app=app;this.node=this._makeOwlNode();this.env=this.node.component.env;app.root=this.node;this.__owl__=Object.create(this.node);this.componentRef={comp:null};this.status="new";this.setup();}
_makeOwlNode(){const resolveRender=()=>{if(this.renderResolve){this.renderResolve();}};const props={props:this.props,hooks:{onMounted:resolveRender,onPatched:resolveRender,onRendered:()=>{this.componentRef.comp=Object.values(this.node.children)[0].component;},},Component:this.Component,parentWidget:this.parentWidget,};return this.app.makeNode(ProxyComponent,props);}
setup(){}
get el(){return this.node.component.el;}
async mount(target,options){if(this.status==="mounted"||this.status==="willMount"){return this.render();}else if(this.status==="destroyed"){return;}
if(target){this.target=target;}
if(options){this.mountOptions=options;}
const remount=this.status==="unmounted";if(remount){prepareForRemount(this.node);}
this.status="willMount";const prom=this.app.mountNode(this.node,this.target,this.mountOptions);if(remount){this.node.fiber.deep=true;}
prepareForFinish(this.node);await prom;if(this.target.ownerDocument.contains(this.target)){this.status="mounted";}
this.node.willStart=[];const mounted=this.node.mounted;this.node.mounted=mounted.slice(0,mounted.length-1);return this;}
unmount(){this.on_detach_callback();this.el.remove();this.node.bdom=null;}
render(){if(this.status!=="mounted"){return;}
if(this.renderProm){this.node.render(true);return this.renderProm;}
this.renderProm=new Promise((resolve,reject)=>{this.renderResolve=resolve;this.renderReject=reject;}).then(()=>{this.renderProm=null;this.renderResolve=null;this.renderReject=null;});this.node.render(true);return this.renderProm;}
trigger(){return this.node.component.trigger(...arguments);}
destroy(){if(["willMount","unmounted"].includes(this.status)){recursiveCall(this.node,false,(node)=>{node.willUnmount=[];});}
this.app.destroy();this.status="destroyed";}
get $el(){return $(this.el);}
on_attach_callback(){if(!this.el||!this.el.ownerDocument.contains(this.el)){return;}
if(this.status==="mounted"){return;}
recursiveCall(this.node,true,(node)=>{for(const cb of node.mounted){cb();}});this.node.status=1;this.status="mounted";}
on_detach_callback(){if(this.status==="unmounted"){return;}
recursiveCall(this.node,false,(node)=>{if(node.status===1){const component=node.component;for(const cb of node.willUnmount){cb.call(component);}}});this.node.status=0;this.status="unmounted";}
async update(nextProps){if(this.status==="destroyed"){return;}
const props=this.node.component.props.props;const nextComponentProps=Object.assign({},props,nextProps);this.node.component.props.props=nextComponentProps;this.props=nextComponentProps;if(this.status==="unmounted"){return this.mount(this.target);}else{return this.render();}}
setParent(parent){if(parent instanceof Component){throw new Error('ComponentWrapper must be used with a legacy Widget as parent');}
if(parent){registerWrapper(parent,this);}
if(this.parentWidget){const parentChildren=children.get(this.parentWidget);parentChildren.splice(parentChildren.indexOf(this),1);}
this.parentWidget=parent;if(this.node){this.node.component.parentWidget=parent;}}}
return{ComponentAdapter,ComponentWrapper,WidgetAdapterMixin,standaloneAdapter,};});;

/* /web/static/src/legacy/js/services/data_manager.js */
odoo.define('web.DataManager',function(require){"use strict";var config=require('web.config');var core=require('web.core');var rpc=require('web.rpc');var session=require('web.session');const{generateLegacyLoadViewsResult}=require("@web/legacy/legacy_load_views");return core.Class.extend({init:function(){this._init_cache();core.bus.on('clear_cache',this,this.invalidate.bind(this));},_init_cache:function(){this._cache={actions:{},filters:{},views:{},};},invalidate:function(dataManager){if(dataManager===this){return;}
session.invalidateCacheKey('load_menus');this._init_cache();},load_action:function(action_id,additional_context){var self=this;var key=this._gen_key(action_id,additional_context||{});if(config.isDebug('assets')||!this._cache.actions[key]){this._cache.actions[key]=rpc.query({route:"/web/action/load",params:{action_id:action_id,additional_context:additional_context,},}).then(function(action){self._cache.actions[key]=action.no_cache?null:self._cache.actions[key];return action;}).guardedCatch(()=>this._invalidate('actions',key));}
return this._cache.actions[key].then(function(action){return $.extend(true,{},action);});},load_views:async function({model,context,views_descr},options={}){const viewsKey=this._gen_key(model,views_descr,options,context);const filtersKey=this._gen_key(model,options.action_id);const withFilters=Boolean(options.load_filters);const shouldLoadViews=config.isDebug('assets')||!this._cache.views[viewsKey];const shouldLoadFilters=config.isDebug('assets')||(withFilters&&!this._cache.filters[filtersKey]);if(shouldLoadViews){options.load_filters=shouldLoadFilters;if(config.device.isMobile){options.mobile=config.device.isMobile;}
this._cache.views[viewsKey]=rpc.query({args:[],kwargs:{context,options,views:views_descr},model,method:'get_views',}).then(result=>{const{models,views}=result;result=generateLegacyLoadViewsResult(model,views,models);for(const[,viewType]of views_descr){const fvg=result.fields_views[viewType];fvg.viewFields=fvg.fields;fvg.fields=result.fields;}
if(shouldLoadFilters){this._cache.filters[filtersKey]=Promise.resolve(result.filters);}
return result.fields_views;}).guardedCatch(()=>this._invalidate('views',viewsKey));}
const result=await this._cache.views[viewsKey];if(withFilters&&result.search){if(shouldLoadFilters){await this.load_filters({actionId:options.action_id,context,forceReload:false,modelName:model,});}
result.search.favoriteFilters=await this._cache.filters[filtersKey];}
return result;},load_filters:function(params){const key=this._gen_key(params.modelName,params.actionId);const forceReload=params.forceReload!==false&&config.isDebug('assets');if(forceReload||!this._cache.filters[key]){this._cache.filters[key]=rpc.query({args:[params.modelName,params.actionId],kwargs:{context:params.context||{},},model:'ir.filters',method:'get_filters',}).guardedCatch(()=>this._invalidate('filters',key));}
return this._cache.filters[key];},create_filter:function(filter){return rpc.query({args:[filter],model:'ir.filters',method:'create_or_replace',}).then(filterId=>{const filtersKey=this._gen_key(filter.model_id,filter.action_id);this._invalidate('filters',filtersKey);return filterId;});},delete_filter:function(filterId){return rpc.query({args:[filterId],model:'ir.filters',method:'unlink',}).then(()=>this._invalidate('filters'));},_gen_key:function(){return _.map(Array.prototype.slice.call(arguments),function(arg){if(!arg){return false;}
return _.isObject(arg)?JSON.stringify(arg):arg;}).join(',');},_invalidate(section,key){core.bus.trigger("clear_cache",this);if(key){delete this._cache[section][key];}else{this._cache[section]={};}},});});odoo.define('web.data_manager',function(require){"use strict";var DataManager=require('web.DataManager');var data_manager=new DataManager();return data_manager;});;

/* /web/static/src/legacy/js/services/session.js */
odoo.define('web.session',function(require){"use strict";var Session=require('web.Session');var session=new Session(undefined,undefined,{use_cors:false});session.is_bound=session.session_bind();return session;});;

/* /web/static/src/legacy/js/widgets/date_picker.js */
odoo.define('web.datepicker',function(require){"use strict";var core=require('web.core');var field_utils=require('web.field_utils');var time=require('web.time');var Widget=require('web.Widget');var _t=core._t;var DateWidget=Widget.extend({template:"web.datepicker",type_of_date:"date",events:{'error.datetimepicker':'errorDatetime','change .o_datepicker_input':'changeDatetime','click input':'_onInputClicked','input input':'_onInput','keydown':'_onKeydown','show.datetimepicker':'_onDateTimePickerShow','hide.datetimepicker':'_onDateTimePickerHide',},init:function(parent,options){this._super.apply(this,arguments);this.name=parent.name;this.options=_.extend({locale:moment.locale(),format:this.type_of_date==='datetime'?time.getLangDatetimeFormat():time.getLangDateFormat(),minDate:moment({y:1000}),maxDate:moment({y:9999,M:11,d:31}),useCurrent:false,icons:{time:'fa fa-clock-o',date:'fa fa-calendar',up:'fa fa-chevron-up',down:'fa fa-chevron-down',previous:'fa fa-chevron-left',next:'fa fa-chevron-right',today:'fa fa-calendar-check-o',clear:'fa fa-trash',close:'fa fa-check primary',},calendarWeeks:true,buttons:{showToday:false,showClear:false,showClose:false,},widgetParent:'body',keyBinds:null,},options||{});this.__libInput=0;this.__isOpen=false;},start:function(){this.$input=this.$('input.o_datepicker_input');this.__libInput++;this.$el.datetimepicker(this.options);this.__libInput--;this._setReadonly(false);},destroy:function(){if(this._onScroll){window.removeEventListener('wheel',this._onScroll,true);}
this.__libInput++;this.$el.datetimepicker('destroy');this.__libInput--;this._super.apply(this,arguments);},changeDatetime:function(){if(this.__libInput>0){if(this.options.warn_future){this._warnFuture(this.getValue());}
this.trigger("datetime_changed");return;}
var oldValue=this.getValue();if(this.isValid()){this._setValueFromUi();var newValue=this.getValue();var hasChanged=!oldValue!==!newValue;if(oldValue&&newValue){var formattedOldValue=oldValue.format(time.getLangDatetimeFormat());var formattedNewValue=newValue.format(time.getLangDatetimeFormat());if(formattedNewValue!==formattedOldValue){hasChanged=true;}}
if(hasChanged){if(this.options.warn_future){this._warnFuture(newValue);}
this.trigger("datetime_changed");}}else{var formattedValue=oldValue?this._formatClient(oldValue):null;this.$input.val(formattedValue);}},errorDatetime:function(e){return false;},focus:function(){this.__libInput++;this.$input.focus();this.__libInput--;},getValue:function(){var value=this.get('value');return value&&value.clone();},isValid:function(){var value=this.$input.val();if(value===""){return true;}else{try{this._parseClient(value);return true;}catch(_e){return false;}}},maxDate:function(date){this.__libInput++;this.$el.datetimepicker('maxDate',date||null);this.__libInput--;},minDate:function(date){this.__libInput++;this.$el.datetimepicker('minDate',date||null);this.__libInput--;},setValue:function(value){this.set({'value':value});var formatted_value=value?this._formatClient(value):null;this.$input.val(formatted_value);this._setLibInputValue(value);},_warnFuture:function(currentDate){if(!this.$warning){this.$warning=$('<span>',{class:'fa fa-exclamation-triangle o_tz_warning o_datepicker_warning',});var title=_t("This date is in the future. Make sure this is what you expect.");this.$warning.attr('title',title);this.$input.after(this.$warning);}
if(currentDate&&currentDate.format('YYYY-MM-DD')>moment().format('YYYY-MM-DD')){this.$warning.show();}else{this.$warning.hide();}},_formatClient:function(v){return field_utils.format[this.type_of_date](v,null,{timezone:false});},_parseClient:function(v){return field_utils.parse[this.type_of_date](v,null,{timezone:false});},_setLibInputValue:function(value){this.__libInput++;this.$el.datetimepicker('date',value||null);this.__libInput--;},_setReadonly:function(readonly){this.readonly=readonly;this.$input.prop('readonly',this.readonly);},_setValueFromUi:function(){var value=this.$input.val()||false;this.setValue(this._parseClient(value));},_onDateTimePickerHide:function(){this.__isOpen=false;this.changeDatetime();if(this._onScroll){window.removeEventListener('wheel',this._onScroll,true);}
this.changeDatetime();},_onDateTimePickerShow:function(){this.__isOpen=true;if(this.$input.val().length!==0&&this.isValid()){this.$input.select();}
var self=this;this._onScroll=function(ev){if(ev.target!==self.$input.get(0)){self.__libInput++;self.$el.datetimepicker('hide');self.__libInput--;}};window.addEventListener('wheel',this._onScroll,true);},_onKeydown:function(ev){if(ev.which===$.ui.keyCode.ESCAPE){if(this.__isOpen){ev.stopImmediatePropagation();this.__libInput++;this.$el.datetimepicker('hide');this.__libInput--;this.focus();}}},_onInput:function(ev){if(this.__libInput>0){ev.stopImmediatePropagation();}},_onInputClicked:function(){this.__libInput++;this.$el.datetimepicker('toggle');this.__libInput--;this.focus();},});var DateTimeWidget=DateWidget.extend({type_of_date:"datetime",init:function(parent,options){this._super(parent,_.extend({buttons:{showToday:false,showClear:false,showClose:true,},},options||{}));},});return{DateWidget:DateWidget,DateTimeWidget:DateTimeWidget,};});;

/* /web/static/src/legacy/legacy_load_views.js */
odoo.define('@web/legacy/legacy_load_views',async function(require){'use strict';let __exports={};const xmlSerializer=new XMLSerializer();const domParser=new DOMParser();function traverse(tree,f){if(f(tree)){_.each(tree.children,function(c){traverse(c,f);});}}
__exports.generateLegacyLoadViewsResult=generateLegacyLoadViewsResult;function generateLegacyLoadViewsResult(resModel,views,models){const legacyFieldViews={fields:models[resModel],fields_views:{},};if(views.search&&views.search.filters){legacyFieldViews.filters=views.search.filters;}
for(const viewType in views){const{arch,toolbar,id}=views[viewType];const{arch:processedArch,viewFields}=processArch(arch,viewType,resModel,models);legacyFieldViews.fields_views[viewType]={arch:processedArch,fields:viewFields,model:resModel,toolbar,view_id:id,};}
return legacyFieldViews;}
__exports.processArch=processArch;function processArch(arch,viewType,resModel,models){const viewFields={};const archDoc=domParser.parseFromString(arch,"text/xml").documentElement;traverse(archDoc,function(node){if(node.nodeType===3){return false;}
if(node.tagName==="field"){const fieldName=node.getAttribute("name");if(viewFields[fieldName]===undefined){const viewFieldsInfo=models[resModel][fieldName];const nodeString=node.getAttribute("string");if(nodeString===null&&viewFieldsInfo===undefined){throw new Error(`Missing field string information for the field '${fieldName}' from the '${resModel}' model`);}
viewFields[fieldName]={...viewFieldsInfo,string:nodeString||viewFieldsInfo.string,views:{},};}
if(viewType==="form"||viewType==="list"){const coModel=models[resModel][fieldName].relation;const views={};for(const childNode of[...node.children]){const viewType=childNode.tagName==="tree"?"list":childNode.tagName;const{arch:subViewArch,viewFields:subViewFields}=processArch(xmlSerializer.serializeToString(childNode),viewType,coModel,models);views[viewType]={arch:subViewArch,fields:subViewFields};node.removeChild(childNode);}
viewFields[fieldName].views=views;}
return false;}
if(viewType==="list"&&node.tagName==="groupby"&&node!==archDoc){const fieldName=node.getAttribute("name");const coModel=models[resModel][fieldName].relation;const{arch:subViewArch,viewFields:subViewFields}=processArch(xmlSerializer.serializeToString(node),"groupby",coModel,models);const groupbyView={arch:subViewArch,fields:subViewFields};viewFields[fieldName]=viewFields[fieldName]||{...models[resModel][fieldName],views:{},};viewFields[fieldName].views.groupby=groupbyView;for(const child of[...node.children]){node.removeChild(child);}
return false;}
return true;});return{arch:xmlSerializer.serializeToString(archDoc),viewFields};}
return __exports;});;

/* /web/static/src/legacy/legacy_promise_error_handler.js */
odoo.define('@web/legacy/legacy_promise_error_handler',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");function legacyRejectPromiseHandler(env,error,originalError){if(error.name.startsWith("UncaughtPromiseError")){const isLegitError=originalError&&originalError instanceof Error;const isLegacyRPC=originalError&&originalError.legacy;if(!isLegitError&&!isLegacyRPC){error.unhandledRejectionEvent.preventDefault();return true;}}
return false;}
registry.category("error_handlers").add("legacyRejectPromiseHandler",legacyRejectPromiseHandler,{sequence:1});return __exports;});;

/* /web/static/src/legacy/legacy_rpc_error_handler.js */
odoo.define('@web/legacy/legacy_rpc_error_handler',async function(require){'use strict';let __exports={};const{registry}=require("@web/core/registry");const{ConnectionLostError,RPCError}=require("@web/core/network/rpc_service");const{lostConnectionHandler,rpcErrorHandler}=require("@web/core/errors/error_handlers");const errorHandlerRegistry=registry.category("error_handlers");function legacyRPCErrorHandler(env,error,originalError){if(originalError&&originalError.legacy&&originalError.message&&(originalError.message instanceof RPCError||originalError.message instanceof ConnectionLostError)){const event=originalError.event;originalError=originalError.message;if(event.isDefaultPrevented()){error.unhandledRejectionEvent.preventDefault();return true;}
event.preventDefault();if(originalError instanceof ConnectionLostError){return lostConnectionHandler(env,error,originalError);}
return rpcErrorHandler(env,error,originalError);}
return false;}
errorHandlerRegistry.add("legacyRPCErrorHandler",legacyRPCErrorHandler,{sequence:97});return __exports;});;

/* /web/static/src/legacy/utils.js */
odoo.define('@web/legacy/utils',async function(require){'use strict';let __exports={};const{browser}=require("@web/core/browser/browser");const AbstractStorageService=require("web.AbstractStorageService");const{ConnectionAbortedError,RPCError,makeErrorFromResponse,ConnectionLostError,}=require("@web/core/network/rpc_service");const{ErrorDialog}=require("@web/core/errors/error_dialogs");const{useService}=require("@web/core/utils/hooks");const{useComponent}=require("@odoo/owl");const wowlServicesSymbol=__exports.wowlServicesSymbol=Symbol("wowlServices");__exports.makeLegacyRpcService=makeLegacyRpcService;function makeLegacyRpcService(legacyEnv){return{start(env){legacyEnv.bus.on("rpc_request",null,(rpcId)=>{env.bus.trigger("RPC:REQUEST",rpcId);});legacyEnv.bus.on("rpc_response",null,(rpcId)=>{env.bus.trigger("RPC:RESPONSE",rpcId);});legacyEnv.bus.on("rpc_response_failed",null,(rpcId)=>{env.bus.trigger("RPC:RESPONSE",rpcId);});},};}
__exports.makeLegacyDialogMappingService=makeLegacyDialogMappingService;function makeLegacyDialogMappingService(legacyEnv){return{dependencies:["ui","hotkey"],start(env){const{ui,hotkey}=env.services;function getModalEl(dialog){return dialog.modalRef?dialog.modalRef.el:dialog.$modal[0];}
function getCloseCallback(dialog){return dialog.modalRef?()=>dialog._close():()=>dialog.$modal.modal("hide");}
const dialogHotkeyRemoveMap=new Map();function onOpenDialog(dialog){ui.activateElement(getModalEl(dialog));const remove=hotkey.add("escape",getCloseCallback(dialog));dialogHotkeyRemoveMap.set(dialog,remove);}
function onCloseDialog(dialog){ui.deactivateElement(getModalEl(dialog));if(dialogHotkeyRemoveMap.has(dialog)){const removeHotkey=dialogHotkeyRemoveMap.get(dialog);removeHotkey();dialogHotkeyRemoveMap.delete(dialog);}}
legacyEnv.bus.on("legacy_dialog_opened",null,onOpenDialog);legacyEnv.bus.on("legacy_dialog_destroyed",null,onCloseDialog);legacyEnv.bus.on("owl_dialog_mounted",null,onOpenDialog);legacyEnv.bus.on("owl_dialog_willunmount",null,onCloseDialog);},};}
__exports.makeLegacyCommandService=makeLegacyCommandService;function makeLegacyCommandService(legacyEnv){return{dependencies:["command"],start(env){const{command}=env.services;const commandRemoveMap=new Map();function setLegacyCommand(uniqueId,getCommandDefinition){const{name,action,options}=getCommandDefinition(env);removeLegacyCommand(uniqueId);commandRemoveMap.set(uniqueId,command.add(name,action,options));}
function removeLegacyCommand(uniqueId){if(commandRemoveMap.has(uniqueId)){const removeCommand=commandRemoveMap.get(uniqueId);removeCommand();commandRemoveMap.delete(uniqueId);}}
function openMainPalette(config={}){command.openMainPalette(config);}
legacyEnv.bus.on("set_legacy_command",null,setLegacyCommand);legacyEnv.bus.on("remove_legacy_command",null,removeLegacyCommand);legacyEnv.bus.on("openMainPalette",null,openMainPalette);},};}
__exports.makeLegacyDropdownService=makeLegacyDropdownService;function makeLegacyDropdownService(legacyEnv){return{dependencies:["ui","hotkey"],start(_,{ui,hotkey}){legacyEnv.services.ui=ui;legacyEnv.services.hotkey=hotkey;},};}
__exports.makeLegacySessionService=makeLegacySessionService;function makeLegacySessionService(legacyEnv,session){return{dependencies:["user"],start(env){function mapContext(){return Object.assign({},env.services.user.context);}
Object.defineProperty(legacyEnv.session,"userContext",{get:()=>mapContext(),});Object.defineProperty(session,"user_context",{get:()=>mapContext(),});},};}
__exports.mapLegacyEnvToWowlEnv=mapLegacyEnvToWowlEnv;function mapLegacyEnvToWowlEnv(legacyEnv,wowlEnv){legacyEnv[wowlServicesSymbol]=wowlEnv.services;legacyEnv.session.rpc=(...args)=>{let rejection;const prom=new Promise((resolve,reject)=>{const[route,params,settings={}]=args;if(params&&params.kwargs){params.kwargs.context=Object.assign({},legacyEnv.session.user_context,params.kwargs.context,);}
const jsonrpc=wowlEnv.services.rpc(route,params,{silent:settings.shadow,xhr:settings.xhr,});rejection=()=>{jsonrpc.abort();};jsonrpc.then(resolve).catch((reason)=>{if(reason instanceof RPCError||reason instanceof ConnectionLostError){reject({message:reason,event:$.Event(),legacy:true});}else if(reason instanceof ConnectionAbortedError){reject({message:reason.message,event:$.Event("abort")});}else{reject(reason);}});});prom.abort=rejection;return prom;};function mapStorage(storage){const StorageService=AbstractStorageService.extend({storage});return new StorageService();}
legacyEnv.services.local_storage=mapStorage(browser.localStorage);legacyEnv.services.session_storage=mapStorage(browser.sessionStorage);legacyEnv.services.dialog=wowlEnv.services.dialog;wowlEnv.bus.addEventListener("WEB_CLIENT_READY",()=>{legacyEnv.bus.trigger("web_client_ready");});wowlEnv.bus.addEventListener("SCROLLER:ANCHOR_LINK_CLICKED",(ev)=>{legacyEnv.bus.trigger("SCROLLER:ANCHOR_LINK_CLICKED",ev.detail);});legacyEnv.bus.on("clear_cache",null,()=>{wowlEnv.bus.trigger("CLEAR-CACHES");});}
const reBSTooltip=/^bs-.*$/;__exports.cleanDomFromBootstrap=cleanDomFromBootstrap;function cleanDomFromBootstrap(){const body=document.body;const tooltips=body.querySelectorAll("body .tooltip");for(const tt of tooltips){if(Array.from(tt.classList).find((cls)=>reBSTooltip.test(cls))){tt.parentNode.removeChild(tt);}}}
__exports.makeLegacyNotificationService=makeLegacyNotificationService;function makeLegacyNotificationService(legacyEnv){return{dependencies:["notification"],start(env,{notification}){let notifId=0;const idsToRemoveFn={};function notify({title,message,subtitle,buttons=[],sticky,type,className,onClose,}){if(subtitle){title=[title,subtitle].filter(Boolean).join(" ");}
if(!message&&title){message=title;title=undefined;}
buttons=buttons.map((button)=>{return{name:button.text,icon:button.icon,primary:button.primary,onClick:button.click,};});const removeFn=notification.add(message,{sticky,title,type,className,onClose,buttons,});const id=++notifId;idsToRemoveFn[id]=removeFn;return id;}
function close(id,_,wait){const removeFn=idsToRemoveFn[id];delete idsToRemoveFn[id];if(wait){browser.setTimeout(()=>{removeFn(id);},wait);}else{removeFn(id);}}
legacyEnv.services.notification={notify,close};},};}
__exports.makeLegacyCrashManagerService=makeLegacyCrashManagerService;function makeLegacyCrashManagerService(legacyEnv){return{dependencies:["dialog"],start(env){legacyEnv.services.crash_manager={show_message(message){env.services.dialog.add(ErrorDialog,{traceback:message});},rpc_error(errorResponse){Promise.reject(makeErrorFromResponse(errorResponse));},};},};}
__exports.wrapSuccessOrFail=wrapSuccessOrFail;function wrapSuccessOrFail(promise,{on_success,on_fail}={}){return promise.then(on_success||(()=>{})).catch((reason)=>{let alreadyThrown=false;if(on_fail){alreadyThrown=on_fail(reason)==="alreadyThrown";}
const error=reason instanceof Error&&"cause"in reason?reason.cause:reason;if(error instanceof Error&&!alreadyThrown){throw reason;}});}
__exports.makeLegacyRainbowManService=makeLegacyRainbowManService;function makeLegacyRainbowManService(legacyEnv){return{dependencies:["effect"],start(env,{effect}){legacyEnv.bus.on("show-effect",null,(payload)=>{effect.add(payload);});},};}
__exports.useLegacyRefs=useLegacyRefs;function useLegacyRefs(){const env=owl.useEnv();let legacyRefs;if(env.legacyRefs){legacyRefs=env.legacyRefs;}else{legacyRefs={component:null,widget:null,};}
owl.useChildSubEnv({legacyRefs,});return legacyRefs;}
__exports.useWowlService=useWowlService;function useWowlService(serviceName){const component=useComponent();const env=component.env;component.env={services:env[wowlServicesSymbol]};const service=useService(serviceName);component.env=env;return service;}
return __exports;});;

/* /mail_enterprise/static/src/components/chat_window/chat_window.js */
odoo.define('@mail_enterprise/components/chat_window/chat_window',async function(require){'use strict';let __exports={};const{ChatWindow}=require('@mail/components/chat_window/chat_window');const{useBackButton}=require('web_mobile.hooks');const{patch}=require('web.utils');patch(ChatWindow.prototype,'mail_enterprise/static/src/components/chat_window/chat_window.js',{setup(){this._super();this._onBackButtonGlobal=this._onBackButtonGlobal.bind(this);useBackButton(this._onBackButtonGlobal);},_onBackButtonGlobal(ev){if(!this.chatWindow){return;}
this.chatWindow.close();},});return __exports;});;

/* /mail_enterprise/static/src/components/dialog/dialog.js */
odoo.define('@mail_enterprise/components/dialog/dialog',async function(require){'use strict';let __exports={};const{Dialog}=require('@mail/components/dialog/dialog');const{useBackButton}=require('web_mobile.hooks');const{patch}=require('web.utils');patch(Dialog.prototype,'mail_enterprise/static/src/components/dialog/dialog.js',{setup(){this._super();this._onBackButtonGlobal=this._onBackButtonGlobal.bind(this);this._backButtonHandler=useBackButton(this._onBackButtonGlobal);},_onBackButtonGlobal(ev){if(!this.dialog){return;}
this.dialog.delete();},});return __exports;});;

/* /mail_enterprise/static/src/components/messaging_menu/messaging_menu.js */
odoo.define('@mail_enterprise/components/messaging_menu/messaging_menu',async function(require){'use strict';let __exports={};const{MessagingMenu}=require('@mail/components/messaging_menu/messaging_menu');const{useBackButton}=require('web_mobile.hooks');const{patch}=require('web.utils');patch(MessagingMenu.prototype,'mail_enterprise/static/src/components/chat_window/chat_window.js',{setup(){this._super();this._onBackButtonGlobal=this._onBackButtonGlobal.bind(this);useBackButton(this._onBackButtonGlobal,()=>this.messagingMenu&&this.messagingMenu.isOpen);},_onBackButtonGlobal(ev){if(!this.messagingMenu){return;}
this.messagingMenu.close();},});return __exports;});;

/* /mail_enterprise/static/src/components/swiper_view/swiper_view.js */
odoo.define('@mail_enterprise/components/swiper_view/swiper_view',async function(require){'use strict';let __exports={};const{useUpdate}=require('@mail/component_hooks/use_update');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{ActionSwiper}=require("@web/core/action_swiper/action_swiper");const{Component}=owl;const SwiperView=__exports.SwiperView=class SwiperView extends Component{setup(){useUpdate({func:()=>{if(this.swiperView){this.swiperView.record.localId;this.swiperView.componentName;}},});}
get swiperView(){return this.props.record;}}
Object.assign(SwiperView,{components:{ActionSwiper},props:{record:Object},template:'mail_enterprise.SwiperView',});registerMessagingComponent(SwiperView);return __exports;});;

/* /web_mobile/static/src/js/core/mixins.js */
odoo.define('web_mobile.mixins',function(require){"use strict";const session=require('web.session');const mobile=require('web_mobile.core');const{isIosApp}=require('@web/core/browser/feature_detection');var BackButtonEventMixin={on_attach_callback:function(){mobile.backButtonManager.addListener(this,this._onBackButton);},on_detach_callback:function(){mobile.backButtonManager.removeListener(this,this._onBackButton);},_onBackButton:function(){},};const UpdateDeviceAccountControllerMixin={async save(){const isSaved=await this._super(...arguments);if(!isSaved){return false;}
const updated=session.updateAccountOnMobileDevice();if(!isIosApp()){await updated;}
return true;},};session.is_bound.then(()=>session.updateAccountOnMobileDevice());return{BackButtonEventMixin:BackButtonEventMixin,UpdateDeviceAccountControllerMixin,};});odoo.define('web_mobile.hooks',function(require){"use strict";const{backButtonManager}=require('web_mobile.core');const{onMounted,onPatched,onWillUnmount,useComponent}=require("@odoo/owl");function useBackButton(func,shouldEnable){const component=useComponent();let isEnabled=false;function enable(){backButtonManager.addListener(component,func);isEnabled=true;}
function disable(){backButtonManager.removeListener(component);isEnabled=false;}
onMounted(()=>{if(shouldEnable&&!shouldEnable()){return;}
enable();});onPatched(()=>{if(!shouldEnable){return;}
const shouldBeEnabled=shouldEnable();if(shouldBeEnabled&&!isEnabled){enable();}else if(!shouldBeEnabled&&isEnabled){disable();}});onWillUnmount(()=>{if(isEnabled){disable();}});}
return{useBackButton,};});;

/* /web_mobile/static/src/js/core/session.js */
odoo.define('web_mobile.Session',function(require){"use strict";const core=require('web.core');const Session=require('web.Session');const mobile=require('web_mobile.core');const DEFAULT_AVATAR_SIZE=128;Session.include({get_file:function(options){if(mobile.methods.downloadFile){if(core.csrf_token){options.csrf_token=core.csrf_token;}
mobile.methods.downloadFile(options);if(options.success){options.success();}
if(options.complete){options.complete();}
return true;}else{return this._super.apply(this,arguments);}},async updateAccountOnMobileDevice(){if(!mobile.methods.updateAccount){return;}
const base64Avatar=await this.fetchAvatar();return mobile.methods.updateAccount({avatar:base64Avatar.substring(base64Avatar.indexOf(',')+1),name:this.name,username:this.username,});},fetchAvatar(){const url=this.url('/web/image',{model:'res.users',field:'image_medium',id:this.uid,});return new Promise((resolve,reject)=>{const canvas=document.createElement('canvas');canvas.width=DEFAULT_AVATAR_SIZE;canvas.height=DEFAULT_AVATAR_SIZE;const context=canvas.getContext('2d');const image=new Image();image.addEventListener('load',()=>{context.drawImage(image,0,0,DEFAULT_AVATAR_SIZE,DEFAULT_AVATAR_SIZE);resolve(canvas.toDataURL('image/png'));});image.addEventListener('error',reject);image.src=url;});},});});;

/* /web_mobile/static/src/js/services/core.js */
odoo.define('web_mobile.core',function(){"use strict";var available=typeof OdooDeviceUtility!=='undefined';var DeviceUtility;var deferreds={};var methods={};if(available){DeviceUtility=OdooDeviceUtility;delete window.OdooDeviceUtility;}
function native_invoke(name,args){if(_.isUndefined(args)){args={};}
var id=_.uniqueId();args=JSON.stringify(args);DeviceUtility.execute(name,args,id);return new Promise(function(resolve,reject){deferreds[id]={successCallback:resolve,errorCallback:reject};});}
window.odoo.native_notify=function(id,result){if(deferreds.hasOwnProperty(id)){if(result.success){deferreds[id].successCallback(result);}else{deferreds[id].errorCallback(result);}}};var plugins=available?JSON.parse(DeviceUtility.list_plugins()):[];_.each(plugins,function(plugin){methods[plugin.name]=function(args){return native_invoke(plugin.action,args);};});if(methods.hashChange){var currentHash;$(window).bind('hashchange',function(event){var hash=event.getState();if(!_.isEqual(currentHash,hash)){methods.hashChange(hash);}
currentHash=hash;});}
class BackButtonListenerError extends Error{}
class BackButtonManager{constructor(){this._listeners=new Map();this._onGlobalBackButton=this._onGlobalBackButton.bind(this);}
addListener(listener,func){if(!methods.overrideBackButton){return;}
if(this._listeners.has(listener)){throw new BackButtonListenerError("This listener was already registered.");}
this._listeners.set(listener,func);if(this._listeners.size===1){document.addEventListener('backbutton',this._onGlobalBackButton);methods.overrideBackButton({enabled:true});}}
removeListener(listener){if(!methods.overrideBackButton){return;}
if(!this._listeners.has(listener)){throw new BackButtonListenerError("This listener has already been unregistered.");}
this._listeners.delete(listener);if(this._listeners.size===0){document.removeEventListener('backbutton',this._onGlobalBackButton);methods.overrideBackButton({enabled:false});}}
_onGlobalBackButton(){const[listener,func]=[...this._listeners].pop();if(listener){func.apply(listener,arguments);}}}
const backButtonManager=new BackButtonManager();return{BackButtonManager,BackButtonListenerError,backButtonManager,methods,};});;

/* /sms/static/src/components/sms_button/sms_button.js */
odoo.define('@sms/components/sms_button/sms_button',async function(require){'use strict';let __exports={};const{useService}=require("@web/core/utils/hooks");const{Component}=owl;const SendSMSButton=__exports.SendSMSButton=class SendSMSButton extends Component{setup(){this.action=useService("action");this.user=useService("user");this.title=this.env._t("Send SMS Text Message");}
async onClick(){await this.props.record.save();this.action.doAction({type:"ir.actions.act_window",target:"new",name:this.title,res_model:"sms.composer",views:[[false,"form"]],context:{...this.user.context,default_res_model:this.props.record.resModel,default_res_id:this.props.record.resId,default_number_field_name:this.props.name,default_composition_mode:'comment',}},{onClose:()=>{this.props.record.load();this.props.record.model.notify();},});}};SendSMSButton.template="sms.SendSMSButton";return __exports;});;

/* /approvals/static/src/components/approval/approval.js */
odoo.define('@approvals/components/approval/approval',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;class Approval extends Component{get approvalView(){return this.props.record;}}
Object.assign(Approval,{props:{record:Object},template:'approvals.Approval',});registerMessagingComponent(Approval);return __exports;});;

/* /snailmail/static/src/components/snailmail_error/snailmail_error.js */
odoo.define('@snailmail/components/snailmail_error/snailmail_error',async function(require){'use strict';let __exports={};const{useComponentToModel}=require('@mail/component_hooks/use_component_to_model');const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const SnailmailError=__exports.SnailmailError=class SnailmailError extends Component{setup(){useComponentToModel({fieldName:'component'});}
get snailmailErrorView(){return this.props.record;}}
Object.assign(SnailmailError,{props:{record:Object},template:'snailmail.SnailmailError',});registerMessagingComponent(SnailmailError);return __exports;});;

/* /snailmail/static/src/components/snailmail_notification_popover_content_view/snailmail_notification_popover_content_view.js */
odoo.define('@snailmail/components/snailmail_notification_popover_content_view/snailmail_notification_popover_content_view',async function(require){'use strict';let __exports={};const{registerMessagingComponent}=require('@mail/utils/messaging_component');const{Component}=owl;const SnailmailNotificationPopoverContentView=__exports.SnailmailNotificationPopoverContentView=class SnailmailNotificationPopoverContentView extends Component{get snailmailNotificationPopoverContentView(){return this.props.record;}}
Object.assign(SnailmailNotificationPopoverContentView,{props:{record:Object},template:'snailmail.SnailmailNotificationPopoverContentView',});registerMessagingComponent(SnailmailNotificationPopoverContentView);return __exports;});

                    /*******************************************
                    *  Templates                               *
                    *******************************************/

                    odoo.define('mail.assets_discuss_public.bundle.xml', function(require){
                        'use strict';
                        const { loadXML } = require('@web/core/assets');
                        const templates = `<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
<t t-name="mail.Activity" owl="1">
        <t t-if="activityView">
            <div class="o_Activity d-flex py-2 px-3" t-attf-class="{{ className }}" t-on-click="activityView.onClickActivity" t-ref="root">
                <div class="o_Activity_sidebar me-3">
                    <div class="o_Activity_user position-relative h-100 w-100">
                        <t t-if="activityView.activity.assignee">
                            <img class="o_Activity_userAvatar rounded-circle h-100 w-100 o_object_fit_cover" t-attf-src="/web/image/res.users/{{ activityView.activity.assignee.id }}/avatar_128" t-att-alt="activityView.activity.assignee.nameOrDisplayName"/>
                        </t>
                        <div class="o_Activity_iconContainer d-flex align-items-center justify-content-center rounded-circle w-50 h-50" t-att-class="{                                 'text-bg-success': activityView.activity.state === 'planned',                                 'text-bg-warning': activityView.activity.state === 'today',                                 'text-bg-danger': activityView.activity.state === 'overdue',                             }">
                            <i class="o_Activity_icon fa small" t-attf-class="{{ activityView.activity.icon }}"/>
                        </div>
                    </div>
                </div>
                <div class="o_Activity_core">
                    <div class="o_Activity_info d-flex align-items-baseline">
                        <div class="o_Activity_dueDateText me-2" t-att-class="{                                 'text-danger': activityView.activity.state === 'overdue',                                 'text-success': activityView.activity.state === 'planned',                                 'text-warning': activityView.activity.state === 'today',                             }">
                            <b t-esc="activityView.delayLabel"/>
                        </div>
                        <t t-if="activityView.activity.summary">
                            <b class="o_Activity_summary text-900 me-2">
                                <t t-esc="activityView.summary"/>
                            </b>
                        </t>
                        <t t-elif="activityView.activity.type">
                            <b class="o_Activity_summary o_Activity_type text-900 me-2">
                                <t t-esc="activityView.activity.type.displayName"/>
                            </b>
                        </t>
                        <t t-if="activityView.activity.assignee">
                            <div class="o_Activity_userName">
                                <t t-esc="activityView.assignedUserText"/>
                            </div>
                        </t>
                        <a href="#" class="o_Activity_detailsButton btn py-0" t-att-class="activityView.areDetailsVisible ? 'text-primary' : 'btn-link btn-primary'" t-att-aria-expanded="activityView.areDetailsVisible ? 'true' : 'false'" t-on-click="activityView.onClickDetailsButton" role="button">
                            <i class="fa fa-info-circle" role="img" title="Info" aria-label="Info"/>
                        </a>
                    </div>

                    <t t-if="activityView.areDetailsVisible">
                        <div class="o_Activity_details">
                            <div class="d-md-table table table-sm mt-2 mb-3">
                                <div t-if="activityView.activity.type" class="d-md-table-row mb-3">
                                    <div class="d-md-table-cell fw-bold text-md-end m-0 py-md-1 px-md-4">Activity type</div>
                                    <div class="o_Activity_type d-md-table-cell py-md-1 pe-4">
                                        <t t-esc="activityView.activity.type.displayName"/>
                                    </div>
                                </div>
                                <div t-if="activityView.activity.creator" class="d-md-table-row mb-3">
                                    <div class="d-md-table-cell fw-bold text-md-end m-0 py-md-1 px-md-4">Created</div>
                                    <div class="o_Activity_detailsCreation d-md-table-cell py-md-1 pe-4">
                                        <t t-esc="activityView.formattedCreateDatetime"/>, <br t-if="messaging.device.isSmall"/>by
                                        <img class="o_Activity_detailsUserAvatar o_Activity_detailsCreatorAvatar ms-1 me-1 rounded-circle align-text-bottom p-0" t-attf-src="/web/image/res.users/{{ activityView.activity.creator.id }}/avatar_128" t-att-title="activityView.activity.creator.nameOrDisplayName" t-att-alt="activityView.activity.creator.nameOrDisplayName"/>
                                        <b class="o_Activity_detailsCreator">
                                            <t t-esc="activityView.activity.creator.nameOrDisplayName"/>
                                        </b>
                                    </div>
                                </div>
                                <div t-if="activityView.activity.assignee" class="d-md-table-row mb-3">
                                    <div class="d-md-table-cell fw-bold text-md-end m-0 py-md-1 px-md-4">Assigned to</div>
                                    <div class="o_Activity_detailsAssignation d-md-table-cell py-md-1 pe-4">
                                        <img class="o_Activity_detailsUserAvatar o_Activity_detailsAssignationUserAvatar me-1 rounded-circle align-text-bottom p-0" t-attf-src="/web/image/res.users/{{ activityView.activity.assignee.id }}/avatar_128" t-att-title="activityView.activity.assignee.nameOrDisplayName" t-att-alt="activityView.activity.assignee.nameOrDisplayName"/>
                                        <b t-esc="activityView.activity.assignee.nameOrDisplayName"/>
                                    </div>
                                </div>
                                <div class="d-md-table-row">
                                    <div class="d-md-table-cell fw-bold text-md-end m-0 py-md-1 px-md-4">Due on</div>
                                    <div class="o_Activity_detailsDueDate d-md-table-cell py-md-1 pe-4">
                                        <span class="o_Activity_deadlineDateText" t-att-class="{                                                 'text-danger': activityView.activity.state === 'overdue',                                                 'text-success': activityView.activity.state === 'planned',                                                 'text-warning': activityView.activity.state === 'today',                                             }">
                                            <t t-esc="activityView.formattedDeadlineDate"/>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </t>

                    <t t-if="activityView.activity.note">
                        <div class="o_Activity_note">
                            <t t-out="activityView.activity.noteAsMarkup"/>
                        </div>
                    </t>

                    <t t-if="activityView.mailTemplateViews.length &gt; 0">
                        <div class="o_Activity_mailTemplates">
                            <t t-foreach="activityView.mailTemplateViews" t-as="mailTemplateView" t-key="mailTemplateView.localId">
                                <MailTemplate className="'o_Activity_mailTemplate'" record="mailTemplateView"/>
                            </t>
                        </div>
                    </t>

                    <t t-if="activityView.activity.canWrite">
                        <t t-if="activityView.approvalView">
                <Approval record="activityView.approvalView"/>
            </t>
            <t t-else=""><div name="tools" class="o_Activity_tools d-flex">
                            <button class="o_Activity_toolButton o_Activity_markDoneButton btn btn-link btn-primary pt-0 ps-0" t-att-title="activityView.markDoneText" t-ref="markDoneButton" t-on-click="activityView.onClickMarkDoneButton">
                                <i class="fa fa-check"/> Mark Done
                            </button>
                            <t t-if="activityView.fileUploader">
                                <button class="o_Activity_toolButton o_Activity_uploadButton btn btn-link btn-primary pt-0 ps-0" t-on-click="activityView.onClickUploadDocument">
                                    <i class="fa fa-upload"/> Upload Document
                                </button>
                            </t>
                            <button class="o_Activity_toolButton o_Activity_editButton btn btn-link btn-primary pt-0" t-on-click="activityView.onClickEdit">
                                <i class="fa fa-pencil"/> Edit
                            </button>
                            <button class="o_Activity_toolButton o_Activity_cancelButton btn btn-link btn-primary pt-0" t-on-click="activityView.onClickCancel">
                                <i class="fa fa-times"/> Cancel
                            </button>
                        </div>
                    </t>
        </t>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.ActivityBox" owl="1">
        <t t-if="activityBoxView">
            <div class="o_ActivityBox" t-attf-class="{{ className }}" t-ref="root">
                <a href="#" role="button" class="o_ActivityBox_title btn d-flex align-items-center p-0 w-100 fw-bold" t-att-aria-expanded="activityBoxView.isActivityListVisible ? 'true' : 'false'" t-on-click="activityBoxView.onClickActivityBoxTitle">
                    <hr class="o_ActivityBox_titleLine w-auto flex-grow-1 me-3"/>
                    <span class="o_ActivityBox_titleText">
                        <i class="fa fa-fw" t-att-class="activityBoxView.isActivityListVisible ? 'fa-caret-down' : 'fa-caret-right'"/>
                        Planned activities
                    </span>
                    <t t-if="!activityBoxView.isActivityListVisible">
                        <span class="o_ActivityBox_titleBadges ms-2">
                            <t t-if="activityBoxView.chatter.thread.overdueActivities.length &gt; 0">
                                <span class="o_ActivityBox_titleBadge me-1 badge text-bg-danger">
                                    <t t-esc="activityBoxView.chatter.thread.overdueActivities.length"/>
                                </span>
                            </t>
                            <t t-if="activityBoxView.chatter.thread.todayActivities.length &gt; 0">
                                <span class="o_ActivityBox_titleBadge me-1 badge text-bg-warning">
                                    <t t-esc="activityBoxView.chatter.thread.todayActivities.length"/>
                                </span>
                            </t>
                            <t t-if="activityBoxView.chatter.thread.futureActivities.length &gt; 0">
                                <span class="o_ActivityBox_titleBadge me-1 badge text-bg-success">
                                    <t t-esc="activityBoxView.chatter.thread.futureActivities.length"/>
                                </span>
                            </t>
                        </span>
                    </t>
                    <hr class="o_ActivityBox_titleLine w-auto flex-grow-1 ms-3"/>
                </a>
                <t t-if="activityBoxView.isActivityListVisible">
                    <div class="o_ActivityBox_activityList">
                        <t t-foreach="activityBoxView.activityViews" t-as="activityView" t-key="activityView.localId">
                            <Activity className="'o_ActivityBox_activity'" record="activityView"/>
                        </t>
                    </div>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.ActivityMarkDonePopoverContent" owl="1">
        <t t-if="activityMarkDonePopoverContentView">
            <div class="o_ActivityMarkDonePopoverContent" t-attf-class="{{ className }}" t-on-keydown="activityMarkDonePopoverContentView.onKeydown" t-ref="root">
                <h6 t-if="activityMarkDonePopoverContentView.hasHeader" class="o_ActivityMarkDonePopoverContent_header p-2 fw-bolder bg-200 border-bottom" t-esc="activityMarkDonePopoverContentView.headerText"/>
                <div class="o_ActivityMarkDonePopoverContent_content py-2 px-3">
                    <textarea class="form-control o_ActivityMarkDonePopoverContent_feedback" rows="3" placeholder="Write Feedback" t-on-blur="activityMarkDonePopoverContentView.onBlur" t-ref="feedbackTextarea"/>
                    <div class="o_ActivityMarkDonePopoverContent_buttons mt-2">
                        <button type="button" class="o_ActivityMarkDonePopoverContent_doneScheduleNextButton btn btn-sm btn-primary" t-on-click="activityMarkDonePopoverContentView.onClickDoneAndScheduleNext">
                            Done &amp; Schedule Next
                        </button>
                        <t t-if="activityMarkDonePopoverContentView.activity.chaining_type === 'suggest'">
                            <button type="button" class="o_ActivityMarkDonePopoverContent_doneButton btn btn-sm btn-primary mx-2" t-on-click="activityMarkDonePopoverContentView.onClickDone">
                                Done
                            </button>
                        </t>
                        <button type="button" class="o_ActivityMarkDonePopoverContent_discardButton btn btn-sm btn-link" t-on-click="activityMarkDonePopoverContentView.onClickDiscard">
                            Discard
                        </button>
                    </div>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.ActivityMenuView" owl="1">
        <div class="o_ActivityMenuView dropdown" t-ref="root">
            <a class="o_ActivityMenuView_dropdownToggle dropdown-toggle o-no-caret o-dropdown--narrow" t-att-aria-expanded="activityMenuView.isOpen ? 'true' : 'false'" title="Activities" href="#" role="button" t-on-click="activityMenuView.onClickDropdownToggle">
                <i class="fa fa-lg fa-clock-o" role="img" aria-label="Activities"/> <span t-if="activityMenuView.counter &gt; 0" class="o_ActivityMenuView_counter badge" t-esc="activityMenuView.counter"/>
            </a>
            <div t-if="activityMenuView.isOpen" class="o_ActivityMenuView_dropdownMenu o-dropdown-menu dropdown-menu-end show bg-view" role="menu">
                <div class="o_ActivityMenuView_activityGroups">
                    <t t-if="activityMenuView.activityGroupViews.length === 0">
                        <div class="o_ActivityMenuView_noActivity dropdown-item-text text-center d-flex justify-content-center">
                            <span>Congratulations, you're done with your activities.</span>
                        </div>
                    </t>
                    <t t-foreach="activityMenuView.activityGroupViews" t-as="activityGroupView" t-key="activityGroupView.localId" name="activityGroupLoop">
                        <div class="o_ActivityMenuView_activityGroup" t-att-data-res_model="activityGroupView.activityGroup.irModel.model" t-att-data-model_name="activityGroupView.activityGroup.irModel.name" t-att-data-domain="activityGroupView.activityGroup.domain" data-filter="my" t-att-data-activity-group-view-local-id="activityGroupView.localId" t-on-click="activityGroupView.onClickFilterButton">
                            <div t-if="activityGroupView.activityGroup.irModel.iconUrl" class="o_ActivityMenuView_activityGroupIconContainer">
                                <img t-att-src="activityGroupView.activityGroup.irModel.iconUrl" alt="Activity"/>
                            </div>
                            <div class="o_ActivityMenuView_activityGroupInfo">
                                <div class="o_ActivityMenuView_activityGroupTitle">
                                    <span class="o_ActivityMenuView_activityGroupName">
                                        <t t-esc="activityGroupView.activityGroup.irModel.name"/>
                                    </span>
                                    <div t-if="activityGroupView.activityGroup.actions" class="o_ActivityMenuView_activityGroupActionButtons">
                                        <t t-foreach="activityGroupView.activityGroup.actions" t-as="action" t-key="action.name">
                                            <button type="button" t-att-title="action.name" t-att-class="'o_ActivityMenuView_activityGroupActionButton btn btn-link fa ' + action.icon" t-att-data-action_xmlid="action.action_xmlid" t-att-data-res_model="activityGroupView.activityGroup.irModel.model" t-att-data-model_name="activityGroupView.activityGroup.irModel.name" t-att-data-domain="activityGroupView.activityGroup.domain" t-on-click="activityGroupView.onClick">
                                            </button>
                                        </t>
                                    </div>
                                </div>
                                <div t-if="activityGroupView.activityGroup.type == 'activity'">
                                    <button t-if="activityGroupView.activityGroup.overdue_count" type="button" class="o_ActivityMenuView_activityGroupFilterButton btn btn-link mr16" t-att-data-res_model="activityGroupView.activityGroup.irModel.model" t-att-data-model_name="activityGroupView.activityGroup.irModel.name" data-filter="overdue"><t t-esc="activityGroupView.activityGroup.overdue_count"/> Late </button>
                                    <span t-if="!activityGroupView.activityGroup.overdue_count" class="o_ActivityMenuView_activityGroupNoCount mr16 text-muted">0 Late </span>
                                    <button t-if="activityGroupView.activityGroup.today_count" type="button" class="o_ActivityMenuView_activityGroupFilterButton btn btn-link mr16" t-att-data-res_model="activityGroupView.activityGroup.irModel.model" t-att-data-model_name="activityGroupView.activityGroup.irModel.name" data-filter="today"> <t t-esc="activityGroupView.activityGroup.today_count"/> Today </button>
                                    <span t-if="!activityGroupView.activityGroup.today_count" class="o_ActivityMenuView_activityGroupNoCount mr16 text-muted">0 Today </span>
                                    <button t-if="activityGroupView.activityGroup.planned_count" type="button" class="o_ActivityMenuView_activityGroupFilterButton btn btn-link float-end" t-att-data-res_model="activityGroupView.activityGroup.irModel.model" t-att-data-model_name="activityGroupView.activityGroup.irModel.name" data-filter="upcoming_all"> <t t-esc="activityGroupView.activityGroup.planned_count"/> Future </button>
                                    <span t-if="!activityGroupView.activityGroup.planned_count" class="o_ActivityMenuView_activityGroupNoCount float-end text-muted">0 Future</span>
                                </div>
                            </div>
                        </div>
                    </t>
                </div>
            </div>
        </div>
    </t>

<t t-name="mail.AttachmentBox" owl="1">
        <t t-if="attachmentBoxView">
            <div class="o_AttachmentBox position-relative" t-attf-class="{{ className }}" t-ref="root">
                <div class="o_AttachmentBox_title d-flex align-items-center">
                    <hr class="o_AttachmentBox_dashedLine flex-grow-1"/>
                    <span class="o_AttachmentBox_titleText p-3 fw-bold">
                        Files
                    </span>
                    <hr class="o_AttachmentBox_dashedLine flex-grow-1"/>
                </div>
                <div class="o_AttachmentBox_content d-flex flex-column">
                    <t t-if="attachmentBoxView.attachmentList">
                        <AttachmentList className="'o_attachmentBox_attachmentList'" record="attachmentBoxView.attachmentList"/>
                    </t>
                    <button class="o_AttachmentBox_buttonAdd btn btn-link" type="button" t-on-click="attachmentBoxView.onClickAddAttachment" t-att-disabled="!attachmentBoxView.chatter.isTemporary and !attachmentBoxView.chatter.hasWriteAccess">
                        <i class="fa fa-plus-square"/>
                        Attach files
                    </button>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.AttachmentCard" owl="1">
        <t t-if="attachmentCard">
            <div t-attf-class="{{ className }}" t-ref="root">
                <div class="o_AttachmentCard o-has-card-details d-flex rounded bg-300" t-att-class="{                         'o-isUploading': attachmentCard.attachment.isUploading,                         'o-viewable': attachmentCard.attachment.isViewable,                     }" t-att-title="attachmentCard.attachment.displayName ? attachmentCard.attachment.displayName : undefined" role="menu" t-att-aria-label="attachmentCard.attachment.displayName" t-att-data-id="attachmentCard.attachment.localId">


                    <div class="o_AttachmentCard_image o_image flex-shrink-0 m-1" t-on-click="attachmentCard.onClickImage" t-att-class="{'o-attachment-viewable opacity-75-hover': attachmentCard.attachment.isViewable,}" role="menuitem" aria-label="Preview" t-att-tabindex="attachmentCard.attachment.isViewable ? 0 : -1" t-att-aria-disabled="!attachmentCard.attachment.isViewable" t-att-data-mimetype="attachmentCard.attachment.mimetype">
                    </div>

                    <div class="o_AttachmentCard_details d-flex justify-content-center flex-column px-1">
                        <t t-if="attachmentCard.attachment.displayName">
                            <div class="o_AttachmentCard_filename text-truncate">
                                <t t-esc="attachmentCard.attachment.displayName"/>
                            </div>
                        </t>
                        <t t-if="attachmentCard.attachment.extension">
                            <small class="o_AttachmentCard_extension text-uppercase">
                                <t t-esc="attachmentCard.attachment.extension"/>
                            </small>
                        </t>
                    </div>

                    <div class="o_AttachmentCard_aside position-relative rounded-end overflow-hidden" t-att-class="{ 'o-hasMultipleActions d-flex flex-column': attachmentCard.hasMultipleActions }">

                        <t t-if="attachmentCard.attachment.isUploading and attachmentCard.attachmentList.composerViewOwner">
                            <div class="o_AttachmentCard_asideItem o_AttachmentCard_asideItemUploading d-flex justify-content-center align-items-center w-100 h-100" title="Uploading">
                                <i class="fa fa-spin fa-spinner"/>
                            </div>
                        </t>

                        <t t-if="!attachmentCard.attachment.isUploading and attachmentCard.attachmentList.composerViewOwner">
                            <div class="o_AttachmentCard_asideItem o_AttachmentCard_asideItemUploaded d-flex justify-content-center align-items-center w-100 h-100 text-primary" title="Uploaded">
                                <i class="fa fa-check"/>
                            </div>
                        </t>

                        <t t-if="attachmentCard.attachment.isDeletable">
                            <button class="o_AttachmentCard_asideItem o_AttachmentCard_asideItemUnlink btn top-0 justify-content-center align-items-center d-flex w-100 h-100 rounded-0" t-attf-class="{{ attachmentCard.attachmentList.composerViewOwner ? 'o-pretty position-absolute btn-primary transition-base' : 'bg-300' }}" t-on-click="attachmentCard.onClickUnlink" title="Remove">
                                <i class="fa fa-trash" role="img" aria-label="Remove"/>
                            </button>
                        </t>

                        <t t-if="!attachmentCard.attachmentList.composerViewOwner and !attachmentCard.attachment.isUploading">
                            <button class="o_AttachmentCard_asideItem o_AttachmentCard_asideItemDownload btn d-flex justify-content-center align-items-center w-100 h-100 rounded-0 bg-300" t-on-click="attachmentCard.attachment.onClickDownload" title="Download">
                                <i class="fa fa-download" role="img" aria-label="Download"/>
                            </button>
                        </t>
                    </div>
                </div>
            </div>
        </t>
    </t>
<t t-name="mail.AttachmentDeleteConfirm" owl="1">
        <t t-if="attachmentDeleteConfirmView">
            <div class="o_AttachmentDeleteConfirm card bg-view" t-attf-class="{{ className }}" t-ref="root">
                <h4 class="m-3">Confirmation</h4>
                <hr class="mt-0 mb-3"/>
                <p class="o_AttachmentDeleteConfirm_mainText mx-3 mb-3" t-esc="attachmentDeleteConfirmView.body"/>
                <hr class="mt-0 mb-3"/>
                <div class="o_AttachmentDeleteConfirm_buttons mx-3 mb-3">
                    <button class="o_AttachmentDeleteConfirm_confirmButton btn btn-primary me-2" t-on-click="attachmentDeleteConfirmView.onClickOk">Ok</button>
                    <button class="o_AttachmentDeleteConfirm_cancelButton btn btn-secondary me-2" t-on-click="attachmentDeleteConfirmView.onClickCancel">Cancel</button>
                </div>
            </div>
        </t>
    </t>
<t t-name="mail.AttachmentImage" owl="1">
        <t t-if="attachmentImage">
            <div t-attf-class="{{ className }}" role="menu" t-att-aria-label="attachmentImage.attachment.displayName" t-ref="root">
                <div class="o_AttachmentImage d-flex position-relative flex-shrink-0" t-att-class="{                         'o-isUploading': attachmentImage.attachment.isUploading,                     }" t-att-title="attachmentImage.attachment.displayName ? attachmentImage.attachment.displayName : undefined" t-att-data-id="attachmentImage.attachment.localId" tabindex="0" aria-label="View image" role="menuitem" t-on-click="attachmentImage.onClickImage" t-att-data-mimetype="attachmentImage.attachment.mimetype">
                    <t t-if="!attachmentImage.attachment.isUploading">
                        <img class="img img-fluid my-0 mx-auto" t-att-src="attachmentImage.imageUrl" t-att-alt="attachmentImage.attachment.name" t-attf-style="max-width: min(100%, {{ attachmentImage.width }}px); max-height: {{ attachmentImage.height }}px;"/>
                    </t>
                    <t t-if="attachmentImage.attachment.isUploading">
                        <div class="o_AttachmentImageUploading position-absolute top-0 bottom-0 start-0 end-0 d-flex align-items-center justify-content-center" title="Uploading">
                            <i class="fa fa-spin fa-spinner"/>
                        </div>
                    </t>
                    <div class="o_AttachmentImage_imageOverlay position-absolute top-0 bottom-0 start-0 end-0 p-2 text-white opacity-0 opacity-100-hover d-flex align-items-end flax-wrap flex-column">
                        <div t-if="attachmentImage.attachment.isDeletable" class="o_AttachmentImage_action o_AttachmentImage_actionUnlink btn btn-sm btn-dark rounded opacity-75 opacity-100-hover" t-att-class="{'o-pretty': attachmentImage.attachmentList.composerViewOwner}" tabindex="0" aria-label="Remove" role="menuitem" t-on-click="attachmentImage.onClickUnlink" title="Remove">
                            <i class="fa fa-trash"/>
                        </div>
                        <div t-if="attachmentImage.hasDownloadButton" class="o_AttachmentImage_action o_AttachmentImage_actionDownload btn btn-sm btn-dark rounded opacity-75 opacity-100-hover mt-auto" t-on-click="attachmentImage.onClickDownload" title="Download">
                            <i class="fa fa-download"/>
                        </div>
                    </div>
                </div>
            </div>
        </t>
    </t>
<t t-name="mail.AttachmentList" owl="1">
        <t t-if="attachmentList">
            <div class="o_AttachmentList d-flex flex-column mt-1" t-att-class="{ 'me-2 pe-4': attachmentList.isInChatWindowAndIsAlignedLeft and !attachmentList.composerViewOwner, 'ms-2 ps-4': attachmentList.isInChatWindowAndIsAlignedRight and !attachmentList.composerViewOwner }" t-attf-class="{{ className }}" t-ref="root">
                <div t-if="attachmentList.attachmentImages.length &gt; 0" class="o_AttachmentList_partialList o_AttachmentList_partialListImages d-flex flex-grow-1 flex-wrap" t-att-class="{ 'justify-content-end': attachmentList.isInChatWindowAndIsAlignedRight and !attachmentList.composerViewOwner }">
                    <t t-foreach="attachmentList.attachmentImages" t-as="attachmentImage" t-key="attachmentImage.localId">
                        <AttachmentImage className="'o_AttachmentList_attachment mw-100 mb-1'" classNameObj="{ 'ms-1': attachmentList.isInChatWindowAndIsAlignedRight, 'me-1': !attachmentList.isInChatWindowAndIsAlignedRight }" record="attachmentImage"/>
                    </t>
                </div>
                <div t-if="attachmentList.attachmentCards.length &gt; 0" class="o_AttachmentList_partialList o_AttachmentList_partialListNonImages d-flex flex-grow-1 flex-wrap mt-1" t-att-class="{ 'justify-content-end': attachmentList.isInChatWindowAndIsAlignedRight and !attachmentList.composerViewOwner }">
                    <t t-foreach="attachmentList.attachmentCards" t-as="attachmentCard" t-key="attachmentCard.localId">
                        <AttachmentCard className="'o_AttachmentList_attachment mw-100 mb-1'" classNameObj="{ 'ms-1': attachmentList.isInChatWindowAndIsAlignedRight, 'me-1': !attachmentList.isInChatWindowAndIsAlignedRight }" record="attachmentCard"/>
                    </t>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.AttachmentViewer" owl="1">
        <t t-if="attachmentViewer">
            <div class="o_AttachmentViewer flex-column align-items-center d-flex w-100 h-100" t-attf-class="{{ className }}" t-on-click="attachmentViewer.onClick" t-on-keydown="_onKeydown" tabindex="0" t-ref="root">
                <div class="o_AttachmentViewer_header d-flex w-100 bg-black-75 text-400" t-on-click="attachmentViewer.onClickHeader">
                    <t t-if="attachmentViewer.attachmentViewerViewable.isViewable">
                        <div class="o_AttachmentViewer_headerItem o_AttachmentViewer_icon d-flex align-items-center ms-4 me-2">
                            <t t-if="attachmentViewer.attachmentViewerViewable.isImage">
                                <i class="fa fa-picture-o" role="img" title="Image"/>
                            </t>
                            <t t-if="attachmentViewer.attachmentViewerViewable.isPdf">
                                <i class="fa fa-file-text" role="img" title="PDF file"/>
                            </t>
                            <t t-if="attachmentViewer.attachmentViewerViewable.isText">
                                <i class="fa fa-file-text" role="img" title="Text file"/>
                            </t>
                            <t t-if="attachmentViewer.attachmentViewerViewable.isVideo">
                                <i class="fa fa-video-camera" role="img" title="Video"/>
                            </t>
                        </div>
                    </t>
                    <div class="o_AttachmentViewer_headerItem o_AttachmentViewer_name d-flex align-items-center mx-2">
                        <span class="o_AttachmentViewer_nameText text-truncate" t-esc="attachmentViewer.attachmentViewerViewable.displayName"/>
                    </div>
                    <div class="flex-grow-1"/>
                    <div class="o_AttachmentViewer_buttonDownload o_AttachmentViewer_headerItem o_AttachmentViewer_headerItemButton d-flex align-items-center px-3 cursor-pointer" t-on-click="attachmentViewer.onClickDownload" role="button" title="Download">
                        <i class="o_AttachmentViewer_headerItemButtonIcon fa fa-download fa-fw" t-att-class="{ 'o-hasLabel me-2': messaging.device.sizeClass &gt; messaging.device.sizeClasses.MD }" role="img"/>
                        <t t-if="messaging.device.sizeClass &gt; messaging.device.sizeClasses.MD">
                            <span>Download</span>
                        </t>
                    </div>
                    <div class="o_AttachmentViewer_headerItem o_AttachmentViewer_headerItemButton o_AttachmentViewer_headerItemButtonClose d-flex align-items-center mb-0 px-3 h4 text-reset cursor-pointer" t-on-click="attachmentViewer.onClickClose" role="button" title="Close (Esc)" aria-label="Close">
                        <i class="fa fa-fw fa-times" role="img"/>
                    </div>
                </div>
                <div class="o_AttachmentViewer_main position-absolute top-0 bottom-0 start-0 end-0 align-items-center justify-content-center d-flex" t-att-class="{ 'o_with_img overflow-hidden': attachmentViewer.attachmentViewerViewable.isImage }" t-on-mousemove="_onMousemoveView">
                    <t t-if="attachmentViewer.attachmentViewerViewable.isImage">
                        <div class="o_AttachmentViewer_zoomer position-absolute align-items-center justify-content-center d-flex w-100 h-100" t-ref="zoomer">
                            <t t-if="attachmentViewer.isImageLoading">
                                <div class="o_AttachmentViewer_loading position-absolute">
                                    <i class="fa fa-3x fa-circle-o-notch fa-fw fa-spin text-white" role="img" title="Loading"/>
                                </div>
                            </t>
                            <img class="o_AttachmentViewer_view o_AttachmentViewer_viewImage mw-100 mh-100 transition-base" t-on-click="attachmentViewer.onClickImage" t-on-mousedown="_onMousedownImage" t-on-wheel="_onWheelImage" t-on-load="attachmentViewer.onLoadImage" t-att-src="attachmentViewer.attachmentViewerViewable.imageUrl" t-att-style="attachmentViewer.imageStyle" draggable="false" alt="Viewer" t-key="'image_' + attachmentViewer.attachmentViewerViewable.localId" t-ref="image_{{ attachmentViewer.attachmentViewerViewable.localId }}"/>
                        </div>
                    </t>
                    <t t-if="attachmentViewer.attachmentViewerViewable.isPdf">
                        <iframe class="o_AttachmentViewer_view o_AttachmentViewer_viewIframe o_AttachmentViewer_viewPdf w-75 h-100 border-0" t-ref="iframeViewerPdf" t-att-class="{ 'w-100': messaging.device.isSmall }" t-att-src="attachmentViewer.attachmentViewerViewable.defaultSource"/>
                    </t>
                    <t t-if="attachmentViewer.attachmentViewerViewable.isText">
                        <iframe class="o_AttachmentViewer_view o_AttachmentViewer_viewIframe o_AttachmentViewer_isText o_text w-75 h-100 border-0" t-att-src="attachmentViewer.attachmentViewerViewable.defaultSource"/>
                    </t>
                    <t t-if="attachmentViewer.attachmentViewerViewable.isUrlYoutube">
                        <iframe allow="autoplay; encrypted-media" class="o_AttachmentViewer_view o_AttachmentViewer_viewIframe o_AttachmentViewer_youtube w-75 h-100 border-0" t-att-src="attachmentViewer.attachmentViewerViewable.defaultSource" height="315" width="560"/>
                    </t>
                    <t t-if="attachmentViewer.attachmentViewerViewable.isVideo">
                        <video class="o_AttachmentViewer_view o_AttachmentViewer_viewVideo w-75 h-75" t-att-class="{ 'w-100 h-100': messaging.device.isSmall }" t-on-click="attachmentViewer.onClickVideo" controls="controls">
                            <source t-att-data-type="attachmentViewer.attachmentViewerViewable.mimetype" t-att-src="attachmentViewer.attachmentViewerViewable.defaultSource"/>
                        </video>
                    </t>
                </div>
                <t t-if="attachmentViewer.attachmentViewerViewable.isImage">
                    <div class="o_AttachmentViewer_toolbar position-absolute bottom-0 d-flex" role="toolbar">
                        <div class="o_AttachmentViewer_toolbarButton p-3 rounded-0" t-on-click="_onClickZoomIn" title="Zoom In (+)" role="button">
                            <i class="fa fa-fw fa-plus" role="img"/>
                        </div>
                        <div class="o_AttachmentViewer_toolbarButton p-3 rounded-0" t-att-class="{ 'o_disabled opacity-50': attachmentViewer.scale === 1 }" t-on-click="_onClickZoomReset" role="button" title="Reset Zoom (0)">
                            <i class="fa fa-fw fa-search" role="img"/>
                        </div>
                        <div class="o_AttachmentViewer_toolbarButton p-3 rounded-0" t-att-class="{ 'o_disabled opacity-50': attachmentViewer.scale === MIN_SCALE }" t-on-click="_onClickZoomOut" title="Zoom Out (-)" role="button">
                            <i class="fa fa-fw fa-minus" role="img"/>
                        </div>
                        <div class="o_AttachmentViewer_toolbarButton p-3 rounded-0" t-on-click="attachmentViewer.onClickRotate" title="Rotate (r)" role="button">
                            <i class="fa fa-fw fa-repeat" role="img"/>
                        </div>
                        <div class="o_AttachmentViewer_toolbarButton p-3 rounded-0" t-on-click="attachmentViewer.onClickPrint" title="Print" role="button">
                            <i class="fa fa-fw fa-print" role="img"/>
                        </div>
                        <div class="o_AttachmentViewer_buttonDownload o_AttachmentViewer_toolbarButton p-3 rounded-0 cursor-pointer" t-on-click="attachmentViewer.onClickDownload" title="Download" role="button">
                            <i class="fa fa-download fa-fw" role="img"/>
                        </div>
                    </div>
                </t>
                <t t-if="attachmentViewer.attachmentViewerViewables.length &gt; 1">
                    <div class="o_AttachmentViewer_buttonNavigation o_AttachmentViewer_buttonNavigationPrevious o_AttachmentViewer_buttonNavigationPreviousIcon position-absolute top-0 bottom-0 start-0 align-items-center justify-content-center d-flex my-auto ms-3 rounded-circle" t-on-click="attachmentViewer.onClickPrevious" title="Previous (Left-Arrow)" role="button">
                        <span class="fa fa-chevron-left" role="img"/>
                    </div>
                    <div class="o_AttachmentViewer_buttonNavigation o_AttachmentViewer_buttonNavigationNext o_AttachmentViewer_buttonNavigationNextIcon position-absolute top-0 bottom-0 end-0 align-items-center justify-content-center d-flex my-auto me-3 rounded-circle" t-on-click="attachmentViewer.onClickNext" title="Next (Right-Arrow)" role="button">
                        <span class="fa fa-chevron-right" role="img"/>
                    </div>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.AutocompleteInputView" owl="1">
        <input class="o_AutocompleteInputView form-control" t-attf-class="{{ className }}" t-on-blur="autocompleteInputView.onBlur" t-on-focusin="autocompleteInputView.onFocusin" t-on-keydown="autocompleteInputView.onKeydown" t-att-placeholder="autocompleteInputView.placeholder" t-ref="root"/>
    </t>

<t t-name="mail.CallActionList" owl="1">
        <t t-if="callActionListView">
            <div class="o_CallActionList d-flex justify-content-between" t-attf-class="{{ className }}" t-ref="root">
                <div class="o_CallActionList_buttons d-flex align-items-center flex-wrap">
                    <t t-if="callActionListView.thread.rtc and messaging.rtc.currentRtcSession">
                        <button class="o_CallActionList_button btn d-flex m-1 border-0 rounded-circle shadow-none opacity-100 opacity-75-hover" t-att-class="{ 'o-isActive': !messaging.rtc.currentRtcSession.isMute, 'o-isSmall p-2': callActionListView.isSmall, 'p-3': !callActionListView.isSmall }" t-att-aria-label="callActionListView.microphoneButtonTitle" t-att-title="callActionListView.microphoneButtonTitle" t-on-click="callActionListView.onClickMicrophone">
                            <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                <i class="fa fa-stack-1x" t-att-class="{                                     'fa-lg': !callActionListView.isSmall,                                     'fa-microphone': !messaging.rtc.currentRtcSession.isMute,                                     'fa-microphone-slash': messaging.rtc.currentRtcSession.isMute,                                     'text-danger': messaging.rtc.currentRtcSession.isMute,                                 }"/>
                            </div>
                        </button>
                        <button class="o_CallActionList_button btn d-flex m-1 border-0 rounded-circle shadow-none opacity-100 opacity-75-hover" t-att-class="{ 'o-isActive': !messaging.rtc.currentRtcSession.isDeaf, 'o-isSmall p-2': callActionListView.isSmall, 'p-3': !callActionListView.isSmall }" t-att-aria-label="callActionListView.headphoneButtonTitle" t-att-title="callActionListView.headphoneButtonTitle" t-on-click="callActionListView.onClickDeafen">
                            <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                <i class="fa fa-stack-1x" t-att-class="{                                     'fa-lg': !callActionListView.isSmall,                                     'fa-headphones': !messaging.rtc.currentRtcSession.isDeaf,                                     'fa-deaf': messaging.rtc.currentRtcSession.isDeaf,                                     'text-danger': messaging.rtc.currentRtcSession.isDeaf,                                 }"/>
                            </div>
                        </button>
                        <button class="o_CallActionList_button o_CallActionList_videoButton btn d-flex m-1 border-0 rounded-circle shadow-none opacity-100 opacity-75-hover" t-att-class="{                                 'o-isActive': messaging.rtc.sendUserVideo,                                 'o-isSmall p-2': callActionListView.isSmall,                                 'p-3': !callActionListView.isSmall,                             }" t-att-aria-label="callActionListView.cameraButtonTitle" t-att-title="callActionListView.cameraButtonTitle" t-on-click="callActionListView.onClickCamera">
                            <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                <i class="fa fa-video-camera fa-stack-1x" t-att-class="{ 'fa-lg': !callActionListView.isSmall, 'text-success': messaging.rtc.sendUserVideo }"/>
                            </div>
                        </button>
                        <t t-if="!messaging.device.isMobileDevice">
                            <button class="o_CallActionList_button o_CallActionList_videoButton btn d-flex m-1 border-0 rounded-circle shadow-none opacity-100 opacity-75-hover" t-att-class="{                                     'o-isActive': messaging.rtc.sendDisplay,                                     'o-isSmall p-2': callActionListView.isSmall,                                     'p-3': !callActionListView.isSmall,                                 }" t-att-aria-label="callActionListView.screenSharingButtonTitle" t-att-title="callActionListView.screenSharingButtonTitle" t-on-click="callActionListView.onClickScreen">
                                <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                    <i class="fa fa-desktop fa-stack-1x" t-att-class="{ 'fa-lg': !callActionListView.isSmall, 'text-success': messaging.rtc.sendDisplay }"/>
                                </div>
                            </button>
                        </t>
                        <t t-if="!callActionListView.callView.isFullScreen">
                            <button class="o_CallActionList_button btn d-flex m-1 border-0 rounded-circle shadow-none opacity-100 opacity-75-hover" aria-label="Activate Full Screen" title="Activate Full Screen" t-att-class="{ 'o-isSmall p-2': callActionListView.isSmall, 'p-3': !callActionListView.isSmall }" t-on-click="callActionListView.callView.activateFullScreen">
                                <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                    <i class="fa fa-arrows-alt fa-stack-1x" t-att-class="{ 'fa-lg': !callActionListView.isSmall }"/>
                                </div>
                            </button>
                        </t>
                        <t t-if="callActionListView.callView.isFullScreen">
                            <button class="o_CallActionList_button btn d-flex m-1 border-0 rounded-circle shadow-none opacity-100 opacity-75-hover" aria-label="Deactivate Full Screen" title="Deactivate Full Screen" t-att-class="{ 'o-isSmall p-2': callActionListView.isSmall, 'p-3': !callActionListView.isSmall }" t-on-click="callActionListView.callView.deactivateFullScreen">
                                <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                    <i class="fa fa-compress fa-stack-1x" t-att-class="{ 'fa-lg': !callActionListView.isSmall }"/>
                                </div>
                            </button>
                        </t>
                        <t t-if="messaging.modelManager.isDebug">
                            <button class="o_CallActionList_button btn d-flex m-1 border-0 rounded-circle shadow-none opacity-100 opacity-75-hover" aria-label="More" title="More" t-att-class="{ 'o-isSmall p-2': callActionListView.isSmall, 'p-3': !callActionListView.isSmall }" t-on-click="callActionListView.onClickMore" t-ref="moreButton">
                                <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                    <i class="fa fa-ellipsis-h fa-stack-1x" t-att-class="{ 'fa-lg': !callActionListView.isSmall }"/>
                                </div>
                            </button>
                        </t>
                    </t>
                    <t t-if="!callActionListView.thread">
                        <button class="o_CallActionList_button o_CallActionList_callToggle btn btn-success d-flex m-1 border-0 rounded-circle shadow-none" t-att-class="{ 'o-isSmall p-2': callActionListView.isSmall, 'p-3': !callActionListView.isSmall }" aria-label="Join Video Call" title="Join Video Call" t-att-disabled="callActionListView.thread.hasPendingRtcRequest" t-on-click="callActionListView.onClickToggleVideoCall">
                            <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                <i class="fa fa-video-camera fa-stack-1x" t-att-class="{ 'fa-lg': !callActionListView.isSmall }"/>
                            </div>
                        </button>
                    </t>
                    <t t-if="callActionListView.thread">
                        <t t-if="callActionListView.thread.rtcInvitingSession and !callActionListView.thread.rtc">
                            <button class="o_CallActionList_button o_CallActionList_callToggle o-isActive btn btn-danger d-flex m-1 border-0 rounded-circle shadow-none" t-att-class="{ 'o-isSmall p-2': callActionListView.isSmall, 'p-3': !callActionListView.isSmall }" aria-label="Reject" title="Reject" t-att-disabled="callActionListView.thread.hasPendingRtcRequest" t-on-click="callActionListView.onClickRejectCall">
                                <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                    <i class="fa fa-phone fa-stack-1x" t-att-class="{ 'fa-lg': !callActionListView.isSmall }"/>
                                </div>
                            </button>
                        </t>
                        <button class="o_CallActionList_button o_CallActionList_callToggle btn d-flex m-1 border-0 rounded-circle shadow-none" t-att-aria-label="callActionListView.callButtonTitle" t-att-class="{ 'o-isActive btn-danger': !!callActionListView.thread.rtc, 'o-isSmall p-2': callActionListView.isSmall, 'p-3': !callActionListView.isSmall, 'btn-success': !callActionListView.thread.rtc }" t-att-disabled="callActionListView.thread.hasPendingRtcRequest" t-att-title="callActionListView.callButtonTitle" t-on-click="callActionListView.onClickToggleAudioCall">
                            <div class="o_CallActionList_buttonIconWrapper fa-stack" t-att-class="{ 'o-isSmall': callActionListView.isSmall }">
                                <i class="fa fa-phone fa-stack-1x" t-att-class="{ 'fa-lg': !callActionListView.isSmall }"/>
                            </div>
                        </button>
                    </t>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.CallDemoView" owl="1">
        <t t-if="callDemoView">
            <div class="o_CallDemoView position-relative d-flex justify-content-center" t-attf-class="{{ className }}" t-ref="root">
                <video class="o_CallDemoView_videoDisplay shadow rounded bg-dark" height="480" width="640" autoplay="" t-ref="video"/>
                <p t-if="callDemoView.doesBrowserSupportMediaDevices and !callDemoView.isVideoEnabled" class="o_CallDemoView_mediaDevicesStatus position-absolute text-light">
                    Camera is off
                </p>
                <p t-if="!callDemoView.doesBrowserSupportMediaDevices" class="o_CallDemoView_mediaDevicesStatus text-light">
                    Your browser does not support videoconference
                </p>
                <div class="o_CallDemoView_buttonsContainer">
                    <button t-if="!callDemoView.isMicrophoneEnabled" class="o_CallDemoView_enableMicrophoneButton o_CallDemoView_button btn btn-danger btn-lg rounded-circle p-0 m-3 fa fa-microphone-slash" t-on-click="callDemoView.onClickEnableMicrophoneButton"/>
                    <button t-if="callDemoView.isMicrophoneEnabled" class="o_CallDemoView_disableMicrophoneButton o_CallDemoView_button btn btn-dark btn-lg p-0 m-3 rounded-circle border-light fa fa-microphone" t-on-click="callDemoView.onClickDisableMicrophoneButton"/>
                    <button t-if="!callDemoView.isVideoEnabled" class="o_CallDemoView_enableVideoButton o_CallDemoView_button btn btn-danger btn-lg p-0 m-3 rounded-circle fa fa-eye-slash" t-on-click="callDemoView.onClickEnableVideoButton"/>
                    <button t-if="callDemoView.isVideoEnabled" class="o_CallDemoView_disableVideoButton o_CallDemoView_button btn btn-dark btn-lg p-0 m-3 rounded-circle border-light fa fa-video-camera" t-on-click="callDemoView.onClickDisableVideoButton"/>
                </div>
                <audio class="o_CallDemoView_audioPlayer" autoplay="" t-ref="audio"/>
            </div>
        </t>
    </t>

<t t-name="mail.CallInviteRequestPopup" owl="1">
        <t t-if="callInviteRequestPopup">
            <div class="o_CallInviteRequestPopup d-flex flex-column m-2 p-5 border border-dark rounded-1 bg-900" t-attf-class="{{ className }}" t-ref="root">
                <t t-if="callInviteRequestPopup.thread.rtcInvitingSession">
                    <div class="o_CallInviteRequestPopup_partnerInfo d-flex flex-column justify-content-around align-items-center text-nowrap">
                        <img class="o_CallInviteRequestPopup_partnerInfoImage mb-2 rounded-circle cursor-pointer" t-att-src="callInviteRequestPopup.thread.rtcInvitingSession.channelMember.avatarUrl" t-on-click="callInviteRequestPopup.onClickAvatar" alt="Avatar"/>
                        <span class="o_CallInviteRequestPopup_partnerInfoName w-100 fw-bolder text-truncate text-center overflow-hidden" t-esc="callInviteRequestPopup.thread.rtcInvitingSession.channelMember.persona.name"/>
                        <span class="o_CallInviteRequestPopup_partnerInfoText fst-italic opacity-75">Incoming Call...</span>
                    </div>
                </t>
                <div class="o_CallInviteRequestPopup_buttonList d-flex justify-content-around align-items-center w-100 mt-4">
                    <button class="o_CallInviteRequestPopup_buttonListButton o_CallInviteRequestPopup_buttonListRefuse p-2 rounded-circle border-0 bg-danger" aria-label="Refuse" title="Refuse" t-on-click="callInviteRequestPopup.onClickRefuse">
                        <i class="o_CallInviteRequestPopup_buttonListButtonIcon fa fa-lg fa-times m-3"/>
                    </button>
                    <button class="o_CallInviteRequestPopup_buttonListButton o_CallInviteRequestPopup_buttonListAccept p-2 rounded-circle border-0 bg-success" aria-label="Accept" title="Accept" t-on-click="callInviteRequestPopup.onClickAccept">
                        <i class="o_CallInviteRequestPopup_buttonListButtonIcon fa fa-lg fa-phone m-3"/>
                    </button>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.CallInviteRequestPopupList" owl="1">
        <div class="o_CallInviteRequestPopupList position-absolute top-0 end-0 d-flex flex-column p-2" t-attf-class="{{ className }}" t-ref="root">
            <t t-if="messaging.ringingThreads">
                <t t-foreach="messaging.callInviteRequestPopups" t-as="callInviteRequestPopup" t-key="callInviteRequestPopup.localId">
                    <CallInviteRequestPopup record="callInviteRequestPopup"/>
                </t>
            </t>
        </div>
    </t>

<t t-name="mail.CallMainView" owl="1">
    <t t-if="callMainView">
        <div class="o_CallMainView d-flex flex-grow-1 flex-column align-items-center justify-content-center position-relative bg-black-50" t-ref="root" t-on-mouseleave="callMainView.onMouseleave">
            <div class="o_CallMainView_grid d-flex align-items-center overflow-hidden h-100 w-100 flex-wrap justify-content-center" t-attf-style="--height:{{callMainView.tileHeight}}px; --width:{{callMainView.tileWidth}}px;" t-on-click="callMainView.onClick" t-on-mousemove="callMainView.onMouseMove" t-ref="tileContainer">
                <t t-foreach="callMainView.mainTiles" t-as="tile" t-key="'grid_tile_'+tile.localId">
                    <CallParticipantCard className="'o_CallMainView_gridParticipantCard'" record="tile.participantCard"/>
                </t>
            </div>


            <t t-if="callMainView.hasSidebarButton">
                <i t-if="callMainView.callView.isSidebarOpen" class="o_CallMainView_sidebarButton cursor-pointer position-absolute fa fa-arrow-right" title="Hide sidebar" t-on-click="callMainView.onClickHideSidebar"/>
                <i t-else="" class="o_CallMainView_sidebarButton cursor-pointer position-absolute fa fa-arrow-left" title="Show sidebar" t-on-click="callMainView.onClickShowSidebar"/>
            </t>
            <t t-if="callMainView.showOverlay or !callMainView.isControllerFloating">
                <div class="o_CallMainView_controls d-flex justify-content-center w-100 pb-1" t-att-class="{ 'o-isFloating position-absolute bottom-0 pb-3': callMainView.isControllerFloating }">
                    <div class="o_CallMainView_controlsOverlayContainer" t-on-mousemove="callMainView.onMouseMoveOverlay">
                        <CallActionList record="callMainView.callActionListView"/>
                    </div>
                </div>
            </t>
        </div>
    </t>
</t>

<t t-name="mail.CallOptionMenu" owl="1">
        <t t-if="callOptionMenu">
            <div class="o_CallOptionMenu d-flex flex-column p-3" t-attf-class="{{ className }}" t-ref="root">
                <button class="o_CallOptionMenu_button btn d-flex align-items-center border-0 rounded text-800 fw-normal" t-on-click="callOptionMenu.onClickDownloadLogs">
                    <i class="o_CallOptionMenu_buttonIcon fa fa-lg fa-file-text-o m-1 p-1"/>
                    <span class="o_CallOptionMenu_buttonText text-truncate">Download logs</span>
                </button>
            </div>
        </t>
    </t>

<t t-name="mail.CallParticipantCard" owl="1">
        <t t-if="callParticipantCard">
            <div class="o_CallParticipantCard position-relative cursor-pointer d-flex flex-column align-items-center justify-content-center mh-100 mw-100 p-1 rounded-1" t-att-class="{                     'o-isTalking': !callParticipantCard.isMinimized and callParticipantCard.isTalking,                     'o-isInvitation opacity-50': !callParticipantCard.rtcSession,                 }" t-att-title="callParticipantCard.channelMember.persona.name" t-att-aria-label="callParticipantCard.channelMember.persona.name" t-attf-class="{{ className }}" t-on-click="callParticipantCard.onClick" t-on-contextmenu="callParticipantCard.onContextMenu" t-ref="root">

                <t t-if="callParticipantCard.callParticipantVideoView">
                    <CallParticipantVideo record="callParticipantCard.callParticipantVideoView"/>
                </t>
                <t t-else="">
                    <div class="o_CallParticipantCard_avatarFrame d-flex align-items-center justify-content-center h-100 w-100 rounded-1" t-att-class="{ 'o-isMinimized': callParticipantCard.isMinimized }" draggable="false">
                        <img alt="Avatar" t-att-class="{                                 'o-isTalking': callParticipantCard.isTalking,                                 'o-isInvitation': !callParticipantCard.rtcSession,                              }" class="o_CallParticipantCard_avatarImage h-100 rounded-circle border-5 o_object_fit_cover" t-att-src="callParticipantCard.channelMember.avatarUrl" draggable="false"/>
                    </div>
                </t>

                <t t-if="callParticipantCard.rtcSession">

                    <span class="o_CallParticipantCard_overlay o_CallParticipantCard_overlayBottom position-absolute bottom-0 start-0 d-flex overflow-hidden">
                        <t t-if="!callParticipantCard.isMinimized">
                            <span class="o_CallParticipantCard_name p-1 rounded-1 bg-black-75 text-truncate" t-esc="callParticipantCard.channelMember.persona.name"/>
                        </t>
                        <t t-if="callParticipantCard.rtcSession.isScreenSharingOn and callParticipantCard.isMinimized and !callParticipantCard.rtcSession.channel.rtc">
                            <small class="o_CallParticipantCard_liveIndicator o-isMinimized rounded-pill text-bg-danger d-flex align-items-center fw-bolder" title="live" aria-label="live">
                                LIVE
                            </small>
                        </t>
                    </span>
                    <div class="o_CallParticipantCard_overlay o_CallParticipantCard_overlayTop position-absolute top-0 end-0 d-flex flex-row-reverse">
                        <t t-if="callParticipantCard.rtcSession.isSelfMuted and !callParticipantCard.rtcSession.isDeaf">
                            <span class="o_CallParticipantCard_overlayTopElement d-flex flex-column justify-content-center me-1 rounded-circle bg-900" t-att-class="{'o-isMinimized p-1': callParticipantCard.isMinimized, 'p-2': !callParticipantCard.isMinimized }" title="muted" aria-label="muted">
                                <i class="fa fa-microphone-slash"/>
                            </span>
                        </t>
                        <t t-if="callParticipantCard.rtcSession.isDeaf">
                            <span class="o_CallParticipantCard_overlayTopElement d-flex flex-column justify-content-center me-1 rounded-circle bg-900" t-att-class="{'o-isMinimized p-1': callParticipantCard.isMinimized, 'p-2': !callParticipantCard.isMinimized }" title="deaf" aria-label="deaf">
                                <i class="fa fa-deaf"/>
                            </span>
                        </t>
                        <t t-if="callParticipantCard.rtcSession.channel.rtc and callParticipantCard.rtcSession.isAudioInError">
                            <span class="o_CallParticipantCard_overlayTopElement d-flex flex-column justify-content-center me-1 p-2 rounded-circle bg-900 text-danger" title="Issue with audio">
                                <i class="fa fa-exclamation-triangle"/>
                            </span>
                        </t>
                        <t t-if="callParticipantCard.rtcSession.channel.rtc and !callParticipantCard.rtcSession.rtcAsCurrentSession and !['connected', 'completed'].includes(callParticipantCard.rtcSession.connectionState)">
                            <span class="o_CallParticipantCard_overlayTopElement d-flex flex-column justify-content-center me-1 p-2 rounded-circle bg-900" t-att-title="callParticipantCard.rtcSession.connectionState">
                                <i class="fa fa-exclamation-triangle o_CallParticipantCard_connectionState text-warning"/>
                            </span>
                        </t>
                        <t t-if="callParticipantCard.rtcSession.isScreenSharingOn and !callParticipantCard.isMinimized and !callParticipantCard.rtcSession.channel.rtc">
                            <span class="o_CallParticipantCard_liveIndicator rounded-pill text-bg-danger d-flex align-items-center me-1 fw-bolder" title="live" aria-label="live">
                                LIVE
                            </span>
                        </t>
                    </div>


                    <t t-if="!callParticipantCard.rtcSession.isOwnSession">
                        <i class="o_CallParticipantCard_volumeMenuAnchor position-absolute bottom-0 start-50" t-on-click="callParticipantCard.onClickVolumeAnchor" t-ref="volumeMenuAnchor"/>
                    </t>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.CallParticipantCardPopoverContentView" owl="1">
        <div class="d-flex flex-column p-3">
            <input type="range" min="0.0" max="1" step="0.01" t-att-value="callParticipantCardPopoverContentView.callParticipantCard.rtcSession.volume" t-on-change="callParticipantCardPopoverContentView.onChangeVolume" class="form-range"/>
            <t t-if="callParticipantCardPopoverContentView.hasConnectionInfo">
                <hr class="o_CallParticipantCardPopoverContentView_volumeMenuAnchorSeparator w-100 border-top"/>
                <div t-esc="callParticipantCardPopoverContentView.inboundConnectionTypeText"/>
                <div t-esc="callParticipantCardPopoverContentView.outboundConnectionTypeText"/>
            </t>
        </div>
    </t>
<t t-name="mail.CallParticipantVideo" owl="1">
        <t t-if="callParticipantVideoView">
            <video class="o_CallParticipantVideo w-100 h-100 rounded-1 cursor-pointer" t-attf-class="{{ className }}" playsinline="true" autoplay="true" muted="true" t-on-loadedmetadata="callParticipantVideoView.onVideoLoadedMetaData" t-ref="root"/>
        </t>
    </t>

<t t-name="mail.CallSettingsMenu" owl="1">
        <div class="o_CallSettingsMenu py-2 user-select-none" t-attf-class="{{ className }}" t-ref="root">
            <div class="o_CallSettingsMenu_category d-flex flex-column px-3 overflow-auto">
                <div class="o_CallSettingsMenu_categoryTitle py-2 fw-bolder text-700 text-truncate text-uppercase">Voice Settings</div>
                <div class="o_CallSettingsMenu_option mb-3 d-flex align-items-center flex-wrap">
                    <label class="o_CallSettingsMenu_optionLabel d-flex align-items-center flex-wrap mw-100 cursor-pointer" title="Input device" aria-label="Input device">
                        <span class="o_CallSettingsMenuoptionName me-2 text-truncate">Input device</span>
                        <div>
                            <select name="inputDevice" class="o_CallSettingsMenu_optionDeviceSelect form-select" t-att-value="messaging.userSetting.audioInputDeviceId" t-on-change="callSettingsMenu.onChangeSelectAudioInput">
                                <option value="">Browser default</option>
                                <t t-foreach="callSettingsMenu.userDevices" t-as="device" t-key="device_index">
                                    <CallSettingsMenuDevice device="device"/>
                                </t>
                            </select>
                        </div>
                    </label>
                </div>
                <div class="o_CallSettingsMenu_option mb-3 d-flex align-items-center flex-wrap">
                    <label class="o_CallSettingsMenu_optionLabel o_CallSettingsMenu_pushToTalkOption d-flex align-items-center flex-wrap mw-100 cursor-pointer" title="Enable Push-to-talk" aria-label="Enable Push-to-talk">
                        <input type="checkbox" aria-label="toggle push-to-talk" title="toggle push-to-talk" t-on-change="callSettingsMenu.onChangePushToTalk" t-att-checked="messaging.userSetting.usePushToTalk ? 'checked' : ''" class="form-check-input"/>
                        <span class="o_CallSettingsMenu_optionName ms-2 text-truncate">Enable Push-to-talk</span>
                    </label>
                </div>
                <t t-if="messaging.userSetting.usePushToTalk">
                    <div class="o_CallSettingsMenu_option mb-3 d-flex align-items-center flex-wrap">
                        <label class="o_CallSettingsMenu_optionLabel o_CallSettingsMenu_pushToTalkKeyOption d-flex align-items-center flex-wrap mw-100 cursor-pointer" title="Push-to-talk key" aria-label="Push-to-talk key">
                            <span class="o_CallSettingsMenu_optionName me-2 text-truncate">Push-to-talk key</span>
                            <span class="o_CallSettingsMenu_optionPushToTalkGroup d-flex">
                                <t t-if="messaging.userSetting.pushToTalkKey">
                                    <span class="o_CallSettingsMenu_optionPushToTalkGroupKey ms-1 px-3 border border-2 rounded fs-3" t-attf-class="{{ callSettingsMenu.userSetting.isRegisteringKey ? 'o-isRegistering border-danger' : 'border-primary' }}" t-esc="messaging.userSetting.pushToTalkKeyToString()"/>
                                </t>
                                <button class="o_CallSettingsMenu_button btn btn-link px-2 py-0 text-black" t-on-click="callSettingsMenu.onClickRegisterKeyButton">
                                    <t t-if="callSettingsMenu.userSetting.isRegisteringKey">
                                        <i title="Cancel" aria-label="Cancel" class="fa fa-2x fa-times-circle"/>
                                    </t>
                                    <t t-else="">
                                        <i title="Register new key" aria-label="Register new key" class="fa fa-2x fa-keyboard-o"/>
                                    </t>
                                </button>
                            </span>
                        </label>

                    </div>
                    <div t-if="callSettingsMenu.userSetting.isRegisteringKey">Press a key to register it as the push-to-talk shortcut</div>
                    <div class="o_CallSettingsMenu_option mb-3 d-flex align-items-center flex-wrap">
                        <label class="o_CallSettingsMenu_optionLabel o_CallSettingsMenu_pushToTalkDelayOption d-flex align-items-center flex-wrap mw-100 cursor-pointer" title="Delay after releasing push-to-talk" aria-label="Delay after releasing push-to-talk">
                            <span class="o_CallSettingsMenu_optionName me-2 text-truncate">Delay after releasing push-to-talk</span>
                            <div class="o_CallSettingsMenu_optionInputGroup d-flex w-100">
                            <input class="o_CallSettingsMenu_optionInputGroupInput form-range" type="range" min="1" max="2000" step="1" t-att-value="messaging.userSetting.voiceActiveDuration" t-on-change="callSettingsMenu.onChangeDelay"/>
                            </div>
                        </label>
                    </div>
                </t>
                <t t-else="">
                    <div class="o_CallSettingsMenu_option mb-3 d-flex align-items-center flex-wrap">
                        <label class="o_CallSettingsMenu_optionLabel o_CallSettingsMenu_voiceThresholdOption d-flex align-items-center flex-wrap mw-100 cursor-pointer" title="Voice detection threshold" aria-label="Voice detection threshold">
                            <span class="o_CallSettingsMenu_optionName me-2 text-truncate">Voice detection threshold</span>
                            <div class="o_CallSettingsMenu_optionInputGroup d-flex w-100">
                                <input class="o_CallSettingsMenu_optionInputGroupInput form-range" type="range" min="0.001" max="1" step="0.001" t-att-value="messaging.userSetting.voiceActivationThreshold" t-on-change="callSettingsMenu.onChangeThreshold"/>
                            </div>
                        </label>
                    </div>
                </t>
            </div>
            <div class="o_CallSettingsMenu_category d-flex flex-column px-3 overflow-auto">
                <div class="o_CallSettingsMenu_categoryTitle py-2 fw-bolder text-700 text-truncate text-uppercase">Video Settings</div>
                <div class="o_CallSettingsMenu_option mb-3 d-flex align-items-center flex-wrap">
                    <label class="o_CallSettingsMenu_optionLabel o_CallSettingsMenu_showOnlyVideoOption d-flex align-items-center flex-wrap mw-100 cursor-pointer" title="Show video participants only" aria-label="Show video participants only">
                        <input type="checkbox" aria-label="toggle push-to-talk" title="Show video participants only" t-on-change="callSettingsMenu.onChangeVideoFilterCheckbox" t-att-checked="callSettingsMenu.thread.channel.showOnlyVideo ? 'checked' : ''" class="form-check-input"/>
                        <span class="o_CallSettingsMenu_optionName ms-2 text-truncate">Show video participants only</span>
                    </label>
                </div>
                <t t-if="messaging.device.hasCanvasFilterSupport">
                    <div class="o_CallSettingsMenu_option mb-3 d-flex align-items-center flex-wrap">
                        <label class="o_CallSettingsMenu_optionLabel o_CallSettingsMenu_blurOption d-flex align-items-center flex-wrap mw-100 cursor-pointer" title="Blur video background" aria-label="Blur video background">
                            <input type="checkbox" aria-label="Blur video background" title="Blur video background" t-on-change="callSettingsMenu.onChangeBlur" t-att-checked="messaging.userSetting.useBlur ? 'checked' : ''" class="form-check-input"/>
                            <span class="o_CallSettingsMenu_optionName ms-2 text-truncate">Blur video background</span>
                        </label>
                    </div>
                </t>
                <t t-if="messaging.userSetting.useBlur">
                    <div class="o_CallSettingsMenu_option mb-3 d-flex align-items-center flex-wrap">
                        <label class="o_CallSettingsMenu_optionLabel o_CallSettingsMenu_backgroundBlurIntensityOption d-flex align-items-center flex-wrap mw-100 cursor-pointer" title="Background blur intensity" aria-label="Background blur intensity">
                            <span class="o_CallSettingsMenu_optionName me-2 text-truncate">Background blur intensity</span>
                            <div class="o_CallSettingsMenu_optionInputGroup d-flex w-100">
                                <input class="o_CallSettingsMenu_optionInputGroupInput form-range" type="range" min="0" max="20" step="1" t-att-value="messaging.userSetting.backgroundBlurAmount" t-on-change="callSettingsMenu.onChangeBackgroundBlurAmount"/>
                            </div>
                        </label>
                    </div>
                    <div class="o_CallSettingsMenu_option mb-3 d-flex align-items-center flex-wrap">
                        <label class="o_CallSettingsMenu_optionLabel o_CallSettingsMenu_edgeBlurIntensityOption d-flex align-items-center flex-wrap mw-100 cursor-pointer" title="Edge blur intensity" aria-label="Edge blur intensity">
                            <span class="o_CallSettingsMenu_optionName me-2 text-truncate">Edge blur intensity</span>
                            <div class="o_CallSettingsMenu_optionInputGroup d-flex w-100">
                                <input class="o_CallSettingsMenu_optionInputGroupInput form-range" type="range" min="0" max="20" step="1" t-att-value="messaging.userSetting.edgeBlurAmount" t-on-change="callSettingsMenu.onChangeEdgeBlurAmount"/>
                            </div>
                        </label>
                    </div>
                </t>
            </div>
        </div>
    </t>

<t t-name="mail.CallSettingsMenuDevice" owl="1">
        <t t-if="props.device.kind === 'audioinput'">
            <option t-att-value="props.device.deviceId" t-attf-class="{{ className }}" t-ref="root"><t t-esc="props.device.label"/></option>
        </t>
    </t>

<t t-name="mail.CallSidebarView" owl="1">
    <t t-if="callSidebarView">
        <div class="o_CallSidebarView d-flex align-items-center h-100 flex-column">
            <t t-foreach="callSidebarView.sidebarTiles" t-as="tile" t-key="tile.localId">
                <CallParticipantCard className="'o_CallSidebarView_participantCard w-100'" record="tile.participantCard"/>
            </t>
        </div>
    </t>
</t>

<t t-name="mail.CallSystrayMenu" owl="1">
        <div class="o_CallSystrayMenu dropdown" t-attf-class="{{ className }}" t-ref="root">
            <t t-if="messaging">
                <CallInviteRequestPopupList/>
                <t t-if="messaging.rtc.channel">
                    <button class="o_CallSystrayMenu_button px-3 user-select-none dropdown-toggle o-no-caret o-dropdown--narrow" t-att-title="callSystrayMenu.buttonTitle" role="button" t-on-click="messaging.rtc.onClickActivityNoticeButton">
                        <div class="o_CallSystrayMenu_buttonContent d-flex align-items-center">
                            <span class="position-relative me-2">
                                <i class="o_CallSystrayMenu_outputIndicator fa me-2" t-att-class="{                                     'fa-microphone': !messaging.rtc.sendDisplay and !messaging.rtc.sendUserVideo,                                     'fa-video-camera': messaging.rtc.sendUserVideo,                                     'fa-desktop': messaging.rtc.sendDisplay,                                 }"/>
                                <small class="position-absolute top-0 end-0 bottom-0 mt-n3 pt-1">
                                    <i class="o_CallSystrayMenu_dot fa fa-circle text-warning small"/>
                                </small>
                            </span>
                            <em class="o_CallSystrayMenu_buttonTitle text-truncate" t-esc="messaging.rtc.channel.displayName"/>
                        </div>
                    </button>
                </t>
            </t>
        </div>
    </t>

<t t-name="mail.CallSystrayMenuContainer" owl="1">
        <div class="CallSystrayMenuContainer">
            <t t-if="messaging">
                <CallSystrayMenu record="messaging.rtc.callSystrayMenu"/>
            </t>
        </div>
    </t>
<t t-name="mail.CallView" owl="1">
    <t t-if="callView">
        <div class="o_CallView d-flex" t-att-class="{'o-fullScreen fixed-top vw-100 vh-100': callView.isFullScreen, 'o-isMinimized': callView.isMinimized, 'position-relative': !callView.isFullScreen }" t-attf-class="{{ className }}" t-ref="root">


            <CallMainView record="callView.callMainView"/>
            <CallSidebarView t-if="callView.callSidebarView" record="callView.callSidebarView"/>

        </div>
    </t>
</t>

<t t-name="mail.ChannelInvitationForm" owl="1">
        <t t-if="channelInvitationForm">
            <div class="o_ChannelInvitationForm d-flex flex-column" t-attf-class="{{ className }}" t-ref="root">
                <h3 class="mx-3 mt-3 mb-2">Invite people</h3>
                <t t-if="!messaging.isCurrentUserGuest">
                    <div class="mx-3 my-2">
                        <input class="o_ChannelInvitationForm_searchInput form-control" type="text" t-att-value="channelInvitationForm.searchTerm" placeholder="Type the name of a person" t-on-input="channelInvitationForm.onInputSearch" t-ref="searchInput"/>
                    </div>
                    <div class="d-flex flex-column flex-grow-1 mx-0 py-2 overflow-auto">
                        <t t-foreach="channelInvitationForm.selectablePartnerViews" t-as="selectablePartnerView" t-key="selectablePartnerView.localId">
                            <ChannelInvitationFormSelectablePartner record="selectablePartnerView"/>
                        </t>
                        <t t-if="channelInvitationForm.selectablePartners.length === 0">
                            <div class="mx-3">No user found that is not already a member of this channel.</div>
                        </t>
                        <t t-if="channelInvitationForm.searchResultCount &gt; channelInvitationForm.selectablePartners.length">
                            <div class="mx-3">
                                Showing <t t-esc="channelInvitationForm.selectablePartners.length"/> results out of <t t-esc="channelInvitationForm.searchResultCount"/>. Narrow your search to see more choices.
                            </div>
                        </t>
                    </div>
                    <t t-if="channelInvitationForm.selectedPartners.length &gt; 0">
                        <div class="mx-3 mt-3">
                            <h4>Selected users:</h4>
                            <div class="o_ChannelInvitationForm_selectedPartners overflow-auto">
                                <t t-foreach="channelInvitationForm.selectedPartnerViews" t-as="selectedPartnerView" t-key="selectedPartnerView.localId">
                                    <ChannelInvitationFormSelectedPartner record="selectedPartnerView"/>
                                </t>
                            </div>
                        </div>
                    </t>
                    <div class="mx-3 mt-2 mb-3">
                        <button class="o_ChannelInvitationForm_inviteButton btn btn-primary w-100" t-att-disabled="channelInvitationForm.selectedPartners.length === 0" t-on-click="channelInvitationForm.onClickInvite">
                            <t t-esc="channelInvitationForm.inviteButtonText"/>
                        </button>
                    </div>
                </t>
                <t t-if="channelInvitationForm.thread and channelInvitationForm.thread.invitationLink">
                    <h4 class="mx-3 mt-3 mb-2">Invitation Link</h4>
                    <div class="mx-3 mt-2 mb-3">
                        <div class="input-group">
                            <input class="form-control" type="text" t-att-value="channelInvitationForm.thread.invitationLink" readonly="" t-on-focus="channelInvitationForm.onFocusInvitationLinkInput"/>
                            <button class="btn btn-primary" t-on-click="channelInvitationForm.onClickCopy">
                                <i class="fa fa-copy"/>
                            </button>
                        </div>
                        <t t-if="channelInvitationForm.accessRestrictedToGroupText">
                            <div class="o_ChannelInvitationForm_accessRestrictedToGroup mt-2" t-esc="channelInvitationForm.accessRestrictedToGroupText"/>
                        </t>
                    </div>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.ChannelInvitationFormSelectablePartner" owl="1">
        <div class="o_ChannelInvitationFormSelectablePartner d-flex align-items-center px-3 py-1 btn-light" t-on-click="() =&gt; channelInvitationFormSelectablePartnerView.channelInvitationFormOwner.onClickSelectablePartner(channelInvitationFormSelectablePartnerView.partner)" t-att-data-partner-id="channelInvitationFormSelectablePartnerView.partner.id" t-attf-class="{{ className }}" t-ref="root">
            <div class="o_ChannelInvitationFormSelectablePartner_avatarContainer position-relative flex-shrink-0">
                <img class="o_ChannelInvitationFormSelectablePartner_avatar w-100 h-100 rounded-circle" t-att-src="channelInvitationFormSelectablePartnerView.partner.avatarUrl" alt="Avatar"/>
                <t t-if="channelInvitationFormSelectablePartnerView.personaImStatusIconView">
                    <PersonaImStatusIcon className="'o_ChannelInvitationFormSelectablePartner_imStatusIcon position-absolute bottom-0 end-0 d-flex align-items-center justify-content-center text-white'" classNameObj="{                             'o_ChannelInvitationFormSelectablePartner_imStatusIcon-mobile': messaging.device.isSmall,                             'small' : !messaging.device.isSmall,                         }" record="channelInvitationFormSelectablePartnerView.personaImStatusIconView"/>
                </t>
            </div>
            <span class="o_ChannelInvitationFormSelectablePartner_name flex-grow-1 mx-2 text-truncate">
                <t t-esc="channelInvitationFormSelectablePartnerView.partner.nameOrDisplayName"/>
            </span>
            <input class="o_ChannelInvitationFormSelectablePartner_checkbox form-check-input flex-shrink-0" type="checkbox" t-att-checked="channelInvitationFormSelectablePartnerView.channelInvitationFormOwner.selectedPartners.includes(channelInvitationFormSelectablePartnerView.partner) ? 'checked' : undefined" t-on-input="ev =&gt; channelInvitationFormSelectablePartnerView.channelInvitationFormOwner.onInputPartnerCheckbox(channelInvitationFormSelectablePartnerView.partner, ev)" t-ref="selection-status"/>
        </div>
    </t>

<t t-name="mail.ChannelInvitationFormSelectedPartner" owl="1">
        <button class="btn btn-secondary" t-on-click="() =&gt; channelInvitationFormSelectedPartnerView.channelInvitationFormOwner.onClickSelectedPartner(channelInvitationFormSelectedPartnerView.partner)">
            <t t-esc="channelInvitationFormSelectedPartnerView.partner.nameOrDisplayName"/> <i class="fa fa-times"/>
        </button>
    </t>

<t t-name="mail.ChannelMember" owl="1">
        <div class="o_ChannelMember d-flex align-items-center mx-2 p-2" t-att-class="{'cursor-pointer': channelMemberView.hasOpenChat}" t-attf-class="{{ className }}" t-att-data-partner-id="channelMemberView.channelMember.persona.partner and channelMemberView.channelMember.persona.partner.id" t-att-title="channelMemberView.memberTitleText" t-on-click="channelMemberView.onClickMember" t-ref="root">
            <div class="o_ChannelMember_avatarContainer position-relative flex-shrink-0">
                <img class="o_ChannelMember_avatar rounded-circle w-100 h-100" t-att-src="channelMemberView.channelMember.avatarUrl" alt="Avatar"/>

                <t t-if="channelMemberView.personaImStatusIconView">
                    <PersonaImStatusIcon className="'o_ChannelMember_personaImStatusIcon position-absolute bottom-0 end-0 d-flex align-items-center justify-content-center text-light'" classNameObj="{                             'o-isDeviceSmall': messaging.device.isSmall,                             'small': !messaging.device.isSmall,                         }" hasOpenChat="channelMemberView.hasOpenChat" record="channelMemberView.personaImStatusIconView"/>
                </t>
            </div>
            <span class="o_ChannelMember_name ms-2 flex-column-1 text-truncate">
                <t t-esc="channelMemberView.channelMember.channel.thread.getMemberName(channelMemberView.channelMember.persona)"/>
            </span>
        </div>
    </t>

<t t-name="mail.ChannelMemberList" owl="1">
        <t t-if="channelMemberListView">
            <div class="o_ChannelMemberList d-flex flex-column overflow-auto bg-light" t-attf-class="{{ className }}" t-ref="root">
                <t t-if="channelMemberListView.onlineCategoryView">
                    <ChannelMemberListCategory record="channelMemberListView.onlineCategoryView"/>
                </t>
                <t t-if="channelMemberListView.offlineCategoryView">
                    <ChannelMemberListCategory record="channelMemberListView.offlineCategoryView"/>
                </t>
                <t t-if="channelMemberListView.channel.unknownMemberCount === 1">
                    <span class="mx-2 mt-2">And 1 other member.</span>
                </t>
                <t t-if="channelMemberListView.channel.unknownMemberCount &gt; 1">
                    <span class="mx-2 mt-2">And <t t-esc="channelMemberListView.channel.unknownMemberCount"/> other members.</span>
                </t>
                <t t-if="!channelMemberListView.channel.areAllMembersLoaded">
                    <div class="mx-2 my-1">
                        <button class="o_ChannelMemberList_loadMoreButton btn btn-secondary" t-on-click="channelMemberListView.onClickLoadMoreMembers">Load more</button>
                    </div>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.ChannelMemberListCategory" owl="1">
        <h6 class="m-2" t-esc="record.title"/>
        <t t-foreach="record.channelMemberViews" t-as="channelMemberView" t-key="channelMemberView.localId">
            <ChannelMember record="channelMemberView"/>
        </t>
    </t>

<t t-name="mail.ChannelPreviewView" owl="1">
        <t t-if="channelPreviewView">

            <div class="o_NotificationListItem o_ChannelPreviewView d-flex flex-shrink-0 align-items-center p-1 cursor-pointer" t-att-class="{ 'o-muted': channelPreviewView.channel.localMessageUnreadCounter === 0 }" t-attf-class="{{ className }}" t-on-click="channelPreviewView.onClick" t-att-data-channel-id="channelPreviewView.channel.id" t-ref="root">
                <div class="o_NotificationListItem_sidebar o_ChannelPreviewView_sidebar m-1">
                    <div class="o_NotificationListItem_imageContainer o_ChannelPreviewView_imageContainer o_ChannelPreviewView_sidebarItem position-relative">
                        <img class="o_NotificationListItem_image o_ChannelPreviewView_image w-100 h-100 rounded-circle" t-att-src="channelPreviewView.imageUrl" alt="Thread Image"/>
                        <t t-if="channelPreviewView.personaImStatusIconView">
                            <PersonaImStatusIcon className="'o_NotificationListItem_personaImStatusIcon o_ChannelPreviewView_personaImStatusIcon position-absolute bottom-0 end-0 d-flex align-items-center justify-content-center'" classNameObj="{                                     'o-isDeviceSmall': messaging.device.isSmall,                                     'small': !messaging.device.isSmall,                                     'o-muted': channelPreviewView.channel.localMessageUnreadCounter === 0,                                 }" record="channelPreviewView.personaImStatusIconView"/>
                        </t>
                    </div>
                </div>
                <div class="o_NotificationListItem_content o_ChannelPreviewView_content d-flex flex-column flex-grow-1 align-self-start m-2">
                    <div class="o_NotificationListItem_header o_ChannelPreviewView_header d-flex align-items-baseline">
                        <span class="o_NotificationListItem_name o_ChannelPreviewView_name text-truncate fw-bold" t-att-class="{ 'o-isDeviceSmall fs-5': messaging.device.isSmall, 'o-muted text-600': channelPreviewView.channel.localMessageUnreadCounter === 0 }">
                            <t t-esc="channelPreviewView.channel.displayName"/>
                        </span>
                        <t t-if="channelPreviewView.channel.localMessageUnreadCounter &gt; 1">
                            <span class="o_NotificationListItem_counter o_ChannelPreviewView_counter mx-1 fw-bold">
                                (<t t-esc="channelPreviewView.channel.localMessageUnreadCounter"/>)
                            </span>
                        </t>
                        <t t-if="channelPreviewView.thread.rtcSessions.length &gt; 0">
                            <span class="o_ChannelPreviewView_callIndicator fa fa-volume-up mx-2" t-att-class="{ 'o-isCalling text-danger': channelPreviewView.thread.rtc }"/>
                        </t>
                        <span class="flex-grow-1"/>
                        <t t-if="channelPreviewView.thread.lastMessage and channelPreviewView.thread.lastMessage.date">
                            <small class="o_NotificationListItem_date o_ChannelPreviewView_date flex-shrink-0 text-500" t-att-class="{ 'o-muted': channelPreviewView.channel.localMessageUnreadCounter === 0 }">
                                <t t-esc="channelPreviewView.thread.lastMessage.date.fromNow()"/>
                            </small>
                        </t>
                    </div>
                    <div class="o_ChannelPreviewView_core d-flex align-items-baseline">
                        <span class="o_NotificationListItem_coreItem o_NotificationListItem_inlineText o_ChannelPreviewView_coreItem o_ChannelPreviewView_inlineText me-2 text-truncate" t-att-class="{ 'o-empty': channelPreviewView.isEmpty }">
                            <t t-if="channelPreviewView.lastTrackingValue">
                                <TrackingValue value="channelPreviewView.lastTrackingValue"/>
                            </t>
                            <t t-else="">
                                <t t-if="channelPreviewView.messageAuthorPrefixView">
                                    <MessageAuthorPrefix record="channelPreviewView.messageAuthorPrefixView"/>
                                </t>
                                <span class="o_ChannelPreviewView_messageBody" t-esc="channelPreviewView.inlineLastMessageBody"/>
                            </t>
                        </span>
                        <span class="flex-grow-1"/>
                        <t t-if="channelPreviewView.channel.localMessageUnreadCounter &gt; 0">
                            <span class="o_NotificationListItem_coreItem o_NotificationListItem_markAsRead o_ChannelPreviewView_coreItem o_ChannelPreviewView_markAsRead fa fa-check d-flex flex-shrink-0 ms-2 text-600 opacity-50 opacity-100-hover" title="Mark as Read" t-on-click="channelPreviewView.onClickMarkAsRead" t-ref="markAsRead"/>
                        </t>
                    </div>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.ChatWindow" owl="1">
        <t t-if="chatWindow">
            <div class="o_ChatWindow position-absolute bottom-0 d-flex flex-column rounded-top-3 bg-view" t-attf-class="{{ className }}" tabindex="0" t-att-data-visible-index="chatWindow.visibleIndex" t-att-class="{                     'o-focused': chatWindow.isFocused,                     'o-folded': chatWindow.isFolded,                     'o-fullscreen w-100 h-100': chatWindow.isFullscreen,                     'o-isDeviceSmall position-fixed': messaging.device.isSmall,                     'mw-100 mh-100': !messaging.device.isSmall,                     'o-new-message': !chatWindow.thread,                 }" t-att-style="chatWindow.componentStyle" t-on-keydown="chatWindow.onKeydown" t-on-focusout="chatWindow.onFocusout" t-att-data-chat-window-local-id="chatWindow.localId" t-att-data-thread-id="chatWindow.thread ? chatWindow.thread.id : ''" t-ref="root" t-att-data-thread-model="chatWindow.thread ? chatWindow.thread.model : ''">
                <ChatWindowHeader className="'o_ChatWindow_header flex-grow-0 flex-shrink-0'" chatWindow="chatWindow" record="chatWindow.chatWindowHeaderView"/>
                <t t-if="chatWindow.channelMemberListView">
                    <ChannelMemberList record="chatWindow.channelMemberListView" className="'bg-view'"/>
                </t>
                <t t-if="chatWindow.callSettingsMenu">
                    <CallSettingsMenu record="chatWindow.callSettingsMenu" className="'bg-view'"/>
                </t>
                <t t-if="chatWindow.channelInvitationForm">
                    <ChannelInvitationForm className="'o_ChatWindow_channelInvitationForm'" record="chatWindow.channelInvitationForm"/>
                </t>
                <t t-if="chatWindow.threadView">
                    <ThreadView className="'o_ChatWindow_thread flex-grow-1 flex-shrink-1'" record="chatWindow.threadView"/>
                </t>
                <t t-if="chatWindow.newMessageAutocompleteInputView">
                    <div class="o_ChatWindow_newMessageForm d-flex align-items-center m-3">
                        <span class="o_ChatWindow_newMessageFormLabel flex-grow-0 flex-shrink-0 me-2">
                            To:
                        </span>
                        <AutocompleteInputView className="'o_ChatWindow_newMessageFormInput flex-grow-1 flex-shrink-1 border'" record="chatWindow.newMessageAutocompleteInputView"/>
                    </div>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.ChatWindowHeader" owl="1">
        <t t-if="chatWindowHeaderView and chatWindow">
            <div class="o_ChatWindowHeader d-flex align-items-center" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'cursor-pointer': !messaging.device.isSmall }" t-attf-class="{{ className }}" t-on-click="chatWindowHeaderView.onClick" t-ref="root">
                <t t-if="chatWindow.hasCloseAsBackButton">
                    <div class="o_ChatWindowHeader_command o_ChatWindowHeader_commandBack o_ChatWindowHeader_commandClose cursor-pointer d-flex align-items-center h-100 px-3 py-0 me-2" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall }" t-on-click="chatWindow.onClickClose" title="Close conversation">
                        <i class="fa fa-arrow-left"/>
                    </div>
                </t>
                <t t-if="chatWindow.thread and chatWindow.thread.model === 'mail.channel'">
                    <ThreadIcon className="'o_ChatWindowHeader_icon o_ChatWindowHeader_item ms-3 me-1 my-0'" thread="chatWindow.thread"/>
                </t>
                <div class="o_ChatWindowHeader_item o_ChatWindowHeader_name mh-100 mx-1 my-0 text-truncate" t-att-class="{'ms-3':!chatWindow.thread or chatWindow.thread.model !== 'mail.channel'}" t-att-title="chatWindow.name">
                    <t t-esc="chatWindow.name"/>
                </div>
                <t t-if="chatWindow.thread and chatWindow.thread.channel and chatWindow.thread.channel.localMessageUnreadCounter &gt; 0">
                    <div class="o_ChatWindowHeader_counter o_ChatWindowHeader_item mx-1 my-0">
                        (<t t-esc="chatWindow.thread.channel.localMessageUnreadCounter"/>)
                    </div>
                </t>
                <div class="flex-grow-1"/>
                <div class="o_ChatWindowHeader_item o_ChatWindowHeader_rightArea d-flex align-items-center h-100 ms-1 me-0 my-0" t-att-class="{'opacity-75 opacity-100-hover': !messaging.device.isSmall }">
                    <t t-if="chatWindow.hasCallButtons">
                        <div class="o_ChatWindowHeader_command o_ChatWindowHeader_commandCamera cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'opacity-50 opacity-100-hover': !messaging.device.isSmall }" t-att-disabled="chatWindow.thread.hasPendingRtcRequest" t-on-click="chatWindow.onClickCamera" title="Start a Video Call">
                            <i class="fa fa-video-camera"/>
                        </div>
                        <div class="o_ChatWindowHeader_command o_ChatWindowHeader_commandPhone cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'opacity-50 opacity-100-hover': !messaging.device.isSmall }" t-att-disabled="chatWindow.thread.hasPendingRtcRequest" t-on-click="chatWindow.onClickPhone" title="Start a Call">
                            <i class="fa fa-phone"/>
                        </div>
                    </t>
                    <t t-if="chatWindow.hasInviteFeature">
                        <t t-if="!chatWindow.channelInvitationForm">
                            <div class="o_ChatWindowHeader_command cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'opacity-50 opacity-100-hover': !messaging.device.isSmall }" title="Add users" t-on-click="chatWindow.onClickShowInviteForm">
                                <i class="fa fa-lg fa-user-plus"/>
                            </div>
                        </t>
                        <t t-if="chatWindow.channelInvitationForm">
                            <div class="o_ChatWindowHeader_command cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'opacity-50 opacity-100-hover': !messaging.device.isSmall }" title="Stop adding users" t-on-click="chatWindow.onClickHideInviteForm">
                                <i class="fa fa-lg fa-user-plus"/>
                            </div>
                        </t>
                    </t>
                    <t t-if="chatWindow.thread and chatWindow.thread.hasMemberListFeature and !chatWindow.isMemberListOpened">
                        <div class="o_ChatWindowHeader_command o_ChatWindowHeader_commandShowMemberList cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'opacity-50 opacity-100-hover': !messaging.device.isSmall}" title="Show Member List" t-on-click="chatWindow.onClickShowMemberList">
                            <i class="fa fa-users"/>
                        </div>
                    </t>
                    <t t-if="chatWindow.thread and chatWindow.thread.hasMemberListFeature and chatWindow.isMemberListOpened">
                        <div class="o_ChatWindowHeader_command o_ChatWindowHeader_commandHideMemberList cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'opacity-50 opacity-100-hover': !messaging.device.isSmall }" title="Hide Member List" t-on-click="chatWindow.onClickHideMemberList">
                            <i class="fa fa-users"/>
                        </div>
                    </t>
                    <t t-if="chatWindow.thread and chatWindow.thread.hasCallFeature and !chatWindow.isCallSettingsMenuOpen">
                        <div class="o_ChatWindowHeader_command o_ChatWindowHeader_commandShowCallSettingsMenu cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'opacity-50 opacity-100-hover': !messaging.device.isSmall}" title="Show Member List" t-on-click="chatWindow.onClickShowCallSettingsMenu">
                            <i class="fa fa-gear"/>
                        </div>
                    </t>
                    <t t-if="chatWindow.thread and chatWindow.thread.hasCallFeature and chatWindow.isCallSettingsMenuOpen">
                        <div class="o_ChatWindowHeader_command cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'opacity-50 opacity-100-hover': !messaging.device.isSmall }" title="Hide Member List" t-on-click="chatWindow.onClickHideCallSettingsMenu">
                            <i class="fa fa-gear"/>
                        </div>
                    </t>
                    <t t-if="chatWindow.isExpandable">
                        <div class="o_ChatWindowHeader_command o_ChatWindowHeader_commandExpand cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'opacity-50 opacity-100-hover': !messaging.device.isSmall }" t-on-click="chatWindow.onClickExpand" title="Open in Discuss">
                            <i class="fa fa-expand"/>
                        </div>
                    </t>
                    <t t-if="!chatWindow.hasCloseAsBackButton">
                        <div class="o_ChatWindowHeader_command o_ChatWindowHeader_commandClose cursor-pointer d-flex align-items-center h-100 px-3 py-0 m-0" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'opacity-50 opacity-100-hover': !messaging.device.isSmall }" t-on-click="chatWindow.onClickClose" title="Close chat window">
                            <i class="fa fa-close"/>
                        </div>
                    </t>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.ChatWindowHiddenMenu" owl="1">
        <div class="o_ChatWindowHiddenMenu dropup position-fixed bottom-0 align-items-stretch d-flex px-2 py-1 rounded-top-3 bg-900 cursor-pointer" t-attf-class="{{ className }}" t-ref="root">
            <div class="o_ChatWindowHiddenMenu_dropdownToggle dropdown-toggle justify-content-center align-items-center flex-grow-1 d-flex mw-100" t-att-class="{ 'show opacity-50': messaging.chatWindowManager.isHiddenMenuOpen }" data-bs-toggle="dropdown" t-on-click="messaging.chatWindowManager.onClickHiddenMenuToggler">
                <div class="o_ChatWindowHiddenMenu_dropdownToggleIcon o_ChatWindowHiddenMenu_dropdownToggleItem me-1 fa fa-comments-o"/>
                <div class="o_ChatWindowHiddenMenu_dropdownToggleItem o_ChatWindowHiddenMenu_windowCounter mx-1 text-truncate">
                    <t t-esc="messaging.chatWindowManager.allOrderedHidden.length"/>
                </div>
            </div>
            <ul class="o_ChatWindowHiddenMenu_list dropdown-menu dropdown-menu-end m-0 p-0 overflow-auto" t-att-class="{ show: messaging.chatWindowManager.isHiddenMenuOpen }" role="menu" t-ref="list">
                <t t-foreach="messaging.chatWindowManager.hiddenChatWindowHeaderViews" t-as="chatWindowHeaderView" t-key="chatWindowHeaderView.localId">
                    <ChatWindowHiddenMenuItem chatWindowHeaderView="chatWindowHeaderView" isLast="chatWindowHeaderView_last"/>
                </t>
            </ul>
            <t t-if="messaging.chatWindowManager.unreadHiddenConversationAmount &gt; 0">
                <div class="o_ChatWindowHiddenMenu_unreadCounter position-absolute end-0 top-0 badge rounded-pill text-bg-primary">
                    <t t-esc="messaging.chatWindowManager.unreadHiddenConversationAmount"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="mail.ChatWindowHiddenMenuItem" owl="1">
        <li class="o_ChatWindowHiddenMenuItem" t-att-class="{ 'border-bottom' : !props.isLast }" role="menuitem" t-attf-class="{{ className }}" t-ref="root">
            <ChatWindowHeader className="'o_ChatWindowHiddenMenuItem_chatWindowHeader opacity-100-hover'" record="chatWindowHeaderView" chatWindow="chatWindowHeaderView.chatWindowOwner"/>
        </li>
    </t>

<t t-name="mail.ChatWindowManager" owl="1">
        <div class="o_ChatWindowManager flex-row-reverse d-flex" t-attf-class="{{ className }}" t-ref="root">

            <t t-if="messaging.chatWindowManager.visual.isHiddenMenuVisible">
                <ChatWindowHiddenMenu className="'o_ChatWindowManager_hiddenMenu'"/>
            </t>
            <t t-foreach="messaging.chatWindowManager.allOrderedVisible" t-as="chatWindow" t-key="chatWindow.localId">
                <ChatWindow record="chatWindow"/>
            </t>
        </div>
    </t>

<t t-name="mail.ChatWindowManagerContainer" owl="1">
        <ChatWindowManager t-if="messaging and messaging.chatWindowManager" record="messaging.chatWindowManager"/>
    </t>
<t t-name="mail.Chatter" owl="1">
        <t t-if="chatter">
            <div class="o_Chatter position-relative flex-grow-1 flex-column d-flex w-100 bg-view" t-attf-class="{{ className }}" t-ref="root">
                <t t-if="chatter.dropZoneView">
                    <DropZone className="'o_Chatter_dropZone'" record="chatter.dropZoneView"/>
                </t>
                <div class="o_Chatter_fixedPanel">
                    <ChatterTopbar t-if="chatter.topbar" className="'o_Chatter_topbar'" record="chatter.topbar"/>
                    <t t-if="chatter.composerView">
                        <Composer className="'o_Chatter_composer border-bottom'" classNameObj="{ 'o-bordered': chatter.hasExternalBorder }" record="chatter.composerView"/>
                    </t>
                </div>
                <div class="o_Chatter_scrollPanel overflow-auto" t-on-scroll="chatter.onScrollScrollPanel" t-ref="scrollPanel">
                    <t t-if="chatter.attachmentBoxView">
                        <AttachmentBox className="'o_Chatter_attachmentBox'" record="chatter.attachmentBoxView"/>
                    </t>
                    <t t-if="chatter.activityBoxView">
                        <ActivityBox className="'o_Chatter_activityBox'" record="chatter.activityBoxView"/>
                    </t>
                    <t t-if="chatter.threadView">
                        <ThreadView className="'o_Chatter_thread'" record="chatter.threadView"/>
                    </t>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.ChatterContainer" owl="1">
        <div class="o_ChatterContainer flex-grow-1 d-flex" t-att-class="{ 'o-isInFormSheetBg mx-auto': props.isInFormSheetBg }" t-attf-class="{{ props.className }}" data-command-category="mail" t-ref="root">
            <t t-if="chatter and chatter.thread">
                <Chatter record="chatter"/>
            </t>
            <t t-else="">
                <div class="o_ChatterContainer_noChatter flex-grow-1 align-items-center justify-content-center d-flex"><i class="o_ChatterContainer_noChatterIcon fa fa-circle-o-notch fa-spin me-2"/>Please wait...</div>
            </t>
        </div>
    </t>

<t t-name="mail.ChatterTopbar" owl="1">
        <t t-if="chatterTopbar">
            <div class="o_ChatterTopbar justify-content-between d-flex" t-attf-class="{{ className }}" t-ref="root">
                <div class="o_ChatterTopbar_actions flex-fill d-flex border-transparent">
                    <div class="o_ChatterTopbar_controllers d-flex pe-2" t-if="chatterTopbar.chatter.threadView">
                        <button class="o_ChatterTopbar_button o_ChatterTopbar_buttonSendMessage btn text-nowrap me-2" type="button" t-att-class="{                                 'o-active btn-odoo': chatterTopbar.chatter.composerView and !chatterTopbar.chatter.composerView.composer.isLog,                                 'btn-odoo': !chatterTopbar.chatter.composerView,                                 'btn-light': chatterTopbar.chatter.composerView and chatterTopbar.chatter.composerView.composer.isLog,                             }" t-att-disabled="!chatterTopbar.chatter.canPostMessage" data-hotkey="m" t-on-click="chatterTopbar.chatter.onClickSendMessage">
                            Send message
                        </button>
                        <button class="o_ChatterTopbar_button o_ChatterTopbar_buttonLogNote btn text-nowrap" type="button" t-att-class="{                                 'o-active btn-odoo': chatterTopbar.chatter.composerView and chatterTopbar.chatter.composerView.composer.isLog,                                 'btn-light': chatterTopbar.chatter.composerView and !chatterTopbar.chatter.composerView.composer.isLog or !chatterTopbar.chatter.composerView,                             }" t-att-disabled="!chatterTopbar.chatter.isTemporary and !chatterTopbar.chatter.hasWriteAccess" t-on-click="chatterTopbar.chatter.onClickLogNote" data-hotkey="shift+m">
                            Log note
                        </button>
                    </div>
                    <div class="o_ChatterTopbar_tools position-relative d-flex flex-grow-1" t-att-class="{                             'o_ChatterTopbar_borderLeft ps-2': chatterTopbar.chatter.hasActivities,                         }">
                        <t t-if="chatterTopbar.chatter.hasActivities">
                            <button class="o_ChatterTopbar_button o_ChatterTopbar_buttonScheduleActivity btn btn-light text-nowrap" type="button" t-att-disabled="!chatterTopbar.chatter.isTemporary and !chatterTopbar.chatter.hasWriteAccess" t-on-click="chatterTopbar.chatter.onClickScheduleActivity" data-hotkey="shift+a">
                                <i class="fa fa-clock-o me-1"/>
                                <span>Activities</span>
                            </button>
                        </t>
                        <div class="o_ChatterTopbar_borderLeft flex-grow-1 pe-2" t-att-class="{                                 'ms-2': chatterTopbar.chatter.hasActivities,                             }"/>
                        <div class="o_ChatterTopbar_rightSection flex-grow-1 flex-shrink-0 justify-content-end d-flex">
                            <button t-if="chatterTopbar.chatter.thread.allAttachments.length === 0" class="o_ChatterTopbar_button o_ChatterTopbar_buttonAddAttachments btn btn-light btn-primary" type="button" t-att-disabled="!chatterTopbar.chatter.isTemporary and !chatterTopbar.chatter.hasWriteAccess" t-on-click="chatterTopbar.chatter.onClickButtonAddAttachments">
                                <i class="fa fa-paperclip fa-lg me-1" role="img" aria-label="Attachments"/>
                                <t t-if="chatterTopbar.chatter.isShowingAttachmentsLoading">
                                    <i class="o_ChatterTopbar_buttonAttachmentsCountLoader fa fa-circle-o-notch fa-spin" aria-label="Attachment counter loading..."/>
                                </t>
                            </button>
                            <button t-if="chatterTopbar.chatter.thread.allAttachments.length &gt; 0" class="o_ChatterTopbar_button o_ChatterTopbar_buttonToggleAttachments btn btn-light btn-primary" type="button" t-att-disabled="!chatterTopbar.chatter.isTemporary and !chatterTopbar.chatter.hasReadAccess" t-att-aria-expanded="chatterTopbar.chatter.attachmentBoxView ? 'true' : 'false'" t-on-click="chatterTopbar.chatter.onClickButtonToggleAttachments">
                                <i class="fa fa-paperclip fa-lg me-1" role="img" aria-label="Attachments"/>
                                <t t-if="!chatterTopbar.chatter.isShowingAttachmentsLoading">
                                    <span class="o_ChatterTopbar_buttonCount o_ChatterTopbar_buttonAttachmentsCount" t-esc="chatterTopbar.attachmentButtonText"/>
                                </t>
                                <t t-if="chatterTopbar.chatter.isShowingAttachmentsLoading">
                                    <i class="o_ChatterTopbar_buttonAttachmentsCountLoader fa fa-circle-o-notch fa-spin" aria-label="Attachment counter loading..."/>
                                </t>
                            </button>
                            <t t-if="chatterTopbar.chatter.hasFollowers and chatterTopbar.chatter.thread">
                                <FollowerListMenu className="'o_ChatterTopbar_followerListMenu'" record="chatterTopbar.chatter.followerListMenuView"/>
                                <t t-if="chatterTopbar.chatter.followButtonView">
                                    <FollowButton className="'o_ChatterTopbar_followButton'" record="chatterTopbar.chatter.followButtonView"/>
                                </t>
                            </t>
                        </div>
                    </div>
                </div>
                <t t-if="chatterTopbar.chatter.hasTopbarCloseButton">
                    <button class="o_ChatterTopbar_buttonClose btn btn-dark flex-shrink-0 rounded-bottom-3" aria-label="Close" t-on-click="chatterTopbar.chatter.onClickChatterTopbarClose">
                        <i class="oi oi-large oi-close"/>
                    </button>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.Composer" owl="1">
        <t t-if="composerView">
            <div class="o_Composer" t-att-class="{                     'o-focused': composerView.isFocused,                     'o-has-current-partner-avatar pe-3 ps-1': composerView.hasCurrentPartnerAvatar,                     'o-has-footer': composerView.hasFooter,                     'o-has-header': composerView.hasHeader,                     'o-is-in-thread-view bg-view': composerView.threadView,                     'o-is-compact': composerView.isCompact,                     'o-messaging-in-editing': composerView.messageViewInEditing,                     'pt-3 pb-4': composerView.hasCurrentPartnerAvatar and composerView.hasHeader,                     'py-4': composerView.hasCurrentPartnerAvatar and !composerView.hasHeader and !composerView.threadView,                     'py-1': composerView.hasCurrentPartnerAvatar and !composerView.hasHeader and composerView.threadView,                 }" t-attf-class="{{ className }}" t-on-keydown="composerView.onKeydown" t-ref="root">
                <t t-if="composerView.dropZoneView">
                    <DropZone className="'o_Composer_dropZone'" record="composerView.dropZoneView"/>
                </t>
                <t t-if="composerView.hasHeader">
                    <div class="o_Composer_coreHeader text-truncate" t-att-class="{ 'small p-2': composerView.isInChatWindow or composerView.isInDiscuss }">
                        <t t-if="composerView.threadView and composerView.threadView.replyingToMessageView">
                            <span class="cursor-pointer" t-on-click="composerView.onClickReplyingToMessage">
                                Replying to <b t-esc="composerView.threadView.replyingToMessageView.message.authorName"/>
                            </span>
                            <i t-if="composerView.threadView.thread !== messaging.inbox.thread" class="o_Composer_cancelReply fa fa-lg fa-times-circle rounded-circle p-0 ms-1 cursor-pointer" title="Stop replying" t-on-click="composerView.onClickStopReplying"/>
                        </t>
                        <t t-if="composerView.hasThreadName">
                            <span class="o_Composer_threadName">
                                on: <b><t t-esc="composerView.composer.activeThread.displayName"/></b>
                            </span>
                        </t>
                        <t t-if="composerView.hasFollowers and !composerView.composer.isLog">

                            <small class="o_Composer_followers flex-shrink-0">
                                <b class="text-muted">To: </b>
                                <em class="text-muted">Followers of </em>
                                <b>
                                    <t t-if="composerView.composer.activeThread.displayName">
                                         "<t t-esc="composerView.composer.activeThread.displayName"/>"
                                    </t>
                                    <t t-else="">
                                        this document
                                    </t>
                                </b>
                            </small>
                            <ComposerSuggestedRecipientList record="composerView.composerSuggestedRecipientListView"/>
                        </t>
                    </div>
                </t>
                <t t-if="composerView.hasCurrentPartnerAvatar">
                    <div class="o_Composer_sidebarMain">
                        <t t-if="!messaging.currentGuest or composerView.composer.activeThread.model !== 'mail.channel'">
                            <img class="o_Composer_currentPartnerAvatar mt-1 rounded-circle o_object_fit_cover" t-att-src="composerView.currentPartnerAvatar" alt="Avatar of user"/>
                        </t>
                        <t t-if="messaging.currentGuest and composerView.composer.activeThread.model === 'mail.channel'">
                            <img class="o_Composer_currentPartnerAvatar mt-1 rounded-circle o_object_fit_cover" t-attf-src="/mail/channel/{{ composerView.composer.activeThread.id }}/guest/{{ messaging.currentGuest.id }}/avatar_128?unique={{ messaging.currentGuest.name }}" alt="Avatar of guest"/>
                        </t>
                    </div>
                </t>
                <div class="o_Composer_coreMain d-flex flex-nowrap align-items-start flex-grow-1" t-att-class="{                         'o-composer-is-compact': composerView.isCompact,                         'flex-column border rounded-3 bg-view': !composerView.isCompact,                     }">
                    <ComposerTextInput className="'o_Composer_textInput flex-grow-1 align-self-stretch'" classNameObj="{                             'o-composer-is-compact': composerView.isCompact,                             'rounded-3': !composerView.isCompact,                             'o_Composer_textInput-mobile': messaging.device.isSmall,                             'o-has-current-partner-avatar': composerView.hasCurrentPartnerAvatar,                             'rounded-start-3': composerView.isCompact and composerView.hasCurrentPartnerAvatar,                         }" record="composerView" t-key="composerView.localId"/>
                    <div class="o_Composer_buttons d-flex align-items-stretch align-self-stretch flex-shrink-0" t-att-class="{ 'o-composer-is-compact': composerView.isCompact, 'h-auto w-100 px-3': !composerView.isCompact, 'o-isDeviceSmall': messaging.device.isSmall, 'o-messaging-in-editing': composerView and composerView.messageViewInEditing, 'border-end': composerView.messageViewInEditing and !composerView.hasCurrentPartnerAvatar }">
                        <div class="o_Composer_toolButtons d-flex py-1 border-top bg-view" t-att-class="{                                 'o-composer-has-current-partner-avatar': composerView.hasCurrentPartnerAvatar,                                 'o-composer-is-compact border-bottom': composerView.isCompact,                                 'flex-row flex-grow-1 justify-content-between': !composerView.isCompact,                             }">
                            <div class="o_Composer_primaryToolButtons d-flex align-items-center" t-att-class="{ 'o-composer-is-compact px-2': composerView.isCompact, 'flex-column': composerView.messageViewInEditing and composerView.messageViewInEditing.isInChatWindow }">
                                <button class="o_Composer_button o_Composer_buttonEmojis o_Composer_toolButton btn btn-light border-0 rounded-pill" t-att-class="{                                         'o-open bg-200': composerView.emojisPopoverView,                                         'o-isDeviceSmall': messaging.device.isSmall,                                     }" t-attf-class="{{ composerView.messageViewInEditing ? 'my-1' : 'mx-1' }}" t-att-aria-expanded="composerView.emojisPopoverView ? 'true' : 'false'" t-on-keydown="composerView.onKeydownButtonEmojis" t-on-click="composerView.onClickButtonEmojis" t-ref="buttonEmojis">
                                    <i class="fa fa-smile-o overflow-visible" role="img" aria-label="Emojis"/>
                                </button>
                                <button class="o_Composer_button o_Composer_buttonAttachment o_Composer_toolButton btn btn-light fa fa-paperclip border-0 rounded-pill" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall }" t-attf-class="{{ composerView.messageViewInEditing ? 'my-1' : 'mx-1' }}" title="Add attachment" aria-label="Add attachment" type="button" t-on-click="composerView.onClickAddAttachment"/>
                            </div>
                            <t t-if="composerView.isExpandable">
                                <div class="o_Composer_secondaryToolButtons">
                                    <button class="o_Composer_button o_Composer_buttonFullComposer o_Composer_toolButton btn btn-light fa fa-expand mx-1 border-0 rounded-pill bg-view" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall }" title="Full composer" aria-label="Full composer" type="button" t-on-click="composerView.onClickFullComposer"/>
                                </div>
                            </t>
                        </div>
                        <t t-if="composerView.isCompact">
                            <t t-call="mail.Composer.actionButtons"/>
                        </t>
                    </div>
                </div>
                <t t-if="composerView.hasFooter">
                    <div class="o_Composer_coreFooter overflow-auto" t-att-class="{ 'o-composer-is-compact': composerView.isCompact, 'ms-0': !composerView.isCompact }">
                        <t t-if="composerView.hasThreadTyping">
                            <ThreadTextualTypingStatus className="'o_Composer_threadTextualTypingStatus small'" thread="composerView.composer.activeThread"/>
                        </t>
                        <AttachmentList t-if="composerView.attachmentList" className="'o_Composer_attachmentList flex-grow-1'" classNameObj="{ 'o-composer-is-compact': composerView.isCompact, 'overflow-auto': !composerView.isCompact }" record="composerView.attachmentList"/>
                        <t t-if="!composerView.isCompact">
                            <t t-call="mail.Composer.actionButtons"/>
                        </t>
                        <t t-if="composerView.messageViewInEditing">
                            <span class="text-muted">escape to <a href="#" t-on-click="composerView.onClickCancelLink">cancel</a>, enter to <a href="#" t-on-click="composerView.onClickSaveLink">save</a></span>
                        </t>
                    </div>
                </t>
            </div>
        </t>
    </t>

    <t t-name="mail.Composer.actionButtons" owl="1">
        <div class="o_Composer_actionButtons" t-att-class="{ 'o-composer-is-compact d-flex': composerView.isCompact, 'mt-2': !composerView.isCompact }">
            <t t-if="composerView.hasSendButton">
                <button class="o_Composer_actionButton o_Composer_button o_Composer_buttonSend btn btn-primary" t-att-class="{                         'o-last': !composerView.hasDiscardButton,                         'o-composer-is-compact border-start-0': composerView.isCompact,                         'o-has-current-partner-avatar': composerView.hasCurrentPartnerAvatar,                         'rounded-0 rounded-end-3': !composerView.hasDiscardButton and composerView.hasCurrentPartnerAvatar and composerView.isCompact,                     }" t-att-disabled="!composerView.composer.canPostMessage ? 'disabled' : ''" type="button" t-on-click="composerView.onClickSend">
                    <t t-if="!messaging.device.isSmall"><t t-esc="composerView.sendButtonText"/></t>
                    <t t-else=""><i class="fa fa-paper-plane-o"/></t>
                </button>
            </t>
            <t t-if="composerView.hasDiscardButton">
                <button class="o_Composer_actionButton o-last o_Composer_button o_Composer_buttonDiscard btn btn-secondary" t-att-class="{ 'o-composer-is-compact border-start-0': composerView.isCompact, 'o-has-current-partner-avatar': composerView.hasCurrentPartnerAvatar, 'rounded-0 rounded-end-3': composerView.hasCurrentPartnerAvatar and composerView.isCompact }" type="button" t-on-click="composerView.onClickDiscard">
                    Discard
                </button>
            </t>
        </div>
    </t>

<t t-name="mail.ComposerSuggestedRecipientList" owl="1">
        <t t-if="composerSuggestedRecipientListView">
            <div class="o_ComposerSuggestedRecipientList mb-2" t-attf-class="{{ className }}" t-ref="root">
                <t t-foreach="composerSuggestedRecipientListView.composerSuggestedRecipientViews" t-as="composerSuggestedRecipientView" t-key="composerSuggestedRecipientView.localId">
                    <ComposerSuggestedRecipient record="composerSuggestedRecipientView"/>
                </t>
                <t t-if="composerSuggestedRecipientListView.thread.suggestedRecipientInfoList.length &gt; 3">
                    <t t-if="!composerSuggestedRecipientListView.hasShowMoreButton">
                        <button class="o_ComposerSuggestedRecipientList_showMore btn btn-sm btn-link" t-on-click="composerSuggestedRecipientListView.onClickShowMore">
                            Show more
                        </button>
                    </t>
                    <t t-else="">
                        <button class="o_ComposerSuggestedRecipientList_showLess btn btn-sm btn-link" t-on-click="composerSuggestedRecipientListView.onClickShowLess">
                            Show less
                        </button>
                    </t>
                </t>
            </div>
        </t>
    </t>
<t t-name="mail.ComposerSuggestionListView" owl="1">
        <t t-if="composerSuggestionListView">
            <div class="o_ComposerSuggestionListView position-absolute w-100" t-att-class="{ 'o-lowPosition bottom-0': composerSuggestionListView.composerViewOwner.hasMentionSuggestionsBelowPosition }" t-attf-class="{{ className }}" t-ref="root">
                <div class="o_ComposerSuggestionListView_drop w-100" t-att-class="{ 'dropdown': composerSuggestionListView.composerViewOwner.hasMentionSuggestionsBelowPosition, 'dropup': !composerSuggestionListView.composerViewOwner.hasMentionSuggestionsBelowPosition }">
                    <div class="o_ComposerSuggestionListView_list dropdown-menu show w-100 overflow-auto" t-att-class="{ 'bottom-100': !composerSuggestionListView.composerViewOwner.hasMentionSuggestionsBelowPosition }">
                        <t t-foreach="composerSuggestionListView.composerSuggestionListViewMainComposerSuggestionViewItems" t-as="composerSuggestionListViewMainComposerSuggestionViewItem" t-key="composerSuggestionListViewMainComposerSuggestionViewItem.localId">
                            <ComposerSuggestionView record="composerSuggestionListViewMainComposerSuggestionViewItem.composerSuggestionView"/>
                        </t>
                        <t t-if="composerSuggestionListView.composerSuggestionListViewMainComposerSuggestionViewItems.length &gt; 0 and composerSuggestionListView.composerSuggestionListViewExtraComposerSuggestionViewItems.length &gt; 0">
                            <div role="separator" class="dropdown-divider"/>
                        </t>
                        <t t-foreach="composerSuggestionListView.composerSuggestionListViewExtraComposerSuggestionViewItems" t-as="composerSuggestionListViewExtraComposerSuggestionViewItem" t-key="composerSuggestionListViewExtraComposerSuggestionViewItem.localId">
                            <ComposerSuggestionView record="composerSuggestionListViewExtraComposerSuggestionViewItem.composerSuggestionView"/>
                        </t>
                    </div>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.ComposerSuggestionView" owl="1">
        <t t-if="composerSuggestionView">
            <a class="o_ComposerSuggestionView dropdown-item d-flex w-100 py-2 px-4" t-att-class="{ 'active bg-300': composerSuggestionView.composerSuggestionListViewOwnerAsActiveSuggestionView }" t-attf-class="{{ className }}" href="#" t-att-title="composerSuggestionView.title" role="menuitem" t-on-click="composerSuggestionView.onClick" t-ref="root">
                <t t-if="composerSuggestionView.suggestable.cannedResponse">
                    <strong class="o_ComposerSuggestionView_part1 flex-shrink-0 mw-100 pe-2 text-truncate"><t t-esc="composerSuggestionView.suggestable.cannedResponse.source"/></strong>
                    <em class="o_ComposerSuggestionView_part2 text-600 text-truncate"><t t-esc="composerSuggestionView.suggestable.cannedResponse.substitution"/></em>
                </t>
                <t t-if="composerSuggestionView.suggestable.thread">
                    <strong class="o_ComposerSuggestionView_part1 flex-shrink-0 mw-100 pe-2 text-truncate"><t t-esc="composerSuggestionView.suggestable.thread.name"/></strong>
                </t>
                <t t-if="composerSuggestionView.suggestable.channelCommand">
                    <strong class="o_ComposerSuggestionView_part1 flex-shrink-0 mw-100 pe-2 text-truncate"><t t-esc="composerSuggestionView.suggestable.channelCommand.name"/></strong>
                    <em class="o_ComposerSuggestionView_part2 text-600 text-truncate"><t t-esc="composerSuggestionView.suggestable.channelCommand.help"/></em>
                </t>
                <t t-if="composerSuggestionView.suggestable.partner">
                    <t t-if="composerSuggestionView.personaImStatusIconView">
                        <PersonaImStatusIcon className="'o_ComposerSuggestionView_personaImStatusIcon flex-shrink-0 me-1'" hasBackground="false" record="composerSuggestionView.personaImStatusIconView"/>
                    </t>
                    <strong class="o_ComposerSuggestionView_part1 flex-shrink-0 mw-100 pe-2 text-truncate"><t t-esc="composerSuggestionView.suggestable.partner.nameOrDisplayName"/></strong>
                    <t t-if="composerSuggestionView.suggestable.partner.email">
                        <em class="o_ComposerSuggestionView_part2 text-600 text-truncate">(<t t-esc="composerSuggestionView.suggestable.partner.email"/>)</em>
                    </t>
                </t>
            </a>
        </t>
    </t>

<t t-name="mail.ComposerTextInput" owl="1">
        <t t-if="composerView">
            <div class="o_ComposerTextInput position-relative bg-view" t-attf-class="{{ className }} {{ composerView.isCompact ? 'border border-end-0' : 'border-0' }}" t-att-class="{ 'border-start-0': composerView.isInChatWindow }" t-on-paste="composerView.onPasteTextInput" t-ref="root">
                <t t-if="composerView.composerSuggestionListView">
                    <ComposerSuggestionListView record="composerView.composerSuggestionListView"/>
                </t>
                <textarea class="o_ComposerTextInput_textarea o_ComposerTextInput_textareaStyle form-control px-3 border-0 shadow-none overflow-auto" t-att-class="{ 'o-composer-is-compact rounded-0 rounded-start-3': composerView.isCompact, 'rounded-3': !composerView.isCompact }" t-esc="composerView.composer.textInputContent" t-att-placeholder="composerView.composer.placeholder" t-on-click="composerView.onClickTextarea" t-on-focusin="composerView.onFocusinTextarea" t-on-focusout="composerView.onFocusoutTextarea" t-on-keydown="composerView.onKeydownTextarea" t-on-keyup="composerView.onKeyupTextarea" t-on-input="composerView.onInputTextarea" t-ref="textarea"/>

                <textarea class="o_ComposerTextInput_mirroredTextarea o_ComposerTextInput_textareaStyle position-absolute px-3 border-0 overflow-hidden opacity-0" t-att-class="{ 'o-composer-is-compact rounded-0 rounded-start-3': composerView.isCompact, 'rounded-3': !composerView.isCompact }" t-esc="composerView.composer.textInputContent" t-ref="mirroredTextarea" disabled="1"/>
            </div>
        </t>
    </t>

<t t-name="mail.DeleteMessageConfirm" owl="1">
        <t t-if="deleteMessageConfirmView">
            <div class="o_DeleteMessageConfirm card bg-view" t-attf-class="{{ className }}" t-ref="root">
                <h4 class="m-3">Confirmation</h4>
                <hr class="mt-0 mb-3"/>
                <p class="mx-3 mb-3">Are you sure you want to delete this message?</p>
                <blockquote class="o_DeleteMessageConfirm_blockquote mx-3 mb-3 fst-normal">
                    <Message record="deleteMessageConfirmView.messageView"/>
                </blockquote>
                <small t-if="!deleteMessageConfirmView.message.originThread or deleteMessageConfirmView.message.originThread.model !== 'mail.channel'" class="mx-3 mb-3">Pay attention: The followers of this document who were notified by email will still be able to read the content of this message and reply to it.</small>
                <hr class="mt-0 mb-3"/>
                <div class="o_DeleteMessageConfirm_buttons mx-3 mb-3">
                    <button class="btn btn-primary me-2" t-on-click="deleteMessageConfirmView.onClickDelete">Delete</button>
                    <button class="btn btn-secondary me-2" t-on-click="deleteMessageConfirmView.onClickCancel">Cancel</button>
                </div>
            </div>
        </t>
    </t>
<t t-name="mail.Dialog" owl="1">
        <t t-if="dialog">
            <div class="o_Dialog modal fixed-top bottom-0 d-flex justify-content-center" t-attf-class="{{ className }}" t-att-style="dialog.style" t-ref="root">
                <t t-component="constructor.components[dialog.componentName]" t-props="{                         className: \`o_Dialog_component \${dialog.componentClassName}\`,                         record: dialog.record,                     }"/>
            </div>
        </t>
    </t>

<t t-name="mail.DialogManager" owl="1">
        <div class="o_DialogManager" t-attf-class="{{ className }}" t-ref="root">
            <t t-foreach="dialogManager.dialogs" t-as="dialog" t-key="dialog.localId">
                <Dialog className="'o_DialogManager_dialog'" record="dialog"/>
            </t>
        </div>
    </t>

<t t-name="mail.DialogManagerContainer" owl="1">
        <DialogManager t-if="messaging and messaging.dialogManager" record="messaging.dialogManager"/>
    </t>
<t t-name="mail.Discuss" owl="1">
        <t t-if="discussView">
            <div class="o_Discuss d-flex h-100" t-attf-class="{{ className }}" t-att-class="{ 'o-isDeviceSmall flex-column align-items-center bg-view': messaging.device.isSmall }" t-ref="root">
                <t t-if="!messaging.device.isSmall">
                    <DiscussSidebar className="'o_Discuss_sidebar flex-shrink-0 h-100 pt-3 border-end bg-light'" record="discussView"/>
                </t>
                <t t-if="messaging.device.isSmall" t-call="mail.Discuss.content"/>
                <t t-else="">
                    <div class="o_Discuss_content d-flex flex-column flex-grow-1 h-100 overflow-auto">
                        <t t-call="mail.Discuss.content"/>
                    </div>
                </t>
            </div>
        </t>
    </t>

    <t t-name="mail.Discuss.content" owl="1">
        <t t-if="messaging.device.isSmall and discussView.discuss.activeMobileNavbarTabId === 'mailbox'">
            <DiscussMobileMailboxSelection className="'o_Discuss_mobileMailboxSelection w-100 border-bottom'" record="discussView"/>
        </t>
        <t t-if="discussView.mobileAddItemHeaderAutocompleteInputView">
            <div class="o_Discuss_mobileAddItemHeader d-flex justify-content-center w-100 p-3 border-bottom bg-light">
                <AutocompleteInputView className="'o_Discuss_mobileAddItemHeaderInput flex-grow-1 mb-3 p-2 rounded border'" record="discussView.mobileAddItemHeaderAutocompleteInputView"/>
            </div>
        </t>
        <t t-if="discussView.discuss.threadView">
            <t name="beforeThread"/>
            <ThreadView className="'o_Discuss_thread'" classNameObj="{ 'o-isDeviceSmall w-100': messaging.device.isSmall }" record="discussView.discuss.threadView"/>
        </t>
        <t t-if="!discussView.discuss.activeThread and (!messaging.device.isSmall or discussView.discuss.activeMobileNavbarTabId === 'mailbox')">
            <div class="o_Discuss_noThread d-flex flex-grow-1 align-items-center justify-content-center w-100 bg-view">
                <h4 class="text-muted"><b><i>No conversation selected.</i></b></h4>
            </div>
        </t>
        <t t-if="messaging.device.isSmall and discussView.discuss.activeMobileNavbarTabId !== 'mailbox'">
            <t t-if="discussView.discuss.activeMobileNavbarTabId === 'chat'">
                <button class="o_Discuss_mobileNewChatButton w-100 p-2 btn btn-secondary border-bottom bg-light" t-on-click="discussView.onClickMobileNewChatButton">
                    Start a conversation
                </button>
            </t>
            <t t-if="discussView.discuss.activeMobileNavbarTabId === 'channel'">
                <button class="o_Discuss_mobileNewChannelButton w-100 p-2 btn btn-secondary border-bottom bg-light" t-on-click="discussView.onClickMobileNewChannelButton">
                    New Channel
                </button>
            </t>
        </t>
        <t t-if="discussView.discuss.notificationListView">
            <NotificationList className="'o_Discuss_notificationList flex-grow-1 w-100'" record="discussView.discuss.notificationListView"/>
        </t>
        <t t-if="discussView.discuss.mobileMessagingNavbarView">
            <MobileMessagingNavbar className="'o_Discuss_mobileNavbar w-100'" record="discussView.discuss.mobileMessagingNavbarView"/>
        </t>
    </t>

<t t-name="mail.DiscussContainer" owl="1">
        <div class="o_DiscussContainer h-100 d-flex flex-column">
            <Discuss t-if="messaging and messaging.discuss and messaging.discuss.discussView and messaging.isInitialized" className="'flex-grow-1'" record="messaging.discuss.discussView"/>
            <div t-else="" class="o_DiscussContainer_spinner d-flex flex-grow-1 align-items-center justify-content-center">
                <i class="o_DiscussContainer_spinnerIcon fa fa-circle-o-notch fa-spin me-2"/>Please wait...
            </div>
        </div>
    </t>
<t t-name="mail.DiscussMobileMailboxSelection" owl="1">
        <div class="o_DiscussMobileMailboxSelection d-flex" t-attf-class="{{ className }}" t-ref="root">
            <t t-foreach="discussView.orderedMailboxes" t-as="mailbox" t-key="mailbox.localId">
                <DiscussMobileMailboxSelectionItem discussView="discussView" mailbox="mailbox"/>
            </t>
        </div>
    </t>

<t t-name="mail.DiscussMobileMailboxSelectionItem" owl="1">
        <button class="o_DiscussMobileMailboxSelectionItem btn btn-secondary flex-grow-1 p-2" t-att-class="{                 'active o-active shadow-none': discussView.discuss.activeThread === mailbox.thread,             }" t-attf-class="{{ className }}" t-on-click="() =&gt; discussView.onClickMobileMailboxSelectionItem(mailbox)" t-att-data-mailbox-local-id="mailbox.localId" type="button" t-ref="root">
            <t t-esc="mailbox.name"/>
        </button>
    </t>

<t t-name="mail.DiscussPublicView" owl="1">
        <t t-if="discussPublicView">
            <div class="o_DiscussPublicView d-flex flex-column h-100 w-100 position-absolute" t-attf-class="{{ className }}" t-ref="root">
                <ThreadView t-if="discussPublicView.threadView" record="discussPublicView.threadView"/>
                <WelcomeView t-if="discussPublicView.welcomeView" record="discussPublicView.welcomeView"/>
            </div>
        </t>
    </t>
<t t-name="mail.DiscussPublicViewContainer" owl="1">
        <div class="o_DiscussPublicViewContainer position-absolute h-100 w-100">
            <DiscussPublicView t-if="discussPublicView" record="discussPublicView"/>
            <div t-else="" class="h-100 d-flex justify-content-center align-items-center">
                <i class="o_DiscussPublicViewContainer_spinner fa fa-circle-o-notch fa-spin mx-2" title="Please wait..."/>
            </div>
        </div>
    </t>
<t t-name="mail.DiscussSidebar" owl="1">
        <t t-if="discussView">
            <div name="root" class="o_DiscussSidebar d-flex flex-column overflow-auto" t-attf-class="{{ className }}" t-ref="root">
                <div class="d-flex justify-content-center">
                    <button class="o_DiscussSidebar_startAMeetingButton btn btn-primary rounded" title="Start a meeting" t-on-click="discussView.onClickStartAMeetingButton">
                        Start a meeting
                    </button>
                </div>
                <hr class="o_DiscussSidebar_separator w-100 border-top"/>
                <div class="o_DiscussSidebar_category o_DiscussSidebar_categoryMailbox d-flex flex-column flex-grow-0">
                    <DiscussSidebarMailbox record="discussView.inboxView"/>
                    <DiscussSidebarMailbox record="discussView.starredView"/>
                    <DiscussSidebarMailbox record="discussView.historyView"/>
                </div>
                <hr class="o_DiscussSidebar_separator w-100 border-top"/>
                <t t-if="messaging.models['Thread'].all(thread =&gt; thread.isPinned and thread.model === 'mail.channel').length &gt; 19">
                    <input class="o_DiscussSidebar_quickSearch form-control mx-4 mb-2 rounded-3 w-auto" t-on-input="discussView.onInputQuickSearch" placeholder="Quick search..." t-ref="quickSearchInput" t-esc="discussView.discuss.sidebarQuickSearchValue"/>
                </t>
                <DiscussSidebarCategory t-if="discussView.discuss.categoryChannel" className="'o_DiscussSidebar_category o_DiscussSidebar_categoryChannel'" record="discussView.discuss.categoryChannel"/>
                <t name="beforeCategoryChat"/>
                <DiscussSidebarCategory t-if="discussView.discuss.categoryChat" className="'o_DiscussSidebar_category o_DiscussSidebar_categoryChat'" record="discussView.discuss.categoryChat"/>
            </div>
        </t>
    </t>

<t t-name="mail.DiscussSidebarCategory" owl="1">
        <t t-if="category">
            <t t-set="o_DiscussSidebarCategory_hoverItem" t-value="'btn p-0 text-start text-700 opacity-100-hover opacity-75'"/>
            <div class="o_DiscussSidebarCategory" t-attf-class="{{ className }}" t-att-data-category-local-id="category.localId" t-ref="root">
                <div class="o_DiscussSidebarCategory_header d-flex align-items-center my-1">
                    <div t-attf-class="o_DiscussSidebarCategory_title o_DiscussSidebarCategory_headerItem d-flex align-items-baseline mx-1 {{ o_DiscussSidebarCategory_hoverItem }}" t-on-click="category.onClick">
                        <i class="o_DiscussSidebarCategory_titleIcon small" t-att-class="category.isOpen ? 'fa fa-chevron-down' : 'fa fa-chevron-right'"/>
                        <span class="o_DiscussSidebarCategory_titleText btn-sm p-0 text-uppercase fw-bolder"><t t-esc="category.name"/></span>
                    </div>
                    <div class="o_DiscussSidebarCategory_headerItem flex-grow-1"/>
                    <div class="o_DiscussSidebarCategory_commands o_DiscussSidebarCategory_headerItem d-flex me-3">
                        <t t-if="category.hasViewCommand">
                            <i t-attf-class="o_DiscussSidebarCategory_command o_DiscussSidebarCategory_commandView fa fa-cog {{ o_DiscussSidebarCategory_hoverItem }}" title="View or join channels" t-on-click="category.onClickCommandView" role="img"/>
                        </t>
                        <t t-if="category.hasAddCommand and category.isOpen">
                            <i t-attf-class="o_DiscussSidebarCategory_command o_DiscussSidebarCategory_commandAdd fa fa-plus {{ o_DiscussSidebarCategory_hoverItem }} ms-1" t-on-click="category.onClickCommandAdd" t-att-title="category.commandAddTitleText" role="img"/>
                        </t>
                    </div>
                    <t t-if="!category.isOpen and category.counter &gt; 0">
                        <div class="o_DiscussSidebarCategory_counter o_DiscussSidebarCategory_headerItem badge rounded-pill text-bg-primary me-3">
                            <t t-esc="category.counter"/>
                        </div>
                    </t>
                </div>
                <div class="o_DiscussSidebarCategory_content">
                    <t t-if="category.isOpen">
                        <t t-if="category.addingItemAutocompleteInputView">
                            <div class="o_DiscussSidebarCategory_addingItem d-flex mb-2">
                                <AutocompleteInputView className="'o_DiscussSidebarCategory_addingItemInput form-control mx-4 rounded'" record="category.addingItemAutocompleteInputView"/>
                            </div>
                        </t>
                        <t t-foreach="category.filteredCategoryItems" t-as="item" t-key="item.localId">
                            <DiscussSidebarCategoryItem className="'o_DiscussSidebarCategory_item'" record="item"/>
                        </t>
                    </t>
                    <t t-if="!category.isOpen and category.activeItem">
                        <DiscussSidebarCategoryItem className="'o_DiscussSidebarCategory_item'" record="category.activeItem"/>
                    </t>
                </div>
            </div>
        </t>
    </t>
<t t-name="mail.DiscussSidebarCategoryItem" owl="1">
        <t t-if="categoryItem">
            <t t-set="o_DiscussSidebarCategoryItem_hoverItem" t-value="'btn p-0 text-start text-700 opacity-100-hover opacity-75'"/>
            <button class="o_DiscussSidebarCategoryItem btn d-flex align-items-center w-100 px-0 py-2 border-0 rounded-0 fw-normal text-reset" t-att-class="{                     'bg-100': !categoryItem.isActive,                     'o-active bg-200': categoryItem.isActive,                     'o-unread': categoryItem.isUnread,                 }" t-attf-class="{{ className }}" t-on-click="categoryItem.onClick" t-att-data-channel-id="categoryItem.channel.id" t-att-data-channel-name="categoryItem.channel.displayName" t-ref="root">
                <div class="o_DiscussSidebarCategoryItem_item o_DiscussSidebarCategoryItem_avatar ms-4">
                    <div class="o_DiscussSidebarCategoryItem_imageContainer position-relative d-flex">
                        <img class="o_DiscussSidebarCategoryItem_image w-100 h-100 rounded-circle" t-att-src="categoryItem.avatarUrl" alt="Thread Image"/>
                        <t t-if="categoryItem.hasThreadIcon">
                            <ThreadIcon className="'o_DiscussSidebarCategoryItem_threadIcon position-absolute bottom-0 end-0 d-flex align-items-center justify-content-center rounded-circle bg-100'" thread="categoryItem.thread"/>
                        </t>
                    </div>
                </div>
                <span class="o_DiscussSidebarCategoryItem_item o_DiscussSidebarCategoryItem_name ms-3 me-2 text-truncate" t-att-class="{ 'o-item-unread fw-bolder': categoryItem.isUnread }">
                    <t t-esc="categoryItem.thread.displayName"/>
                </span>
                <div class="o_DiscussSidebarCategoryItem_item flex-grow-1"/>
                <div t-attf-class="o_DiscussSidebarCategoryItem_item o_DiscussSidebarCategoryItem_commands ms-1 {{ categoryItem.thread and categoryItem.thread.rtcSessions.length ? 'me-1' : 'me-3' }}">
                    <t t-if="categoryItem.hasSettingsCommand">
                        <div t-attf-class="o_DiscussSidebarCategoryItem_command o_DiscussSidebarCategoryItem_commandSettings fa fa-cog {{ o_DiscussSidebarCategoryItem_hoverItem }}" t-on-click="categoryItem.onClickCommandSettings" title="Channel settings" role="img"/>
                    </t>
                    <t t-if="categoryItem.hasLeaveCommand">
                        <div t-attf-class="o_DiscussSidebarCategoryItem_command o_DiscussSidebarCategoryItem_commandLeave fa fa-times {{ o_DiscussSidebarCategoryItem_hoverItem }} ms-1" t-on-click="categoryItem.onClickCommandLeave" title="Leave this channel" role="img"/>
                    </t>
                    <t t-if="categoryItem.hasUnpinCommand">
                        <div t-attf-class="o_DiscussSidebarCategoryItem_command o_DiscussSidebarCategoryItem_commandUnpin fa fa-times {{ o_DiscussSidebarCategoryItem_hoverItem }} ms-1" t-on-click="categoryItem.onClickCommandUnpin" title="Unpin Conversation" role="img"/>
                    </t>
                </div>
                <t t-if="categoryItem.thread and categoryItem.thread.rtcSessions.length">
                    <div class="o_DiscussSidebarCategoryItem_item o_DiscussSidebarCategoryItem_callIndicator fa fa-volume-up ms-1 me-3" t-att-class="{ 'o-isCalling text-danger': categoryItem.thread.rtc }"/>
                </t>
                <t t-if="categoryItem.counter &gt; 0">
                    <div class="o_DiscussSidebarCategoryItem_counter o_DiscussSidebarCategoryItem_item badge rounded-pill text-bg-primary ms-1 me-3">
                        <t t-esc="categoryItem.counter"/>
                    </div>
                </t>
            </button>
        </t>
    </t>
<t t-name="mail.DiscussSidebarMailbox" owl="1">
        <button class="o_DiscussSidebarMailbox btn d-flex align-items-center py-1 px-0 border-0 rounded-0 fw-normal text-dark" t-att-class="{                 'bg-100': discussSidebarMailboxView.mailbox.thread !== messaging.discuss.activeThread,                 'o-active bg-200': discussSidebarMailboxView.mailbox.thread === messaging.discuss.activeThread,                 'o-starred-box': discussSidebarMailboxView.mailbox === messaging.starred,             }" t-attf-class="{{ className }}" t-on-click="discussSidebarMailboxView.mailbox.thread.onClick" t-att-data-mailbox-local-id="discussSidebarMailboxView.mailbox.localId" t-att-data-mailbox-name="discussSidebarMailboxView.mailbox.name" t-ref="root">
            <ThreadIcon className="'o_DiscussSidebarMailbox_item ms-4 me-2'" thread="discussSidebarMailboxView.mailbox.thread"/>
            <div class="o_DiscussSidebarMailbox_item o_DiscussSidebarMailbox_name me-2 text-truncate">
                <t t-esc="discussSidebarMailboxView.mailbox.name"/>
            </div>
            <div t-attf-class="o_DiscussSidebarMailbox_item flex-grow-1 {{ discussSidebarMailboxView.mailbox.counter === 0 ? 'me-3': '' }}"/>
            <t t-if="discussSidebarMailboxView.mailbox.counter &gt; 0">
                <div t-attf-class="o_DiscussSidebarMailbox_counter o_DiscussSidebarMailbox_item badge rounded-pill {{ discussSidebarMailboxView.mailbox === messaging.starred ? 'bg-400 text-light' : 'text-bg-primary' }} ms-1 me-3">
                    <t t-esc="discussSidebarMailboxView.mailbox.counter"/>
                </div>
            </t>
        </button>
    </t>
<t t-name="mail.DropZone" owl="1">
        <div class="o_DropZone position-absolute top-0 start-0 align-items-center justify-content-center d-flex w-100 h-100 border-primary bg-view text-primary opacity-75" t-att-class="{ 'o-dragging-inside': dropZoneView.isDraggingInside }" t-attf-class="{{ className }}" t-on-dragenter="dropZoneView.onDragenter" t-on-dragleave="dropZoneView.onDragleave" t-on-dragover="dropZoneView.onDragover" t-on-drop="dropZoneView.onDrop" t-ref="root">
            <h4>
                Drag Files Here <i class="fa fa-download"/>
            </h4>
        </div>
    </t>

<t t-name="mail.EmojiCategoryBarView" owl="1">
        <div class="o_EmojiCategoryBarView d-flex flex-shrink-0 overflow-auto border-end" t-attf-class="{{ className }}" t-ref="root">
            <t t-foreach="emojiCategoryBarView.emojiCategoryViews" t-as="emojiCategoryView" t-key="emojiCategoryView.localId">
                <EmojiCategoryView record="emojiCategoryView"/>
            </t>
        </div>
    </t>

<t t-name="mail.EmojiCategoryView" owl="1">
        <span class="o_EmojiCategoryView flex-grow-1 px-2 py-1 fs-5 cursor-pointer" t-att-class="(emojiCategoryView.isHovered or emojiCategoryView.isActive) ? 'active bg-view' : ''" t-att-title="emojiCategoryView.category.name" t-on-click="emojiCategoryView.onClick" t-on-mouseenter="emojiCategoryView.onMouseenter" t-on-mouseleave="emojiCategoryView.onMouseleave" t-attf-class="{{ className }}" t-ref="root">
            <t t-esc="emojiCategoryView.category.title"/>
        </span>
    </t>

<t t-name="mail.EmojiGridItemView" owl="1">
        <div class="o_EmojiGridItemView d-flex justify-content-center" t-attf-style="width: {{emojiGridItemView.width}}px;">
            <EmojiView t-if="emojiGridItemView.emojiView" className="'o_EmojiGrid_emoji w-100 h-100'" record="emojiGridItemView.emojiView"/>
        </div>
    </t>
<t t-name="mail.EmojiGridLoadingScreen" owl="1">
        <div class="o_EmojiGridLoadingScreen d-flex flex-column justify-content-center align-items-center w-100 h-100" t-attf-class="{{ className }}" t-ref="root">
            <div class="o_EmojiGridLoadingScreen_spinner fa fa-circle-o-notch fa-spin fs-1"/>
            <span class="o_EmojiGridLoadingScreen_text text-muted mt-4" t-out="EmojiGridLoadingScreen.text"/>
        </div>
    </t>
<t t-name="mail.EmojiGridRowView" owl="1">
        <div class="o_EmojiGridRowView">
            <EmojiGridSectionView t-if="emojiGridRowView.sectionView" record="emojiGridRowView.sectionView"/>
            <t t-else="">
                <t t-foreach="emojiGridRowView.items" t-as="item" t-key="item">
                    <EmojiGridItemView className="'o_EmojiGridRowView_item'" record="item"/>
                </t>
            </t>
        </div>
    </t>
<t t-name="mail.EmojiGridSearchNoContentView" owl="1">
        <div class="o_EmojiGridSearchNoContentView d-flex flex-column justify-content-center align-items-center w-100 h-100" t-attf-class="{{ className }}" t-ref="root">
            <div class="o_EmojiGridSearchNoContentView_image">😢</div>
            <span class="o_EmojiGridSearchNoContentView_text text-muted" t-out="emojiGridSearchNoContentView.text"/>
        </div>
    </t>
<t t-name="mail.EmojiGridSectionView" owl="1">
        <div class="o_EmojiGridSectionView d-flex justify-content-center align-items-end mx-2 text-truncate">
            <span t-out="emojiGridSectionView.category.displayName"/>
        </div>
    </t>
<t t-name="mail.EmojiGridView" owl="1">
    <div class="o_EmojiGridView o_EmojiGridView_container" t-attf-style="--rowHeight: {{emojiGridView.rowHeight}}px; --itemWidth: {{emojiGridView.itemWidth}}px; height: {{emojiGridView.height}}px; width: {{emojiGridView.width}}px;" t-on-scroll="emojiGridView.onScroll" t-ref="containerRef">
        <EmojiGridLoadingScreen t-if="!this.messaging.emojiRegistry.isLoaded" record="emojiGridView.loadingScreenView"/>
        <EmojiGridSearchNoContentView t-if="emojiGridView.searchNoContentView" record="emojiGridView.searchNoContentView"/>
        <div t-if="!emojiGridView.searchNoContentView" class="o_EmojiGridView_list" t-attf-style="height: {{emojiGridView.listHeight}}px; min-height: {{emojiGridView.listHeight}}px;" t-ref="listRef">
            <div t-if="emojiGridView.lastRenderedRowIndex &gt;= emojiGridView.firstRenderedRowIndex" class="o_EmojiGridView_viewBlock" t-attf-style="top: {{ emojiGridView.distanceFromTop - emojiGridView.distanceInRowOffset }}px; width: {{ emojiGridView.width }}px;" t-ref="viewBlockRef">
                <EmojiGridRowView t-foreach="emojiGridView.renderedRows" t-as="row" t-key="row" record="row"/>
            </div>
        </div>
    </div>
    </t>

<t t-name="mail.EmojiPickerHeaderActionListView" owl="1">
        <div class="o_EmojiPickerHeaderActionListView d-flex" t-attf-class="{{ className }}" t-ref="root">
            <EmojiPickerHeaderActionView t-foreach="emojiPickerHeaderActionListView.actionViews" t-as="actionView" t-key="actionView" record="actionView"/>
        </div>
    </t>

<t t-name="mail.EmojiPickerHeaderActionView" owl="1">
        <div class="o_EmojiPickerHeaderActionView d-flex" t-attf-class="{{ className }}" t-ref="root">
            <t t-component="constructor.components[emojiPickerHeaderActionView.contentComponentName]" t-props="{                     className: \`o_EmojiPickerHeaderActionView_content\`,                     record: emojiPickerHeaderActionView.content,                 }"/>
        </div>
    </t>

<t t-name="mail.EmojiPickerHeaderView" owl="1">
        <div class="o_EmojiPickerHeaderView d-flex bg-100 border-bottom" t-attf-class="{{ className }}" t-ref="root">
            <EmojiCategoryBarView record="emojiPickerHeaderView.emojiCategoryBarView"/>
            <span class="flex-grow-1"/>
            <EmojiPickerHeaderActionListView t-if="emojiPickerHeaderView.actionListView" record="emojiPickerHeaderView.actionListView"/>
        </div>
    </t>

<t t-name="mail.EmojiPickerView" owl="1">
        <div class="o_EmojiPickerView d-flex flex-column" t-attf-class="{{ className }}" t-ref="root">
            <EmojiPickerHeaderView record="emojiPickerView.headerView"/>
            <EmojiSearchBarView record="emojiPickerView.emojiSearchBarView"/>
            <EmojiGridView record="emojiPickerView.emojiGridView"/>
        </div>
    </t>

<t t-name="mail.EmojiSearchBarView" owl="1">
        <div class="o_EmojiSearchBarView overflow-auto d-flex flex-shrink-0 p-2 flex-column border-bottom" t-attf-class="{{ className }}" t-ref="root">
            <div class="o_EmojiSearchBarView_inputContainer d-flex flex-grow-1 align-items-center">
                <input class="o_EmojiSearchBarView_searchInput o_input form-control overflow-auto flex-fill" t-att-placeholder="emojiSearchBarView.placeholder" t-on-focusin="emojiSearchBarView.onFocusinInput" t-on-focusout="emojiSearchBarView.onFocusoutInput" t-on-input="emojiSearchBarView.onInput" t-ref="input"/>
                <i class="o_EmojiSearchBarView_icon oi oi-search ps-2" title="Search..." role="img" aria-label="Search..."/>
            </div>
        </div>
    </t>

<t t-name="mail.EmojiView" owl="1">
        <span class="o_EmojiView p-1 fs-3 cursor-pointer" t-att-class="emojiView.emojiGridViewAsHovered ? 'bg-200' : ''" t-on-click="emojiView.onClick" t-on-mouseenter="emojiView.onMouseenter" t-on-mouseleave="emojiView.onMouseleave" t-att-title="emojiView.emoji.name" t-att-data-source="emojiView.emoji.sources[0]" t-att-data-codepoints="emojiView.emoji.codepoints" t-attf-class="{{ className }}" t-ref="root">
            <t t-esc="emojiView.emoji.codepoints"/>
        </span>
    </t>

<t t-name="mail.FollowButton" owl="1">
        <t t-if="followButtonView">
            <div class="o_FollowButton d-flex" t-attf-class="{{ className }}" t-ref="root">
                <t t-if="followButtonView.chatterOwner.thread and followButtonView.chatterOwner.thread.isCurrentPartnerFollowing">
                    <button class="o_FollowButton_unfollow btn px-0" t-att-class="{ 'o_ChatterTopbar_button': followButtonView.chatterOwner, 'o-following text-success': !followButtonView.isUnfollowButtonHighlighted, 'o-unfollow text-warning': followButtonView.isUnfollowButtonHighlighted }" t-att-disabled="followButtonView.isDisabled" t-on-click="followButtonView.onClickUnfollow" t-on-mouseenter="followButtonView.onMouseEnterUnfollow" t-on-mouseleave="followButtonView.onMouseleaveUnfollow">
                        <div class="position-relative">

                            <span class="invisible">
                                <i class="fa fa-fw fa fa-eye-slash"/> <t t-out="followButtonView.followingText.length &gt; followButtonView.unfollowingText.length ? followButtonView.followingText : followButtonView.unfollowingText"/>
                            </span>
                            <span t-if="followButtonView.isUnfollowButtonHighlighted" class="o_FollowButton_text position-absolute end-0 top-0 bottom-0 text-warning">
                                <i class="fa fa-fw fa-times"/> <span t-out="followButtonView.unfollowingText"/>
                            </span>
                            <span t-else="" class="o_FollowButton_text d-block position-absolute end-0 top-0 bottom-0">
                                <i class="fa fa-fw fa-check"/> <span t-out="followButtonView.followingText"/>
                            </span>
                        </div>
                    </button>
                </t>
                <t t-else="">
                    <button class="o_FollowButton_follow btn btn-link text-600 pe-0" t-att-disabled="followButtonView.isDisabled" t-on-click="followButtonView.onClickFollow" t-att-class="{ 'o_ChatterTopbar_button': followButtonView.chatterOwner }">
                        Follow
                    </button>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.Follower" owl="1">
        <t t-if="followerView">
            <div class="o_Follower d-flex justify-content-between p-0" t-attf-class="{{ className }}" t-ref="root">
                <a class="o_Follower_details d-flex align-items-center flex-grow-1 px-3 text-700" t-att-class="{ 'o-inactive fst-italic opacity-25': !followerView.follower.isActive }" href="#" role="menuitem" t-on-click="followerView.onClickDetails">
                    <img class="o_Follower_avatar me-2 rounded-circle" t-att-src="followerView.follower.partner.avatarUrl" alt=""/>
                    <span class="o_Follower_name flex-shrink text-truncate" t-esc="followerView.follower.partner.nameOrDisplayName"/>
                </a>
                <t t-if="followerView.follower.isEditable">
                    <button class="o_Follower_button o_Follower_editButton btn btn-icon rounded-0" title="Edit subscription" aria-label="Edit subscription" t-on-click="followerView.onClickEdit">
                        <i class="fa fa-pencil"/>
                    </button>
                    <button class="o_Follower_button o_Follower_removeButton btn btn-icon rounded-0" title="Remove this follower" aria-label="Remove this follower" t-on-click="followerView.onClickRemove">
                        <i class="fa fa-remove"/>
                    </button>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.FollowerListMenu" owl="1">
        <t t-if="followerListMenuView">
            <div class="o_FollowerListMenu position-relative d-flex" t-attf-class="{{ className }}" t-on-keydown="followerListMenuView.onKeydown" t-ref="root">
                <div class="o_FollowerListMenu_followers d-flex" t-ref="dropdown">
                    <button class="o_FollowerListMenu_buttonFollowers o_ChatterTopbar_button btn btn-light" t-att-disabled="!followerListMenuView.chatterOwner.isTemporary and followerListMenuView.isDisabled" t-att-aria-expanded="followerListMenuView.isDropdownOpen ? 'true' : 'false'" t-on-click="followerListMenuView.onClickFollowersButton" aria-label="Show Followers">
                        <i class="fa fa-user-o" role="img"/>
                        <span class="o_FollowerListMenu_buttonFollowersCount ps-1" t-esc="followerListMenuView.followerViews.length"/>
                    </button>

                    <t t-if="followerListMenuView.isDropdownOpen">
                        <div class="o_FollowerListMenu_dropdown o-dropdown-menu dropdown-menu-end flex-column d-flex" role="menu">
                            <t t-if="followerListMenuView.chatterOwner.thread.model !== 'channel' and followerListMenuView.chatterOwner.thread.hasWriteAccess">
                                <a class="o_FollowerListMenu_addFollowersButton dropdown-item" href="#" role="menuitem" t-on-click="followerListMenuView.onClickAddFollowers">
                                    Add Followers
                                </a>
                                <t t-if="followerListMenuView.followerViews.length &gt; 0">
                                    <div role="separator" class="dropdown-divider"/>
                                </t>
                            </t>
                            <t t-if="followerListMenuView.followerViews.length &gt; 0">
                                <Follower t-foreach="followerListMenuView.followerViews" t-as="followerView" t-key="followerView.localId" className="'o_FollowerMenu_follower dropdown-item'" record="followerView"/>
                            </t>
                            <t t-elif="!followerListMenuView.chatterOwner.thread.hasWriteAccess">
                                <div class="o_FollowerListMenu_noFollowers dropdown-item disabled">
                                    No Followers
                                </div>
                            </t>
                        </div>
                    </t>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.FollowerSubtype" owl="1">
        <t t-if="followerSubtypeView">
            <div class="o_FollowerSubtype" t-attf-class="{{ className }}" t-att-data-follower-subtype-id="followerSubtypeView.subtype.id" t-ref="root">
                <label class="o_FollowerSubtype_label flex-grow-1 align-items-center d-flex mb-0 p-2 cursor-pointer">
                    <input class="o_FollowerSubtype_checkbox form-check-input me-2" type="checkbox" t-att-checked="followerSubtypeView.follower.selectedSubtypes.includes(followerSubtypeView.subtype) ? 'checked': ''" t-on-change="followerSubtypeView.onChangeCheckbox"/>
                    <t t-esc="followerSubtypeView.subtype.name"/>
                </label>
            </div>
        </t>
    </t>

<t t-name="mail.FollowerSubtypeList" owl="1">
        <t t-if="followerSubtypeList">
            <div class="o_FollowerSubtypeList modal-dialog" t-attf-class="{{ className }}" t-ref="root">
                <div class="modal-content">
                    <header class="modal-header">
                        <h4 class="modal-title">
                            Edit Subscription of <t t-esc="followerSubtypeList.follower.partner.nameOrDisplayName"/>
                        </h4>
                        <i class="o_FollowerSubtypeList_closeButton close fa fa-times" aria-label="Close" t-on-click="followerSubtypeList.onClickCancel"/>
                    </header>
                    <main class="modal-body">
                        <div class="o_FollowerSubtypeList_subtypes flex-column d-flex">
                            <t t-foreach="followerSubtypeList.followerSubtypeViews" t-as="followerSubtypeView" t-key="followerSubtypeView.localId">
                                <FollowerSubtype className="'o_FollowerSubtypeList_subtype'" record="followerSubtypeView"/>
                            </t>
                        </div>
                    </main>
                    <div class="modal-footer">
                        <button class="o-apply btn btn-primary" t-on-click="followerSubtypeList.onClickApply">
                            Apply
                        </button>
                        <button class="o-cancel btn btn-secondary" t-on-click="followerSubtypeList.onClickCancel">
                            Cancel
                        </button>
                    </div>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.LinkPreviewAsideView" owl="1">
        <button class="o_LinkPreviewAside btn" t-attf-class="{{ className }}" t-on-click="linkPreviewAsideView.onClick" t-ref="root">
            <i class="o_LinkPreviewAside_itemUnlinkIcon fa fa-times"/>
        </button>
    </t>
<t t-name="mail.LinkPreviewCardView" owl="1">
        <div class="o_LinkPreviewCardView card position-relative w-100 mb-2 rounded bg-view shadow-sm overflow-hidden" t-att-class="{ 'me-2': !linkPreviewCardView.linkPreviewListViewOwner.messageViewOwner.isInChatWindow }" t-attf-class="{{ className }}" t-on-mouseenter="linkPreviewCardView.onMouseEnter" t-on-mouseleave="linkPreviewCardView.onMouseLeave" t-ref="root">
            <div class="row g-0 flex-row-reverse h-100">
                <div class="col min-w-0" t-att-class="{ 'd-flex align-items-center': !linkPreviewCardView.linkPreview.og_description }">
                    <div class="o_LinkPreviewCardView_content p-3">
                        <h6 class="o_LinkPreviewCardView_title card-title mb-0 me-2" t-attf-class="{{ linkPreviewCardView.linkPreview.og_description ? 'text-truncate' : 'o_LinkPreviewCardView_hasMultineLines overflow-hidden' }}">
                            <a t-att-href="linkPreviewCardView.linkPreview.source_url" target="_blank" t-out="linkPreviewCardView.linkPreview.og_title"/>
                        </h6>
                        <p t-if="linkPreviewCardView.linkPreview.og_description" class="o_LinkPreviewCardView_description o_LinkPreviewCardView_hasMultineLines card-text mb-0 mt-2 text-muted small overflow-hidden" t-out="linkPreviewCardView.linkPreview.og_description"/>
                    </div>
                </div>
                <div class="o_LinkPreviewCardView_imageLinkWrap col-4 d-block">
                    <a t-att-href="linkPreviewCardView.linkPreview.source_url" class="o_LinkPreviewCardView_imageLink" target="_blank">
                        <img t-if="linkPreviewCardView.linkPreview.og_image" class="o_LinkPreviewCardView_image w-100 h-100 o_object_fit_cover" t-att-src="linkPreviewCardView.linkPreview.og_image" t-att-alt="linkPreviewCardView.linkPreview.og_title"/>
                        <span t-else="" class="o_LinkPreviewCardView_imageEmpty d-flex align-items-center justify-content-center w-100 h-100 bg-100 text-300">
                            <i class="fa fa-camera fa-2x"/>
                        </span>
                    </a>
                </div>
            </div>
            <div t-if="linkPreviewCardView.linkPreviewAsideView" class="o_LinkPreviewCardView_aside position-absolute top-0 end-0 small">
                <LinkPreviewAsideView className="'fa fa-stack p-0 opacity-75 opacity-100-hover'" record="linkPreviewCardView.linkPreviewAsideView"/>
            </div>
        </div>
    </t>
<t t-name="mail.LinkPreviewDeleteConfirmView" owl="1">
        <div class="o_LinkPreviewDeleteConfirmView card bg-view" t-attf-class="{{ className }}" t-ref="root">
            <h4 class="m-3">Confirmation</h4>
            <hr class="mt-0 mb-3"/>
            <p class="o_LinkPreviewDeleteConfirmView_mainText mx-3 mb-3">Do you really want to delete this preview?</p>
            <hr class="mt-0 mb-3"/>
            <div class="o_LinkPreviewDeleteConfirmView_buttons mx-3 mb-3">
                <button class="o_LinkPreviewDeleteConfirmView_confirmButton btn btn-primary me-2" t-on-click="linkPreviewDeleteConfirmView.onClickOk">Ok</button>
                <button class="o_LinkPreviewDeleteConfirmView_cancelButton btn btn-secondary me-2" t-on-click="linkPreviewDeleteConfirmView.onClickCancel">Cancel</button>
            </div>
        </div>
    </t>
<t t-name="mail.LinkPreviewImageView" owl="1">
        <div class="o_LinkPreviewImageView position-relative mb-2" t-att-class="{ 'me-2': !linkPreviewImageView.linkPreviewListViewOwner.messageViewOwner.isInChatWindow }" t-attf-class="{{ className }}" t-on-mouseenter="linkPreviewImageView.onMouseEnter" t-on-mouseleave="linkPreviewImageView.onMouseLeave" t-ref="root">
            <a t-if="linkPreviewImageView.imageUrl" t-att-href="linkPreviewImageView.imageUrl" target="_blank">
                <img class="h-auto w-auto rounded" t-att-src="linkPreviewImageView.imageUrl"/>
            </a>
            <div t-if="linkPreviewImageView.linkPreviewAsideView" class="o_LinkPreviewCardView_aside position-absolute top-0 end-0 small">
                <LinkPreviewAsideView className="'btn btn-sm btn-dark mt-2 me-2 rounded opacity-75 opacity-100-hover'" record="linkPreviewImageView.linkPreviewAsideView"/>
            </div>
        </div>
    </t>
<t t-name="mail.LinkPreviewListView" owl="1">
        <div class="o_LinkPreviewListView d-flex flex-column mt-2" t-att-class="{ 'me-2 pe-4': linkPreviewListView.messageViewOwner.isInChatWindowAndIsAlignedLeft, 'ms-2 ps-4': linkPreviewListView.messageViewOwner.isInChatWindowAndIsAlignedRight }" t-attf-class="{{ className }}" t-ref="root">
            <div class="o_LinkPreviewListView_partialList o_LinkPreviewListView_partialListImages d-flex flex-grow-1 flex-wrap" t-att-class="{ 'justify-content-end': linkPreviewListView.messageViewOwner.isInChatWindowAndIsAlignedRight }">
                <LinkPreviewImageView t-foreach="linkPreviewListView.linkPreviewAsImageViews" t-as="linkPreviewImageView" t-key="linkPreviewImageView" record="linkPreviewImageView"/>
            </div>
            <div class="o_LinkPreviewListView_partialList o_LinkPreviewListView_partialListCards d-flex flex-grow-1 flex-wrap" t-att-class="{ 'justify-content-end': linkPreviewListView.messageViewOwner.isInChatWindowAndIsAlignedRight }">
                <LinkPreviewCardView t-foreach="linkPreviewListView.linkPreviewAsCardViews" t-as="linkPreviewCardView" t-key="linkPreviewCardView" record="linkPreviewCardView"/>
                <LinkPreviewVideoView t-foreach="linkPreviewListView.linkPreviewAsVideoViews" t-as="linkPreviewVideoView" t-key="linkPreviewVideoView" record="linkPreviewVideoView"/>
            </div>
        </div>
    </t>
<t t-name="mail.LinkPreviewVideoView" owl="1">
        <div class="o_LinkPreview o_LinkPreviewVideoView card position-relative w-100 mb-2 rounded bg-view shadow-sm overflow-hidden" t-att-class="{ 'me-2': !linkPreviewVideoView.linkPreviewListViewOwner.messageViewOwner.isInChatWindow }" t-attf-class="{{ className }}" t-on-mouseenter="linkPreviewVideoView.onMouseEnter" t-on-mouseleave="linkPreviewVideoView.onMouseLeave" t-ref="root">
            <div class="row g-0 flex-row-reverse h-100">
                <div class="col min-w-0" t-att-class="{ 'd-flex align-items-center': !linkPreviewVideoView.linkPreview.og_description }">
                    <div class="o_LinkPreviewVideoView_content p-3 bg-view">
                        <h6 class="o_LinkPreviewVideoView_title card-title mb-0 me-2" t-attf-class="{{ linkPreviewVideoView.linkPreview.og_description ? 'text-truncate' : 'o_LinkPreviewVideoView_hasMultineLines overflow-hidden' }}">
                            <a t-att-href="linkPreviewVideoView.linkPreview.source_url" target="_blank" t-esc="linkPreviewVideoView.linkPreview.og_title"/>
                        </h6>
                        <p t-if="linkPreviewVideoView.linkPreview.og_description" class="o_LinkPreviewVideoView_description o_LinkPreviewVideoView_hasMultineLines card-text mb-0 mt-2 text-muted small overflow-hidden" t-out="linkPreviewVideoView.linkPreview.og_description"/>
                    </div>
                </div>
                <div class="o_LinkPreviewVideoView_imageLinkWrap col-4 d-block">
                    <a t-att-href="linkPreviewVideoView.linkPreview.source_url" class="o_LinkPreviewVideoView_imageLink" target="_blank">
                        <div t-if="linkPreviewVideoView.linkPreview.og_image" class="o_linkPreviewVideo_overlay position-relative h-100 opacity-trigger-hover">
                            <img class="o_LinkPreviewVideoView_image img-fluid h-100 rounded-bottom o_object_fit_cover" t-att-src="linkPreviewVideoView.linkPreview.og_image" t-att-alt="linkPreviewVideoView.linkPreview.og_title"/>
                            <div class="position-absolute top-50 start-50 translate-middle">
                                <div class="o_LinkPreviewVideoView_playBtn btn btn-lg rounded opacity-75 opacity-100-hover transition-base">
                                    <i class="fa fa-play"/>
                                </div>
                            </div>
                        </div>
                        <span t-else="" class="o_LinkPreviewVideoView_imageEmpty d-flex align-items-center justify-content-center w-100 h-100 bg-100 text-300">
                            <i class="fa fa-camera fa-2x"/>
                        </span>
                    </a>
                </div>
            </div>
            <div t-if="linkPreviewVideoView.linkPreviewAsideView" class="o_LinkPreviewVideoView_aside position-absolute top-0 end-0 small">
                <LinkPreviewAsideView className="'fa fa-stack p-0 opacity-75 opacity-100-hover'" record="linkPreviewVideoView.linkPreviewAsideView"/>
            </div>
        </div>
    </t>
<t t-name="mail.MailTemplate" owl="1">
        <t t-if="mailTemplateView">
            <div class="o_MailTemplate d-flex align-items-baseline flex-wrap" t-attf-class="{{ className }}" t-ref="root">
                <div class="text-truncate">
                    <i class="fa fa-envelope-o" title="Mail" role="img"/>
                    <span class="o_MailTemplate_name ms-2" t-esc="mailTemplateView.mailTemplate.name"/>
                    <span>:</span>
                </div>
                <div class="d-flex align-items-baseline">
                    <button class="o_MailTemplate_button o_MailTemplate_preview btn btn-link py-0" t-att-data-mail-template-id="mailTemplateView.mailTemplate.id" t-on-click="mailTemplateView.onClickPreview">
                        Preview
                    </button>
                    <em class="o_MailTemplate_text text-500">or</em>
                    <button class="o_MailTemplate_button o_MailTemplate_send btn btn-link py-0" t-att-data-mail-template-id="mailTemplateView.mailTemplate.id" t-on-click="mailTemplateView.onClickSend">
                        Send Now
                    </button>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.Message" owl="1">
        <t t-if="messageView">
            <div class="o_Message position-relative py-1" t-att-class="{                     'o_Message_active': messageView.isActive,                     'o-clicked': messageView.messagingAsClickedMessageView,                     'o-discussion': messageView.message.isDiscussionOrNotification,                     'o-has-message-selection': messageView.messageListViewItemOwner and messageView.messageListViewItemOwner.messageListViewOwner.threadViewOwner.replyingToMessageView,                     'o-highlighted': messageView.message.isHighlighted or messageView.isHighlighted,                     'o-isReplyHighlighted bg-view shadow-lg': messageView.isHighlighted,                     'o-isDeviceSmall': messaging.device.isSmall,                     'o-not-discussion': !messageView.message.isDiscussionOrNotification,                     'o-notification': messageView.message.message_type === 'notification',                     'o-selected': messageView.isSelected,                     'o-squashed pt-1': messageView.isSquashed,                     'o-starred': messageView.message.isStarred,                     'o-currentAuthor': messageView.message.isCurrentUserOrGuestAuthor,                     'mt-1': !messageView.isSquashed and messageView.messageListViewItemOwner,                     'px-3': !messageView.isInChatWindow,                     'px-1': messageView.isInChatWindow,                     'opacity-50': (messageView.messageListViewItemOwner and messageView.messageListViewItemOwner.messageListViewOwner.threadViewOwner.replyingToMessageView) and !messageView.isSelected,                 }" t-attf-class="{{ messageView.extraClass }} {{ className }}" role="group" t-att-aria-label="messageView.message.messageTypeText" t-on-click="messageView.onClick" t-on-mouseenter="messageView.onMouseenter" t-on-mouseleave="messageView.onMouseleave" t-att-data-id="messageView.message.id" t-att-data-message-id="messageView.message.id" t-ref="root">
                <div class="o_Message_inReplyToWrap" t-att-class="{ 'me-5': messageView.isInDiscuss or messageView.isInChatWindowAndIsAlignedLeft, 'd-flex justify-content-end ms-5': messageView.isInChatWindowAndIsAlignedRight }">
                    <MessageInReplyToView t-if="messageView.messageInReplyToView" record="messageView.messageInReplyToView" className="'mb-1'" classNameObj="{ 'me-5': messageView.isInChatWindowAndIsAlignedLeft, 'ms-5': messageView.isInChatWindowAndIsAlignedRight }"/>
                </div>
                <div class="position-relative d-flex flex-shrink-0" t-att-class="{ 'flex-row-reverse': messageView.isInChatWindowAndIsAlignedRight }">
                    <div class="o_Message_sidebar d-flex flex-shrink-0" t-att-class="{ 'o-message-squashed align-items-start': messageView.isSquashed, 'justify-content-center': messageView.isInChatWindow }">
                        <t t-if="!messageView.isSquashed">
                            <div class="o_Message_authorAvatarContainer o_Message_sidebarItem position-relative">
                                <img class="o_Message_authorAvatar w-100 h-100 rounded-circle o_object_fit_cover" t-att-class="{ 'cursor-pointer': messageView.hasAuthorClickable, o_redirect: messageView.hasAuthorClickable }" t-att-src="messageView.message.avatarUrl" t-att-role="messageView.hasAuthorClickable ? 'button' : ''" t-att-tabindex="messageView.hasAuthorClickable ? '0' : ''" t-on-click="messageView.onClickAuthorAvatar" t-att-title="messageView.authorTitleText" t-att-alt="messageView.authorTitleText"/>
                                <t t-if="messageView.personaImStatusIconView">
                                    <PersonaImStatusIcon className="'o_Message_personaImStatusIcon position-absolute bottom-0 end-0 d-flex align-items-center justify-content-center text-white'" classNameObj="{                                             'o-message-selected': messageView.isSelected,                                             'o_Message_personaImStatusIcon-mobile': messaging.device.isSmall,                                             'small': !messaging.device.isSmall,                                             'text-100': messageView.message.is_note and !messageView.isSelected,                                         }" hasOpenChat="messageView.hasAuthorClickable" record="messageView.personaImStatusIconView"/>
                                </t>
                            </div>
                        </t>
                        <t t-else="">
                            <t t-if="messageView.isActive and messageView.message.date">
                                <small class="o_Message_date o_Message_sidebarItem mt-3 mx-1 text-muted opacity-50">
                                    <t t-esc="messageView.message.shortTime"/>
                                </small>
                            </t>
                            <t t-if="!messageView.isActive and messageView.messageSeenIndicatorView">
                                <div t-att-class="{ 'position-absolute bottom-0 mb-1': !messageView.isInChatter }">
                                    <MessageSeenIndicator className="'o_Message_seenIndicator me-1'" record="messageView.messageSeenIndicatorView"/>
                                </div>
                            </t>
                        </t>
                    </div>
                    <div class="o_Message_core flex-grow-1">
                        <t t-if="!messageView.isSquashed">
                            <div class="o_Message_header d-flex flex-wrap align-items-baseline" t-att-class="{ 'justify-content-end': messageView.isInChatWindowAndIsAlignedRight }">
                                <t t-if="messageView.message.author">
                                    <strong t-if="messageView.isShowingAuthorName" class="o_Message_authorName o_redirect me-1 text-truncate" t-att-class="{ 'cursor-pointer': messageView.hasAuthorClickable }" t-att-role="messageView.hasAuthorClickable ? 'button' : ''" t-att-tabindex="messageView.hasAuthorClickable ? '0' : ''" t-on-click="messageView.onClickAuthorName" t-att-title="messageView.authorTitleText">
                                        <t t-if="messageView.message.originThread">
                                            <t t-esc="messageView.message.originThread.getMemberName(messageView.message.author.persona)"/>
                                        </t>
                                        <t t-else="">
                                            <t t-esc="messageView.message.author.nameOrDisplayName"/>
                                        </t>
                                    </strong>
                                </t>
                                <t t-elif="messageView.message.guestAuthor">
                                    <strong class="o_Message_authorName me-2 text-truncate text-muted">
                                        <t t-esc="messageView.message.guestAuthor.name"/>
                                    </strong>
                                </t>
                                <t t-elif="messageView.message.email_from">
                                    <a class="o_Message_authorName me-2 text-truncate text-muted" t-attf-href="mailto:{{ messageView.message.email_from }}?subject=Re: {{ messageView.message.subject ? messageView.message.subject : '' }}">
                                        <strong>
                                            <t t-esc="messageView.message.email_from"/>
                                        </strong>
                                    </a>
                                </t>
                                <t t-else="">
                                    <strong class="o_Message_authorName me-2 text-truncate text-muted">
                                        Anonymous
                                    </strong>
                                </t>
                                <t t-if="messageView.message.date">
                                    <small class="o_Message_date o_Message_headerDate text-muted opacity-50" t-att-class="{ 'o-message-selected': messageView.isSelected, 'me-2': !(messageView.isInChatWindowAndIsAlignedRight) }" t-att-title="messageView.message.datetime">
                                        <span t-if="messageView.isShowingAuthorName">-</span> <t t-esc="messageView.dateFromNow"/>
                                    </small>
                                </t>
                                <t t-if="messageView.messageSeenIndicatorView">
                                    <MessageSeenIndicator className="'o_Message_seenIndicator ms-1'" record="messageView.messageSeenIndicatorView"/>
                                </t>
                                <t t-if="messageView.messageListViewItemOwner and messageView.message.originThread and messageView.message.originThread !== messageView.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread">
                                    <small class="o_Message_originThread me-2" t-att-class="{ 'o-message-selected text-600': messageView.isSelected, 'text-500': !messageView.isSelected }">
                                        <t t-if="messageView.message.originThread.model === 'mail.channel'">
                                            (from <a class="o_Message_originThreadLink fs-6" t-att-href="messageView.message.originThread.url" t-on-click="messageView.onClickOriginThread"><t t-if="messageView.message.originThread.displayName">#<t t-esc="messageView.message.originThread.displayName"/></t><t t-else="">channel</t></a>)
                                        </t>
                                        <t t-else="">
                                            on <a class="o_Message_originThreadLink fs-6" t-att-href="messageView.message.originThread.url" t-on-click="messageView.onClickOriginThread"><t t-if="messageView.message.originThread.displayName"><t t-esc="messageView.message.originThread.displayName"/></t><t t-else="">document</t></a>
                                        </t>
                                    </small>
                                </t>
                                <t t-if="messageView.messageListViewItemOwner and messageView.message.originThread and messageView.message.originThread === messageView.messageListViewItemOwner.messageListViewOwner.threadViewOwner.thread and messageView.message.notifications.length &gt; 0">
                                    <div t-att-class="{ 'ms-2': messageView.isInChatWindowAndIsAlignedRight }">
                                        <t t-if="messageView.message.failureNotifications.length &gt; 0">
                                            <span class="o_Message_notificationIconClickable o-error cursor-pointer text-danger" role="button" tabindex="0" t-on-click="messageView.onClickFailure">
                                                <i class="o_Message_notificationIcon" t-att-class="messageView.failureNotificationIconClassName" role="img" aria-label="Delivery failure"/> <span t-if="messageView.failureNotificationIconLabel" t-out="messageView.failureNotificationIconLabel"/>
                                            </span>
                                        </t>
                                        <t t-else="">
                                            <span class="o_Message_notificationIconClickable text-600 cursor-pointer" t-on-click="messageView.onClickNotificationIcon" t-ref="notificationIcon">
                                                <i class="o_Message_notificationIcon" t-att-class="messageView.notificationIconClassName"/> <span t-if="messageView.notificationIconLabel" t-out="messageView.notificationIconLabel"/>
                                            </span>
                                        </t>
                                    </div>
                                </t>
                            </div>
                        </t>
                        <div class="o_Message_bubbleWrap position-relative d-flex align-items-start" t-att-class="{                                 'd-flex justify-content-end': messageView.isInChatWindowAndIsAlignedRight,                                 'pe-4': messageView.isInChatWindowAndIsAlignedLeft and !messageView.composerViewInEditing,                                 'ps-4': messageView.isInChatWindowAndIsAlignedRight and !messageView.composerViewInEditing,                                 'pe-2': messageView.isInChatWindowAndIsAlignedLeft and messageView.composerViewInEditing,                                 'ps-2': messageView.isInChatWindowAndIsAlignedRight and messageView.composerViewInEditing,                             }">
                            <div class="o_Message_bubble position-relative" t-att-class="{                                     'flex-grow-1': messageView.composerViewInEditing,                                     'w-100': !(messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms') and !messageView.isInChatWindow,                                     'me-2': messageView.isInChatWindowAndIsAlignedLeft and !messageView.composerViewInEditing,                                     'ms-2': messageView.isInChatWindowAndIsAlignedRight and !messageView.composerViewInEditing,                                     'p-3': messageView.message.prettyBody !== '' and !messageView.composerViewInEditing and (messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms'),                                     'p-2': messageView.composerViewInEditing,                                     'text-muted': messageView.message.is_note and messageView.message.message_type !== 'sms',                                 }">
                                <div t-if="messageView.message.prettyBody !== '' || messageView.composerViewInEditing" class="o_Message_background position-absolute start-0 top-0 w-100 h-100" t-att-class="{                                         'rounded-end-3': !messageView.isInChatWindowAndIsAlignedRight and (messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms'),                                         'rounded-start-3': messageView.isInChatWindowAndIsAlignedRight and (messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms'),                                         'rounded-bottom-3 border': messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms',                                         'o-isAuthorNotCurrentUserOrGuest border-info bg-info-light': !messageView.message.isCurrentUserOrGuestAuthor and !messageView.message.isHighlighted and (messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms'),                                         'border-success bg-success-light opacity-25': messageView.message.isCurrentUserOrGuestAuthor and !messageView.message.isHighlighted and (messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms'),                                         'border-warning bg-warning-light opacity-50': messageView.message.isHighlighted and (messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms'),                                     }"/>
                                <t t-if="messageView.message.subject and !messageView.message.isSubjectSimilarToOriginThreadName">
                                    <em class="o_Message_subject position-relative mb-1 me-2">Subject: <t t-esc="messageView.message.subject"/></em>
                                </t>
                                <div class="o_Message_content position-relative text-break" t-ref="content">
                                    <t t-if="!messageView.composerViewInEditing">
                                        <div class="o_Message_prettyBody" t-ref="prettyBody"/>
                                    </t>
                                    <t t-if="messageView.composerViewInEditing">
                                        <Composer className="'o_Message_composer'" record="messageView.composerViewInEditing"/>
                                    </t>
                                    <t t-if="messageView.message.subtype_description and !messageView.message.isBodyEqualSubtypeDescription">
                                        <p t-esc="messageView.message.subtype_description" class="mb-0"/>
                                    </t>
                                    <t t-if="messageView.message.trackingValues.length &gt; 0">
                                        <ul class="o_Message_trackingValues mb-0 ps-4">
                                           <t t-foreach="messageView.message.trackingValues" t-as="trackingValue" t-key="trackingValue.id">
                                                <li>
                                                    <TrackingValue value="trackingValue"/>
                                                </li>
                                            </t>
                                        </ul>
                                    </t>
                                </div>
                            </div>
                            <div t-if="messageView.messageActionList and !messageView.composerViewInEditing" class="o_Message_actionListContainer" t-att-class="{                                     'o-squashed': messageView.isSquashed,                                     'position-absolute top-0': !messageView.isInDiscuss,                                     'start-0 ms-3': messageView.isInChatWindowAndIsAlignedRight,                                     'end-0 me-3': messageView.isInChatWindowAndIsAlignedLeft || messageView.isInChatter,                                     'mt-n4': messageView.isInChatter and (messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms'),                                     'mt-n5': messageView.isInChatter and !(messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms'),                                     'mt-2': messageView.isInDiscuss and (messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms'),                                     'mt-n3': messageView.isInChatWindow,                                     'ms-2': messageView.isInDiscuss,                                 }" t-attf-class="{{ messageView.isActive ? 'visible' : 'invisible' }}">
                                <MessageActionList record="messageView.messageActionList" classNameObj="{ 'mt-3': messageView.isInChatter and !(messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms') }"/>
                            </div>
                        </div>
                        <AttachmentList t-if="messageView.attachmentList" record="messageView.attachmentList" className="'position-relative'"/>
                        <LinkPreviewListView t-if="messageView.linkPreviewListView" record="messageView.linkPreviewListView"/>
                        <div t-if="messageView.message.messageReactionGroups.length &gt; 0" class="position-relative d-flex flex-wrap" t-att-class="{ 'flex-row-reverse me-3': messageView.isInChatWindowAndIsAlignedRight, 'ms-3': !messageView.isInChatWindowAndIsAlignedRight and (messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms')}" t-attf-class="{{ messageView.message.isDiscussionOrNotification or messageView.message.message_type === 'sms' ? 'mt-n2' : 'mt-1' }}">
                            <t t-foreach="messageView.message.messageReactionGroups" t-as="messageReactionGroup" t-key="messageReactionGroup.localId">
                                <MessageReactionGroup className="'mb-1'" classNameObj="{ 'ms-1': messageView.isInChatWindowAndIsAlignedRight, 'me-1': !(messageView.isInChatWindowAndIsAlignedRight) }" record="messageReactionGroup"/>
                            </t>
                        </div>
                    </div>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.MessageActionList" owl="1">
        <t t-if="messageActionList">
            <div class="o_MessageActionList d-flex rounded-1 shadow-sm overflow-hidden" t-att-class="{ 'o-isDeviceSmall': messaging.device.isSmall, 'flex-row-reverse': messageActionList.messageView.isInChatWindowAndIsAlignedRight }" t-attf-class="{{ className }}" t-ref="root">
                <t t-foreach="messageActionList.messageActionViews" t-as="messageActionView" t-key="messageActionView.localId">
                    <MessageActionView record="messageActionView"/>
                </t>
            </div>
        </t>
    </t>
<t t-name="mail.MessageActionView" owl="1">
        <i class="o_MessageActionView cursor-pointer" t-att-class="messageActionView.classNames" t-att-tabindex="messageActionView.tabindex" t-att-title="messageActionView.title" t-att-aria-pressed="messageActionView.ariaPressedState" t-att-aria-label="messageActionView.title" role="button" t-on-click="messageActionView.onClick" t-ref="action"/>
    </t>
<t t-name="mail.MessageAuthorPrefix" owl="1">
        <t t-if="messageAuthorPrefixView">
            <span class="o_MessageAuthorPrefix" t-attf-class="{{ className }}" t-ref="root">
                <t t-if="messageAuthorPrefixView.message">
                    <t t-if="messageAuthorPrefixView.message.author and messageAuthorPrefixView.message.author === messaging.currentPartner">
                        <i class="o_MessageAuthorPrefixIcon fa fa-mail-reply me-1"/>You:
                    </t>
                    <t t-elif="messageAuthorPrefixView.thread and (!messageAuthorPrefixView.thread.channel or messageAuthorPrefixView.message.author !== messageAuthorPrefixView.thread.channel.correspondent)">
                        <t t-esc="messageAuthorPrefixView.message.author.nameOrDisplayName"/>:
                    </t>
                </t>
            </span>
        </t>
    </t>

<t t-name="mail.MessageInReplyToView" owl="1">
        <t t-if="messageInReplyToView">
            <small class="o_MessageInReplyToView position-relative d-block text-small" t-attf-class="{{ className }} {{ messageInReplyToView.messageView.isInChatWindowAndIsAlignedRight ? 'justify-content-end pe-5': 'ps-5' }}" t-ref="root">
                <span class="o_MessageInReplyToView_corner position-absolute bottom-0 top-50 pe-4 border-top text-300" t-attf-class="{{  messageInReplyToView.messageView.isInChatWindowAndIsAlignedRight ? 'o-isRightAlign border-end' : 'o-isLeftAlign border-start' }}" t-att-class="{ 'ms-n2': messageInReplyToView.messageView.isInDiscuss }"/>
                <t t-if="!messageInReplyToView.messageView.message.parentMessage.isEmpty">
                    <span class="o_MessageInReplyToView_wrapOuter d-flex align-items-center text-muted opacity-75 opacity-100-hover cursor-pointer" t-attf-class="{{ messageInReplyToView.messageView.isInChatWindowAndIsAlignedRight ? 'pe-3': 'ps-3' }}" t-on-click="messageInReplyToView.onClickReply">
                        <img class="o_MessageInReplyToView_avatar me-2 rounded-circle" t-att-src="messageInReplyToView.messageView.message.parentMessage.avatarUrl" t-att-title="messageInReplyToView.messageView.message.parentMessage.authorName" alt="Avatar"/>
                        <span class="o_MessageInReplyToView_wrapInner overflow-hidden">
                            <b class="o_MessageInReplyToView_author">@<t t-out="messageInReplyToView.messageView.message.parentMessage.authorName"/></b>:
                            <span class="o_MessageInReplyToView_body ms-1 text-break">
                                <t t-if="messageInReplyToView.hasBodyBackLink">
                                    <t t-out="messageInReplyToView.messageView.message.parentMessage.prettyBodyAsMarkup"/>
                                </t>
                                <t t-if="messageInReplyToView.hasAttachmentBackLink">
                                    <span class="me-2 fst-italic">Click to see the attachments</span>
                                    <i class="fa fa-image"/>
                                </t>
                            </span>
                        </span>
                    </span>
                </t>
                <t t-if="messageInReplyToView.messageView.message.parentMessage.isEmpty">
                    <i class="o_MessageInReplyToView_deletedMessage text-muted ms-2">Original message was deleted</i>
                </t>
            </small>
        </t>
    </t>
<t t-name="mail.MessageList" owl="1">
        <t t-if="messageListView">
            <div class="o_MessageList bg-view d-flex flex-column overflow-auto" t-att-class="{ 'o-empty align-items-center justify-content-center': messageListView.threadViewOwner.messages.length === 0, 'pb-4': messageListView.threadViewOwner.messages.length !== 0 }" t-attf-class="{{ className }}" t-on-scroll="onScroll" t-ref="root">

                <t t-if="messageListView.threadViewOwner.threadCache.orderedNonEmptyMessages.length === 0">
                    <div class="o_MessageList_empty o_MessageList_item d-flex flex-grow-1 flex-column align-items-center justify-content-center align-self-center w-100 h-100 p-4 text-center text-muted fst-italic">
                        <t t-if="messageListView.threadViewOwner.thread === messaging.inbox.thread">
                            <h4 class="o_MessageList_emptyTitle mb-3 fw-bolder">
                                Congratulations, your inbox is empty
                            </h4>
                            New messages appear here.
                        </t>
                        <t t-elif="messageListView.threadViewOwner.thread === messaging.starred.thread">
                            <h4 class="o_MessageList_emptyTitle mb-3 fw-bolder">
                                No starred messages
                            </h4>
                            You can mark any message as 'starred', and it shows up in this mailbox.
                        </t>
                        <t t-elif="messageListView.threadViewOwner.thread === messaging.history.thread">
                            <img src="/web/static/img/neutral_face.svg" alt="History"/>
                            <h4 class="o_MessageList_emptyTitle mb-3 fw-bolder">
                                No history messages
                            </h4>
                            Messages marked as read will appear in the history.
                        </t>
                        <t t-else="">
                            There are no messages in this conversation.
                        </t>
                    </div>
                </t>

                <t t-if="messageListView.threadViewOwner.threadCache.hasLoadingFailed">
                    <div class="o_MessageList_alertLoadingFailed d-flex align-items-center alert alert-info">
                        <div>
                            An error occurred while fetching messages.
                        </div>
                        <button class="o_MessageList_alertLoadingFailedRetryButton btn btn-link" t-on-click="messageListView.onClickRetryLoadMoreMessages">
                            Click here to retry
                        </button>
                    </div>
                </t>
                <t t-if="!messageListView.threadViewOwner.threadCache.hasLoadingFailed and messageListView.threadViewOwner.order === 'asc'">
                    <t t-call="mail.MessageList.loadMore"/>
                </t>
                <div t-if="messageListView.threadViewOwner.order === 'asc' and messageListView.threadViewOwner.threadCache.orderedNonEmptyMessages.length !== 0 and !(messageListView.threadViewOwner.thread and messageListView.threadViewOwner.thread.mailbox)" class="flex-grow-1"/>

                <t t-set="current_day" t-value="0"/>
                <t t-foreach="messageListView.messageListViewItems" t-as="messageListViewItem" t-key="messageListViewItem.localId">
                    <Transition visible="messageListViewItem.message === messageListView.threadViewOwner.thread.messageAfterNewMessageSeparator" name="'o-fade'" t-slot-scope="transition">
                        <div class="o_MessageList_separator o_MessageList_separatorNewMessages o_MessageList_item d-flex flex-shrink-0 align-items-center me-4 p-0 fw-bolder" t-att-class="{ 'o-disable-animation': messaging.disableAnimation, 'opacity-0': transition.className.includes('o-fade-leave') }" t-attf-class="{{transition.className}}">
                            <hr class="o_MessageList_separatorLine o_MessageList_separatorLineNewMessages flex-grow-1 w-auto"/><span class="o_MessageList_separatorLabel o_MessageList_separatorLabelNewMessages px-3">New messages</span>
                        </div>
                    </Transition>
                    <t t-if="!messageListViewItem.message.isEmpty">
                        <t t-set="message_day" t-value="messageListViewItem.message.dateDay"/>
                        <t t-if="current_day !== message_day">
                            <div class="o_MessageList_separator o_MessageList_separatorDate o_MessageList_item d-flex flex-shrink-0 align-items-center pt-4 pb-0 px-0 fw-bolder">
                                <hr class="o_MessageList_separatorLine flex-grow-1 w-auto border-top"/><span class="o_MessageList_separatorLabel o_MessageList_separatorLabelDate px-3"><t t-esc="message_day"/></span><hr class="o_MessageList_separatorLine flex-grow-1 w-auto border-top"/>
                                <t t-set="current_day" t-value="message_day"/>
                            </div>
                        </t>
                        <NotificationMessageView t-if="messageListViewItem.notificationMessageView" record="messageListViewItem.notificationMessageView"/>
                        <t t-if="messageView and messageView.swiperView">
                <SwiperView record="messageView.swiperView"/>
            </t>
            <t t-else=""><Message t-if="messageListViewItem.messageView" record="messageListViewItem.messageView"/>
                    </t>
        </t>
                </t>

                <t t-if="!messageListView.threadViewOwner.threadCache.hasLoadingFailed and messageListView.threadViewOwner.order === 'desc'">
                    <t t-call="mail.MessageList.loadMore"/>
                </t>
            </div>
        </t>
    </t>

    <t t-name="mail.MessageList.loadMore" owl="1">
        <t t-if="messageListView.threadViewOwner.threadCache.isLoadingMore">
            <div class="o_MessageList_item o_MessageList_isLoadingMore align-self-center">
                <i class="o_MessageList_isLoadingMoreIcon fa fa-spin fa-circle-o-notch me-1"/>
                Loading...
            </div>
        </t>
        <t t-elif="!messageListView.threadViewOwner.threadCache.isAllHistoryLoaded and !messageListView.threadViewOwner.thread.isTemporary">
            <a class="o_MessageList_item o_MessageList_loadMore align-self-center" href="#" t-on-click="messageListView.onClickLoadMore" t-ref="loadMore">
                Load more
            </a>
        </t>
    </t>

<t t-name="mail.MessageNotificationPopoverContent" owl="1">
        <div class="o_MessageNotificationPopoverContent m-2" t-attf-class="{{ className }}" t-ref="root">
            <t t-foreach="messageNotificationPopoverContentView.messageView.message.notifications" t-as="notification" t-key="notification.localId">
                <div class="o_MessageNotificationPopoverContent_notification">
                    <i class="o_MessageNotificationPopoverContent_notificationIcon me-2" t-att-class="notification.iconClass" t-att-title="notification.iconTitle" role="img"/>
                    <t t-if="notification.partner">
                        <span class="o_MessageNotificationPopoverContent_notificationPartnerName" t-esc="notification.partner.nameOrDisplayName"/>
                    </t>
                </div>
            </t>
        </div>
    </t>

<t t-name="mail.MessageReactionGroup" owl="1">
        <t t-if="messageReactionGroup">
            <button class="o_MessageReactionGroup btn d-flex p-0 border rounded-1" t-att-class="{'o-hasUserReacted border-primary': messageReactionGroup.hasUserReacted, 'bg-view': !messageReactionGroup.hasUserReacted}" t-attf-class="{{ className }}" t-att-title="messageReactionGroup.summary" t-on-click="messageReactionGroup.onClick" t-ref="root">
                <span class="o_MessageReactionGroup_content mx-1">
                    <t t-esc="messageReactionGroup.content"/>
                </span>
                <span class="o_MessageReactionGroup_count mx-1" t-att-class="{'o-hasUserReacted text-primary fw-bolder': messageReactionGroup.hasUserReacted}">
                    <t t-esc="messageReactionGroup.count"/>
                </span>
            </button>
        </t>
    </t>

<t t-name="mail.MessageSeenIndicator" owl="1">
        <t t-if="messageSeenIndicatorView and messageSeenIndicatorView.messageSeenIndicator">
            <span class="o_MessageSeenIndicator position-relative d-flex opacity-75-hover opacity-50" t-att-class="{ 'o-all-seen text-odoo': messageSeenIndicatorView.messageSeenIndicator.hasEveryoneSeen }" t-attf-class="{{ className }}" t-att-title="messageSeenIndicatorView.messageSeenIndicator.text" t-ref="root">
                <t t-if="!messageSeenIndicatorView.messageSeenIndicator.isMessagePreviousToLastCurrentPartnerMessageSeenByEveryone">
                    <t t-if="messageSeenIndicatorView.messageSeenIndicator.hasSomeoneFetched or messageSeenIndicatorView.messageSeenIndicator.hasSomeoneSeen">
                        <i class="o_MessageSeenIndicator_icon o-first fa fa-check ps-1"/>
                    </t>
                    <t t-if="messageSeenIndicatorView.messageSeenIndicator.hasSomeoneSeen">
                        <i class="o_MessageSeenIndicator_icon o-second fa fa-check position-absolute"/>
                    </t>
                </t>
            </span>
        </t>
    </t>
<t t-name="mail.MessagingMenu" owl="1">
        <t t-if="messagingMenu">
            <div class="o_MessagingMenu dropdown" t-att-class="{ 'show bg-black-15': messagingMenu.isOpen, 'o-isDeviceSmall': messaging.device.isSmall }" t-attf-class="{{ className }}" t-ref="root">
                <a class="o_MessagingMenu_toggler dropdown-toggle o-no-caret o-dropdown--narrow" t-att-class="{ 'o-no-notification': !messagingMenu.counter }" href="#" title="Conversations" role="button" t-att-aria-expanded="messagingMenu.isOpen ? 'true' : 'false'" aria-haspopup="true" t-on-click="messagingMenu.onClickToggler">
                    <i class="o_MessagingMenu_icon fa fa-lg fa-comments" role="img" aria-label="Messages"/>
                    <t t-if="!messaging.isInitialized">
                        <i class="o_MessagingMenu_loading fa fa-circle-o-notch fa-spin position-absolute bottom-50 end-0 small"/>
                    </t>
                    <t t-elif="messagingMenu.counter &gt; 0">
                        <span class="o_MessagingMenu_counter badge">
                            <t t-esc="messagingMenu.counter"/>
                        </span>
                    </t>
                </a>
                <t t-if="messagingMenu.isOpen">
                    <div class="o_MessagingMenu_dropdownMenu o-dropdown-menu dropdown-menu-end d-flex flex-column mt-0 py-0 bg-view overflow-auto" t-att-class="{ 'o-isDeviceSmall position-fixed bottom-0 start-0 end-0 flex-grow-1 w-100 m-0 border-0': messaging.device.isSmall, 'border': !messaging.device.isSmall, 'o-messaging-not-initialized align-items-center justify-content-center': !messaging.isInitialized }" role="menu">
                        <t t-if="!messaging.isInitialized">
                            <span><i class="o_MessagingMenu_dropdownLoadingIcon fa fa-circle-o-notch fa-spin me-1"/>Please wait...</span>
                        </t>
                        <t t-else="">
                            <div class="o_MessagingMenu_dropdownMenuHeader border-bottom" t-attf-class="{{ messaging.device.isSmall ? 'o-isDeviceSmall p-2' : 'd-flex flex-shrink-0' }}">
                                <t t-if="!messaging.device.isSmall">
                                    <MessagingMenuTab messagingMenu="messagingMenu" tabId="'all'"/>
                                    <MessagingMenuTab messagingMenu="messagingMenu" tabId="'chat'"/>
                                    <MessagingMenuTab messagingMenu="messagingMenu" tabId="'channel'"/>
                                </t>
                                <t t-if="messaging.device.isSmall">
                                    <t t-call="mail.MessagingMenu.newMessageButton"/>
                                </t>
                                <div class="flex-grow-1"/>
                                <t t-if="!messaging.device.isSmall and !messaging.discuss.discussView">
                                    <t t-call="mail.MessagingMenu.newMessageButton"/>
                                </t>
                                <t t-if="messagingMenu.mobileNewMessageAutocompleteInputView">
                                    <AutocompleteInputView className="'o_MessagingMenu_mobileNewMessageInput mt-2 p-2 rounded-3'" record="messagingMenu.mobileNewMessageAutocompleteInputView"/>
                                </t>
                            </div>
                            <t t-if="messagingMenu.notificationListView">
                                <NotificationList className="'o_MessagingMenu_notificationList'" classNameObj="{ 'o-isDeviceSmall flex-grow-1 overflow-auto': messaging.device.isSmall }" record="messagingMenu.notificationListView"/>
                            </t>
                            <t t-if="messagingMenu.mobileMessagingNavbarView">
                                <MobileMessagingNavbar className="'o_MessagingMenu_mobileNavbar'" record="messagingMenu.mobileMessagingNavbarView"/>
                            </t>
                        </t>
                    </div>
                </t>
            </div>
        </t>
    </t>

    <t t-name="mail.MessagingMenu.newMessageButton" owl="1">
        <button class="o_MessagingMenu_newMessageButton btn" t-att-class="{                 'btn-link': !messaging.device.isSmall,                 'btn-secondary': messaging.device.isSmall,                 'o-isDeviceSmall': messaging.device.isSmall,             }" t-on-click="messagingMenu.onClickNewMessage" type="button">
            New message
        </button>
    </t>

<t t-name="mail.MessagingMenuContainer" owl="1">
        <div class="MessagingMenuContainer">
            <t t-if="messaging and messaging.messagingMenu">
                <MessagingMenu record="messaging.messagingMenu"/>
            </t>
            <t t-else="">
                <i class="o_MessagingMenuContainer_spinner fa fa-circle-o-notch fa-spin mx-2" title="Please wait..."/>
            </t>
        </div>
    </t>
<t t-name="mail.MessagingMenuTab" owl="1">
        <button class="o_MessagingMenuTab o-desktop btn btn-link" t-att-class="{ 'o-active fw-bolder': messagingMenu.activeTabId === props.tabId, 'text-dark': messagingMenu.activeTabId !== props.tabId }" t-on-click="messagingMenu.onClickDesktopTabButton" type="button" role="tab" t-att-data-tab-id="props.tabId" t-attf-class="{{ className }}" t-ref="root">
            <t t-if="props.tabId === 'all'">All</t>
            <t t-elif="props.tabId === 'chat'">Chat</t>
            <t t-elif="props.tabId === 'channel'">Channels</t>
        </button>
    </t>

<t t-name="mail.MobileMessagingNavbar" owl="1">
        <t t-if="mobileMessagingNavbarView">
            <div class="o_MobileMessagingNavbar d-flex flex-shrink-0 border-top bg-view shadow-lg" t-attf-class="{{ className }}" t-ref="root">
                <t t-foreach="mobileMessagingNavbarView.tabs" t-as="tab" t-key="tab.id">
                    <div class="o_MobileMessagingNavbar_tab d-flex flex-column align-items-center flex-grow-1 p-2" t-att-class="{ 'o-active text-primary': mobileMessagingNavbarView.activeTabId === tab.id, 'border-start': tab_index !== 0 }" t-on-click="ev =&gt; mobileMessagingNavbarView.onClick(tab.id, ev)" t-att-data-tab-id="tab.id">
                        <t t-if="tab.icon">
                            <span class="o_MobileMessagingNavbar_tabIcon fs-4" t-att-class="tab.icon"/>
                        </t>
                        <span class="o_MobileMessagingNavbar_tabLabel small"><t t-esc="tab.label"/></span>
                    </div>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.NotificationAlert" owl="1">
        <div t-if="messaging and messaging.isNotificationBlocked" class="o_NotificationAlert alert alert-primary d-flex justify-content-center" t-attf-class="{{ className }}" t-ref="root">
            Odoo Push notifications have been blocked. Go to your browser settings to allow them.
        </div>
    </t>

<t t-name="mail.NotificationAlertContainer" owl="1">
        <NotificationAlert/>
    </t>

<t t-name="mail.NotificationGroup" owl="1">
        <t t-if="notificationGroupView">
            <div class="o_NotificationListItem o_NotificationGroup d-flex flex-shrink-0 align-items-center p-1 cursor-pointer" t-attf-class="{{ className }}" t-on-click="notificationGroupView.onClick" t-ref="root">
                <div class="o_NotificationListItem_sidebar o_NotificationGroup_sidebar m-1">
                    <div class="o_NotificationListItem_imageContainer o_NotificationGroup_imageContainer o_NotificationGroup_sidebarItem position-relative">
                        <img class="o_NotificationListItem_image o_NotificationGroup_image w-100 h-100 rounded-circle" t-att-src="notificationGroupView.imageSrc" alt="Message delivery failure image"/>
                    </div>
                </div>
                <div class="o_NotificationListItem_content o_NotificationGroup_content d-flex flex-column flex-grow-1 align-self-start m-2">
                    <div class="o_NotificationGroup_header o_NotificationListItem_header d-flex">
                        <span class="o_NotificationListItem_name o_NotificationGroup_name text-truncate fw-bold" t-att-class="{ 'o-mobile fs-5': messaging.device.isSmall }">
                            <t t-esc="notificationGroupView.notificationGroup.res_model_name"/>
                        </span>
                        <t t-if="notificationGroupView.notificationGroup.notifications.length &gt; 1">
                            <span class="o_NotificationListItem_counter o_NotificationGroup_counter mx-1 fw-bold">
                                (<t t-esc="notificationGroupView.notificationGroup.notifications.length"/>)
                            </span>
                        </t>
                        <span class="flex-grow-1"/>
                        <t t-if="notificationGroupView.notificationGroup.date">
                            <small class="o_NotificationListItem_date o_NotificationGroup_date flex-shrink-0 text-500">
                                <t t-esc="notificationGroupView.notificationGroup.date.fromNow()"/>
                            </small>
                        </t>
                    </div>
                    <div class="o_NotificationGroup_core d-flex align-items-baseline">
                        <span class="o_NotificationListItem_coreItem o_NotificationListItem_inlineText o_NotificationGroup_coreItem o_NotificationGroup_inlineText me-2 text-truncate">
                            <t t-if="notificationGroupView.notificationGroup.notification_type === 'email'">
                                An error occurred when sending an email.
                            </t>
            <t t-if="notificationGroupView.notificationGroup.notification_type === 'snail'">
                An error occurred when sending a letter with Snailmail.
            </t>
                        </span>
                        <span class="flex-grow-1"/>
                        <span class="o_NotificationListItem_coreItem o_NotificationListItem_markAsRead o_NotificationGroup_coreItem o_NotificationGroup_markAsRead fa fa-check d-flex flex-shrink-0 ms-2 text-600 opacity-50 opacity-100-hover" title="Discard message delivery failures" t-on-click="notificationGroupView.onClickMarkAsRead" t-ref="markAsRead"/>
                    </div>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.NotificationList" owl="1">
        <t t-if="notificationListView">
            <div class="o_NotificationList d-flex flex-column overflow-auto" t-att-class="{ 'o-empty justify-content-center': notificationListView.notificationViews.length === 0 }" t-attf-class="{{ className }}" t-ref="root">
                <t t-if="notificationListView.notificationViews.length === 0">
                    <div class="o_NotificationList_noConversation d-flex align-items-center justify-content-center py-4 px-2 text-muted">
                        No conversation yet...
                    </div>
                </t>
                <t t-else="">
                    <t t-foreach="notificationListView.notificationViews" t-as="notificationView" t-key="notificationView.localId">
                        <t t-if="notificationView.constructor.name === 'ChannelPreviewView'">
                            <t t-if="notificationView and notificationView.swiperView">
                <SwiperView record="notificationView.swiperView"/>
            </t>
            <t t-else=""><ChannelPreviewView className="'o_NotificationList_preview'" classNameObj="{ 'o-isDeviceSmall p-2': messaging.device.isSmall }" record="notificationView"/>
                        </t>
        </t>
                        <t t-if="notificationView.constructor.name === 'ThreadNeedactionPreviewView'">
                            <t t-if="notificationView and notificationView.swiperView">
                <SwiperView record="notificationView.swiperView"/>
            </t>
            <t t-else=""><ThreadNeedactionPreview className="'o_NotificationList_preview'" classNameObj="{ 'o-isDeviceSmall p-2': messaging.device.isSmall }" record="notificationView"/>
                        </t>
        </t>
                        <t t-if="notificationView.constructor.name === 'NotificationGroupView'">
                            <t t-if="notificationView and notificationView.swiperView">
                <SwiperView record="notificationView.swiperView"/>
            </t>
            <t t-else=""><NotificationGroup className="'o_NotificationList_group'" classNameObj="{ 'o-isDeviceSmall p-2': messaging.device.isSmall }" record="notificationView"/>
                        </t>
        </t>
                        <t t-if="notificationView.constructor.name === 'NotificationRequestView'">
                            <NotificationRequest className="'o_NotificationList_notificationRequest'" classNameObj="{ 'o-isDeviceSmall p-2': messaging.device.isSmall }" record="notificationView"/>
                        </t>
                        <t t-if="!notificationView_last">
                            <div class="o_NotificationList_separator flex-shrink-0 w-100 border-bottom"/>
                        </t>
                    </t>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.NotificationMessageView" owl="1">
        <div class="o_NotificationMessageView d-flex justify-content-center" t-ref="root">
            <div class="flex-grow-1"/>
            <div class="text-500 small px-3">
                <span class="d-inline" t-esc="notificationMessageView.message.authorName"/> <t t-out="notificationMessageView.message.prettyBodyAsMarkup"/>
            </div>
            <div class="flex-grow-1"/>
        </div>
    </t>
<t t-name="mail.NotificationRequest" owl="1">
        <t t-if="notificationRequestView">
            <div class="o_NotificationListItem o_NotificationRequest d-flex flex-shrink-0 align-items-center p-1 cursor-pointer" t-attf-class="{{ className }}" t-on-click="_onClick" t-ref="root">
                <div class="o_NotificationListItem_sidebar o_NotificationRequest_sidebar m-1">
                    <div class="o_NotificationListItem_imageContainer o_NotificationRequest_imageContainer o_NotificationRequest_sidebarItem position-relative">
                        <img class="o_NotificationListItem_image o_NotificationRequest_image w-100 h-100 rounded-circle" t-att-src="messaging.partnerRoot.avatarUrl" alt="Avatar of OdooBot"/>
                        <PersonaImStatusIcon t-if="notificationRequestView.personaImStatusIconView" className="'o_NotificationListItem_personaImStatusIcon o_NotificationRequest_personaImStatusIcon position-absolute bottom-0 end-0 d-flex align-items-center justify-content-center'" classNameObj="{ 'o-isDeviceSmall': messaging.device.isSmall, 'small': !messaging.device.isSmall }" record="notificationRequestView.personaImStatusIconView"/>
                    </div>
                </div>
                <div class="o_NotificationListItem_content o_NotificationRequest_content d-flex flex-column flex-grow-1 align-self-start m-2">
                    <div class="o_NotificationListItem_header o_NotificationRequest_header d-flex">
                        <span class="o_NotificationListItem_name o_NotificationRequest_name text-truncate fw-bold" t-att-class="{ 'o-isDeviceSmall fs-5': messaging.device.isSmall }">
                            <t t-esc="notificationRequestView.headerText"/>
                        </span>
                    </div>
                    <div class="o_NotificationRequest_core">
                        <span class="o_NotificationListItem_coreItem o_NotificationListItem_inlineText o_NotificationRequest_coreItem o_NotificationRequest_inlineText text-truncate">
                            Enable desktop notifications to chat.
                        </span>
                    </div>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.PersonaImStatusIcon" owl="1">
            <span class="o_PersonaImStatusIcon d-flex flex-column fa-stack" t-att-class="{                     'o-away': personaImStatusIconView.persona.im_status === 'away',                     'o-bot': messaging.partnerRoot.persona === personaImStatusIconView.persona,                     'o-has-open-chat cursor-pointer': props.hasOpenChat,                     'o-offline': personaImStatusIconView.persona.im_status === 'offline',                     'o-online': personaImStatusIconView.persona.im_status === 'online',                 }" t-attf-class="{{ className }}" t-on-click="_onClick" t-ref="root" name="root">
                <t t-if="props.hasBackground">
                    <i class="o_PersonaImStatusIcon_outerBackground fa fa-circle fa-stack-1x"/>
                    <i class="o_PersonaImStatusIcon_innerBackground fa fa-circle fa-stack-1x"/>
                </t>
                <t t-if="personaImStatusIconView.persona.im_status === 'online'">
                    <i class="o_PersonaImStatusIcon_icon o-online fa fa-circle fa-stack-1x text-primary" title="Online" role="img" aria-label="User is online"/>
                </t>
                <t t-if="personaImStatusIconView.persona.im_status === 'away'">
                    <i class="o_PersonaImStatusIcon_icon o-away fa fa-circle fa-stack-1x text-warning" title="Idle" role="img" aria-label="User is idle"/>
                </t>
                <t t-if="personaImStatusIconView.persona.im_status === 'offline'">
                    <i class="o_PersonaImStatusIcon_icon o-offline fa fa-circle-o fa-stack-1x text-700" title="Offline" role="img" aria-label="User is offline"/>
                </t>
                <t t-if="personaImStatusIconView.persona === messaging.partnerRoot.persona">
                    <i class="o_PersonaImStatusIcon_icon o-bot fa fa-heart fa-stack-1x text-primary" title="Bot" role="img" aria-label="User is a bot"/>
                </t>
            <t t-if="personaImStatusIconView.persona.im_status === 'leave_online'">
                <i class="o_PersonaImStatusIcon_icon o-online fa fa-plane fa-stack-1x text-primary" title="Online" role="img" aria-label="User is online"/>
            </t>
            <t t-if="personaImStatusIconView.persona.im_status === 'leave_away'">
                <i class="o_PersonaImStatusIcon_icon o-away fa fa-plane fa-stack-1x text-warning" title="Away" role="img" aria-label="User is away"/>
            </t>
            <t t-if="personaImStatusIconView.persona.im_status === 'leave_offline'">
                <i class="o_PersonaImStatusIcon_icon o-offline fa fa-plane fa-stack-1x text-700" title="Out of office" role="img" aria-label="User is out of office"/>
            </t>
            </span>
    </t>

<t t-name="mail.PopoverManager" owl="1">
        <div class="o_PopoverManager" t-attf-class="{{ className }}" t-ref="root">
            <t t-foreach="popoverManager.popoverViews" t-as="popoverView" t-key="popoverView.localId">
                <PopoverView className="'o_PopoverManager_popover'" record="popoverView"/>
            </t>
        </div>
    </t>

<t t-name="mail.PopoverManagerContainer" owl="1">
        <PopoverManager t-if="messaging and messaging.popoverManager" record="messaging.popoverManager"/>
    </t>
<t t-name="mail.PopoverView" owl="1">
        <t t-if="popoverView">
            <div class="o_PopoverView border bg-view shadow-sm" t-attf-class="{{ className }}" t-ref="root">
                <t t-component="constructor.components[popoverView.contentComponentName]" className="popoverView.contentClassName" t-props="{ record: popoverView.content }"/>
            </div>
        </t>
    </t>

<t t-name="mail.ThreadIcon" owl="1">
        <t t-if="thread">
            <div class="o_ThreadIcon d-flex justify-content-center flex-shrink-0" t-attf-class="{{ className }}" t-ref="root" name="root">
                <t t-if="thread.channel and thread.channel.channel_type === 'channel'">
                    <t t-if="thread.authorizedGroupFullName">
                        <div class="o_ThreadIcon_groupRestrictedChannel fa fa-fw fa-hashtag" t-att-title="thread.accessRestrictedToGroupText"/>
                    </t>
                    <t t-if="!thread.authorizedGroupFullName">
                        <div class="o_ThreadIcon_publicChannel fa fa-fw fa-globe" title="Public Channel"/>
                    </t>
                </t>
                <t t-elif="thread.channel and thread.channel.channel_type === 'chat' and thread.channel.correspondent">
                    <t t-if="thread.orderedOtherTypingMembers.length &gt; 0">
                        <ThreadTypingIcon className="'o_ThreadIcon_typing flex-grow-1'" animation="'pulse'" title="thread.typingStatusText"/>
                    </t>
                    <t t-elif="thread.channel.correspondent.im_status === 'online'">
                        <div class="o_ThreadIcon_online fa fa-fw fa-circle" title="Online"/>
                    </t>
                    <t t-elif="thread.channel.correspondent.im_status === 'offline'">
                        <div class="o_ThreadIcon_offline fa fa-fw fa-circle-o" title="Offline"/>
                    </t>
                    <t t-elif="thread.channel.correspondent.im_status === 'away'">
                        <div class="o_ThreadIcon_away fa fa-fw fa-circle text-warning" title="Away"/>
                    </t>
                    <t t-elif="thread.channel.correspondent === messaging.partnerRoot">
                        <div class="o_ThreadIcon_online fa fa-fw fa-heart" title="Bot"/>
                    </t>
            <t t-elif="thread.channel.correspondent.im_status === 'leave_online'">
                <div class="o_ThreadIcon_online fa fa-fw fa-plane" title="Online"/>
            </t>
            <t t-elif="thread.channel.correspondent.im_status === 'leave_away'">
                <div class="o_ThreadIcon_away fa fa-fw fa-plane text-warning" title="Away"/>
            </t>
            <t t-elif="thread.channel.correspondent.im_status === 'leave_offline'">
                <div class="o_ThreadIcon_offline fa fa-fw fa-plane" title="Out of office"/>
            </t>
                    <t t-else="" name="noImStatusCondition">
                        <div class="o_ThreadIcon_noImStatus fa fa-fw fa-question-circle" title="No IM status available"/>
                    </t>
                </t>
                <t t-elif="thread.channel and thread.channel.channel_type === 'group'">
                    <div class="o_ThreadIcon fa fa-fw fa-users" title="Grouped Chat"/>
                </t>
                <t t-elif="thread.mailbox">
                    <t t-if="thread.mailbox === messaging.inbox">
                        <div class="o_ThreadIcon_mailboxInbox fa fa-fw fa-inbox"/>
                    </t>
                    <t t-elif="thread.mailbox === messaging.starred">
                        <div class="o_ThreadIcon_mailboxStarred fa fa-fw fa-star-o"/>
                    </t>
                    <t t-elif="thread.mailbox === messaging.history">
                        <div class="o_ThreadIcon_mailboxHistory fa fa-fw fa-history"/>
                    </t>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.ThreadNeedactionPreview" owl="1">
        <t t-if="threadNeedactionPreviewView">

            <div class="o_NotificationListItem o_ThreadNeedactionPreview d-flex flex-shrink-0 align-items-center p-1 cursor-pointer" t-attf-class="{{ className }}" t-on-click="threadNeedactionPreviewView.onClick" t-att-data-thread-id="threadNeedactionPreviewView.thread.id" t-att-data-thread-model="threadNeedactionPreviewView.thread.model" t-ref="root">
                <div class="o_NotificationListItem_sidebar o_ThreadNeedactionPreview_sidebar m-1">
                    <div class="o_NotificationListItem_imageContainer o_ThreadNeedactionPreview_imageContainer o_ThreadNeedactionPreview_sidebarItem position-relative">
                        <img class="o_NotificationListItem_image o_ThreadNeedactionPreview_image w-100 h-100" t-att-src="image()" alt="Thread Image"/>
                        <t t-if="threadNeedactionPreviewView.personaImStatusIconView">
                            <PersonaImStatusIcon className="'o_NotificationListItem_personaImStatusIcon o_ThreadNeedactionPreview_personaImStatusIcon position-absolute bottom-0 end-0 d-flex align-items-center justify-content-center'" classNameObj="{                                     'o-isDeviceSmall': messaging.device.isSmall,                                     'small': !messaging.device.isSmall,                                 }" record="threadNeedactionPreviewView.personaImStatusIconView"/>
                        </t>
                    </div>
                </div>
                <div class="o_NotificationListItem_content o_ThreadNeedactionPreview_content d-flex flex-column flex-grow-1 align-self-start m-2">
                    <div class="o_NotificationListItem_header o_ThreadNeedactionPreview_header d-flex">
                        <span class="o_NotificationListItem_name o_ThreadNeedactionPreview_name text-truncate fw-bold" t-att-class="{ 'o-isDeviceSmall fs-5': messaging.device.isSmall }">
                            <t t-esc="threadNeedactionPreviewView.thread.displayName"/>
                        </span>
                        <t t-if="threadNeedactionPreviewView.thread.needactionMessagesAsOriginThread.length &gt; 1">
                            <span class="o_NotificationListItem_counter o_ThreadNeedactionPreview_counter mx-1 fw-bold">
                                (<t t-esc="threadNeedactionPreviewView.thread.needactionMessagesAsOriginThread.length"/>)
                            </span>
                        </t>
                        <span class="flex-grow-1"/>
                        <t t-if="threadNeedactionPreviewView.thread.lastNeedactionMessageAsOriginThread and threadNeedactionPreviewView.thread.lastNeedactionMessageAsOriginThread.date">
                            <small class="o_NotificationListItem_date o_ThreadNeedactionPreview_date flex-shrink-0 text-500">
                                <t t-esc="threadNeedactionPreviewView.thread.lastNeedactionMessageAsOriginThread.date.fromNow()"/>
                            </small>
                        </t>
                    </div>
                    <div class="o_ThreadNeedactionPreview_core d-flex align-items-baseline">
                        <span class="o_NotificationListItem_coreItem o_NotificationListItem_inlineText o_ThreadNeedactionPreview_coreItem o_ThreadNeedactionPreview_inlineText me-2 text-truncate" t-att-class="{ 'o-empty': threadNeedactionPreviewView.isEmpty }">
                            <t t-if="threadNeedactionPreviewView.lastTrackingValue">
                                <TrackingValue value="threadNeedactionPreviewView.lastTrackingValue"/>
                            </t>
                            <t t-else="">
                                <t t-if="threadNeedactionPreviewView.messageAuthorPrefixView">
                                    <MessageAuthorPrefix record="threadNeedactionPreviewView.messageAuthorPrefixView"/>
                                </t>
                                <span class="o_ThreadNeedactionPreview_messageBody" t-esc="threadNeedactionPreviewView.inlineLastNeedactionMessageAsOriginThreadBody"/>
                            </t>
                        </span>
                        <span class="flex-grow-1"/>
                        <span class="o_NotificationListItem_coreItem o_NotificationListItem_markAsRead o_ThreadNeedactionPreview_coreItem o_ThreadNeedactionPreview_markAsRead fa fa-check d-flex flex-shrink-0 ms-2 text-600 opacity-50 opacity-100-hover" title="Mark as Read" t-on-click="threadNeedactionPreviewView.onClickMarkAsRead" t-ref="markAsRead"/>
                    </div>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.ThreadTextualTypingStatus" owl="1">
        <t t-if="thread">
            <div class="o_ThreadTextualTypingStatus d-flex" t-attf-class="{{ className }}" t-ref="root">
                <t t-if="thread.orderedOtherTypingMembers.length &gt; 0">
                    <ThreadTypingIcon animation="'pulse'" size="'medium'"/>
                    <span class="o_ThreadTextualTypingStatus_separator ms-1"/>
                    <span class="text-truncate" t-esc="thread.typingStatusText"/>
                </t>
            </div>
        </t>
    </t>

<t t-name="mail.ThreadTypingIcon" owl="1">
        <div class="o_ThreadTypingIcon d-flex align-items-center" t-attf-class="{{ className }}" t-att-title="props.title" t-ref="root">
            <span class="o_ThreadTypingIcon_dot o_ThreadTypingIcon_dot1 d-flex flex-shrink-0 rounded-pill bg-500" t-att-class="{                 'o-animationBounce': props.animation === 'bounce',                 'o-animationPulse': props.animation === 'pulse',                 'o-sizeMedium': props.size === 'medium',                 'o-sizeSmall': props.size === 'small',             }"/>
            <span class="o_ThreadTypingIcon_separator flex-grow-1 flex-shrink-0"/>
            <span class="o_ThreadTypingIcon_dot o_ThreadTypingIcon_dot2 d-flex flex-shrink-0 rounded-pill bg-500" t-att-class="{                 'o-animationBounce': props.animation === 'bounce',                 'o-animationPulse': props.animation === 'pulse',                 'o-sizeMedium': props.size === 'medium',                 'o-sizeSmall': props.size === 'small',             }"/>
            <span class="o_ThreadTypingIcon_separator flex-grow-1 flex-shrink-0"/>
            <span class="o_ThreadTypingIcon_dot o_ThreadTypingIcon_dot3 d-flex flex-shrink-0 rounded-pill bg-500" t-att-class="{                 'o-animationBounce': props.animation === 'bounce',                 'o-animationPulse': props.animation === 'pulse',                 'o-sizeMedium': props.size === 'medium',                 'o-sizeSmall': props.size === 'small',             }"/>
        </div>
    </t>

<t t-name="mail.ThreadView" owl="1">
        <t t-if="threadView">
            <div class="o_ThreadView position-relative d-flex flex-column bg-100" t-att-class="threadView.extraClass" t-attf-class="{{ className }}" t-att-data-correspondent-id="threadView.thread.channel and threadView.thread.channel.correspondent and threadView.thread.channel.correspondent.id" t-att-data-thread-id="threadView.thread and threadView.thread.id" t-att-data-thread-model="threadView.thread and threadView.thread.model" t-on-focusin="threadView.onFocusin" t-ref="root">
                <t t-if="threadView.topbar">
                    <ThreadViewTopbar className="'border-bottom'" record="threadView.topbar"/>
                </t>
                <div class="o_ThreadView_bottomPart d-flex flex-grow-1" t-att-class="{ 'border-start border-end': threadView.threadViewer.chatWindow }">
                    <div class="o_ThreadView_core d-flex flex-column flex-grow-1">
                        <t t-if="threadView.callView">
                            <CallView record="threadView.callView"/>
                        </t>
            <t t-if="threadView.thread.channel and threadView.thread.channel.correspondent and threadView.thread.channel.correspondent.outOfOfficeText">
                <div class="o_ThreadView_outOfOffice alert alert-primary" t-esc="threadView.thread.channel.correspondent.outOfOfficeText" role="alert"/>
            </t>
                        <t t-if="threadView.isLoading and !threadView.threadCache.isLoaded" name="loadingCondition">
                            <div class="o_ThreadView_loading d-flex align-self-center flex-grow-1 align-items-center">
                                <span><i class="o_ThreadView_loadingIcon fa fa-circle-o-notch fa-spin me-1" title="Loading..." role="img"/>Loading...</span>
                            </div>
                        </t>
                        <t t-elif="threadView.messageListView">
                            <MessageList className="'o_ThreadView_messageList flex-grow-1'" record="threadView.messageListView"/>
                        </t>
                        <t t-elif="threadView.threadCache.hasLoadingFailed">
                            <div class="o_ThreadView_loadingFailed d-flex flex-grow-1 align-items-center justify-content-center flex-column">
                                <div class="o_ThreadView_loadingFailedText">
                                    An error occurred while fetching messages.
                                </div>
                                <button class="o_ThreadView_loadingFailedRetryButton btn btn-link" t-on-click="threadView.onClickRetryLoadMessages">
                                    Click here to retry
                                </button>
                            </div>
                        </t>
                        <t t-elif="threadView.composerView">
                            <div class="flex-grow-1"/>
                        </t>
                        <t t-if="threadView.composerView">
                            <Composer className="'o_ThreadView_composer flex-shrink-0'" record="threadView.composerView"/>
                        </t>
                    </div>
                    <t t-if="threadView.channelMemberListView">
                        <ChannelMemberList className="'o_ThreadView_channelMemberList flex-shrink-0 border-start'" record="threadView.channelMemberListView"/>
                    </t>
                    <t t-if="threadView.isCallSettingsMenuOpen and threadView.thread.hasCallFeature">
                        <CallSettingsMenu className="'o_ThreadView_callSettingsMenu flex-shrink-0 border-start'" record="threadView.callSettingsMenu"/>
                    </t>
                </div>
            </div>
        </t>
    </t>

<t t-name="mail.ThreadViewTopbar" owl="1">
        <t t-if="threadViewTopbar">
            <div class="o_ThreadViewTopbar d-flex flex-shrink-0 w-100 px-3 bg-100" t-attf-class="{{ className }}" t-ref="root">
                <t t-if="threadViewTopbar.thread">
                    <ThreadIcon className="'o_ThreadViewTopbar_threadIcon me-2 align-self-center'" thread="threadViewTopbar.thread"/>
                </t>
                <div class="o_ThreadViewTopbar_title d-flex flex-grow-1 align-self-center align-items-center">
                    <t t-if="threadViewTopbar.thread">
                        <t t-if="!threadViewTopbar.isEditingThreadName">
                            <div class="o_ThreadViewTopbar_threadName o_ThreadViewTopbar_editableItem lead flex-shrink-0 px-1 border text-truncate fw-bold" t-att-title="threadViewTopbar.thread.displayName" t-on-click="threadViewTopbar.onClickTopbarThreadName" t-on-mouseenter="threadViewTopbar.onMouseEnterTopbarThreadName" t-on-mouseleave="threadViewTopbar.onMouseLeaveTopbarThreadName" t-attf-class="{{ threadViewTopbar.isMouseOverThreadName and !messaging.isCurrentUserGuest ? 'o-threadNameEditable bg-view' : 'border-light' }}">
                                <t t-esc="threadViewTopbar.thread.displayName"/>
                            </div>
                        </t>
                        <t t-if="threadViewTopbar.isEditingThreadName">
                            <input class="o_ThreadViewTopbar_threadNameInput form-control lead fw-bold" type="text" t-att-value="threadViewTopbar.pendingThreadName" t-on-input="threadViewTopbar.onInputThreadNameInput" t-on-keydown="threadViewTopbar.onKeyDownThreadNameInput" t-ref="threadNameInput"/>
                        </t>
                    </t>
                    <t t-if="!threadViewTopbar.thread">
                        <div class="o_ThreadViewTopbar_threadName lead flex-shrink-0 px-1 text-truncate fw-bold">
                            Discuss
                        </div>
                    </t>
                    <t t-if="threadViewTopbar.hasDescriptionArea">
                        <div class="o_ThreadViewTopbar_threadDescriptionSeparator flex-shrink-0 mx-2 py-2 border-start"/>
                        <t t-if="!threadViewTopbar.isEditingThreadDescription">
                            <t t-if="threadViewTopbar.thread.description">
                                <div class="o_ThreadViewTopbar_threadDescription o_ThreadViewTopbar_editableItem px-1 border text-truncate" t-att-title="threadViewTopbar.thread.description" t-on-click="threadViewTopbar.onClickTopbarThreadDescription" t-on-mouseenter="threadViewTopbar.onMouseEnterTopbarThreadDescription" t-on-mouseleave="threadViewTopbar.onMouseLeaveTopbarThreadDescription" t-attf-class="{{ threadViewTopbar.isDescriptionHighlighted ? 'o-threadDescriptionEditable bg-view' : 'border-light' }}">
                                    <t t-esc="threadViewTopbar.thread.description"/>
                                </div>
                            </t>
                            <t t-if="!threadViewTopbar.thread.description">
                                <div class="o_ThreadViewTopbar_threadAddDescriptionEmptyLabel text-truncate text-900 opacity-50 opacity-100-hover cursor-pointer" t-on-click="threadViewTopbar.onClickTopbarThreadDescription">
                                    Add a description
                                </div>
                            </t>
                        </t>
                        <t t-if="threadViewTopbar.isEditingThreadDescription">
                            <input class="o_ThreadViewTopbar_threadDescriptionInput form-control" type="text" t-att-value="threadViewTopbar.pendingThreadDescription" t-on-input="threadViewTopbar.onInputThreadDescriptionInput" t-on-keydown="threadViewTopbar.onKeyDownThreadDescriptionInput" t-ref="threadDescriptionInput"/>
                        </t>
                    </t>
                </div>
                <div class="o_ThreadViewTopbar_actions d-flex align-items-center ms-1">
                    <t t-if="threadViewTopbar.thread and threadViewTopbar.thread === messaging.inbox.thread">
                        <button class="o_ThreadViewTopbar_markAllReadButton btn btn-secondary" t-att-disabled="threadViewTopbar.threadView.messages.length === 0" t-on-click="threadViewTopbar.onClickInboxMarkAllAsRead">Mark all read</button>
                    </t>
                    <t t-if="threadViewTopbar.thread and threadViewTopbar.thread === messaging.starred.thread">
                        <button class="o_ThreadViewTopbar_unstarAllButton btn btn-secondary" t-att-disabled="threadViewTopbar.threadView.messages.length === 0" t-on-click="threadViewTopbar.onClickUnstarAll">Unstar all</button>
                    </t>
                    <t t-if="threadViewTopbar.thread and threadViewTopbar.thread.hasCallFeature and threadViewTopbar.thread.rtcSessions.length === 0">
                        <button class="o_ThreadViewTopbar_callButton o_ThreadViewTopbar_button btn px-2 border-none rounded shadow-none" t-att-disabled="threadViewTopbar.thread.hasPendingRtcRequest" title="Start a Call" t-on-click="threadViewTopbar.onClickPhone">
                            <i class="fa fa-lg fa-phone text-700"/>
                        </button>
                        <button class="o_ThreadViewTopbar_callButton o_ThreadViewTopbar_button btn px-2 border-none rounded shadow-none" t-att-disabled="threadViewTopbar.thread.hasPendingRtcRequest" title="Start a Video Call" t-on-click="threadViewTopbar.onClickCamera">
                            <i class="fa fa-lg fa-video-camera text-700"/>
                        </button>
                    </t>
                    <t t-if="threadViewTopbar.thread and threadViewTopbar.thread.hasInviteFeature">
                        <button class="o_ThreadViewTopbar_inviteButton o_ThreadViewTopbar_button btn px-2 border-none rounded shadow-none" t-attf-class="{{ threadViewTopbar.invitePopoverView ? 'o-isActive' : '' }}" title="Add users" t-on-click="threadViewTopbar.onClickInviteButton" t-ref="inviteButton">
                            <i class="fa fa-lg fa-user-plus text-700"/>
                        </button>
                    </t>

                    <t t-if="!messaging.isCurrentUserGuest and threadViewTopbar.thread and threadViewTopbar.thread.hasMemberListFeature and threadViewTopbar.threadView.hasMemberList and !threadViewTopbar.threadView.isMemberListOpened">
                        <button class="o_ThreadViewTopbar_showMemberListButton o_ThreadViewTopbar_button btn px-2 border-none rounded shadow-none" title="Show Member List" t-on-click="threadViewTopbar.onClickShowMemberList">
                            <i class="fa fa-lg fa-users text-700"/>
                        </button>
                    </t>
                    <t t-if="threadViewTopbar.thread and threadViewTopbar.thread.hasMemberListFeature and threadViewTopbar.threadView.hasMemberList and threadViewTopbar.threadView.isMemberListOpened">
                        <button class="o_ThreadViewTopbar_hideMemberListButton o_ThreadViewTopbar_button o-isActive btn px-2 border-none rounded shadow-none" title="Hide Member List" t-on-click="threadViewTopbar.onClickHideMemberList">
                            <i class="fa fa-lg fa-users text-700"/>
                        </button>
                    </t>
                    <t t-if="threadViewTopbar.thread and threadViewTopbar.thread.hasCallFeature and !threadViewTopbar.threadView.isCallSettingsMenuOpen">
                        <button class="o_ThreadViewTopbar_openCallSettingsButton o_ThreadViewTopbar_button btn px-2 border-none rounded shadow-none" title="Show Call Settings" t-on-click="threadViewTopbar.onClickShowCallSettingsMenu">
                            <i class="fa fa-lg fa-gear text-700"/>
                        </button>
                    </t>
                    <t t-if="threadViewTopbar.thread and threadViewTopbar.thread.hasCallFeature and threadViewTopbar.threadView.isCallSettingsMenuOpen">
                        <button class="o_ThreadViewTopbar_button o-isActive btn px-2 border-none rounded shadow-none" title="Hide Call Settings" t-on-click="threadViewTopbar.onClickHideCallSettingsMenu">
                            <i class="fa fa-lg fa-gear text-700"/>
                        </button>
                    </t>
                </div>

                <t t-if="threadViewTopbar.threadView.threadViewer.discussPublicView and !messaging.device.isSmall">
                    <div class="o_ThreadViewTopbar_userInfo d-flex align-items-center">
                        <img class="o_ThreadViewTopbar_avatar mx-1 rounded-circle o_object_fit_cover" t-att-src="threadViewTopbar.avatarUrl" alt="Avatar"/>
                        <t t-if="!threadViewTopbar.isEditingGuestName">
                            <span class="o_ThreadViewTopbar_userName o_ThreadViewTopbar_editableItem px-1 border fw-bold text-truncate" t-attf-class="{{ threadViewTopbar.isMouseOverUserName and messaging.isCurrentUserGuest ? 'o-userNameEditable bg-view' : 'border-light' }}" t-on-click="threadViewTopbar.onClickUserName" t-on-mouseenter="threadViewTopbar.onMouseEnterUserName" t-on-mouseleave="threadViewTopbar.onMouseLeaveUserName">
                                <t t-esc="messaging.isCurrentUserGuest ? messaging.currentGuest.name : messaging.currentUser.nameOrDisplayName"/>
                            </span>
                        </t>
                        <t t-if="threadViewTopbar.isEditingGuestName">
                            <input class="o_ThreadViewTopbar_guestNameInput form-control" type="text" t-att-value="messaging.currentGuest.name" t-on-input="threadViewTopbar.onInputGuestNameInput" t-on-keydown="threadViewTopbar.onKeyDownGuestNameInput" t-ref="guestNameInput"/>
                        </t>
                    </div>
                </t>
            </div>
        </t>
    </t>
<t t-name="mail.TrackingValue" owl="1">
        <div class="o_TrackingValue d-flex align-items-center flex-wrap mb-1" t-attf-class="{{ className }}" role="group" t-ref="root">
            <span class="o_TrackingValue_oldValue me-1 px-1 text-muted fw-bold" t-esc="trackingValue.oldValue.formattedValueOrNone" t-att-class="{ 'fst-italic': !trackingValue.oldValue.formattedValue }"/>
            <i class="o_TrackingValue_separator fa fa-long-arrow-right mx-1 text-600" title="Changed" role="img" aria-label="Changed"/>
            <span class="o_TrackingValue_newValue me-1 fw-bold text-info" t-esc="trackingValue.newValue.formattedValueOrNone" t-att-class="{ 'fst-italic': !trackingValue.newValue.formattedValue }"/>
            <span class="o_TrackingValue_fieldName ms-1 fst-italic text-muted" t-esc="'(' + trackingValue.formattedChangedField + ')'"/>
        </div>
    </t>
<t t-name="mail.WebClientViewAttachmentView" owl="1">
        <t t-if="webClientViewAttachmentView.thread.mainAttachment">
            <t t-if="!webClientViewAttachmentView.thread.mainAttachment.isPdf">
                <h3 class="mt0 mb8 ps-2 text-muted float-end"><t t-esc="webClientViewAttachmentView.thread.mainAttachment.filename"/></h3>
            </t>
            <div t-if="webClientViewAttachmentView.thread.mainAttachment.isImage" class="o_attachment_preview_img">
                <img id="attachment_img" class="img img-fluid d-block" t-attf-src="/web/image/#{webClientViewAttachmentView.thread.mainAttachment.id}?unique=1"/>
            </div>
            <iframe t-if="webClientViewAttachmentView.thread.mainAttachment.isPdf" class="mb48" t-attf-src="/web/static/lib/pdfjs/web/viewer.html?file=/web/content/#{webClientViewAttachmentView.thread.mainAttachment.id}?filename%3D#{window.encodeURIComponent(webClientViewAttachmentView.thread.mainAttachment.name)}" t-ref="iframeViewerPdf"/>
            <t t-if="webClientViewAttachmentView.thread.attachmentsInWebClientView.length &gt; 1">
                <a class="arrow o_move_previous text-center" href="#" t-on-click="webClientViewAttachmentView.onClickPrevious">
                    <span class="fa fa-chevron-left"/>
                </a>
                <a class="arrow o_move_next text-center" href="#" t-on-click="webClientViewAttachmentView.onClickNext">
                    <span class="fa fa-chevron-right"/>
                </a>
            </t>
        </t>
    </t>

<t t-name="mail.WebClientViewAttachmentViewContainer" owl="1">
        <t t-if="webClientViewAttachmentView and webClientViewAttachmentView.thread.attachmentsInWebClientView.length &gt; 0">
            <div class="o_attachment_preview_container">
                <WebClientViewAttachmentView record="webClientViewAttachmentView"/>
            </div>
        </t>
    </t>

<t t-name="mail.WelcomeView" owl="1">
        <t t-if="welcomeView">
            <div class="o_WelcomeView h-100 d-flex flex-column justify-content-center align-items-center bg-light" t-attf-class="{{ className }}" t-ref="root">
                <h1 class="fw-light">
                    <span t-if="welcomeView.callDemoView">You've been invited to a meeting!</span>
                    <span t-if="!welcomeView.callDemoView">You've been invited to a chat!</span>
                </h1>
                <h2 class="m-5" t-esc="messaging.companyName"/>
                <div class="d-flex justify-content-center">
                    <CallDemoView t-if="welcomeView.callDemoView" className="'me-5'" record="welcomeView.callDemoView"/>
                    <div class="d-flex flex-column justify-content-center">
                        <t t-if="messaging.currentGuest">
                            <label class="o_WelcomeView_guestNameInputLabel text-center fs-4" t-att-for="welcomeView.guestNameInputUniqueId">What's your name?</label>
                            <input class="form-control mb-3" type="text" placeholder="Your name" t-att-name="welcomeView.guestNameInputUniqueId" t-att-id="welcomeView.guestNameInputUniqueId" t-att-value="welcomeView.pendingGuestName" t-ref="guestNameInput" t-on-input="welcomeView.onInputGuestNameInput" t-on-keydown="welcomeView.onKeydownGuestNameInput"/>
                        </t>
                        <t t-if="messaging.currentUser">
                            <p class="o_WelcomeView_loggedAsStatus fs-4">Logged as <span t-esc="messaging.currentUser.nameOrDisplayName"/></p>
                        </t>
                        <button class="o_WelcomeView_joinButton btn btn-success fa-stack align-self-end p-0 rounded-circle fs-1 shadow" title="Join Channel" t-att-disabled="welcomeView.isJoinButtonDisabled" t-on-click="welcomeView.onClickJoinButton">
                            <i class="fa fa-phone fa-stack"/>
                        </button>
                    </div>
                </div>
            </div>
        </t>
    </t>

<t t-name="web.ActionSwiper" owl="1">
        <t t-if="props.onRightSwipe || props.onLeftSwipe">
            <div class="o_actionswiper" t-on-touchend="_onTouchEndSwipe" t-on-touchmove="_onTouchMoveSwipe" t-on-touchstart="_onTouchStartSwipe" t-ref="root">
                <div class="o_actionswiper_overflow_container position-relative overflow-hidden">
                    <div class="o_actionswiper_target_container" t-ref="targetContainer" t-att-style="state.containerStyle" t-att-class="{ o_actionswiper_swiping: state.isSwiping }">
                        <t t-slot="default"/>
                        <t t-if="localizedProps.onRightSwipe and (localizedProps.onRightSwipe.icon or localizedProps.onRightSwipe.bgColor)">
                            <div t-att-style="'max-width: ' + swipedDistance + 'px;'" class="o_actionswiper_right_swipe_area position-absolute overflow-hidden w-100 h-100 d-flex align-items-center justify-content-center rounded-end" t-att-class="localizedProps.onRightSwipe.bgColor">
                                <span><i class="fa fa-2x" t-att-class="localizedProps.onRightSwipe.icon"/></span>
                            </div>
                        </t>
                        <t t-if="localizedProps.onLeftSwipe and (localizedProps.onLeftSwipe.icon or localizedProps.onLeftSwipe.bgColor)">
                            <div t-att-style="'max-width: ' + -swipedDistance + 'px;'" class="o_actionswiper_left_swipe_area position-absolute overflow-hidden w-100 h-100 d-flex align-items-center justify-content-center rounded-start" t-att-class="localizedProps.onLeftSwipe.bgColor">
                                <span><i class="fa fa-2x" t-att-class="localizedProps.onLeftSwipe.icon"/></span>
                            </div>
                        </t>
                    </div>
                </div>
            </div>
        </t>
        <t t-else="">
            <t t-slot="default"/>
        </t>
    </t>
<t t-name="web.AutoComplete" owl="1">
        <div class="o-autocomplete dropdown" t-ref="root">
            <input type="text" t-att-id="props.id" class="o-autocomplete--input o_input" autocomplete="off" t-att-placeholder="props.placeholder" t-model="state.value" t-on-blur="onInputBlur" t-on-click.stop="onInputClick" t-on-change="onInputChange" t-on-input="debouncedOnInput" t-on-keydown="onInputKeydown" t-ref="input"/>
            <t t-if="isOpened and hasOptions">
                <ul class="o-autocomplete--dropdown-menu dropdown-menu ui-widget ui-autocomplete show" t-on-mousedown.prevent="" t-ref="sourcesList">
                    <t t-foreach="sources" t-as="source" t-key="source.id">
                        <t t-if="source.isLoading">
                            <li class="o-autocomplete--dropdown-item ui-menu-item">
                                <a href="#" class="dropdown-item ui-menu-item-wrapper">
                                    <i class="fa fa-spin fa-circle-o-notch"/> <t t-esc="source.placeholder"/>
                                </a>
                            </li>
                        </t>
                        <t t-else="">
                            <t t-foreach="source.options" t-as="option" t-key="option.id">
                                <li class="o-autocomplete--dropdown-item ui-menu-item" t-att-class="option.classList" t-on-mouseenter="() =&gt; this.onOptionMouseEnter([source_index, option_index])" t-on-mouseleave="() =&gt; this.onOptionMouseLeave([source_index, option_index])" t-on-click="() =&gt; this.onOptionClick([source_index, option_index])">
                                    <a href="#" class="dropdown-item ui-menu-item-wrapper text-truncate" t-att-class="{ 'ui-state-active': isActiveSourceOption([source_index, option_index]) }">
                                        <t t-if="source.optionTemplate">
                                            <t t-call="{{ source.optionTemplate }}"/>
                                        </t>
                                        <t t-else="">
                                            <t t-esc="option.label"/>
                                        </t>
                                    </a>
                                </li>
                            </t>
                        </t>
                    </t>
                </ul>
            </t>
        </div>
    </t>

<t t-name="web.CheckBox" owl="1">
    <div class="o-checkbox form-check" t-attf-class="{{ props.slots ? 'form-check' : '' }}" t-att-class="props.className" t-on-click="onClick" t-ref="root">
        <input t-att-id="props.id or id" type="checkbox" class="form-check-input" t-att-disabled="props.disabled" t-att-checked="props.value" t-att-name="props.name" t-on-change="onChange"/>
        <label t-att-for="props.id or id" class="form-check-label">
            <t t-slot="default"/>
        </label>
    </div>
</t>

<t t-name="web.ColorList" owl="1">
        <div class="o_colorlist d-flex flex-wrap align-items-center mw-100 gap-2" aria-atomic="true" t-ref="colorlist">
            <t t-if="!props.forceExpanded and !state.isExpanded">
                <button t-on-click="onToggle" role="menuitem" t-att-title="colors[props.selectedColor]" t-att-data-color="props.selectedColor" t-att-aria-label="colors[props.selectedColor]" t-attf-class="btn p-0 o_colorlist_toggler o_colorlist_item_color_{{ props.selectedColor }}"/>
            </t>
            <t t-else="" t-foreach="props.colors" t-as="colorId" t-key="colorId">
                <button t-on-click.prevent.stop="() =&gt; this.onColorSelected(colorId)" role="menuitem" t-att-title="colors[colorId]" t-att-data-color="colorId" t-att-aria-label="colors[colorId]" t-attf-class="btn p-0 o_colorlist_item_color_{{ colorId }} {{ colorId === props.selectedColor ? 'o_colorlist_selected' : '' }}"/>
            </t>
        </div>
    </t>

<t t-name="web.DefaultCommandItem" owl="1">
    <div class="o_command_default d-flex align-items-center justify-content-between px-4 py-2 cursor-pointer">
      <t t-slot="name"/>
      <t t-slot="focusMessage"/>
    </div>
  </t>

  <t t-name="web.HotkeyCommandItem" owl="1">
    <div class="o_command_hotkey d-flex align-items-center justify-content-between px-4 py-2 cursor-pointer">
      <t t-slot="name"/>
      <span>
        <t t-foreach="getKeysToPress(props)" t-as="key" t-key="key_index">
          <kbd t-out="key" class="d-inline-block px-3 py-1"/>
          <span t-if="!key_last"> + </span>
        </t>
      </span>
    </div>
  </t>

<t t-name="web.CommandPalette" owl="1">
    <Dialog header="false" footer="false" size="'md'" contentClass="'o_command_palette mt-5'">
      <div t-ref="root">
        <div class="o_command_palette_search input-group mb-2 px-4 py-3 border-bottom">
          <span t-if="state.namespace !== 'default'" class="o_namespace d-flex align-items-center me-1" t-out="state.namespace"/>
          <input class="form-control border-0 p-0" type="text" data-allow-hotkeys="true" t-att-value="state.searchValue" t-ref="autofocus" t-att-placeholder="state.placeholder" t-on-input="onSearchInput" t-on-keydown="onKeyDown"/>
          <div class="input-group-text border-0 bg-transparent">
              <i t-att-title="state.placeholder" role="img" t-att-aria-label="state.placeholder" class="oi oi-search"/>
          </div>
        </div>

        <div t-ref="listbox" class="o_command_palette_listbox position-relative overflow-auto">
          <div t-if="!state.commands.length" class="o_command_palette_listbox_empty px-4 py-3 fst-italic" t-out="state.emptyMessage"/>
          <t t-if="!isFuzzySearch" t-foreach="commandsByCategory" t-as="category" t-key="category.keyId">
            <div class="o_command_category px-0">
              <t t-foreach="category.commands" t-as="command" t-key="command.keyId">
                <t t-set="commandIndex" t-value="state.commands.indexOf(command)"/>
                <div t-attf-id="o_command_{{commandIndex}}" class="o_command" t-att-class="{ focused: state.selectedCommand === command }" t-on-click="(event) =&gt; this.onCommandClicked(event, commandIndex)" t-on-mouseenter="() =&gt; this.onCommandMouseEnter(commandIndex)" t-on-close="() =&gt; this.props.closeMe()">
                  <a t-att-href="command.href">
                    <t t-component="command.Component || DefaultCommandItem" name="command.name" searchValue="state.searchValue" t-props="command.props" executeCommand="() =&gt; this.executeCommand(command)">
                      <t t-set-slot="name">
                        <span class="o_command_name text-ellipsis" t-att-title="command.name">
                          <t t-foreach="command.splitName" t-as="name" t-key="name_index">
                            <b t-if="name_index % 2" t-out="name" class="text-primary"/>
                            <t t-else="" t-out="name"/>
                          </t>
                        </span>
                      </t>
                      <t t-set-slot="focusMessage">
                          <small t-if="!isMobileOS and command.href and state.selectedCommand === command" class="o_command_focus text-muted"><kbd>⏎</kbd> to open, <kbd><t t-if="isMacOS">CMD</t><t t-else="">CTRL</t></kbd>+<kbd>⏎</kbd> to open in new tab</small>
                      </t>
                    </t>
                  </a>
                </div>
              </t>
            </div>

            <hr class="my-2 mx-0" t-if="!category_last"/>
          </t>
        </div>

        <div t-if="state.FooterComponent" class="o_command_palette_footer mt-2 px-4 py-2 border-top bg-100 text-muted">
          <t t-component="state.FooterComponent" switchNamespace="(namespace) =&gt; this.debounceSearch(namespace.concat(this.state.searchValue))"/>
        </div>
      </div>
    </Dialog>
  </t>

<t t-name="web.ConfirmationDialog" owl="1">
    <Dialog size="'md'" title="props.title" modalRef="modalRef">
      <t t-esc="props.body"/>
      <t t-set-slot="footer" owl="1">
        <button class="btn btn-primary" t-on-click="_confirm" t-esc="props.confirmLabel"/>
        <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel" t-esc="props.cancelLabel"/>
      </t>
    </Dialog>
  </t>

  <t t-name="web.AlertDialog" owl="1">
    <Dialog size="'sm'" title="props.title" contentClass="props.contentClass">
      <t t-esc="props.body"/>
      <t t-set-slot="footer" owl="1">
        <button class="btn btn-primary" t-on-click="_confirm" t-esc="props.confirmLabel"/>
        <button t-if="props.cancel" class="btn btn-secondary" t-on-click="_cancel" t-esc="props.cancelLabel"/>
      </t>
    </Dialog>
  </t>

<t t-name="web.DatePicker" owl="1">
        <div class="o_datepicker" aria-atomic="true" t-att-id="datePickerId" data-target-input="nearest" t-ref="root">
            <input type="text" class="o_datepicker_input o_input datetimepicker-input" t-att-name="props.name" t-att-id="props.inputId" t-att-placeholder="props.placeholder" t-attf-data-target="#{ '#' + datePickerId }" t-att-readonly="props.readonly" t-ref="input" t-on-change="() =&gt; this.onDateChange()" t-on-input="(ev) =&gt; this.props.onInput(ev)" t-on-click="onInputClick" t-on-keydown="onInputKeydown"/>
            <span t-if="props.warn_future and state.warning" class="fa fa-exclamation-triangle text-danger o_tz_warning o_datepicker_warning" data-tooltip="This date is on the future. Make sure it is what you expected."/>
            <span class="o_datepicker_button"/>
        </div>
    </t>

<t t-name="web.Dialog" owl="1">
        <div class="o_dialog" t-att-id="id" t-att-class="{ o_inactive_modal: !data.isActive }">
            <div role="dialog" class="modal d-block" tabindex="-1" t-att-class="{ o_technical_modal: props.technical, o_modal_full: isFullscreen }" t-ref="modalRef">
                <div class="modal-dialog" t-attf-class="modal-{{props.size}}">
                    <div class="modal-content" t-att-class="props.contentClass">
                        <header t-if="props.header" class="modal-header">
                            <t t-slot="header" close="data.close" isFullscreen="isFullscreen">
                                <t t-call="web.Dialog.header">
                                    <t t-set="close" t-value="data.close"/>
                                    <t t-set="fullscreen" t-value="isFullscreen"/>
                                </t>
                            </t>
                        </header>

                        <footer t-if="props.footer" class="modal-footer justify-content-around justify-content-sm-start flex-wrap gap-1" style="order:2">
                            <t t-slot="footer" close="data.close">
                                <button class="btn btn-primary o-default-button" t-on-click="data.close">
                                    <t>Ok</t>
                                </button>
                            </t>
                        </footer>
                        <main class="modal-body" t-attf-class="{{ props.bodyClass }} {{ !props.withBodyPadding ? 'p-0': '' }}">
                            <t t-slot="default" close="data.close"/>
                        </main>
                    </div>
                </div>
            </div>
        </div>
    </t>

    <t t-name="web.Dialog.header" owl="1">
        <t t-if="fullscreen">
            <button class="btn fa fa-arrow-left" data-bs-dismiss="modal" aria-label="Close" t-on-click="close"/>
        </t>
        <h4 class="modal-title text-break" t-att-class="{ 'me-auto': fullscreen }">
            <t t-esc="props.title"/>
        </h4>
        <t t-if="!fullscreen">
            <button type="button" class="btn-close" aria-label="Close" tabindex="-1" t-on-click="close"/>
        </t>
    </t>
<t t-name="web._DomainSelector" owl="1">
        <t t-set="tree" t-value="buildTree()"/>
        <t t-if="tree">
            <DomainSelectorRootNode value="props.value" node="tree" readonly="props.readonly" resModel="props.resModel" isDebugMode="props.isDebugMode" debugValue="props.debugValue" className="props.className"/>
        </t>
        <t t-else="">
            <div t-att-class="props.className">This domain is not supported.</div>
        </t>
    </t>

<t t-name="web.DomainSelectorBranchNode" owl="1">
        <div class="o_domain_node o_domain_tree" t-ref="root">
            <div class="o_domain_tree_header o_domain_selector_row">
                <t t-if="!props.readonly">
                    <DomainSelectorControlPanel node="props.node" onHoverDeleteNodeBtn.bind="onHoverDeleteNodeBtn" onHoverInsertLeafNodeBtn.bind="onHoverInsertLeafNodeBtn" onHoverInsertBranchNodeBtn.bind="onHoverInsertBranchNodeBtn"/>
                </t>
                <DomainSelectorBranchOperator node="props.node" readonly="props.readonly"/>
                <span class="ml4">of:</span>
            </div>
            <div class="o_domain_node_children_container">
                <t t-foreach="props.node.operands" t-as="subNode" t-key="subNode.id">
                    <t t-if="subNode.type === 'branch'">
                        <DomainSelectorBranchNode t-props="{ ...props, node: subNode }"/>
                    </t>
                    <t t-elif="subNode.type === 'leaf'">
                        <DomainSelectorLeafNode t-props="{ ...props, node: subNode }"/>
                    </t>
                </t>
            </div>
        </div>
    </t>

<t t-name="web.DomainSelectorBranchOperator" owl="1">
        <t t-if="!props.readonly">
            <div class="d-inline-flex o_domain_tree_operator_selector" aria-atomic="true">
                <Dropdown togglerClass="'btn btn-link btn-sm btn-primary py-0 px-1 o_domain_tree_operator_caret'" showCaret="props.showCaret">
                    <t t-set-slot="toggler">
                            <t t-if="props.node.operator === '&amp;'">all</t>
                            <t t-elif="props.node.operator === '|'">any</t>
                            <t t-elif="props.node.operator === '!'">none</t>
                    </t>
                    <DropdownItem onSelected="() =&gt; this.onOperatorSelected('&amp;')">all</DropdownItem>
                    <DropdownItem onSelected="() =&gt; this.onOperatorSelected('|')">any</DropdownItem>
                </Dropdown>
            </div>
        </t>
        <t t-else="">
            <strong>
                <t t-if="props.node.operator === '&amp;'">all</t>
                <t t-elif="props.node.operator === '|'">any</t>
                <t t-elif="props.node.operator === '!'">none</t>
            </strong>
        </t>
    </t>

<t t-name="web.DomainSelectorControlPanel" owl="1">
        <div class="o_domain_node_control_panel" role="toolbar" aria-label="Domain node">
            <button class="btn btn-link text-danger o_domain_delete_node_button" title="Delete node" aria-label="Delete node" t-on-click="deleteNode" t-on-mouseenter="onEnterDeleteNodeBtn" t-on-mouseleave="onLeaveDeleteNodeBtn">
                <i class="fa fa-times"/>
            </button>
            <button class="btn o_domain_add_node_button" title="Add node" aria-label="Add node" t-on-click="() =&gt; this.insertNode('leaf')" t-on-mouseenter="onEnterInsertLeafNodeBtn" t-on-mouseleave="onLeaveInsertLeafNodeBtn">
                <i class="fa fa-plus-circle"/>
            </button>
            <button class="btn o_domain_add_node_button" title="Add branch" aria-label="Add branch" data-branch="1" t-on-click="() =&gt; this.insertNode('branch')" t-on-mouseenter="onEnterInsertBranchNodeBtn" t-on-mouseleave="onLeaveInsertBranchNodeBtn">
                <i class="fa fa-ellipsis-h"/>
            </button>
        </div>
    </t>

<t t-name="web.DomainSelectorLeafNode" owl="1">
        <div class="o_domain_node o_domain_leaf o_domain_selector_row" t-ref="root">
            <t t-if="props.readonly">
                <div class="o_domain_leaf_info">
                    <ModelFieldSelector fieldName="props.node.operands[0].toString()" resModel="props.resModel" readonly="props.readonly" isDebugMode="props.isDebugMode"/>
                    <t t-if="typeof props.node.operands[1] === 'string'">
                        <span class="o_domain_leaf_operator"> <t t-esc="displayedOperator"/></span>
                        <span class="o_domain_leaf_value text-primary"> "<t t-esc="props.node.operands[1]"/>"</span>
                    </t>
                    <t t-elif="typeof props.node.operands[1] === 'number'">
                        <span class="o_domain_leaf_operator"> <t t-esc="displayedOperator"/></span>
                        <span class="o_domain_leaf_value text-primary"> <t t-esc="props.node.operands[1]"/></span>
                    </t>
                    <t t-elif="typeof props.node.operands[1] === 'boolean'">
                        is
                        <t t-if="(props.node.operator === '=' and props.node.operands[1] === false) or (props.node.operator === '!=' and props.node.operands[1] === true)">
                            not
                        </t>
                        set
                    </t>
                    <t t-elif="Array.isArray(props.node.operands[1])">
                        <span class="o_domain_leaf_operator"> <t t-esc="displayedOperator"/></span>
                        <t t-foreach="props.node.operands[1]" t-as="value" t-key="value_index">
                            <span class="o_domain_leaf_value text-primary"> "<t t-esc="value"/>"</span>
                            <t t-if="!value_last"> or </t>
                        </t>
                    </t>
                </div>
            </t>
            <t t-else="">
                <DomainSelectorControlPanel node="props.node" onHoverDeleteNodeBtn.bind="onHoverDeleteNodeBtn" onHoverInsertLeafNodeBtn.bind="onHoverInsertLeafNodeBtn" onHoverInsertBranchNodeBtn.bind="onHoverInsertBranchNodeBtn"/>
                <div class="o_domain_leaf_edition">
                    <ModelFieldSelector fieldName="props.node.operands[0].toString()" resModel="props.resModel" readonly="props.readonly" update="(name) =&gt; this.onFieldChange(name)" isDebugMode="props.isDebugMode"/>
                    <t t-set="field" t-value="getFieldComponent(fieldInfo.type)"/>
                    <t t-if="field">
                        <div>
                            <select class="o_domain_leaf_operator_select o_input text-truncate pe-1" t-on-change="onOperatorChange">
                                <t t-foreach="getOperators(field)" t-as="operator" t-key="operator.value">
                                    <option t-att-value="operator_index" t-att-selected="operator.matches({ fieldInfo, operator: props.node.operator, value: props.node.operands[1] })" t-esc="operator.label"/>
                                </t>
                            </select>
                        </div>
                        <t t-if="!isValueHidden">
                            <t t-component="field" t-key="fieldInfo.type" field="fieldInfo" operator="getOperatorInfo(props.node.operator)" value="props.node.operands[1]" update="(changes) =&gt; props.node.update(changes)"/>
                        </t>
                    </t>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.DomainSelectorRootNode" owl="1">
        <div class="o_domain_node o_domain_tree o_domain_selector" aria-atomic="true" t-attf-class="{{ props.className }} {{ props.readonly ? 'o_read_mode' : 'o_edit_mode'}}">
            <t t-if="!hasNode">
                <span>Match <strong>all records</strong></span>
                <t t-if="!props.readonly">
                    <button class="btn btn-sm btn-primary o_domain_add_first_node_button ms-1" t-on-click="() =&gt; this.insertNode('leaf')">
                        <i class="fa fa-plus"/> Add filter
                    </button>
                </t>
            </t>
            <t t-else="">
                <t t-if="node.type === 'leaf'">
                    Match records with the following rule:
                    <div class="o_domain_node_children_container">
                        <DomainSelectorLeafNode t-props="{ ...props, node }"/>
                    </div>
                </t>
                <t t-else="">
                    <span>Match records with </span>
                    <DomainSelectorBranchOperator node="node" readonly="props.readonly" showCaret="true"/>
                    <span> of the following rules:</span>
                    <div class="o_domain_node_children_container">
                        <t t-foreach="node.operands" t-as="subNode" t-key="subNode.id">
                            <t t-if="subNode.type === 'branch'">
                                <DomainSelectorBranchNode t-props="{ ...props, node: subNode }"/>
                            </t>
                            <t t-elif="subNode.type === 'leaf'">
                                <DomainSelectorLeafNode t-props="{ ...props, node: subNode }"/>
                            </t>
                        </t>
                    </div>
                </t>
            </t>
            <t t-if="props.isDebugMode and !props.readonly">
                <label class="o_domain_debug_container">
                    <span class="small"># Code editor</span>
                    <textarea type="text" class="o_domain_debug_input" t-att-value="props.debugValue or props.value" t-on-change="onChange"/>
                </label>
            </t>
        </div>
    </t>

<t t-name="web.DomainSelectorBooleanField" owl="1">
        <div class="o_ds_value_cell">
            <select class="o_input" t-on-change="onChange">
                <option value="1" t-att-selected="props.value">set (true)</option>
                <option value="0" t-att-selected="!props.value">not set (false)</option>
            </select>
        </div>
    </t>

<t t-name="web.DomainSelectorDateTimeField" owl="1">
        <div class="o_ds_value_cell">
            <t t-component="component" date="deserializedValue" onDateTimeChanged.bind="onChange"/>
        </div>
    </t>

<t t-name="web.DomainSelectorDefaultField" owl="1">
        <div class="o_ds_value_cell">
            <DomainSelectorFieldInput t-props="props"/>
        </div>
    </t>

<t t-name="web.DomainSelectorFieldInput" owl="1">
        <input type="text" class="o_input o_domain_leaf_value_input" t-att-value="props.value" t-on-change="onChange"/>
    </t>

<t t-name="web.DomainSelectorFieldInputWithTags" owl="1">
        <div class="o_ds_value_cell">
            <div class="o_domain_leaf_value_input">
                <t t-foreach="props.value" t-as="tag" t-key="tag_index">
                    <span class="badge rounded-pill">
                        <t t-esc="tag"/> <i class="o_domain_leaf_value_remove_tag_button fa fa-times" role="img" aria-label="Remove tag" title="Remove tag" t-on-click="() =&gt; this.removeTag(tag_index)"/>
                    </span>
                </t>
            </div>
            <div class="o_domain_leaf_value_tags">
                <input type="text" class="o_input" placeholder="Add new value" t-ref="input"/>
                <button class="btn btn-sm btn-primary fa fa-plus o_domain_leaf_value_add_tag_button" aria-label="Add tag" title="Add tag" t-on-click="onBtnClick"/>
            </div>
        </div>
    </t>

<t t-name="web.DomainSelectorNumberField" owl="1">
        <div class="o_ds_value_cell">
            <DomainSelectorFieldInput t-props="props"/>
        </div>
    </t>

<t t-name="web.DomainSelectorRelationField" owl="1">
        <div class="o_ds_value_cell">
            <DomainSelectorFieldInput t-props="props"/>
        </div>
    </t>

<t t-name="web.DomainSelectorSelectionField" owl="1">
        <div class="o_ds_value_cell">
            <t t-if="props.operator.category === 'in'">
                <input type="text" class="o_input o_domain_leaf_value_input" t-att-value="formattedValue" t-on-change="onChangeMulti"/>
            </t>
            <t t-else="">
                <select class="o_input o_domain_leaf_value_input" t-on-change="onChange">
                    <t t-foreach="props.field.selection" t-as="option" t-key="option[0]">
                        <option t-att-value="option[0]" t-att-selected="option[0] === props.value" t-esc="option[1]"/>
                    </t>
                </select>
            </t>
        </div>
    </t>

<t t-name="web.DomainSelectorTextField" owl="1">
        <t t-if="props.operator.category === 'in'">
            <DomainSelectorFieldInputWithTags t-props="props"/>
        </t>
        <t t-else="">
            <div class="o_ds_value_cell">
                <DomainSelectorFieldInput t-props="props"/>
            </div>
        </t>
    </t>

<t t-name="web.DomainSelectorDialog" owl="1">
        <Dialog title="dialogTitle">
            <DomainSelector t-props="domainSelectorProps"/>
            <t t-set-slot="footer">
                <t t-if="props.readonly">
                    <button class="btn btn-secondary" t-on-click="() =&gt; props.close()">Close</button>
                </t>
                <t t-else="">
                    <button class="btn btn-primary" t-on-click="onSave">Save</button>
                    <button class="btn btn-secondary" t-on-click="onDiscard">Discard</button>
                </t>
            </t>
        </Dialog>
    </t>

<t t-name="web.Dropdown" owl="1">
    <div class="o-dropdown dropdown" t-att-class="props.class" t-attf-class="         {{ directionCaretClass || ''}}         {{ state.open ? 'show' : ''}}         {{ !showCaret ? 'o-dropdown--no-caret' : '' }}       " t-ref="root">
      <button t-if="props.toggler !== 'parent'" class="dropdown-toggle" t-attf-class="           {{props.togglerClass || ''}}           {{parentDropdown ? 'dropdown-item' : ''}}         " t-on-click.stop="onTogglerClick" t-on-mouseenter="onTogglerMouseEnter" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att-data-tooltip="props.tooltip" t-att-tabindex="props.skipTogglerTabbing ? -1 : 0" t-att-aria-expanded="state.open ? 'true' : 'false'" t-ref="togglerRef">
        <t t-slot="toggler"/>
      </button>
      <div t-if="state.open" class="o-dropdown--menu dropdown-menu d-block" t-att-class="props.menuClass" role="menu" t-ref="menuRef">
        <t t-slot="default"/>
      </div>
    </div>
  </t>

<t t-name="web.DropdownItem" owl="1">
    <t t-tag="props.href ? 'a' : 'span'" t-att-href="props.href" class="dropdown-item" t-att-class="props.class" role="menuitem" t-on-click.stop="onClick" t-att-title="props.title" t-att-data-hotkey="props.hotkey" t-att="dataAttributes" tabindex="0">
      <t t-slot="default"/>
    </t>
  </t>

<t t-name="web.RainbowMan" owl="1">
        <div class="o_reward position-absolute top-0 bottom-0 start-0 end-0 w-100 h-100" t-att-class="{ o_reward_fading: state.isFading }" t-on-animationend="onAnimationEnd">
            <svg class="o_reward_rainbow_man position-absolute top-0 bottom-0 start-0 end-0 m-auto overflow-visible" viewBox="0 0 400 400">
                <defs>
                    <radialGradient id="o_reward_gradient_bg" cx="200" cy="200" r="200" gradientUnits="userSpaceOnUse">
                        <stop offset="0.3" stop-color="#edeff4"/>
                        <stop offset="1" stop-color="#edeff4" stop-opacity="0"/>
                    </radialGradient>
                    <symbol id="o_reward_star">
                        <path d="M33 15.9C26.3558 13.6951 21.1575 8.4597 19 1.8 19 1.2477 18.5523.8 18 .8 17.4477.8 17 1.2477 17 1.8 14.6431 8.6938 9.0262 13.9736 2 15.9 1.3649 15.9.85 16.4149.85 17.05.85 17.6851 1.3649 18.2 2 18.2 8.6215 20.3845 13.8155 25.5785 16 32.2 16 32.7523 16.4477 33.2 17 33.2 17.5523 33.2 18 32.7523 18 32.2 20.3569 25.3062 25.9738 20.0264 33 18.1 33.6351 18.1 34.15 17.5851 34.15 16.95 34.15 16.3149 33.6351 15.8 33 15.8" fill="#FFFFFF"/>
                    </symbol>
                    <symbol id="o_reward_thumb">
                        <path d="M10 52C6 51 3 48 3 44 2 42 3 39 5 38 3 36 2 34 2 32 2 29 3 27 5 26 3 24 2 21 2 19 2 15 7 12 10 12L23 12C23 11 23 11 23 11L23 10C23 8 24 6 25 4 27 2 29 2 31 2 33 2 35 2 36 4 38 5 39 7 39 10L39 38C39 41 37 45 35 47 32 50 28 51 25 52L10 52 10 52Z" fill="#FBFBFC"/>
                        <polygon fill="#ECF1FF" points="25 11 25 51 5 52 5 12"/>
                        <path d="M31 0C28 0 26 1 24 3 22 5 21 7 21 10L10 10C8 10 6 11 4 12 2 14 1 16 1 19 1 21 1 24 2 26 1 27 1 29 1 32 1 34 1 36 2 38 1 40 0 42 1 45 1 50 5 53 10 54L25 54C29 54 33 52 36 49 39 46 41 42 41 38L41 10C41 4 36 0 31 0M31 4C34 4 37 6 37 10L37 38C37 41 35 44 33 46 31 48 28 49 25 50L10 50C7 49 5 47 5 44 4 41 6 38 9 37L9 37C6 37 5 35 5 32 5 28 6 26 9 26L9 26C6 26 5 22 5 19 5 16 8 14 11 14L23 14C24 14 25 12 25 11L25 10C25 7 28 4 31 4" fill="#A1ACBA"/>
                    </symbol>
                </defs>
                <rect width="400" height="400" fill="url(#o_reward_gradient_bg)"/>
                <g transform="translate(47 45) scale(0.9)" class="o_reward_rainbow">
                    <path d="M270,170a100,100,0,0,0-200,0" class="o_reward_rainbow_line" stroke="#FF9E80" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M290,170a120,120,0,0,0-240,0" class="o_reward_rainbow_line" stroke="#FFE57F" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M310,170a140,140,0,0,0-280,0" class="o_reward_rainbow_line" stroke="#80D8FF" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                    <path d="M330,170a160,160,0,0,0-320,0" class="o_reward_rainbow_line" stroke="#C794BA" stroke-linecap="round" stroke-width="21" fill="none" stroke-dasharray="600 600" stroke-dashoffset="-600"/>
                </g>
                <g transform="translate(80 125)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_01"/>
                </g>
                <g transform="translate(140 75)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_02"/>
                </g>
                <g transform="translate(230 90)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_03"/>
                </g>
                <g transform="translate(275 120)">
                    <use href="#o_reward_star" transform-origin="center" class="o_reward_box o_reward_star_04"/>
                </g>
                <g class="o_reward_face_group o_reward_box" transform-origin="center top">
                    <g class="o_reward_shadow_container o_reward_box">
                        <ellipse class="o_reward_shadow o_reward_box" cx="200" cy="105%" rx="100" ry="6" fill="#000" opacity="0.25" transform-origin="center"/>
                    </g>
                    <g class="o_reward_face_wrap o_reward_box" transform-origin="center">
                        <image class="o_reward_face" x="132" y="125" width="136" height="136" t-attf-href="{{props.imgUrl}}"/>
                    </g>
                    <g transform="translate(258 174)">
                        <use href="#o_reward_thumb" class="o_reward_box o_reward_thumbup" transform-origin="center"/>
                    </g>
                </g>
            </svg>
            <div class="o_reward_rainbow_man o_reward_msg_container position-absolute top-0 bottom-0 start-0 end-0 m-auto">
                <div class="o_reward_face_group h-100 w-75 mx-auto">
                    <svg viewBox="0 0 42 60" preserveAspectRatio="xMinYMax meet" width="37" height="65%" class="overflow-visible position-relative ms-5">
                        <g class="o_reward_box">
                            <use href="#o_reward_thumb" x="-60%" y="0" transform="rotate(-90) scale(1 -1)" transform-origin="center"/>
                        </g>
                    </svg>
                    <div class="o_reward_msg mx-4">
                        <div class="o_reward_msg_card">
                            <div class="o_reward_msg_content text-muted px-3 py-4 bg-white d-inline-block border border-light border-top-0">
                                <t t-if="!props.Component">
                                    <t t-out="props.message"/>
                                </t>
                                <t t-else="" t-component="props.Component" t-props="props.props"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.WarningDialog" owl="1">
      <Dialog title="title">
        <div role="alert" class="o_dialog_warning">
          <p t-esc="message" style="white-space: pre-wrap;"/>
        </div>
      </Dialog>
    </t>

    <t t-name="web.RedirectWarningDialog" owl="1">
      <Dialog title="title">
        <div role="alert">
          <p t-esc="message" style="white-space: pre-wrap;"/>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary" t-on-click="onClick" t-esc="buttonText"/>
          <button class="btn btn-secondary" t-on-click="props.close">Cancel</button>
        </t>
      </Dialog>
    </t>

    <t t-name="web.Error504Dialog" owl="1">
      <Dialog title="this.constructor.title">
        <div role="alert">
            <p style="white-space: pre-wrap;">
            The operation was interrupted. This usually means that the current operation is taking too much time.
            </p>
        </div>
      </Dialog>
    </t>

    <t t-name="web.SessionExpiredDialog" owl="1">
      <Dialog title="this.constructor.title">
        <div role="alert">
          <p style="white-space: pre-wrap;">
            Your Odoo session expired. The current page is about to be refreshed.
          </p>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary" t-on-click="onClick">Ok</button>
        </t>
      </Dialog>
    </t>

    <t t-name="web.ErrorDialog" owl="1">
      <Dialog contentClass="'o_dialog_error'" title="this.constructor.title">
        <div class="alert alert-warning clearfix" role="alert">
            <div class="float-end ml8 btn-group-vertical">
                <button class="btn btn-primary" t-on-click="onClickClipboard">
                    <i class="fa fa-clipboard mr8"/><t>Copy the full error to clipboard</t>
                </button>
            </div>
            <p><b>An error occurred</b></p>
            <p>Please use the copy button to report the error to your support service.</p>
        </div>


        <button class="btn btn-link" t-on-click="() =&gt; { state.showTraceback = !state.showTraceback }">See details</button>
        <div t-if="state.showTraceback and (props.name or props.message)" class="alert alert-info bg-100 clearfix" role="alert">
          <code t-if="props.name" t-esc="props.name"/>
          <p t-if="props.message" t-esc="props.message"/>
        </div>
        <div t-if="state.showTraceback" class="alert alert-danger o_error_detail" role="alert">
            <pre t-esc="traceback or props.traceback"/>
        </div>
      </Dialog>
    </t>

<t t-name="web.FileInput" owl="1">
        <span class="o_file_input" t-att-class="{ 'd-none': props.hidden }" aria-atomic="true">
            <span t-if="!props.hidden" class="o_file_input_trigger" t-on-click.prevent="onTriggerClicked">
                <t t-slot="default">
                    <button class="btn btn-primary">Choose File</button>
                </t>
            </span>
            <input type="file" name="ufile" class="o_input_file d-none" t-att-multiple="props.multiUpload" t-att-accept="props.acceptedFileExtensions" t-ref="file-input" t-on-change="onFileInputChange"/>
        </span>
    </t>

<t t-name="web.FileUploadProgressBar" owl="1">
        <div class="position-absolute top-0 start-0 h-100 w-100">
            <div class="o-file-upload-progress-bar-value h-100" t-ref="bar" t-att-style="'width: ' + (this.props.fileUpload.progress * 100) + '%;'"/>
            <span class="position-absolute top-0 end-0 cursor-pointer o-file-upload-progress-bar-abort fa fa-times-circle" title="Cancel Upload" aria-label="Cancel Upload" t-on-click.stop.prevent="onCancel"/>
        </div>
    </t>
<t t-name="web.FileUploadProgressContainer" owl="1">
        <t t-foreach="Object.values(props.fileUploads)" t-as="fileUpload" t-key="fileUpload.id">
            <t t-if="!props.shouldDisplay || props.shouldDisplay(fileUpload)" t-component="props.Component" fileUpload="fileUpload" selector="props.selector"/>
        </t>
    </t>
<t t-name="web.FileUploadProgressKanbanRecord" owl="1">
        <t t-set="progressTexts" t-value="getProgressTexts()"/>
        <div class="o_kanban_record d-flex flex-grow-1 flex-md-shrink-1 flex-shrink-0">
            <div class="o_kanban_progress_card o_kanban_attachment position-relative p-0 cursor-pointer">
                <div class="o_kanban_image">
                    <div class="o_kanban_image_wrapper">
                        <div class="o_image o_image_thumbnail" t-att-data-mimetype="props.fileUpload.type"/>
                    </div>
                </div>
                <div class="o_kanban_details">
                    <div class="o_kanban_details_wrapper">
                        <div t-att-title="props.fileUpload.title" t-att-aria-label="props.fileUpload.title" class="o_kanban_record_title">
                            <span t-esc="props.fileUpload.title"/>
                        </div>
                        <div class="o_kanban_record_body"/>
                        <div class="o_kanban_record_bottom">
                            <div class="oe_kanban_bottom_left">
                                <div class="o_file_upload_progress_text_left" t-esc="progressTexts.left"/>
                            </div>
                            <div class="oe_kanban_bottom_right">
                                <span class="o_file_upload_progress_text_right" t-esc="progressTexts.right"/>
                            </div>
                        </div>
                    </div>
                </div>
                <FileUploadProgressBar fileUpload="props.fileUpload"/>
            </div>
        </div>
    </t>

    <t t-name="web.FileUploadProgressDataRow" owl="1">
        <t t-set="progressTexts" t-value="getProgressTexts()"/>
        <div class="o_data_row o_list_progress_card position-relative align-middle p-0">
            <span class="o_file_upload_upload_title" t-esc="props.fileUpload.title"/>
            <span class="o_file_upload_progress_text_left" t-esc="progressTexts.left"/>
            <span class="o_file_upload_progress_text_right" t-esc="progressTexts.right"/>
            <FileUploadProgressBar fileUpload="props.fileUpload"/>
        </div>
    </t>

<t t-name="web._ModelFieldSelector" owl="1">
        <div class="o_field_selector" aria-atomic="true" t-att-class="props.readonly ? 'o_read_mode' : 'o_edit_mode o_input'" t-on-click="onFieldSelectorClick">
            <div class="o_field_selector_value" tabindex="0">
                <t t-foreach="chain" t-as="node" t-key="node_index">
                    <t t-if="node.field">
                        <t t-if="!node_first">
                            <i class="fa fa-chevron-right" role="img" aria-label="Followed by" title="Followed-by"/>
                        </t>
                        <span class="o_field_selector_chain_part">
                            <t t-esc="node.field.string"/>
                        </span>
                    </t>
                </t>
            </div>
            <t t-if="!fieldNameChain.length">
                <div class="o_field_selector_controls" tabindex="0">
                    <i role="alert" class="fa fa-exclamation-triangle o_field_selector_warning" title="Invalid field chain" aria-label="Invalid field chain"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.ModelFieldSelectorPopover" owl="1">
        <div class="o_field_selector_popover" t-on-keydown="onInputKeydown" tabindex="0">
            <div class="o_field_selector_popover_header text-center">
                <t t-if="chain.length &gt; 1">
                    <i class="fa fa-arrow-left o_field_selector_popover_option o_field_selector_prev_page" title="Previous" role="img" aria-label="Previous" t-on-click="onPreviousBtnClick"/>
                </t>
                <t t-if="isDefaultValueVisible">
                    <div class="o_field_selector_title">Default value</div>
                </t>
                <t t-else="">
                    <div class="o_field_selector_title" t-out="currentFieldName"/>
                </t>
                <i class="fa fa-times o_field_selector_popover_option o_field_selector_close" title="Close" role="img" aria-label="Close" t-on-click="props.close"/>
                <t t-if="props.showSearchInput &amp;&amp; !isDefaultValueVisible">
                    <div class="o_field_selector_search mt-2">
                        <input type="text" placeholder="Search..." class="o_input" t-att-value="searchValue" t-on-input="onSearch" t-ref="autofocus"/>
                    </div>
                </t>
                <t t-if="isDefaultValueVisible">
                    <div class="o_field_selector_default_value_input mt-2">
                        <input type="text" placeholder="Type a default text or press ENTER" class="o_input" t-att-value="defaultValue" t-on-input="onDefaultValue" t-ref="autofocusDefaultValue"/>
                    </div>
                </t>
            </div>
            <div class="o_field_selector_popover_body">
                <ul class="o_field_selector_page" t-if="!isDefaultValueVisible">
                    <t t-foreach="fieldKeys" t-as="fieldKey" t-key="fieldKey">
                        <t t-set="field" t-value="fields[fieldKey]"/>
                        <t t-if="field.searchable and props.filter(field)">
                            <li t-on-click="() =&gt; this.onFieldSelected({ ...field, name: fieldKey })" t-att-data-name="fieldKey" t-attf-class="o_field_selector_item #{fieldKey === currentActiveField and ' active' or ''}">
                                <t t-out="field.string"/>
                                <div t-if="props.isDebugMode" class="text-muted o_field_selector_item_title"><t t-out="fieldKey"/> (<t t-out="field.type"/>)</div>
                                <t t-if="field.relation and props.followRelations">
                                    <i class="fa fa-chevron-right o_field_selector_relation_icon" role="img" aria-label="Relation to follow" title="Relation to follow"/>
                                </t>
                            </li>
                        </t>
                    </t>
                </ul>
                <ul class="o_field_selector_page" t-if="isDefaultValueVisible">
                    <li class="o_field_selector_item" t-on-click="() =&gt; this.selectDefaultValue(defaultValue !== '')">
                        <t t-if="defaultValue === ''">
                            <div class="text-muted o_field_selector_item_title">Default text is used when no values are set</div>
                        </t>
                        <t t-else="">
                            <div class="text-muted o_field_selector_item_title">As a default text when no value are set</div>
                        </t>
                    </li>
                </ul>
            </div>
            <t t-if="props.isDebugMode">
                <div class="o_field_selector_popover_footer">
                    <input type="text" class="o_input o_field_selector_debug" t-att-value="fullFieldName" t-on-change="onFieldNameChange"/>
                </div>
            </t>
        </div>
    </t>

<t t-name="web.ModelSelector" owl="1">
        <div class="o_sp_input_dropdown" t-ref="autocomplete_container">
            <input t-if="env.isSmall" type="text" class="o_input" readonly="" t-att-id="props.id" t-att-value="props.value"/>
            <AutoComplete t-else="" id="props.id" value="props.value || ''" sources="sources" placeholder="placeholder" autoSelect="props.autoSelect" onSelect.bind="onSelect"/>
            <a role="button" class="o_dropdown_button" draggable="false"/>
        </div>
    </t>
<t t-name="web.Notebook" owl="1">
        <div t-attf-class="o_notebook d-flex w-100 {{ props.orientation === 'horizontal' ? 'horizontal flex-column' : 'vertical flex-row' }} {{ props.className }}" t-if="state.currentPage">
            <div class="o_notebook_headers" t-att-class="{ 'm-0': props.orientation === 'vertical' }">
                <ul t-attf-class="nav nav-tabs {{ props.orientation === 'horizontal' ? 'flex-row flex-nowrap' : 'flex-column p-0' }}">
                    <li t-foreach="navItems" t-as="navItem" t-key="navItem[0]" class="nav-item flex-nowrap cursor-pointer" t-if="navItem[1].isVisible">
                        <a class="nav-link" t-attf-class="{{ navItem[0] === state.currentPage ? 'active' : '' }} {{ props.orientation === 'vertical' ? 'p-3 rounded-0' : '' }} {{ navItem[1].className }}" t-att-name="navItem[1].name" t-on-click.prevent="() =&gt; this.activatePage(navItem[0])" href="#" role="tab" tabindex="0" t-esc="navItem[1].title"/>
                    </li>
                </ul>
            </div>
            <div class="o_notebook_content tab-content">
                <div class="tab-pane active" t-ref="activePane">
                    <t t-if="page" t-component="page.Component" t-key="state.currentPage" t-props="page.props"/>
                    <t t-else="" t-slot="{{ state.currentPage }}"/>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.NotificationWowl" owl="1">
        <div t-attf-class="o_notification {{props.className}} border border-{{props.type}} bg-white mb-2 position-relative" role="alert" aria-live="assertive" aria-atomic="true">
            <strong t-if="props.title" t-attf-class="o_notification_title d-block text-{{props.type}} py-2 ps-3 pe-5" t-out="props.title"/>
            <button type="button" class="o_notification_close btn" aria-label="Close" t-on-click="props.close">
                <i class="oi oi-close"/>
            </button>
            <div t-attf-class="o_notification_body ps-3 pe-5 py-2">
                <div t-if="props.message" class="me-auto o_notification_content" t-out="props.message"/>
                <div t-if="props.buttons.length" class="mt-2 o_notification_buttons">
                    <button t-foreach="props.buttons" t-as="button" type="button" t-key="button_index" t-attf-class="btn {{button.primary ? 'btn-primary' : 'btn-link'}}" t-on-click="button.onClick">
                    <t t-if="button.icon">
                        <i t-if="button.icon.indexOf('fa-') === 0" role="img" t-att-aria-label="button.name" t-att-title="button.name" t-attf-class="fa fa-fw o_button_icon {{button.icon}}"/>
                        <img t-else="" t-att-src="button.icon" t-att-alt="button.name"/>
                    </t>
                    <span t-esc="button.name"/>
                </button>
                </div>
            </div>
        </div>
    </t>

<t t-name="web.Pager" owl="1">
        <nav class="o_pager align-items-center d-flex gap-2" aria-label="Pager">
            <span class="o_pager_counter" t-on-click.stop="">
                <t t-if="state.isEditing">
                    <input type="text" class="o_pager_value o_input d-inline-block w-auto text-end mb-n1" size="7" t-ref="autofocus" t-att-value="value" t-on-blur="onInputBlur" t-on-change="onInputChange" t-on-keydown.stop="onInputKeydown"/>
                </t>
                <t t-else="">
                    <span class="o_pager_value d-inline-block border-bottom border-transparent mb-n1" t-esc="value" t-on-click="onValueClick"/>
                </t>
                <span> / </span>
                <t t-if="props.updateTotal">
                    <span class="o_pager_limit o_pager_limit_fetch" t-att-class="{ 'disabled': state.isDisabled }" t-on-click.stop="updateTotal"><t t-esc="props.total"/>+</span>
                </t>
                <t t-else="">
                    <span class="o_pager_limit" t-esc="props.total"/>
                </t>
            </span>
            <span class="btn-group" aria-atomic="true">

                <button type="button" class="fa fa-chevron-left btn btn-secondary o_pager_previous px-2 rounded-start" aria-label="Previous" data-tooltip="Previous" tabindex="-1" t-att-data-hotkey="props.withAccessKey ? 'p' : false" t-att-disabled="state.isDisabled or isSinglePage" t-on-click.stop="() =&gt; this.navigate(-1)"/>
                <button type="button" class="fa fa-chevron-right btn btn-secondary o_pager_next px-2 rounded-end" aria-label="Next" data-tooltip="Next" tabindex="-1" t-att-data-hotkey="props.withAccessKey ? 'n' : false" t-att-disabled="state.isDisabled or isSinglePage" t-on-click.stop="() =&gt; this.navigate(1)"/>
            </span>
        </nav>
    </t>

<t t-name="web.PopoverWowl" owl="1">
        <div role="tooltip" class="o_popover popover mw-100 shadow-sm" t-att-class="props.popoverClass" t-ref="popper" t-att-popover-id="props.id">
            <div class="popover-arrow"/>
            <t t-slot="default"/>
        </div>
    </t>

<t t-name="web.sign_svg_text" name="SVG Signature Text" owl="1">
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" t-att-width="width" t-att-height="height">
            <defs>
                <style type="text/css">
                    @font-face {
                        font-family: "font";
                        src: url(data:font/ttf;base64,<t t-esc="font"/>) format("woff");
                        font-weight: normal;
                        font-style: normal;
                    }
                </style>
            </defs>

            <text t-esc="text" x="50%" t-att-y="height * 4 / 5" t-att-font-size="height * 4 / 5" t-att-textLength="width * 4 / 5 * (type === 'signature' ? Math.min(1, text.length / 7) : 1)" t-att-lengthAdjust="'spacing' + (type === 'signature' ? 'AndGlyphs' : '')" t-attf-style="font-family:'font'; stroke: none; fill: {{color}};" text-anchor="middle"/>
        </svg>
    </t>


    <t t-name="web.NameAndSignature" owl="1">
        <div class="o_web_sign_name_and_signature">
            <div t-if="!props.noInputName" class="o_web_sign_name_group">
                <label class="col-form-label" t-att-for="'o_web_sign_name_input_' + htmlId">Full Name</label>
                <input type="text" name="signer" t-att-id="'o_web_sign_name_input_' + htmlId" class="o_web_sign_name_input form-control" t-on-input="onInputSignName" t-att-value="props.signature.name" t-ref="signNameInput" placeholder="Type your name to sign" required=""/>
            </div>


            <div t-if="state.showSignatureArea" class="o_web_sign_signature_group bg-white card mt-3" style="overflow: hidden;">
                <div class="card-header">
                    <div class="row g-0">
                        <div t-if="!props.noInputName or defaultName" class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="() =&gt; this.setMode('auto')" t-attf-class="o_web_sign_auto_button me-2 btn btn-light {{ state.signMode === 'auto' ? 'active': '' }}">
                                Auto
                            </a>
                        </div>
                        <div class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="() =&gt; this.setMode('draw')" t-attf-class="o_web_sign_draw_button me-2 btn btn-light {{ state.signMode === 'draw' ? 'active': '' }}">
                                Draw
                            </a>
                        </div>
                        <div class="col-auto">
                            <a role="button" href="#" t-on-click.prevent="() =&gt; this.setMode('load')" t-attf-class="o_web_sign_load_button me-2 btn btn-light {{ state.signMode === 'load' ? 'active': '' }}">
                                Load
                            </a>
                        </div>
                        <div t-if="state.signMode === 'draw'" t-attf-class="o_web_sign_draw_clear col-auto ms-auto">
                            <a role="button" href="#" t-on-click.prevent="onClickSignDrawClear" class="btn btn-link">
                                Clear
                            </a>
                        </div>

                        <Dropdown t-if="state.signMode === 'auto'" class="'o_web_sign_auto_select_style col-auto ms-auto'" togglerClass="'btn btn-link'">
                            <t t-set-slot="toggler">
                                    Style
                            </t>
                            <t t-foreach="fonts" t-as="font" t-key="font_index">
                                <DropdownItem onSelected="() =&gt; this.onSelectFont(font_index)">
                                    <img class="img-fluid" t-att-src="getSVGTextFont(font)"/>
                                </DropdownItem>
                            </t>
                        </Dropdown>

                        <div t-if="state.signMode === 'load'" class="o_web_sign_load_file col-auto">
                            <input t-ref="signInputLoad" type="file" role="button" name="files[]" class="btn btn-link py-0" t-on-change="onChangeSignLoadInput"/>
                        </div>
                    </div>
                </div>

                <div class="o_signature_stroke position-absolute"/>

                <div t-if="state.showSignatureArea" t-ref="signature" t-att-style="signatureStyle" class="o_web_sign_signature p-0 bg-transparent position-relative"/>

                <div t-if="loadIsInvalid" t-attf-class="o_web_sign_load_invalid card-footer d-none">
                    <div class="alert alert-danger mb-0" role="alert">
                        This file is invalid. Please select an image.
                    </div>
                </div>
            </div>
        </div>
    </t>
<t t-name="web.SignatureDialog" owl="1">
      <Dialog title="title">
         <div>
            <NameAndSignature t-props="nameAndSignatureProps"/>
            <div class="mt16 small">By clicking Adopt &amp; Sign, I agree that the chosen signature/initials will be a valid electronic representation of my hand-written signature/initials for all purposes when it is used on documents, including legally binding contracts.</div>
        </div>
        <t t-set-slot="footer">
          <button class="btn btn-primary" t-att-disabled="signature.isSignatureEmpty" t-on-click="onClickConfirm">Adopt &amp; Sign</button>
          <button class="btn btn-secondary" t-on-click="props.close">Cancel</button>
        </t>
      </Dialog>
    </t>

<t t-name="web.Tooltip" owl="1">
        <div class="o-tooltip px-2 py-1">
            <t t-if="props.template" t-call="{{props.template}}" t-call-context="{ env, ...props.info }"/>
            <small t-else="" t-esc="props.tooltip"/>
        </div>
    </t>

<t t-name="web.Legacy.ControlPanel" owl="1">
    <div class="o_control_panel" data-command-category="actions">
        <div class="o_cp_top">
            <div class="o_cp_top_left">
                <ol t-if="props.withBreadcrumbs" class="breadcrumb" role="navigation">
                    <li t-foreach="props.breadcrumbs" t-as="bc" t-key="bc.controllerID" class="breadcrumb-item" t-att-class="{ o_back_button: bc_index === props.breadcrumbs.length - 1 }" t-att-accesskey="bc_last and 'b'" t-on-click.prevent="()=&gt;this.trigger('breadcrumb-clicked', { controllerID: bc.controllerID })" title="Previous menu">
                        <a href="#">
                            <t t-if="bc.title" t-esc="bc.title"/>
                            <em t-else="" class="text-warning">Unnamed</em>
                        </a>
                    </li>
                    <li class="breadcrumb-item active">
                        <span t-attf-class="{{props.breadcrumbs.length ? 'text-muted' : 'text-900' }}" t-if="props.title" t-esc="props.title"/>
                        <em t-else="" class="text-warning">Unnamed</em>
                    </li>
                </ol>
            </div>
            <div class="o_cp_top_right">
                <div class="o_cp_searchview" role="search" t-ref="searchView">
                    <div t-if="props.withSearchBar" class="o_searchview" role="search" aria-autocomplete="list">
                        <i class="o_searchview_icon oi oi-search" title="Search..." role="img" aria-label="Search..."/>
                        <SearchBar t-if="props.withSearchBar" fields="fields"/>
                    </div>
                </div>
            </div>
        </div>
        <div class="o_cp_bottom">
            <div class="o_cp_bottom_left">
                <div class="o_cp_buttons" role="toolbar" aria-label="Control panel buttons" t-ref="buttons">
                    <t t-slot="buttons"/>
                </div>
                <ActionMenus t-if="props.actionMenus and props.actionMenus.items" t-props="props.actionMenus"/>
            </div>
            <div class="o_cp_bottom_right">
                <div class="btn-group o_search_options position-static" role="search" t-ref="searchViewButtons">
                    <t t-if="props.withSearchBar">
                        <FilterMenu t-if="props.searchMenuTypes.includes('filter')" fields="fields"/>
                        <GroupByMenu t-if="props.searchMenuTypes.includes('groupBy')" fields="fields"/>
                        <ComparisonMenu t-if="props.searchMenuTypes.includes('comparison') and model.get('filters', f =&gt; f.type === 'comparison').length"/>
                        <FavoriteMenu t-if="props.searchMenuTypes.includes('favorite')"/>
                    </t>
                </div>
                <div class="o_cp_pager" role="search" t-ref="pager">
                    <Pager t-if="props.pager and props.pager.limit" t-props="props.pager"/>
                </div>
                <nav t-if="props.views.length gt 1" class="btn-group o_cp_switch_buttons" role="toolbar" aria-label="View switcher">
                    <t t-foreach="props.views" t-as="view" t-key="view.type">
                        <t t-call="web.ViewSwitcherButton"/>
                    </t>
                </nav>
            </div>
        </div>
    </div>
</t>

<t t-name="web.Legacy.ControlPanelX2Many" owl="1">
    <div class="o_x2m_control_panel" t-ref="controlPanel">
        <div class="o_cp_buttons" role="toolbar" aria-label="Control panel buttons" t-ref="buttons">
            <t t-slot="buttons"/>
        </div>
        <div class="o_cp_pager" role="search" t-ref="pager">
            <Pager t-if="_shouldShowPager()" t-props="props.pager"/>
        </div>
    </div>
</t>

<t t-name="web.CustomCheckbox" owl="1">
    <div t-attf-class="{{ props.text ? 'form-check' : '' }}" t-att-class="props.class">
        <input t-att-id="props.id or _id" type="checkbox" class="form-check-input" t-att-disabled="props.disabled" t-att-checked="props.value" t-on-change="(ev) =&gt; props.onChange(ev.target.checked)"/>
        <label t-att-for="props.id or _id" class="form-check-label">
            <t t-esc="props.text or '​'"/>
        </label>
    </div>
</t>

<t t-name="web.CustomFileInput" owl="1">
    <span class="o_file_input" aria-atomic="true" t-on-uploaded="(ev) =&gt; props.onUpload(ev.detail.files)">
        <span class="o_file_input_trigger" t-on-click.prevent="() =&gt; this._onTriggerClicked()">
            <t t-slot="default">
                <button class="btn btn-primary">Choose File</button>
            </t>
        </span>
        <input type="file" name="ufile" class="o_input_file d-none" t-att="{multiple: props.multi_upload, accept: props.accepted_file_extensions}" t-ref="file-input" t-on-change="() =&gt; this._onFileInputChange()"/>
    </span>
</t>

<t t-name="web.Legacy.DatePicker" owl="1">
    <div class="o_datepicker" aria-atomic="true" t-att-id="datePickerId" data-target-input="nearest">
        <input type="text" class="o_datepicker_input o_input datetimepicker-input" t-att-name="props.name" t-att-placeholder="props.placeholder" t-attf-data-target="#{ '#' + datePickerId }" t-att-readonly="props.readonly" t-ref="autofocus" t-on-change="_onInputChange" t-on-click="_onInputClick"/>
        <span t-if="props.warn_future and state.warning" class="fa fa-exclamation-triangle text-danger o_tz_warning o_datepicker_warning">
            <t>This date is on the future. Make sure it is what you expected.</t>
        </span>
        <span class="o_datepicker_button"/>
    </div>
</t>

<t t-name="web.DialogButton.tooltip" owl="1">
    <div class="oe_tooltip_string" role="tooltip">
        <div class="tooltip-inner">
            <t>Hit ENTER to <t t-esc="title"/></t>
        </div>
    </div>
</t>

<t t-name="web.DropdownMenu" owl="1">
    <div class="btn-group dropdown" t-att-class="{ show: state.open }">
        <button type="button" class="dropdown-toggle btn btn-secondary o-no-caret" t-attf-class="{{ icon || displayCaret || displayChevron ? 'd-flex align-items-center ' : ''}} {{ displayCaret || displayChevron ? 'pe-1 ' : ''}}" t-att-aria-expanded="state.open ? 'true' : 'false'" tabindex="-1" t-on-click="() =&gt; { state.open = !state.open }" t-on-keydown="_onButtonKeydown" t-att-title="props.hotkeyTitle" t-att-data-hotkey="props.hotkey">
            <i t-if="icon" t-att-class="icon + ' small me-1'"/>
            <span class="o_dropdown_title" t-esc="title"/>
            <i t-if="displayCaret" t-attf-class="o_dropdown_caret fa fa-fw fa-caret-{{ state.open ? 'down' : 'right' }}"/>
            <i t-elif="displayChevron" t-attf-class="o_dropdown_chevron fa fa-fw ms-auto fa-chevron-{{ state.open ? 'down' : 'right' }}"/>
        </button>
        <ul t-if="state.open" t-attf-class="o-dropdown-menu {{ dropdownMenuAlignClass }} show" role="menu" t-on-item-selected="_onItemSelected">
            <t t-set="currentGroup" t-value="null"/>
            <t t-foreach="items" t-as="item" t-key="item.key || item.id || ('item-' + item_index)">
                <li t-if="currentGroup !== null and currentGroup !== item.groupNumber" class="dropdown-divider" role="separator"/>
                <t t-if="item.Component" t-component="item.Component" t-props="item.props"/>
                <DropdownMenuItem t-else="" t-props="item"/>
                <t t-set="currentGroup" t-value="item.groupNumber"/>
            </t>
        </ul>
    </div>
</t>

<t t-name="web.DropdownMenuItem" owl="1">
    <li class="o_menu_item" role="menuitem" t-on-keydown="_onKeydown">
        <t t-if="canBeOpened">
            <a class="o_menu_item_parent dropdown-item d-flex align-items-center justify-content-between" t-att-class="{ selected: props.isActive }" t-att-aria-checked="props.isActive ? 'true' : 'false'" role="menuitemcheckbox" href="#" t-ref="fallback-focus" t-on-click.prevent="() =&gt; { state.open = !state.open }">
                <t t-esc="props.description"/>
                <i t-attf-class="o_icon_right fa fa-fw mr-n4 fa-caret-{{ state.open ? 'down' : 'right' }}"/>
            </a>
            <ul t-if="state.open" class="o_menu_item_options pb-2 list-unstyled">
                <t t-set="currentGroup" t-value="null"/>
                <t t-foreach="props.options" t-as="option" t-key="option_index">
                    <li t-if="currentGroup !== null and currentGroup !== option.groupNumber" class="dropdown-divider" role="separator"/>
                    <li class="o_item_option" role="menuitem">
                        <a class="dropdown-item ps-5" t-att-class="{ selected: option.isActive }" t-att-aria-checked="option.isActive ? 'true' : 'false'" role="menuitemcheckbox" t-att-href="option.url or '#'" t-esc="option.description" t-on-click.prevent="() =&gt; this.trigger('item-selected', { item: props, option: option })"/>
                    </li>
                    <t t-set="currentGroup" t-value="option.groupNumber"/>
                </t>
            </ul>
        </t>
        <a t-else="" class="dropdown-item" t-att-class="{                 selected: props.isActive,                 [props.className]: props.className,                 'd-flex': props.removable,                 'align-items-center': props.removable,                 'justify-content-between': props.removable             }" t-att-aria-checked="props.isActive ? 'true' : 'false'" role="menuitemcheckbox" t-att-href="props.url or '#'" t-on-click.prevent="() =&gt; this.trigger('item-selected', { item: props })">
            <t t-esc="props.description"/>
            <i t-if="props.removable" class="o_icon_right fa fa-trash btn btn-link text-danger p-0 mr-n3" title="Delete item" t-on-click.stop.prevent="() =&gt; this.trigger('remove-item', { item: props })"/>
        </a>
    </li>
</t>

<t t-name="web.OwlDialog" owl="1">
    <t t-portal="'body'">
        <div class="o_dialog" t-on-focus="_onFocus" t-on-click="_onClick" t-on-dialog-closed="_onDialogClosed" t-ref="dialog">
            <div role="dialog" class="modal" tabindex="-1" t-att-class="{ o_technical_modal: props.technical, o_modal_full: props.fullscreen }" t-att-data-bs-backdrop="'' + props.backdrop" t-ref="modal" t-on-close_dialog.stop="_close" t-on-click="_onBackdropClick">
                <div class="modal-dialog" t-att-class="size">
                    <div class="modal-content" t-att-class="props.contentClass">
                        <header t-if="props.renderHeader" class="modal-header">
                            <h4 class="modal-title">
                                <t t-esc="props.title"/>
                                <span t-if="props.subtitle" class="o_subtitle text-muted small" t-esc="props.subtitle"/>
                            </h4>
                            <button type="button" class="btn-close" aria-label="Close" tabindex="-1" t-on-click="_close"/>
                        </header>
                        <main class="modal-body">
                            <t t-slot="default"/>
                        </main>
                        <footer t-if="props.renderFooter" class="modal-footer justify-content-around justify-content-sm-start flex-wrap gap-1" t-ref="modal-footer">
                            <t t-slot="buttons" close="_close">
                                <button class="btn btn-primary" t-on-click.prevent="_close">
                                    <t>Ok</t>
                                </button>
                            </t>
                        </footer>
                    </div>
                </div>
            </div>
        </div>
    </t>
</t>

<t t-name="Popover" owl="1">
    <div t-att-class="{ 'o_is_open': state.displayed }" t-attf-class="{{ props.class }}" t-att-title="props.titleAttribute" t-on-click="_onClick" t-on-o-popover-compute="_onPopoverCompute" t-on-o-popover-close="_onPopoverClose">
        <t t-slot="default"/>
        <t t-portal="'body'" t-if="state.displayed">
            <div role="tooltip" class="o_popover" t-att-class="props.popoverClass" t-ref="popover">
                <div class="arrow"/>
                <h3 t-if="props.title" class="o_popover_header"><t t-esc="props.title"/></h3>
                <div class="popover-body" t-on-o-popover-close="_onPopoverClose">
                    <t t-slot="opened"/>
                </div>
            </div>
        </t>
    </div>
</t>

<t t-name="web.legacy.Pager" owl="1">
    <nav class="o_pager align-items-center d-flex gap-2" aria-label="Pager">
        <span class="o_pager_counter" t-on-click.stop="">
            <input t-if="state.editing" type="text" class="o_pager_value o_input d-inline-block w-auto text-end" size="7" t-ref="autofocus" t-att-value="value" t-on-blur="() =&gt; { this.state.editing = false }" t-on-change="_onValueChange" t-on-keydown.stop="_onValueKeydown"/>
            <span t-else="" class="o_pager_value d-inline-block border-bottom border-white" t-esc="value" t-on-click="_onEdit"/>
            <span> / </span>
            <span class="o_pager_limit" t-esc="props.size"/>
        </span>
        <span class="btn-group" aria-atomic="true">

            <button type="button" class="fa fa-chevron-left px-2 btn btn-secondary o_pager_previous rounded-start" t-att-disabled="state.disabled || singlePage" t-att-accesskey="props.withAccessKey ? 'p' : false" aria-label="Previous page" title="Previous page" tabindex="-1" t-on-click="ev =&gt; this._changeSelection(-1, ev)"/>
            <button type="button" class="fa fa-chevron-right px-2 btn btn-secondary o_pager_next rounded-end" t-att-disabled="state.disabled || singlePage" t-att-accesskey="props.withAccessKey ? 'n' : false" aria-label="Next page" title="Next page" tabindex="-1" t-on-click="ev =&gt; this._changeSelection(1, ev)"/>
        </span>
    </nav>
</t>

<t t-name="web.Legacy.SearchBar" owl="1">
    <div class="o_searchview_input_container">
        <div t-foreach="model.get('facets')" t-as="facet" t-key="facet_index" tabindex="0" class="o_searchview_facet" role="img" aria-label="search" t-on-keydown="(ev) =&gt; this._onFacetKeydown(facet, facet_index, ev)">
            <span t-if="facet.icon" t-attf-class="o_searchview_facet_label text-bg-odoo {{ facet.icon }}"/>
            <span t-else="" class="o_searchview_facet_label text-bg-odoo" t-esc="facet.title"/>
            <div class="o_facet_values border border-odoo border-start-0">
                <t t-foreach="facet.values" t-as="facetValue" t-key="facetValue_index">
                    <span t-if="!facetValue_first" class="o_facet_values_sep" t-esc="facet.separator"/>
                    <span class="o_facet_value" t-esc="facetValue"/>
                </t>
            </div>
            <i class="o_facet_remove oi oi-close ms-1" role="img" aria-label="Remove" title="Remove" t-on-click="()=&gt;this._onFacetRemove(facet)"/>
        </div>
        <input type="text" class="o_searchview_input" t-att-autofocus="!env.device.isMobileDevice" accesskey="Q" placeholder="Search..." role="searchbox" title="Search for records" t-ref="autofocus" t-on-keydown="_onSearchKeydown" t-on-input="_onSearchInput"/>
        <ul t-if="state.sources.length" class="dropdown-menu o_searchview_autocomplete dropdown-menu show" role="menu">
            <li t-foreach="state.sources" t-as="src" t-key="src.id" t-att-id="src.id" class="o_menu_item dropdown-item" t-att-class="{ o_indent: src.parent and !src.parent.selection, focus: src_index === state.focusedItem}" t-on-click="()=&gt;this._selectSource(src)" t-on-mousemove="()=&gt;this._onSourceMousemove(src_index)">
                <a t-if="src.expand" href="#" class="o_expand" t-on-click.stop.prevent="()=&gt;this._expandSource(src, !src.expanded)">
                    <i t-attf-class="fa fa-caret-{{ src.expanded ? 'down' : 'right' }}"/>
                </a>
                <a href="#" t-on-click.prevent="">
                    <t t-if="src.parent.selection">
                        Search <b t-esc="src.parent.description"/>: <b class="fst-italic text-primary" t-esc="src.label"/></t>
                    <t t-elif="src.label" t-esc="src.label"/>
                    <t t-elif="['date', 'datetime'].includes(src.type)">
                        <t>Search <b t-esc="src.description"/> at: <b class="fst-italic text-primary" t-esc="state.inputValue"/></t>
                    </t>
                    <t t-else="">Search <b t-esc="src.description"/> for: <b class="fst-italic text-primary" t-esc="state.inputValue"/></t>
                </a>
            </li>
        </ul>
    </div>
</t>

<t t-name="web.Legacy.ActionMenus" owl="1">
    <div class="o_cp_action_menus" t-on-item-selected.stop="_onItemSelected">
        <DropdownMenu t-if="printItems.length" title="printButtonStrings.title" items="printItems" icon="'fa fa-print'" hotkey="'shift+u'" hotkeyTitle="printButtonStrings.hotkey"/>
        <DropdownMenu t-if="actionItems.length" title="actionButtonStrings.title" items="actionItems" icon="'fa fa-cog'" closeOnSelected="true" hotkey="'u'" hotkeyTitle="actionButtonStrings.hotkey"/>
    </div>
</t>

<t t-name="web.ViewSwitcherButton" owl="1">
    <t t-set="buttonLabel">View %s</t>
    <button type="button" t-att-accesskey="view.accessKey" t-attf-class="btn btn-light o_switch_view o_{{ view.type }} {{ view.icon }}" t-att-class="{ active: env.view.type === view.type }" t-att-aria-label="sprintf(buttonLabel.toString(), view.type)" t-att-data-tooltip="view.name" tabindex="-1" t-on-click="() =&gt; this.trigger('switch-view', { view_type: view.type })"/>
</t>



<div t-name="EmptyComponent"/>

<t t-name="WidgetLabel.tooltip">
    <div class="oe_tooltip_string" t-if="widget.string" role="tooltip">
        <t t-esc="widget.string"/> <t t-if="debug and widget.nolabel">(nolabel)</t>
    </div>
    <p t-if="help" class="oe_tooltip_help" role="tooltip">
        <t t-esc="help"/>
    </p>
    <ul t-if="debug" class="oe_tooltip_technical" role="tooltip">
        <li data-item="field" t-if="widget.name">
            <span class="oe_tooltip_technical_title">Field:</span>
            <t t-esc="widget.name"/>
        </li>
        <li data-item="object">
            <span class="oe_tooltip_technical_title">Object:</span>
            <t t-esc="widget.model"/>
        </li>
        <li data-item="type">
            <span class="oe_tooltip_technical_title">Type:</span>
            <t t-esc="widget.field.type"/>
        </li>
        <li t-if="widget.attrs.widget" data-item="widget">
            <span class="oe_tooltip_technical_title">Widget:</span>
            <t t-set="description" t-value="widget.attrs.Widget.prototype.description"/>
            <t t-if="description">
                <t t-esc="description"/> (<t t-esc="widget.attrs.widget"/>)
            </t>
            <t t-else="1">
                <t t-esc="widget.attrs.widget"/>
            </t>
        </li>
        <li t-if="widget.attrs.size || widget.field.size" data-item="size">
            <span class="oe_tooltip_technical_title">Size:</span>
            <t t-esc="widget.attrs.size || widget.field.size"/>
        </li>
        <li t-if="widget.attrs.context || widget.field.context" data-item="context">
            <span class="oe_tooltip_technical_title">Context:</span>
            <t t-esc="widget.attrs.context || JSON.stringify(widget.field.context)"/>
        </li>
        <li t-if="widget.attrs.domain || widget.field.domain" data-item="domain">
            <span class="oe_tooltip_technical_title">Domain:</span>
            <t t-esc="widget.attrs.domain || JSON.stringify(widget.field.domain)"/>
        </li>
        <li t-if="widget.attrs.modifiers and !_.isEmpty(widget.attrs.modifiers)" data-item="modifiers">
            <span class="oe_tooltip_technical_title">Modifiers:</span>
            <t t-esc="JSON.stringify(widget.attrs.modifiers)"/>
        </li>
        <li t-if="widget.field and widget.field.change_default" data-item="change_default">
            <span class="oe_tooltip_technical_title">Change default:</span>
            Yes
        </li>
        <li t-if="widget.attrs.on_change" data-item="on_change">
            <span class="oe_tooltip_technical_title">On change:</span>
            <t t-esc="widget.attrs.on_change"/>
        </li>
        <li t-if="widget.field and widget.field.relation" data-item="relation">
            <span class="oe_tooltip_technical_title">Relation:</span>
            <t t-esc="widget.field.relation"/>
        </li>
        <li t-if="widget.field and widget.field.selection" data-item="selection">
            <span class="oe_tooltip_technical_title">Selection:</span>
            <ul class="oe_tooltip_technical">
                <li t-foreach="widget.field.selection" t-as="option" t-key="option_index">
                    [<t t-esc="option[0]"/>]
                    <t t-if="option[1]"> - </t>
                    <t t-esc="option[1]"/>
                </li>
            </ul>
        </li>
    </ul>
</t>
<t t-name="WidgetButton.tooltip">
    <div class="oe_tooltip_string" t-if="debug || node.attrs.string" role="tooltip">
        <t t-if="debug">
            Button
            <t t-if="node.attrs.string">: </t>
            <t t-if="!node.attrs.string"> (no string)</t>
        </t>
        <t t-esc="node.attrs.string"/>
    </div>
    <p t-if="node.attrs.help" class="oe_tooltip_help" role="tooltip">
        <t t-esc="node.attrs.help"/>
    </p>
    <ul t-if="debug" class="oe_tooltip_technical" role="tooltip">
        <li data-item="object">
            <span class="oe_tooltip_technical_title">Object:</span>
            <t t-esc="state.model"/>
        </li>
        <li t-if="node.attrs.context" data-item="context">
            <span class="oe_tooltip_technical_title">Context:</span>
            <t t-esc="node.attrs.context || widget.field.context"/>
        </li>
        <li t-if="node.attrs.modifiers and !_.isEmpty(node.attrs.modifiers)" data-item="modifiers">
            <span class="oe_tooltip_technical_title">Modifiers:</span>
            <t t-esc="JSON.stringify(node.attrs.modifiers)"/>
        </li>
        <li t-if="node.attrs.special" data-item="special">
            <span class="oe_tooltip_technical_title">Special:</span>
            <t t-esc="node.attrs.special"/>
        </li>
        <t t-set="button_type" t-value="node.attrs.type"/>
        <li t-if="button_type" data-item="button_type">
            <span class="oe_tooltip_technical_title">Button Type:</span>
            <t t-esc="button_type"/>
        </li>
        <li t-if="button_type === 'object'" data-item="button_method">
            <span class="oe_tooltip_technical_title">Method:</span>
            <t t-esc="node.attrs.name"/>
        </li>
        <li t-if="button_type === 'action'" data-item="button_action">
            <span class="oe_tooltip_technical_title">Action ID:</span>
            <t t-esc="node.attrs.name"/>
        </li>
    </ul>
</t>

<div t-name="Action" class="o_action">
    <div class="o_content"/>
</div>

<t t-name="ListView.buttons">
    <div class="o_legacy_list_buttons d-flex" role="toolbar" aria-label="Main actions">
        <button type="button" class="btn btn-primary o_list_button_save" title="Save record" accesskey="s">
            Save
        </button>
        <button type="button" class="btn btn-secondary o_list_button_discard" title="Discard record" accesskey="j">
            Discard
        </button>
        <t t-if="widget.is_action_enabled('create')">
            <button type="button" class="btn btn-primary o_list_button_add" title="Create record" accesskey="c">
                Create
            </button>
        </t>
        <t t-if="widget.is_action_enabled('export_xlsx') and widget.isExportEnable">
            <button type="button" class="btn btn-secondary fa fa-download o_list_export_xlsx" title="Export All" aria-label="Export All"/>
        </t>
    </div>
</t>

<t t-name="ListView.selection">
    <div class="o_list_selection_box alert alert-info d-inline-flex align-items-center ps-0 px-lg-2 py-0 mb-0 ms-2" role="alert">
        <span t-if="isDomainSelected">All <span class="font-monospace" t-esc="nbTotal"/> selected</span>
        <t t-else="">
            <span class="font-monospace me-1" t-esc="nbSelected"/> selected
            <a t-if="isPageSelected and nbTotal &gt; nbSelected" href="#" class="o_list_select_domain ms-2 btn btn-sm btn-info px-2 py-1 border-0 fw-normal">
                <i class="fa fa-arrow-right"/> Select all <span class="font-monospace" t-esc="nbTotal"/>
            </a>
        </t>
    </div>
</t>

<t t-name="ListView.confirmModal">
    <main role="alert">
        <p>
            <t t-if="isDomainSelected">This update will only consider the records of the current page.<br/><br/></t>
            <t t-if="nbRecords != nbValidRecords">
                Among the <t t-esc="nbRecords"/> selected records,
                <t t-esc="nbValidRecords"/> are valid for this update.<br/>
            </t>
            Are you sure you want to perform the following update on those <t t-esc="nbValidRecords"/> records ?
        </p>
        <div class="table-responsive">
            <table class="o_modal_changes">
                <tbody>
                    <t t-foreach="fields" t-as="field" t-key="field_index">
                        <tr>
                            <td>Field:</td>
                            <td><t t-esc="field.label"/></td>
                        </tr>
                        <tr>
                            <td>Update to:</td>
                            <td>
                                <div class="o_changes_widget" t-att-data-name="field.name"/>
                            </td>
                        </tr>
                    </t>
                </tbody>
            </table>
        </div>
    </main>
</t>

<t t-name="FormView.buttons">
    <div class="o_form_buttons_view" role="toolbar" aria-label="Main actions">
        <button t-if="widget.is_action_enabled('edit')" type="button" class="btn btn-primary o_form_button_edit" title="Edit record" accesskey="a">
            Edit
        </button>
        <button t-if="widget.is_action_enabled('create')" type="button" class="btn btn-secondary o_form_button_create" title="Create record" accesskey="c">
            Create
        </button>
    </div>
    <div class="o_form_buttons_edit" role="toolbar" aria-label="Main actions">
        <button type="button" class="btn btn-primary o_form_button_save" title="Save record" accesskey="s">
            Save
        </button>
        <button type="button" class="btn btn-secondary o_form_button_cancel" title="Discard record" accesskey="j">
            Discard
        </button>
    </div>
</t>
<t t-name="SaveCancelButton.tooltip">
    <div class="oe_tooltip_string" role="alert">
        <div class="tooltip-inner">
            Hit ENTER to SAVE<br/>
            Hit ESCAPE to DISCARD
        </div>
    </div>
</t>
<t t-name="CreateButton.tooltip">
    <div class="oe_tooltip_string" role="tooltip">
        <div class="tooltip-inner">
            Hit ENTER to CREATE<br/>
            Hit DOWN to navigate to the list below
        </div>
    </div>
</t>
<t t-name="FormButton.tooltip">
    <div class="oe_tooltip_string" role="tooltip">
        <div class="tooltip-inner">
            Hit ENTER to
            <t t-esc="title"/>
        </div>
    </div>
</t>
<form t-name="FormView.set_default" aria-atomic="true">
    <t t-set="args" t-value="widget.args"/>
    <table style="width: 100%">
        <tr>
            <td>
                <label for="formview_default_fields" class="oe_label oe_align_right">
                    Default:
                </label>
            </td>
            <td class="oe_form_required">
                <select id="formview_default_fields" class="o_input">
                    <option value=""/>
                    <option t-foreach="args.fields" t-as="field" t-key="field_index" t-att-value="field.name">
                        <t t-esc="field.string"/> = <t t-esc="field.displayed"/>
                    </option>
                </select>
            </td>
        </tr>
        <tr t-if="args.conditions.length">
            <td>
                <label for="formview_default_conditions" class="oe_label oe_align_right">
                    Condition:
                </label>
            </td>
            <td>
                <select id="formview_default_conditions" class="o_input">
                    <option value=""/>
                    <option t-foreach="args.conditions" t-as="cond" t-key="cond_index" t-att-value="cond.name + '=' + cond.value">
                        <t t-esc="cond.string"/>=<t t-esc="cond.displayed"/>
                    </option>
                </select>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="radio" id="formview_default_self" value="self" name="scope" checked="checked"/>
                <label for="formview_default_self" class="oe_label" style="display: inline;">
                    Only you
                </label>
                <br/>
                <input type="radio" id="formview_default_all" value="all" name="scope"/>
                <label for="formview_default_all" class="oe_label" style="display: inline;">
                    All users
                </label>
            </td>
        </tr>
    </table>
</form>
<t t-name="GraphView.buttons">
    <div class="btn-group mb-2 mb-sm-auto" role="toolbar" aria-label="Main actions"/>
    <div class="btn-group o_graph_align mb-2 mb-sm-auto" role="toolbar" aria-label="Change graph">
        <button class="btn btn-secondary o_graph_button fa fa-bar-chart" title="Bar Chart" aria-label="Bar Chart" data-mode="bar"/>
        <button class="btn btn-secondary o_graph_button fa fa-area-chart" title="Line Chart" aria-label="Line Chart" data-mode="line"/>
        <button class="btn btn-secondary o_graph_button fa fa-pie-chart" title="Pie Chart" aria-label="Pie Chart" data-mode="pie"/>
    </div>
    <div class="btn-group o_stack_align mb-2 mb-sm-auto" role="toolbar" aria-label="Change graph">
        <button class="btn btn-secondary o_graph_button fa fa-database" title="Stacked" aria-label="Stacked" data-mode="stack"/>
    </div>
    <div class="btn-group o_sort_align mb-2 mb-sm-auto" role="toolbar" aria-label="Sort graph">
        <button class="btn btn-secondary o_graph_button fa fa-sort-amount-desc" title="Descending" aria-label="Descending" data-order="desc"/>
        <button class="btn btn-secondary o_graph_button fa fa-sort-amount-asc" title="Ascending" aria-label="Ascending" data-order="asc"/>
    </div>
</t>

<t t-name="PivotView.buttons">
    <div class="btn-group" role="toolbar" aria-label="Main actions">
        <button class="btn btn-primary dropdown-toggle o-no-caret" data-bs-toggle="dropdown" aria-expanded="false">
            Measures <i class="fa fa-caret-down ms-1"/>
        </button>
        <div class="dropdown-menu o_pivot_measures_list" role="menu">
            <t t-foreach="measures" t-as="measure" t-key="measure_index">
                <a role="menuitem" href="#" class="dropdown-item" t-att-data-field="measure[0]"><t t-esc="measure[1].string"/><t t-if="measure[1].type === 'many2one'"> (count)</t></a>
            </t>
            <div role="separator" class="dropdown-divider"/>
            <a role="menuitem" href="#" class="dropdown-item" data-field="__count">Count</a>
        </div>
    </div>
    <div class="btn-group" role="toolbar" aria-label="Pivot settings">
        <button class="btn btn-secondary fa fa-exchange o_pivot_flip_button" title="Flip axis" aria-label="Flip axis"/>
        <button class="btn btn-secondary fa fa-arrows o_pivot_expand_button" title="Expand all" aria-label="Expand all"/>
        <button class="btn btn-secondary fa fa-download o_pivot_download" title="Download xlsx" aria-label="Download xlsx"/>
    </div>
</t>

<t t-name="FormSelection">
    <div class="btn-group o_selection" aria-atomic="true">
        <a href="#" data-bs-toggle="dropdown" aria-expanded="false" role="button" title="Dropdown menu">
            <span class="o_status d-inline-block align-middle"/>
        </a>
        <div class="dropdown-menu state" role="menu"/>
    </div>
</t>
<t t-name="FormSelection.items">
    <t t-foreach="states" t-as="rec" t-key="rec_index">
        <a role="menuitem" href="#" class="dropdown-item ps-4" t-att-data-value="rec.name">
            <span t-att-class="'o_status rounded-circle d-inline-block align-middle ' + (rec.state_class &amp;&amp; rec.state_class || '')"/>
            <t t-out="rec.state_name"/>
        </a>
    </t>
</t>
<t t-name="FieldDomain.content">
    <div t-if="hasModel" class="o_field_domain_panel">
        <t t-if="nbRecords !== null">
            <i class="fa fa-arrow-right" role="img" aria-label="Domain" title="Domain"/>
            <button t-if="isValid" class="btn btn-sm btn-secondary o_domain_show_selection_button" type="button">
                <t t-esc="nbRecords"/> record(s)
            </button>
            <span t-else="" class="text-warning" role="alert"><i class="fa fa-exclamation-triangle" role="img" aria-label="Warning" title="Warning"/> Invalid domain</span>
            <button t-if="isDebug and editMode" class="btn btn-sm btn-icon fa fa-refresh o_refresh_count" role="img" aria-label="Refresh" title="Refresh"/>
        </t>
        <t t-else="">
            <i class="fa fa-circle-o-notch fa-spin" role="img" aria-label="Loading" title="Loading"/>
        </t>

        <button t-if="inDialog and editMode" class="btn btn-sm btn-primary o_field_domain_dialog_button">Edit Domain</button>
    </div>
    <div t-else="">Select a model to add a filter.</div>
</t>

<t t-name="DomainNode.ControlPanel">
    <div t-if="!widget.readonly &amp;&amp; !widget.noControlPanel" class="o_domain_node_control_panel" role="toolbar" aria-label="Domain node">
        <button class="btn btn-link text-danger o_domain_delete_node_button" title="Delete node" aria-label="Delete node"><i class="fa fa-times"/></button>
        <button class="btn o_domain_add_node_button" title="Add node" aria-label="Add node"><i class="fa fa-plus-circle"/></button>
        <button class="btn o_domain_add_node_button" title="Add branch" aria-label="Add branch" data-branch="1"><i class="fa fa-ellipsis-h"/></button>
    </div>
</t>
<t t-name="DomainTree.OperatorSelector">
    <div t-if="!widget.readonly" class="btn-group o_domain_tree_operator_selector" aria-atomic="true">
        <button class="btn btn-sm btn-primary o_domain_tree_operator_caret" data-bs-toggle="dropdown">
            <t t-if="widget.operator === '&amp;'">All</t>
            <t t-if="widget.operator === '|'">Any</t>
            <t t-if="widget.operator === '!'">None</t>
        </button>
        <div class="dropdown-menu" role="menu">
            <a role="menuitem" href="#" class="dropdown-item" data-operator="&amp;">All</a>
            <a role="menuitem" href="#" class="dropdown-item" data-operator="|">Any</a>
        </div>
    </div>
    <strong t-else="">
        <t t-if="widget.operator === '&amp;'">ALL</t>
        <t t-if="widget.operator === '|'">ANY</t>
        <t t-if="widget.operator === '!'">NONE</t>
    </strong>
</t>
<div aria-atomic="true" t-name="DomainSelector" t-attf-class="o_domain_node o_domain_tree o_domain_selector #{widget.readonly ? 'o_read_mode' : 'o_edit_mode'}">
    <t t-if="widget.children.length === 0">
        <span>Match <strong>all records</strong></span>
        <button t-if="!widget.readonly" class="btn btn-sm btn-primary o_domain_add_first_node_button"><i class="fa fa-plus"/> Add filter</button>
    </t>
    <t t-else="">
        <div class="o_domain_tree_header">
            <t t-if="widget.children.length === 1">Match records with the following rule:</t>
            <t t-else="">
                <span>Match records with</span>
                <t t-call="DomainTree.OperatorSelector"/>
                <span>of the following rules:</span>
            </t>
        </div>

        <div class="o_domain_node_children_container"/>
    </t>
    <label t-if="widget.debug &amp;&amp; !widget.readonly" class="o_domain_debug_container">
        <span class="small"># Code editor</span>
        <textarea type="text" class="o_domain_debug_input"/>
    </label>
</div>
<div t-name="DomainTree" class="o_domain_node o_domain_tree">
    <div class="o_domain_tree_header o_domain_selector_row">
        <t t-call="DomainNode.ControlPanel"/>
        <t t-call="DomainTree.OperatorSelector"/>
        <span class="ml4">of:</span>
    </div>

    <div class="o_domain_node_children_container"/>
</div>
<div t-name="DomainLeaf" t-attf-class="o_domain_node o_domain_leaf o_domain_selector_row #{widget.readonly ? 'o_read_mode' : 'o_edit_mode'}">
    <t t-call="DomainNode.ControlPanel"/>

    <div t-if="!widget.readonly" class="o_domain_leaf_edition">

        <div> 
            <select class="o_domain_leaf_operator_select o_input">
                <option t-foreach="widget.operators" t-as="key" t-key="key_index" t-att-value="key" t-att-selected="widget.displayOperator === key ? 'selected' : None">
                    <t t-esc="key_value"/>
                </option>
            </select>
        </div>
        <div t-attf-class="o_ds_value_cell#{_.contains(['set', 'not set'], widget.displayOperator) ? ' d-none' : ''}">
            <t t-if="widget.selectionChoices !== null">
                <select class="o_domain_leaf_value_input o_input">
                    <option t-foreach="widget.selectionChoices" t-as="val" t-key="val_index" t-att-value="val[0]" t-att-selected="_.contains(val, widget.displayValue) ? 'selected' : None">
                        <t t-esc="val[1]"/>
                    </option>
                </select>
            </t>
            <t t-else="">
                <t t-if="_.contains(['in', 'not in'], widget.operator)">
                    <div class="o_domain_leaf_value_input">
                        <span class="badge rounded-pill" t-foreach="widget.displayValue" t-as="val" t-key="val_index">
                            <t t-esc="val"/> <i class="o_domain_leaf_value_remove_tag_button fa fa-times" t-att-data-value="val" role="img" aria-label="Remove tag" title="Remove tag"/>
                        </span>
                    </div>
                    <div class="o_domain_leaf_value_tags">
                        <input placeholder="Add new value" type="text" class="o_input"/>
                        <button class="btn btn-sm btn-primary fa fa-plus o_domain_leaf_value_add_tag_button" aria-label="Add tag" title="Add tag"/>
                    </div>
                </t>
                <t t-else="">
                    <input class="o_domain_leaf_value_input o_input" type="text" t-att-value="widget.displayValue"/>
                </t>
            </t>
        </div>
    </div>
    <div t-else="" class="o_domain_leaf_info">

        <t t-if="_.isString(widget.value)">
            <span class="o_domain_leaf_operator"><t t-esc="widget.operator_mapping[widget.operator]"/></span>
            <span class="o_domain_leaf_value text-primary">"<t t-esc="widget.value"/>"</span>
        </t>
        <t t-if="_.isArray(widget.value)">
            <span class="o_domain_leaf_operator"><t t-esc="widget.operator_mapping[widget.operator]"/></span>
            <t t-foreach="widget.value" t-as="v" t-key="v_index">
                <span class="o_domain_leaf_value text-primary">"<t t-esc="v"/>"</span>
                <t t-if="!v_last"> or </t>
            </t>
        </t>
        <t t-if="_.isNumber(widget.value)">
            <span class="o_domain_leaf_operator"><t t-esc="widget.operator_mapping[widget.operator]"/></span>
            <span class="o_domain_leaf_value text-primary"><t t-esc="widget.value"/></span>
        </t>
        <t t-if="_.isBoolean(widget.value)">
            is
            <t t-if="widget.operator === '=' &amp;&amp; widget.value === false || widget.operator === '!=' &amp;&amp; widget.value === true">not</t>
            set
        </t>
    </div>
</div>
<div aria-atomic="true" t-name="ModelFieldSelector" t-attf-class="o_field_selector o_legacy_field_selector#{!widget.options.readonly ? ' o_edit_mode o_input' : ''}">
    <div class="o_field_selector_value" tabindex="0"/>
    <div class="o_field_selector_controls" tabindex="0">
        <i role="alert" class="fa fa-exclamation-triangle o_field_selector_warning d-none" title="Invalid field chain" aria-label="Invalid field chain"/>
    </div>
</div>
<div t-name="ModelFieldSelector.popover" class="o_field_selector_popover o_legacy_field_selector_popover d-none" tabindex="0">
    <div class="o_field_selector_popover_header text-center">
        <i class="fa fa-arrow-left o_field_selector_popover_option o_field_selector_prev_page" title="Previous" role="img" aria-label="Previous"/>
        <div class="o_field_selector_title"/>
        <i class="fa fa-times o_field_selector_popover_option o_field_selector_close" title="Close" role="img" aria-label="Close"/>
        <div t-if="widget.options.showSearchInput" class="o_field_selector_search mt-2">
            <input type="text" placeholder="Search a field..." class="o_input"/>
        </div>
        <div t-if="widget.options.needDefaultValue" class="o_field_selector_default_value_input mt-2 d-none">
            <input type="text" placeholder="type a default text or press ENTER" class="o_input"/>
        </div>
    </div>
    <div class="o_field_selector_popover_body">
        <ul class="o_field_selector_page"/>
    </div>
    <div t-if="widget.options.debugMode" class="o_field_selector_popover_footer">
        <input type="text" class="o_input o_field_selector_debug"/>
    </div>
</div>
<t t-name="ModelFieldSelector.value">
    <t t-foreach="chain" t-as="fieldName" t-key="fieldName_index">
        <t t-if="fieldName_index &gt; 0">
            <i class="fa fa-chevron-right" role="img" aria-label="Followed by" title="Followed by"/>
        </t>
        <span class="o_field_selector_chain_part">
            <t t-if="fieldName === '1'">
                <t t-esc="fieldName"/>
            </t>
            <t t-elif="fieldName === '0'">
                <t t-esc="fieldName"/>
            </t>
            <t t-else="">
                <t t-set="fieldInfo" t-value="_.findWhere(pages[fieldName_index], {'name': fieldName})"/>
                <t t-esc="fieldInfo &amp;&amp; fieldInfo.string || '?'"/>
            </t>
        </span>
    </t>
</t>
<ul t-name="ModelFieldSelector.defaultValue" class="o_field_selector_page o_field_selector_default_value">
    <li t-attf-class="o_field_selector_item active o_field_selector_select_button">
        <t t-esc="line.string"/>
        <div class="text-muted o_field_selector_item_title"><t t-esc="line.description"/></div>
    </li>
</ul>
<ul t-name="ModelFieldSelector.page" class="o_field_selector_page">
    <t t-foreach="lines" t-as="line" t-key="line_index">
        <t t-set="relationToFollow" t-value="followRelations(line) &amp;&amp; line.relation"/>
        <li t-attf-class="o_field_selector_item #{relationToFollow and 'o_field_selector_next_page' or 'o_field_selector_select_button'}#{line_index == 0 and ' active' or ''}" t-att-data-name="line.name">
            <t t-esc="line.string"/>
            <div t-if="debug" class="text-muted o_field_selector_item_title"><t t-esc="line.name"/> (<t t-esc="line.type"/>)</div>
            <i t-if="relationToFollow" class="fa fa-chevron-right o_field_selector_relation_icon" role="img" aria-label="Relation to follow" title="Relation to follow"/>
        </li>
    </t>
</ul>

<t t-name="web.datepicker">
    <t t-set="placeholder" t-value="widget.getParent().node and widget.getParent().node.attrs.placeholder"/>
    <t t-set="datepickerID" t-value="_.uniqueId('datepicker')"/>
    <div class="o_datepicker" aria-atomic="true" t-att-id="datepickerID" data-target-input="nearest">
        <input type="text" class="o_datepicker_input o_input datetimepicker-input" t-att-name="widget.name" t-att-placeholder="placeholder" t-attf-data-target="##{datepickerID}" autocomplete="off"/>
        <span class="o_datepicker_button"/>
    </div>
</t>
<t t-name="web.Legacy.FieldSelection">
    <span t-if="widget.mode === 'readonly'"/>

    <select t-if="widget.mode !== 'readonly'" class="o_input" t-att-name="widget.name" t-att-tabindex="widget.attrs.tabindex" t-att-autofocus="widget.attrs.autofocus" t-att-id="widget.idForLabel"/>
</t>
<t t-name="FieldRadio.button">
    <div class="form-check o_radio_item" aria-atomic="true">
        <input type="radio" class="form-check-input o_radio_input" t-att-checked="checked ? true : undefined" t-att-disabled="disabled ? true : undefined" t-att-name="name" t-att-data-value="value[0]" t-att-data-index="index" t-att-id="id"/>
        <label class="form-check-label o_form_label" t-att-for="id"><t t-esc="value[1]"/></label>
    </div>
</t>

<t t-name="FieldSelectionBadge">
    <span t-foreach="values" t-as="value" t-key="value_index" t-attf-class="o_selection_badge #{value[0] == current_value ? 'active' : ''}" t-att-data-index="value_index">
        <t t-esc="value[1]"/>
    </span>
</t>

<t t-name="FieldMany2One">
    <t t-if="widget.mode === 'readonly'">
        <a t-if="!widget.noOpen" t-att-tabindex="widget.attrs.tabindex" class="o_form_uri" href="#"/>
        <span t-if="widget.noOpen"/>
    </t>
    <div t-if="widget.mode === 'edit'" class="o_field_widget o_field_many2one" aria-atomic="true">
        <div class="o_field_many2one_selection">
            <div class="o_input_dropdown">
                <input type="text" class="o_input form-control" t-att-barcode_events="widget.nodeOptions.barcode_events" t-att-tabindex="widget.attrs.tabindex" t-att-autofocus="widget.attrs.autofocus" t-att-placeholder="widget.attrs.placeholder" t-att-id="widget.idForLabel"/>
                <a role="button" class="o_dropdown_button" draggable="false"/>
            </div>
            <button type="button" t-if="!widget.noOpen" class="fa fa-external-link btn btn-secondary o_external_button" tabindex="-1" draggable="false" aria-label="External link" title="External link"/>
        </div>
        <div class="o_field_many2one_extra"/>
    </div>
</t>

<t t-name="web.Many2OneAvatar">
    <div class="o_m2o_avatar">
        <img t-if="widget.value" t-att-src="url" t-att-alt="value"/>
        <span t-elif="widget.mode === 'edit'" class="o_m2o_avatar_empty"/>
        <span t-if="widget.mode === 'readonly'" t-esc="value"/>
    </div>
</t>

<t t-name="FieldReference" t-extend="FieldMany2One">
    <t t-jquery=".o_input_dropdown" t-operation="before">
        <t t-if="!widget.nodeOptions.model_field">
            <select t-att-class="'o_input o_field_widget o_legacy_field_widget' + (widget.nodeOptions.hide_model and ' d-none' or '')">
                <option/>
                <option t-foreach="widget.field.selection" t-as="model" t-key="model_index" t-att-value="model[0]"><t t-esc="model[1]"/></option>
            </select>
        </t>
    </t>
</t>
<t t-name="FieldMany2ManyTag">
    <t t-foreach="elements" t-as="el" t-key="el_index">
        <t t-set="color" t-value="el[colorField] || 0"/>
        <t t-set="colornames" t-value="['No color', 'Red', 'Orange', 'Yellow', 'Light blue', 'Dark purple', 'Salmon pink', 'Medium blue', 'Dark blue', 'Fushia', 'Green', 'Purple']"/>
        <div t-attf-class="badge rounded-pill #{hasDropdown ? 'dropdown' : ''} o_tag_color_#{color}" t-att-data-color="color" t-att-data-index="el_index" t-att-data-id="el.id" t-attf-title="Tag color: #{colornames[color]}">
            <t t-set="_badge_text">
                <span class="o_badge_text" t-att-title="el.display_name"><span role="img" t-attf-aria-label="Tag color: #{colornames[color]}"/><span class="o_tag_badge_text" t-esc="el.display_name"/></span>
            </t>
            <t t-if="hasDropdown">
                <a role="button" href="#" class="dropdown-toggle o-no-caret" aria-expanded="false">
                    <t t-out="_badge_text"/>
                </a>
            </t>
            <t t-else="">
                <t t-out="_badge_text"/>
            </t>
            <a t-if="!readonly" href="#" class="fa fa-times o_delete" title="Delete" aria-label="Delete"/>
        </div>
    </t>
</t>
<t t-name="FieldMany2ManyTagAvatar" t-extend="FieldMany2ManyTag">
    <t t-jquery="t[t-set='_badge_text']" t-operation="before">
        <span><img t-attf-src="/web/image/#{avatarModel}/#{el.id}/#{avatarField}" t-att-data-id="el.id" class="rounded-circle o_m2m_avatar"/></span>
    </t>
</t>
<t t-name="KanbanMany2ManyTagAvatar">
    <t t-set="visibleElements" t-value="elements.length === widget.visibleAvatarCount ? elements : elements.slice(0, widget.visibleAvatarCount - 1)"/>
    <t t-foreach="visibleElements" t-as="el" t-key="el_index">
        <span><img t-attf-src="/web/image/#{avatarModel}/#{el.id}/#{avatarField}" t-att-title="el.display_name" t-att-data-id="el.id" class="rounded-circle o_m2m_avatar"/></span>
    </t>
    <t t-if="elements.length &gt; widget.visibleAvatarCount">
        <span class="o_m2m_avatar_empty rounded-circle text-center fw-bold">
            <span t-if="elements.length - widget.visibleAvatarCount + 1 &gt; 9">9+</span>
            <span t-else="">+<t t-esc="elements.length - widget.visibleAvatarCount + 1"/></span>
        </span>
    </t>
</t>
<t t-name="ListMany2ManyTagAvatar">
    <t t-if="widget.mode !== 'readonly'">
        <t t-call="FieldMany2ManyTagAvatar"/>
    </t>
    <t t-else="">
        <t t-if="elements.length === 1">
            <div>
                <img t-attf-src="/web/image/#{avatarModel}/#{elements[0].id}/#{avatarField}" t-att-data-id="elements[0].id" class="rounded-circle o_m2m_avatar"/>
                <span t-esc="elements[0].display_name"/>
            </div>
        </t>
        <t t-else="">
            <t t-set="visibleElements" t-value="elements.length === widget.visibleAvatarCount ? elements : elements.slice(0, widget.visibleAvatarCount - 1)"/>
            <t t-foreach="visibleElements" t-as="el" t-key="el_index">
                <span><img t-attf-src="/web/image/#{avatarModel}/#{el.id}/#{avatarField}" t-att-title="el.display_name" t-att-data-id="el.id" class="rounded-circle o_m2m_avatar"/></span>
            </t>
            <t t-if="elements.length &gt; widget.visibleAvatarCount">
                <span class="o_m2m_avatar_empty rounded-circle text-center fw-bold">
                    <span t-if="elements.length - widget.visibleAvatarCount + 1 &gt; 9">9+</span>
                    <span t-else="">+<t t-esc="elements.length - widget.visibleAvatarCount + 1"/></span>
                </span>
            </t>
        </t>
    </t>
</t>
<t t-name="Many2ManyTagAvatarPopover">
    <t t-foreach="elements" t-as="el" t-key="el_index">
        <div><t t-esc="el.display_name"/></div>
    </t>
</t>
<t t-name="FieldMany2ManyTag.colorpicker">
    <div class="o_colorpicker dropdown-menu tagcolor_dropdown_menu" role="menu">
        <ul>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_1" data-color="1" title="Red" aria-label="Red"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_2" data-color="2" title="Orange" aria-label="Orange"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_3" data-color="3" title="Yellow" aria-label="Yellow"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_4" data-color="4" title="Light blue" aria-label="Light blue"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_5" data-color="5" title="Dark purple" aria-label="Dark purple"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_6" data-color="6" title="Salmon pink" aria-label="Salmon pink"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_7" data-color="7" title="Medium blue" aria-label="Medium blue"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_8" data-color="8" title="Dark blue" aria-label="Dark blue"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_9" data-color="9" title="Fushia" aria-label="Fushia"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_10" data-color="10" title="Green" aria-label="Green"/></li>
            <li><a role="menuitem" href="#" t-att-data-id="tag_id" class="o_tag_color_11" data-color="11" title="Purple" aria-label="Purple"/></li>
            <li> 
                <div role="menuitem" class="o_hide_in_kanban" t-att-data-id="tag_id" t-att-data-color="0">
                    <div class="form-check">
                        <input type="checkbox" id="o_hide_in_kanban_checkbox" class="form-check-input"/>
                        <label for="o_hide_in_kanban_checkbox" class="form-check-label">Hide in Kanban</label>
                    </div>
                </div>
            </li>
        </ul>
    </div>
</t>
<t t-name="ProgressBar">
    <div class="o_progressbar" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
        <div t-if="widget.title" class="o_progressbar_title"><t t-esc="widget.title"/></div><div class="o_progress">
            <div class="o_progressbar_complete"/>
        </div><div class="o_progressbar_value"/>
    </div>
</t>
<t t-name="FieldPercentPie">
    <div class="o_field_percent_pie">
        <div class="o_pie">
            <div class="o_mask"/>
            <div class="o_mask"/>
            <div class="o_pie_value"/>
        </div>
        <span t-if="widget.string"><t t-esc="widget.string"/></span>
    </div>
</t>
<t t-name="FieldStatus.content">
    <t t-if="selection_folded.length">
        <button type="button" class="btn o_arrow_button btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">More</button>
        <div class="dropdown-menu" role="menu">
            <t t-foreach="selection_folded" t-as="i" t-key="i_index">
                <t t-call="FieldStatus.content.button">
                    <t t-set="is_dropdown" t-value="true"/>
                </t>
            </t>
        </div>
    </t>
    <t t-foreach="selection_unfolded.reverse()" t-as="i" t-key="i_index">
        <t t-call="FieldStatus.content.button"/>
    </t>
</t>
<t t-name="FieldStatus.content.button">
    <t t-set="disabled" t-value="!clickable"/>
    <button type="button" t-att-data-value="i.id" disabled="disabled" title="Current state" aria-checked="true" t-att-role="is_dropdown ? 'menuitemradio': 'radio'" t-attf-class="btn o_arrow_button btn-primary disabled cursor-default #{is_dropdown ? 'dropdown-item bg-primary text-white': ''}" t-if="i.selected" aria-current="step">
        <t t-esc="i.display_name" role="img" t-attf-aria-label="#{i.display_name} is current state"/>
    </button>
    <button type="button" t-att-data-value="i.id" disabled="disabled" title="Not active state" aria-checked="false" t-att-role="is_dropdown ? 'menuitemradio': 'radio'" t-attf-class="btn o_arrow_button btn-secondary disabled cursor-default #{is_dropdown ? 'dropdown-item': ''}" t-if="!i.selected and disabled">
        <t t-esc="i.display_name" role="img" t-attf-aria-label="#{i.display_name} is not current state"/>
    </button>
    <button type="button" t-att-data-value="i.id" title="Not active state, click to change it" aria-checked="false" t-att-role="is_dropdown ? 'menuitemradio': 'radio'" t-attf-class="btn o_arrow_button btn-secondary #{is_dropdown ? 'dropdown-item': ''}" t-if="!i.selected and !disabled">
        <t t-esc="i.display_name" role="img" t-attf-aria-label="Click to change current state to #{i.display_name}"/>
    </button>
</t>
<t t-name="FieldBinaryImage">
    <div class="o_field_image" aria-atomic="true">
        <t t-if="widget.mode !== 'readonly'">
            <div class="o_form_image_controls">
                <button class="fa fa-pencil fa-lg float-start o_select_file_button" title="Edit" aria-label="Edit"/>
                <button class="fa fa-trash-o fa-lg float-end o_clear_file_button" title="Clear" aria-label="Clear"/>

                <span class="o_form_binary_progress">Uploading...</span>
                <t t-call="HiddenInputFile">
                    <t t-set="fileupload_id" t-value="widget.fileupload_id"/>
                </t>
            </div>
        </t>
    </div>
</t>
<t t-name="FieldBinaryImage-img">
    <img class="img img-fluid" alt="Binary file" t-att-src="url" t-att-name="widget.name"/>
</t>
<t t-name="CopyClipboardButton">
    <button class="btn btn-secondary o_clipboard_button o_btn_button_copy">Copy</button>
</t>
<t t-name="CopyClipboardText">
    <button class="btn btn-sm btn-primary o_clipboard_button o_btn_text_copy">
        <span class="fa fa-clipboard"/><span> Copy</span>
    </button>
</t>
<t t-name="CopyClipboardChar">
    <button class="btn btn-sm btn-primary o_clipboard_button o_btn_char_copy">
        <span class="fa fa-clipboard"/><span> Copy</span>
    </button>
</t>
<t t-name="FieldBinaryFile">
    <a t-if="widget.mode === 'readonly'" href="javascript:void(0)" class="o_form_uri"/>

    <div t-if="widget.mode !== 'readonly'" class="o_field_binary_file" aria-atomic="true">
        <input type="text" class="o_input" readonly="readonly" t-att-name="widget.name" t-att-tabindex="widget.attrs.tabindex" t-att-autofocus="widget.attrs.autofocus"/>

        <button type="button" class="btn btn-primary o_select_file_button" title="Select">Upload your file</button>
        <button type="button" class="btn btn-secondary fa fa-pencil o_select_file_button" title="Select" aria-label="Select"/>
        <button type="button" class="btn btn-secondary fa fa-trash-o o_clear_file_button" title="Clear" aria-label="Clear"/>

        <span class="o_form_binary_progress">Uploading...</span>
        <t t-call="HiddenInputFile">
            <t t-set="fileupload_id" t-value="widget.fileupload_id"/>
            <t t-set="fileupload_style" t-translation="off">overflow-x: hidden</t>
        </t>
    </div>
</t>

<t t-name="HiddenInputFile">
    <div t-attf-class="o_hidden_input_file #{fileupload_class or ''}" t-att-style="fileupload_style" aria-atomic="true">
        <form class="o_form_binary_form" t-att-target="fileupload_id" method="post" enctype="multipart/form-data" t-att-action="fileupload_action || '/web/binary/upload'">
            <input type="hidden" name="csrf_token" t-att-value="csrf_token"/>
            <input type="hidden" name="callback" t-att-value="fileupload_id"/>
            <input type="file" class="o_input_file" name="ufile" t-att="{'multiple': multi_upload ? 'multiple' : null, 'accept': widget.accepted_file_extensions || '*'}"/>
            <t t-out="0"/>
        </form>
        <iframe t-att-id="fileupload_id" t-att-name="fileupload_id" style="display: none"/>
    </div>
</t>

<t t-name="FieldBinarySignature-img">
    <img class="o_signature img img-fluid" alt="Binary file" t-att-src="url" t-att-name="widget.name"/>
</t>

<div t-name="FieldBinarySignature">
    <div class="o_sign_signature_draw panel panel-default mt16 mb0">
        <div class="card-header">
            <a role="button" class="o_sign_select_style float-end btn btn-link">Select Signature Style</a>
            <a role="button" class="o_sign_clean float-end btn btn-link">Clear Signature</a>
            <a data-mode="draw" class="o_sign_mode o_sign_mode_draw btn btn-primary" role="button">Draw</a>
            <a data-mode="auto" class="o_sign_mode o_sign_mode_auto btn" role="button">Auto</a>
            <a data-mode="load" class="o_sign_mode o_sign_mode_load btn" role="button">Load</a>
            <input type="file" name="files[]" class="o_sign_load btn btn-link" role="button"/>
        </div>
        <div class="o_sign_signature card-body"/>
    </div>
    <div class="mt16 small">By clicking Adopt &amp; Sign, I agree that the chosen signature/initials will be a valid electronic representation of my hand-written signature/initials for all purposes when it is used on documents, including legally binding contracts.</div>

    <div class="o_sign_font_dialog card">
        <div class="card-header">Styles</div>
        <div class="o_sign_font_selection card-body"/>
    </div>
</div>

<t t-name="SignatureSvgText" name="SVG Signature Text">
    <svg t-att-width="width" t-att-height="height">
        <defs>
            <style type="text/css">
                @font-face {
                    font-family: "font_sign";
                    src: url(data:font/ttf;base64,<t t-esc="font"/>) format("woff");
                    font-weight: normal;
                    font-style: normal;
                }
            </style>
        </defs>
        <text x="50%" t-att-y="height*4/5" t-att-font-size="height*4/5" t-att-textLength="width * 4 / 5 * Math.min(1, text.length / 7)" lengthAdjust="spacingAndGlyphs" style="font-family:'font_sign'" fill="black" text-anchor="middle"><t t-esc="text"/></text>
    </svg>
</t>

<t t-name="FieldPdfViewer">
    <div class="o_field_pdfviewer" aria-atomic="true">
        <div t-if="widget.mode !== 'readonly'" class="o_form_pdf_controls mt8" role="toolbar" aria-label="PDF controls">
            <span class="o_form_binary_progress">Uploading...</span>
            <button type="button" class="btn btn-primary o_select_file_button" title="Select">Upload your file</button>
            <button class="btn btn-secondary fa fa-pencil o_select_file_button" title="Select" aria-label="Select" type="button"/>
            <button class="btn btn-secondary fa fa-trash-o o_clear_file_button" title="Clear" aria-label="Clear" type="button"/>
        </div>
        <iframe class="o_pdfview_iframe o_field_pdfviewer"/>
        <t t-call="HiddenInputFile">
            <t t-set="fileupload_id" t-value="widget.fileupload_id"/>
            <t t-set="fileupload_style" t-translation="off">overflow-x: hidden</t>
        </t>
    </div>
</t>

<div t-name="FieldBinaryFileUploader" t-attf-class="oe_fileupload #{widget.attrs.class ? widget.attrs.class :''}" aria-atomic="true">
    <div class="oe_placeholder_files"/>
    <div t-if="widget.mode !== 'readonly'" class="oe_add">
        <button class="btn btn-secondary o_attach" title="Attach"><span class="fa fa-paperclip" aria-label="Attach"/> <t t-esc="widget.string"/></button>
        <t t-call="HiddenInputFile">
            <t t-set="fileupload_id" t-value="widget.fileupload_id"/>
            <t t-set="fileupload_action" t-translation="off">/web/binary/upload_attachment</t>
            <t t-set="multi_upload" t-value="true"/>
            <input type="hidden" name="model" t-att-value="widget.model"/>
            <input type="hidden" name="id" t-att-value="widget.res_id or 0"/>
        </t>
    </div>
</div>

<t t-name="FieldBinaryFileUploader.attachment_preview">
    <t t-set="url" t-value="widget.metadata[file.id] ? widget.metadata[file.id].url : false"/>
    <t t-if="file.data" t-set="file" t-value="file.data"/>
    <t t-set="editable" t-value="widget.mode === 'edit'"/>
    <t t-if="file.mimetype" t-set="mimetype" t-value="file.mimetype"/>
    <div t-attf-class="o_attachment o_attachment_many2many #{ editable ? 'o_attachment_editable' : '' } #{upload ? 'o_attachment_uploading' : ''}" t-att-title="file.name">
        <div class="o_attachment_wrap">
            <t t-set="ext" t-value="file.name.replace(/^.*\\./, '')"/>
            <div class="o_image_box float-start" t-att-data-id="file.id">
                <a t-att-href="url" t-att-title="'Download ' + file.name" aria-label="Download">
                    <span class="o_image o_hover" t-att-data-mimetype="mimetype" t-att-data-ext="ext" role="img"/>
                </a>
            </div>

            <div class="caption">
                <a class="ml4" t-att-href="url" t-att-title="'Download ' + file.name"><t t-esc="file.name"/></a>
            </div>
            <div class="caption small">
                <a class="ml4 small text-uppercase" t-att-href="url" t-att-title="'Download ' + file.name"><b><t t-esc="ext"/></b></a>
                <div t-if="editable" class="progress o_attachment_progress_bar">
                    <div class="progress-bar progress-bar-striped active" style="width: 100%">Uploading</div>
                </div>
            </div>

            <div t-if="editable" class="o_attachment_uploaded"><i class="text-success fa fa-check" role="img" aria-label="Uploaded" title="Uploaded"/></div>
            <div t-if="editable" class="o_attachment_delete" t-att-data-id="file.id"><span class="text-white" role="img" aria-label="Delete" title="Delete">×</span></div>
        </div>
    </div>
</t>

<div t-name="FieldBinaryFileUploader.files" class="o_attachments" aria-atomic="true">

    <t t-foreach="widget.value.data" t-as="file" t-key="file_index">
        <t t-if="!file.data.upload" t-call="FieldBinaryFileUploader.attachment_preview"/>
    </t>

    <t t-foreach="widget.uploadingFiles" t-as="file" t-key="file_index">
        <t t-set="upload" t-value="true"/>
        <t t-call="FieldBinaryFileUploader.attachment_preview"/>
    </t>
</div>

<div t-name="ExportDialog" class="o_export">
    <div class="row o-export-panel h-100">
        <div class="o_left_panel col-12 col-md-6 h-100 d-flex flex-column flex-nowrap">
            <div class="form-check o_import_compat">
                <input class="form-check-input" id="o-update-data" type="checkbox"/>
                <label class="form-check-label" for="o-update-data">
                    I want to update data (import-compatible export)
                </label>
            </div>
            <div class="mt-3">
                <h4>Available fields</h4>
            </div>
            <div class="input-group mb-3">
                <input type="search" class="form-control o_export_search_input" id="o-export-search-filter" placeholder="Search"/>
            </div>
            <div class="o_left_field_panel flex-grow-1 px-2 overflow-auto border "/>
        </div>
        <div class="o_right_panel col-12 col-md-6 h-100 d-flex flex-column flex-nowrap mt-3 mt-md-0">
            <div class="o_export_format">
                <strong>Export Format:</strong>
            </div>
            <div class="mt-3">
                <h4>Fields to export</h4>
            </div>
            <div class="o_save_list">
                <t t-call="Export.SaveList"/>
            </div>
            <div class="o_exported_lists"/>
            <div class="o_right_field_panel flex-grow-1 px-2 overflow-auto border ">
                <ul class="o_fields_list list-unstyled my-2"/>
            </div>
        </div>
    </div>
</div>
<t t-name="Export.TreeItems">
    <t t-foreach="fields" t-as="field" t-key="field_index">
        <t t-set="has_child" t-value="field.children &amp;&amp; (field.id).split('/').length != 3"/>
        <div t-att-data-id="field.id" t-attf-class="o_export_tree_item #{has_child ? 'haschild o_expand' : ''} cursor-pointer position-relative ps-3 " tabindex="-1" role="treeitem"> 
            <span t-if="has_child" class="o_expand_parent d-inline-block position-absolute top-0 start-0 mt-1 ml-n3 small fa fa-chevron-right" role="img" aria-label="Show sub-fields" title="Show sub-fields"/>
            <div t-attf-class="o_tree_column text-wrap">
                <t t-esc="field.string"/>
                <t t-if="debug and field.id">
                    (<t t-esc="field.id"/>)
                </t>
                <span title="Select field" class="fa fa-plus float-end m-1 o_add_field"/>
            </div>
        </div>
    </t>
</t>
<t t-name="Export.SaveList">
    <div class="input-group mb-3">
        <label class="pt-2 fw-bold">Save as : </label>
        <input class="form-control ms-4 o_save_list_name" placeholder="New template"/>
        <button type="button" class="btn btn-secondary ms-1 o_save_list_btn"><i class="fa fa-floppy-o"/></button>
        <button type="button" class="btn btn-secondary ms-1 o_cancel_list_btn"><i class="fa fa-times"/></button>
    </div>
</t>
<t t-name="Export.SavedList">
    <div class="input-group mb-3">
        <label class="pt-2 mb-0 fw-bold">Template: </label>
        <select class="form-select ms-4 o_exported_lists_select">
            <option/>
            <option class="fst-italic" value="new_template">New template</option>
            <t t-foreach="existing_exports" t-as="export" t-key="export_index">
                <option t-att-value="export.id">
                    <t t-esc="export.name"/>
                </option>
            </t>
        </select>
        <button type="button" class="btn btn-secondary d-none ms-1 o_delete_exported_list">
            <i class="fa fa-trash"/>
        </button>
    </div>
</t>

<t t-name="Throbber">
    <div>
        <div class="oe_blockui_spin" style="height: 50px">
            <img src="/web/static/img/spin.png" style="animation: fa-spin 1s infinite steps(12);" alt="Loading..."/>
        </div>
        <br/>
        <div class="oe_throbber_message" style="color:white"/>
    </div>
</t>
<t t-name="Spinner">
    <div class="o_spinner"><i class="fa fa-circle-o-notch fa-spin" role="img" aria-label="Loading, please wait..." title="Loading, please wait..."/></div>
</t>
<t t-name="M2ODialog">
    <div>
        Create <strong t-esc="widget.value"/> as a new <t t-esc="widget.name"/>?
    </div>
</t>
<t t-name="FieldMany2ManyCheckBoxes">
    <div aria-atomic="true">
        <div t-foreach="widget.m2mValues" t-as="m2m_value" t-key="m2m_value_index">
            <t t-set="id_for_label" t-value="'o_many2many_checkbox_' + _.uniqueId()"/>
            <div class="form-check">
                <input type="checkbox" t-att-id="id_for_label" class="form-check-input" t-att-data-record-id="JSON.stringify(m2m_value[0])"/>
                <label t-att-for="id_for_label" class="form-check-label o_form_label"><t t-esc="m2m_value[1]"/></label>
            </div>
        </div>
    </div>
</t>
<t t-name="StatInfo">
    <span class="o_stat_value"><t t-esc="value"/></span>
    <span class="o_stat_text"><t t-esc="text"/></span>
</t>
<t t-name="toggle_button">
    <button type="button" class="o_icon_button" t-att-title="widget.string" t-att-aria-label="widget.string" aria-pressed="false">
        <i class="fa fa-circle" t-att-title="widget.string"/>
    </button>
</t>

<t t-name="AceEditor">
    <div class="oe_form_field o_ace_view_editor oe_ace_open">
        <div class="ace-view-editor"/>
    </div>
</t>

<t t-name="notification-box">
    <div t-attf-class="o_notification_box mb0 alert alert-dismissible alert-{{type}}" role="alertdialog">
        <button type="button" class="btn-close" aria-label="Close"/>
    </div>
</t>

<t t-name="translation-alert">
    <div role="alertdialog">
        Please update translations of :
        <t t-foreach="fields" t-as="field" t-key="field_index">
            <strong><a class="oe_field_translate" t-att-name="field" href="#"><t t-esc="field_value.string"/><t t-if="field_index &lt; _.size(fields)-1">, </t></a></strong>
        </t>
    </div>
</t>

<t t-name="LegacyAttachDocument">
    <button t-attf-class="btn o_attachment_button #{widget.node.attrs.highlight?'btn-primary':'btn-secondary'}">
        <span class="o_attach_document"><t t-esc="widget.node.attrs.string"/></span>
        <span class="d-none">
            <t t-call="HiddenInputFile">
                <t t-set="fileupload_id" t-value="widget.fileuploadID"/>
                <t t-set="fileupload_action" t-translation="off">/web/binary/upload_attachment</t>
                <t t-set="multi_upload" t-value="true"/>
                <input type="hidden" name="model" t-att-value="widget.res_model"/>
                <input type="hidden" name="id" t-att-value="widget.res_id"/>
            </t>
        </span>
    </button>
</t>

<t t-name="FieldColor">
    <div>
        <button class="o_field_color" t-attf-tabindex="#{widget.mode === 'edit' ? 0 : -1}"/>
    </div>
</t>

<t t-name="ColorPicker">
    <div class="o_field_color_picker">
        <ul/>
    </div>
</t>
<t t-name="ColorPickerReadonly">
    <div class="o_field_color_picker_preview">
        <li>
            <a href="#" role="menuitem" t-att-class="'oe_kanban_color_'+active_color" t-att-data-color="active_color" t-att-aria-label="name_color" t-att-title="name_color"/>
        </li>
    </div>
</t>

<t t-name="SignButton">
    <button t-attf-class="btn o_sign_button #{widget.node.attrs.highlight?'btn-primary':'btn-secondary'}">
        <span class="o_sign_label"><t t-esc="widget.node.attrs.string"/></span>
    </button>
</t>

<t t-name="web.IframeWrapper">
    <div class="o_preview_iframe_wrapper">
        <i class="o_iframe_wrapper_spinner fa fa-circle-o-notch fa-spin fa-4x" style="color: black; z-index: 2"/>

        <iframe src="about:blank" class="o_preview_iframe" style="display:none"/>
    </div>
</t>

<t t-name="mail_enterprise.SwiperView" owl="1">
        <t t-if="swiperView">
            <div class="o_SwiperView" t-attf-class="{{ className }}" t-ref="root">
                <ActionSwiper onLeftSwipe="swiperView.hasLeftSwipe ? { action: swiperView.onLeftSwipe, bgColor: swiperView.leftSwipeBackgroundColor, icon: swiperView.leftSwipeIcon } : undefined" onRightSwipe="swiperView.hasRightSwipe ? { action: swiperView.onRightSwipe, bgColor: swiperView.rightSwipeBackgroundColor, icon: swiperView.rightSwipeIcon } : undefined">
                    <t t-if="swiperView">
                        <t t-component="constructor.components[swiperView.componentName]" className="'o_SwiperView_component'" t-props="{ record: swiperView.record }"/>
                    </t>
                </ActionSwiper>
            </div>
        </t>
    </t>
<t t-name="sms.SendSMSButton" owl="1">
        <a t-att-title="title" t-att-href="'sms:'+props.value" t-on-click.prevent.stop="onClick" class="ms-3 d-inline-flex align-items-center o_field_phone_sms"><i class="fa fa-mobile"/><small class="fw-bold ms-1">SMS</small></a>
    </t>

<t t-name="approvals.Approval" owl="1">
        <t t-if="approvalView">
            <div class="o_Approval" t-attf-class="{{ className }}" t-ref="root">
                <t t-if="approvalView.activity.approval.status === 'pending'">
                    <t t-if="approvalView.activity.approval.isCurrentPartnerApprover">
                        <button class="o_Approval_toolButton o_Approval_approveButton btn btn-success btn-link ps-0 pt-0" t-on-click="approvalView.onClickApprove">
                            <i class="fa fa-check"/> Approve
                        </button>
                        <button class="o_Approval_toolButton o_Approval_refuseButton btn btn-danger btn-link pt-0" t-on-click="approvalView.onClickRefuse">
                            <i class="fa fa-times"/> Refuse
                        </button>
                    </t>
                    <t t-else="">
                        <span class="o_Approval_toApproveText text-warning ps-0 pt-0">
                            <i class="fa fa-pencil"/> To Approve
                        </span>
                    </t>
                </t>
            </div>
        </t>
    </t>

<t t-name="snailmail.SnailmailError" owl="1">
        <t t-if="snailmailErrorView">
            <div class="o_SnailmailError card bg-white" t-attf-class="{{ className }}" t-ref="root">
                <h4 class="m-3">Failed letter</h4>
                <hr class="mt-0 mb-3"/>
                <t t-if="snailmailErrorView.notification.failure_type === 'sn_credit'">
                    <p class="o_SnailmailError_contentCredit mx-3 mb-3">
                        The letter could not be sent due to insufficient credits on your IAP account.
                    </p>
                    <t t-if="messaging.snailmail_credits_url">
                        <div class="text-end mx-3 mb-3">
                            <a class="btn btn-link" t-att-href="messaging.snailmail_credits_url" target="_blank">
                                <i class="fa fa-arrow-right"/> Buy credits
                            </a>
                        </div>
                    </t>
                </t>
                <t t-elif="snailmailErrorView.notification.failure_type === 'sn_trial'">
                    <p class="o_SnailmailError_contentTrial mx-3 mb-3">
                        You need credits on your IAP account to send a letter.
                    </p>
                    <t t-if="messaging.snailmail_credits_url_trial">
                        <div class="text-end mx-3 mb-3">
                            <a class="btn btn-link" t-att-href="messaging.snailmail_credits_url_trial">
                                <i class="fa fa-arrow-right"/> Buy credits
                            </a>
                        </div>
                    </t>
                </t>
                <t t-elif="snailmailErrorView.notification.failure_type === 'sn_price'">
                    <p class="o_SnailmailError_contentPrice mx-3 mb-3">
                        The country to which you want to send the letter is not supported by our service.
                    </p>
                </t>
                <t t-elif="snailmailErrorView.notification.failure_type === 'sn_error'">
                    <p class="o_SnailmailError_contentError mx-3 mb-3">
                        An unknown error occurred. Please contact our <a href="https://www.odoo.com/help" target="new">support</a> for further assistance.
                    </p>
                </t>
                <hr class="mt-0 mb-3"/>
                <div class="o_SnailmailError_buttons mx-3 mb-3">
                    <t t-if="snailmailErrorView.hasCreditsError">
                        <button class="o_SnailmailError_resendLetterButton btn btn-primary me-2" t-on-click="snailmailErrorView.onClickResendLetter">Re-send letter</button>
                    </t>
                    <button class="o_SnailmailError_cancelLetterButton btn me-2" t-att-class="{                         'btn-primary': !snailmailErrorView.hasCreditsError,                         'btn-secondary': snailmailErrorView.hasCreditsError,                         }" t-on-click="snailmailErrorView.onClickCancelLetter">
                        Cancel letter
                    </button>
                    <button class="o_SnailmailError_closeButton btn btn-secondary me-2" t-on-click="snailmailErrorView.onClickClose">Close</button>
                </div>
            </div>
        </t>
    </t>

<t t-name="snailmail.SnailmailNotificationPopoverContentView" owl="1">
        <div class="o_SnailmailNotificationPopoverContentView m-2" t-attf-class="{{ className }}" t-ref="root">
            <i class="o_SnailmailNotificationPopoverContentView_icon" t-att-class="snailmailNotificationPopoverContentView.iconClass" role="img"/>
            <span t-esc="snailmailNotificationPopoverContentView.iconTitle"/>
        </div>
    </t>


</templates>`;
                        return loadXML(templates);
                    });